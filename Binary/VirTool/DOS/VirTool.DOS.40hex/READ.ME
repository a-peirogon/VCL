    
             Mini Polymorphic Engine [MPE] v 0.02 -bug fix version-
                                
                                  written by
                          KimInWoo/SmartLine/40Hex
    
  ~~~[소개글]~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   안녕하세요?
    
   스마트라인의 40Hex동호회의 김인우 입니다.
  
   그동안 CVC가 자꾸 조회 횟수가 적어지는 관계로 그동안 골치아팠던 MPE의 버그를

   해결 했습니다..

   기술적인 문제였는데 loopin루틴에서 카운터가 0일때를 생각해 주질 않았거든요.

   그래서 폭주해 버린겁니다..

   이번 버젼은 완벽하게 작동합니다.
               --------
    
   또한 junk 코드를 많이 첨가하도록 하였으며 decrypt의 inc가 inc와 add로 2가지

   선택복이 된건 저번에랑 같으니까 아시죠..

   바이러스에 실제 그대로 적용하여도 무리가 없습니다..

   지금 제 하드에 MPE Junk 코드 제너레이터를 약간 더 멋지게 (?) 손 본게 있는데

   그건 나중에 올리도록 하구..참 MPE 2nd버젼도 제작 완료입니다...

   그것두 나중에 올릴께요..약간 버그가 있어서...

   그럼 이만 잘계세요..

   물론 해커정신에 따라서 소스와 컴파일러가 없는 분을 위해 오브젝트 화일과
    
   실행화일도 올립니다.
    
   질문이나 건의점이 있으신분은 스마트라인 40Hex게시판에 질문을 해주십시요.
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
  ~~~[포함 화일]~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
     DEMO.ASM  - 데모화일 소스입니다.
     
     DEMO.OBJ  - 데모화일 오브젝트 입니다.
    
     DEMO.COM  - 데모화일 실행화일 입니다.
    
     READ.ME   - 지금 보시는 글입니다.
    
     40HEX.COM - 데모 실행시 나타나는 암호화된 하일입니다.
    
     MPE.ASM   - 폴리모픽 엔진 소스입니다.
    
     MPE.OBJ   - 폴리모픽 엔진 오브젝트입니다.
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
  ~~[설명글]~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      
      우선 여러분의 바이러스 코드 맨처음에 다음과 같이 입력 하십시요.
  
      extrn          mpe:near,mpeend:near,rndget:near
  
      그리고 바이러스를 쓰기전에 밑의 5개의 레지스터를 세팅한후에
  
      call           mpe
  
      를 해주시면 됩니다.(자세한것은 DEMO.ASM참조)
      
         
      미니 폴리모픽 엔진은 컬링시 5개의 레지스터를 요구합니다.
                        
                       AL     junk코드 생산 여부 00000000b는 no 00000001b는 yes
                       CX     암호화될 길이
                       BP     실행화일의 메모리에서 시작 위치(COM=100h)
                       DS:SI  암호화될곳의 주소
                       ES:DI  암호화된것을 모시는(?) 곳
    
                     Return parameters:
                       CX     암호푸는 시스템의 길이+암호화된 길이
    
    Mini Polymorphic Engine decryptor:
      junk code~
      MOV BX,imm16; MOV DI,imm16; MOV SI,imm16
      junk code~
      MOV CX,imm16
      junk code~
      XOR [BX],imm8; XOR [DI],imm8; XOR [SI],imm8
      junk code~
      CMP BX,imm16; CMP DI,imm16; CMP SI,imm16
      JE imm8
      junk code~
      INC BX; INC DI; INC SI or ADD BX,1 ...
      junk code~
      JMP imm16
    
      미니 폴리모픽 엔진은 위와 같이 변형을 만듭니다.
    
     decryptor size:            16 bytes에서 부터 ~
    
    Compile Mini Polymorphic Engine with Turbo Assembler v 4.0 by typing:
      TASM /M2 MPE.ASM
    
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
  ~~[주의 사항]~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
     주의사항 첫번째:
                    소스가 아직 최적화 되지 않은 관계로 다소큰 느낌이 듭니다..
                    너그러히 용서해 주시길..
                    
              두번째:
                    이 엔진은 Com전용입니다.
                    물론 개조하면 EXE도 쓸수는 있지만 현재는 Com전용입니다.
                    코드를 분석해 보시면 아실겁니다.
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
  ~~[끝내는 글]~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
   바이러스뿐만 아니라 모든 연구의 목적에 해당하는 소스의 변형을 허락합니다.
      
                                  단 CVC 와 Corean Virus Club 은 Tm입니다.
    
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    
    
    
    
    
