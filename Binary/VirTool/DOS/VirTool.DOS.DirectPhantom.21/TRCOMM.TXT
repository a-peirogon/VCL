
  MOV─пересл ть регистр в регистр/п мять
 ┌────────────────┬────────────────┐
 │1 0 0 0 1 0 d w │mod reg reg/mem │
 └────────────────┴────────────────┘

  НОП в регистр/п мять
 ┌────────────────┬────────────────┐
 │1 1 0 0 0 1 1 w │mod 000 reg/mem │
 └────────────────┴────────────────┘

  НОП в регистр
 ┌────────────────┐
 │1 0 1 1 w  reg  │ + Immediate 8/16 bit      
 └────────────────┘

  п мять в  ккумулятор
  (short form)
 ┌────────────────┐
 │1 0 1 0 0 0 d w │ + Immediate 8/16 bit
 └────────────────┘

  регистр/п мять в сегментный регистр
 ┌────────────────┬──────────────┐
 │1 0 0 0 1 1 d 0 │mod 0 sreg r/m│
 └────────────────┴──────────────┘


  PUSH/POP регистр 
 ┌────────────────┐
 │0 1 0 1 x  reg  │   x=0 - PUSH , x=1 - POP
 └────────────────┘

  PUSH сегментного регистр  ES, CS, SS или DS
 ┌────────────────┐
 │0 0 0 sreg 1 1 0│
 └────────────────┘

  PUSHF/POPF flags
 ┌────────────────┐
 │1 0 0 1 1 1 0 x │   x=0 - PUSH , x=1 - POP
 └────────────────┘


 XCHG - обмен

  TEST/XCHG регистр /п мяти с регистром
 ┌────────────────┬────────────────┐
 │1 0 0 0 0 1 x w │mod reg reg/mem │   x=0 - TEST , x=1 - XCHG
 └────────────────┴────────────────┘

  регистр с  ккумулятором
  (short form)
 ┌────────────────┐
 │1 0 0 1 0  reg  │     
 └────────────────┘


  Ввод/вывод через  ккумулятор
 ┌────────────────┐
 │1 1 1 0 x 1 y w │ + [Immediate 8] - номер порт 
 └────────────────┘
  xy = 00 - IN ввод с фиксиров нным портом
  xy = 01 - OUT вывод с фиксиров нным портом
  xy = 10 - IN ввод с вирту льным портом  дресуемым DL/DX
  xy = 11 - OUT вывод с вирту льным портом  дресуемым DL/DX


  LEA─з грузк  в регистр исполнительного  дрес 
 ┌────────────────┬────────────────┐
 │1 0 0 0 1 1 0 1 │mod reg reg/mem │
 └────────────────┴────────────────┘


  Сброс и уст новк  фл гов CF,IF,DF во Flags
 ┌────────────────┐
 │1 1 1 1 1 x x x │   xxx = 000 - CLC - сбросить CF
 └────────────────┘     001 - STC - уст новить CF
                010 - CLI - сбросить IF
                011 - STI - уст новить IF
                100 - CLD - сбросить DF
                101 - STD - уст новить DF

  CMC ─ инверсия CF
 ┌────────────────┐
 │1 1 1 1 0 1 0 1 │
 └────────────────┘

  LAHF─з грузить в AH регистр фл гов
  SAHF─сохр нить в регистре фл гов AH
 ┌────────────────┐
 │1 0 0 1 1 1 1 x │   x=0 - SAHF , x=1 - LAHF
 └────────────────┘


  Арифметические и логические ком нды

  регистр с регистром/п мятью         xxx = 000 - add
 ┌────────────────┬────────────────┐        001 - or
 │0 0 x x x 0 d w │mod reg reg/mem │        010 - adc
 └────────────────┴────────────────┘        011 - sbb
                        100 - and
                        101 - sub
                        110 - xor
                        111 - cmp
  НОП с регистром/п мятью
 ┌────────────────┬────────────────┐
 │1 0 0 0 0 0 s w │mod xxx reg/mem │ + Immediate 8/16
 └────────────────┴────────────────┘

  НОП с  ккумулятором (short form)
 ┌────────────────┐
 │0 0 x x x 1 0 w │
 └────────────────┘


  TEST ─ проверк  р зрядов

  TEST/XCHG регистр /п мяти и регистр 
 ┌────────────────┬────────────────┐
 │1 0 0 0 0 1 x w │mod reg reg/mem │   x=0 - TEST , x=1 - XCHG
 └────────────────┴────────────────┘

 TEST регистр /п мяти и НОП 
 ┌────────────────┬────────────────┐
 │1 1 1 1 0 1 1 w │mod 000 reg/mem │ + Immediate 8/16
 └────────────────┴────────────────┘

 TEST  ккумулятор  и НОП 
 ┌────────────────┐
 │1 0 1 0 1 0 0 w │ + Immediate 8/16          
 └────────────────┘


  INC/DEC регистр /п мяти
 ┌────────────────┬────────────────┐
 │1 1 1 1 1 1 1 w │mod 00x reg/mem │  x=0 - INC , x=1 - DEC
 └────────────────┴────────────────┘

  INC/DEC регистр 
 ┌────────────────┐
 │0 1 0 0 x  reg  │     
 └────────────────┘


  NEG ─ з мен  зн к  в регистре/п мяти
 ┌────────────────┬────────────────┐
 │1 1 1 1 0 1 1 w │mod 011 reg/mem │
 └────────────────┴────────────────┘

  NOT ─ инверсия регистр /п мяти
 ┌────────────────┬────────────────┐
 │1 1 1 1 0 1 1 w │mod 010 reg/mem │
 └────────────────┴────────────────┘


  Умножение/деление  ккумулятор  н  регистр/п мять
 ┌────────────────┬────────────────┐
 │1 1 1 1 0 1 1 w │mod 10x reg/mem │   x = 0 - MUL  - беззн ковое
 └────────────────┴────────────────┘       1 - IMUL - зн ковое



  Сдвиг регистр /п мяти
 ┌────────────────┬────────────────┐
 │1 1 0 x 0 0 y w │mod zzz reg/mem │ + [Immediate 8bit]
 └────────────────┴────────────────┘

  xy = 00 - сдвиг н  Imm8         zzz = 000 - ROL
       01 - не используется         001 - ROR
       10 - сдвиг н  один р зряд        010 - RCL
       11 - сдвиг н  Imm8 через CL      011 - RCR
                        100 - SHL/SAL
                        101 - SHR
                        110 - SAL - (UnDocumented)
                        111 - SAR

 ┌────────────────┐
 │0 0 1 x x 1 1 1 │  xx = 00 - DAA - десятичн я после сложения
 └────────────────┘   01 - DAS - десятичн я после вычит ния
              10 - AAA - после сложения
              11 - AAS - после вычит ния

 ┌────────────────┬────────────────┐
 │1 1 0 1 0 1 0 x │0 0 0 0 1 0 1 0 │
 └────────────────┴────────────────┘
  x=0 - AAM - коррекция после умножения
  x=1 - AAD - коррекция перед делением

  CBW/CWD ─ р сширение
 ┌────────────────┐
 │1 0 0 1 1 0 0 0 │
 └────────────────┘
  x=0 - CBW - б йт  в слово
  x=1 - CWD - слов  в двойное слово


  XLAT ─ т бличное преобр зв ние
 ┌────────────────┐
 │1 1 0 1 0 1 1 1 │
 └────────────────┘

  INT 3
 ┌────────────────┐
 │1 1 0 0 1 1 0 0 │
 └────────────────┘

  NOP/XCHG AX,AX - нет опер ции
 ┌────────────────┐
 │1 0 0 1 0 0 0 0 │
 └────────────────┘


  Префикс з меняющего сегмент     xx = 00 - ES
 ┌────────────────┐            01 - CS
 │0 0 1 x x 1 1 0 │            10 - SS
 └────────────────┘            11 - DS

                              xxxx = 0000 - o
  Jxx - Условный короткий переход                0001 - no
 ┌────────────────┐                      0010 - c
 │0 1 1 1 x x x x │ + Immediate 8 bit - Rel8             0011 - nc
 └────────────────┘                      0100 - z
                                 0101 - nz
  Jxx - Условный близкий переход                 0110 - be
 ┌────────────────┬────────────────┐                 0111 - a
 │0 0 0 0 1 1 1 1 │1 0 0 0 x x x x │ + Immediate 16 bit      1000 - s
 └────────────────┴────────────────┘                 1001 - ns
                                 1010 - p
                                 1011 - np
                                 1100 - l
                                 1101 - ge
                                 1110 - le
                                 1111 - g



 ────────────────────────────────────────────────────────────────────────────

    Поля в б йт х КОП и ModeR/M при 16 битной  дрес ции
    ───────────────────────────────────────────────────

 Wbit - определяет р змер опер нд 
 W=0  - б йт
 W=1  - полный р змер (16 или 32 бит )

 Dbit - н пр вление перед чи д нных
 D=0  - регистр в REG/MEM
 D=1  - REG/MEM в регистр

 Sbit - р сширение непосредственных д нных
 S=0  - до полного р змер  (16 или 32 бит )
 S=1  - б йт

 REG  - определяет регистр общего н зн чения 8/16/32 бит 
 MODE - определяет режим  дрес ции вместе с REG/MEM
 REG/MEM - второй опер нд - регистр 8/16/32 или п мять

 Mode    │   00    │      01      │  10   │    11
 REG/MEM │     │          │       │
 ────────┼─────────┼──────────────┼───────────────┼──────────
 000     │ [BX+SI] │ [BX+SI]+imm8 │ [BX+SI]+imm16 │ EAX/AX/AL
 001     │ [BX+DI] │ [BX+DI]+imm8 │ [BX+DI]+imm16 │ ECX/CX/CL
 010     │ [BP+SI] │ [BP+SI]+imm8 │ [BP+SI]+imm16 │ EDX/DX/DL
 011     │ [BP+DI] │ [BP+DI]+imm8 │ [BP+DI]+imm16 │ EBX/BX/BL
 100     │ [SI]    │ [SI]+imm8    │ [SI]+imm16    │ ESP/SP/AH
 101     │ [DI]    │ [DI]+imm8    │ [DI]+imm16    │ EBP/BP/CH
 110     │ [imm16] │ [BP]+imm8    │ [BP]+imm16    │ ESI/SI/DH
 111     │ [BX]    │ [BX]+imm8    │ [BX]+imm16    │ EDI/DI/BH


 SREG - сегментный регистр 000 - ES
               001 - CS
               010 - SS
               011 - DS
               100 - FS
               101 - GS

 НОП - непосредственный опер нд

