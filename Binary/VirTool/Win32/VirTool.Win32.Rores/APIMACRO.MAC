;-----APImacro.mac--------------------------------------------------------------------

IFNDEF _APIMACRO_
_APIMACRO_ EQU 1


IFNDEF UNICODE
UNICODE=0
ENDIF
;===============================================================================================================
;IMPORT MACROS
;===============================================================================================================
iWin32          MACRO   Win32API,p00,p01,p02,p03,p04,p05,p06,p07,p08,p09,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19
                IRP     pxx,<p19,p18,p17,p16,p15,p14,p13,p12,p11,p10,p09,p08,p07,p06,p05,p04,p03,p02,p01,p00>
                 IFNB   <pxx>
                 PUSHD  pxx
                 ENDIF
                ENDM
                EXTERNDEF  C _imp__&Win32API:DWORD
                CALL    _imp__&Win32API
                ENDM

iWin32i         MACRO   Win32API,p00,p01,p02,p03,p04,p05,p06,p07,p08,p09,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19
                IF      UNICODE
                iWin32  <Win32API&W>,<p00>,<p01>,<p02>,<p03>,<p04>,<p05>,<p06>,<p07>,<p08>,<p09>,<p10>,<p11>,<p12>,<p13>,<p14>,<p15>,<p16>,<p17>,<p18>,<p19>
                ELSE
                iWin32  <Win32API&A>,<p00>,<p01>,<p02>,<p03>,<p04>,<p05>,<p06>,<p07>,<p08>,<p09>,<p10>,<p11>,<p12>,<p13>,<p14>,<p15>,<p16>,<p17>,<p18>,<p19>
                ENDIF
                ENDM

iWin32@         MACRO   Win32API,p00,p01,p02,p03,p04,p05,p06,p07,p08,p09,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19
                _npar__ =  0
                IRP     pxx,<p19,p18,p17,p16,p15,p14,p13,p12,p11,p10,p09,p08,p07,p06,p05,p04,p03,p02,p01,p00>
                 IFNB   <pxx>
                 PUSHD  pxx
                _npar__ =  _npar__ + 4
                 ENDIF
                ENDM
                IF      _npar__ EQ  0
                        EXTERNDEF   C _imp__&Win32API&@0:DWORD
                        CALL     _imp__&Win32API&@0
                ELSEIF  _npar__ EQ  4
                        EXTERNDEF   C _imp__&Win32API&@4:DWORD
                        CALL     _imp__&Win32API&@4
                ELSEIF  _npar__ EQ  8
                        EXTERNDEF   C _imp__&Win32API&@8:DWORD
                        CALL     _imp__&Win32API&@8
                ELSEIF  _npar__ EQ  12
                        EXTERNDEF   C _imp__&Win32API&@12:DWORD
                        CALL     _imp__&Win32API&@12
                ELSEIF  _npar__ EQ  16
                        EXTERNDEF   C _imp__&Win32API&@16:DWORD
                        CALL     _imp__&Win32API&@16
                ELSEIF  _npar__ EQ  20
                        EXTERNDEF   C _imp__&Win32API&@20:DWORD
                        CALL     _imp__&Win32API&@20
                ELSEIF  _npar__ EQ  24
                        EXTERNDEF   C _imp__&Win32API&@24:DWORD
                        CALL     _imp__&Win32API&@24
                ELSEIF  _npar__ EQ  28
                        EXTERNDEF   C _imp__&Win32API&@28:DWORD
                        CALL     _imp__&Win32API&@28
                ELSEIF  _npar__ EQ  32
                        EXTERNDEF   C _imp__&Win32API&@32:DWORD
                        CALL     _imp__&Win32API&@32
                ELSEIF  _npar__ EQ  36
                        EXTERNDEF   C _imp__&Win32API&@36:DWORD
                        CALL     _imp__&Win32API&@36
                ELSEIF  _npar__ EQ  40
                        EXTERNDEF   C _imp__&Win32API&@40:DWORD
                        CALL     _imp__&Win32API&@40
                ELSEIF  _npar__ EQ  44
                        EXTERNDEF   C _imp__&Win32API&@44:DWORD
                        CALL     _imp__&Win32API&@44
                ELSEIF  _npar__ EQ  48
                        EXTERNDEF   C _imp__&Win32API&@48:DWORD
                        CALL     _imp__&Win32API&@48
                ELSEIF  _npar__ EQ  52
                        EXTERNDEF   C _imp__&Win32API&@52:DWORD
                        CALL     _imp__&Win32API&@52
                ELSEIF  _npar__ EQ  56
                        EXTERNDEF   C _imp__&Win32API&@56:DWORD
                        CALL     _imp__&Win32API&@56
                ELSEIF  _npar__ EQ  60
                        EXTERNDEF   C _imp__&Win32API&@60:DWORD
                        CALL     _imp__&Win32API&@60
                ELSEIF  _npar__ EQ  64
                        EXTERNDEF   C _imp__&Win32API&@64:DWORD
                        CALL     _imp__&Win32API&@64
                ELSEIF  _npar__ EQ  68
                        EXTERNDEF   C _imp__&Win32API&@68:DWORD
                        CALL     _imp__&Win32API&@68
                ELSEIF  _npar__ EQ  72
                        EXTERNDEF   C _imp__&Win32API&@72:DWORD
                        CALL     _imp__&Win32API&@72
                ELSEIF  _npar__ EQ  76
                        EXTERNDEF   C _imp__&Win32API&@76:DWORD
                        CALL     _imp__&Win32API&@76
                ELSEIF  _npar__ EQ  80
                        EXTERNDEF   C _imp__&Win32API&@80:DWORD
                        CALL     _imp__&Win32API&@80
                ENDIF
                ENDM

iWin32@i        MACRO   Win32API,p00,p01,p02,p03,p04,p05,p06,p07,p08,p09,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19
                IF      UNICODE
                iWin32@ <Win32API&W>,<p00>,<p01>,<p02>,<p03>,<p04>,<p05>,<p06>,<p07>,<p08>,<p09>,<p10>,<p11>,<p12>,<p13>,<p14>,<p15>,<p16>,<p17>,<p18>,<p19>
                ELSE
                iWin32@ <Win32API&A>,<p00>,<p01>,<p02>,<p03>,<p04>,<p05>,<p06>,<p07>,<p08>,<p09>,<p10>,<p11>,<p12>,<p13>,<p14>,<p15>,<p16>,<p17>,<p18>,<p19>
                ENDIF
                ENDM
;----------------------------------------------------------------------------
icWin32         MACRO   Win32API,p00,p01,p02,p03,p04,p05,p06,p07,p08,p09,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19
                _npar__ =  0
                IRP     pxx,<p19,p18,p17,p16,p15,p14,p13,p12,p11,p10,p09,p08,p07,p06,p05,p04,p03,p02,p01,p00>
                 IFNB   <pxx>
                 PUSHD  pxx
                _npar__ =  _npar__ + 4
                 ENDIF
                ENDM
                EXTERNDEF  C _imp__&Win32API:DWORD
                CALL    _imp__&Win32API
                ADD     ESP, _npar__
                ENDM

icWin32i        MACRO   Win32API,p00,p01,p02,p03,p04,p05,p06,p07,p08,p09,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19
                IF      UNICODE
                icWin32 <Win32API&W>,<p00>,<p01>,<p02>,<p03>,<p04>,<p05>,<p06>,<p07>,<p08>,<p09>,<p10>,<p11>,<p12>,<p13>,<p14>,<p15>,<p16>,<p17>,<p18>,<p19>
                ELSE
                icWin32 <Win32API&A>,<p00>,<p01>,<p02>,<p03>,<p04>,<p05>,<p06>,<p07>,<p08>,<p09>,<p10>,<p11>,<p12>,<p13>,<p14>,<p15>,<p16>,<p17>,<p18>,<p19>
                ENDIF
                ENDM

icWin32@        EQU     icWin32
icWin32@i       EQU     icWin32i
;----------------------------------------------------------------------------
iWin32j         MACRO   Win32API,p00,p01,p02,p03,p04,p05,p06,p07,p08,p09,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19
                IRP     pxx,<p19,p18,p17,p16,p15,p14,p13,p12,p11,p10,p09,p08,p07,p06,p05,p04,p03,p02,p01,p00>
                 IFNB   <pxx>
                 PUSHD  pxx
                 ENDIF
                ENDM
                EXTERNDEF  C _imp__&Win32API:DWORD
                JMP     _imp__&Win32API
                ENDM

iWin32ji        MACRO   Win32API,p00,p01,p02,p03,p04,p05,p06,p07,p08,p09,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19
                IF      UNICODE
                iWin32j <Win32API&W>,<p00>,<p01>,<p02>,<p03>,<p04>,<p05>,<p06>,<p07>,<p08>,<p09>,<p10>,<p11>,<p12>,<p13>,<p14>,<p15>,<p16>,<p17>,<p18>,<p19>
                ELSE
                iWin32j <Win32API&A>,<p00>,<p01>,<p02>,<p03>,<p04>,<p05>,<p06>,<p07>,<p08>,<p09>,<p10>,<p11>,<p12>,<p13>,<p14>,<p15>,<p16>,<p17>,<p18>,<p19>
                ENDIF
                ENDM
;===============================================================================================================
iEXTERN         MACRO   Win32API
                EXTERNDEF  C _imp__&Win32API :DWORD
                Win32API EQU _imp__&Win32API
                ENDM

iEXTERNi        MACRO   Win32API
                IF      UNICODE
                iEXTERN <Win32API&W>
                ELSE
                iEXTERN <Win32API&A>
                ENDIF
                ENDM
;----------------------------------------------------------------------------
iDWORD          MACRO   Win32API
                EXTERNDEF  C _imp__&Win32API :DWORD
                DWORD   _imp__&Win32API
                ENDM

iDWORDi         MACRO   Win32API
                IF      UNICODE
                iDWORD  <Win32API&W>
                ELSE
                iDWORD  <Win32API&A>
                ENDIF
                ENDM
;----------------------------------------------------------------------------
iLEA            MACRO   R32, Win32API
                EXTERNDEF  C _imp__&Win32API :DWORD
                MOV     R32, OFFSET _imp__&Win32API
                ENDM

iLEAi           MACRO   R32, Win32API
                IF      UNICODE
                iLEA    <R32>, <Win32API&W>
                ELSE
                iLEA    <R32>, <Win32API&A>
                ENDIF
                ENDM
;----------------------------------------------------------------------------
iMOV            MACRO   R32, Win32API
                EXTERNDEF  C _imp__&Win32API :DWORD
                MOV     R32, _imp__&Win32API
                ENDM

iMOVi           MACRO   R32, Win32API
                IF      UNICODE
                iMOV    <R32>, <Win32API&W>
                ELSE
                iMOV    <R32>, <Win32API&A>
                ENDIF
                ENDM
;----------------------------------------------------------------------------
iCMP            MACRO   R32, Win32API
                EXTERNDEF  C _imp__&Win32API :DWORD
                CMP     R32, _imp__&Win32API
                ENDM

iCMPi           MACRO   R32, Win32API
                IF      UNICODE
                iCMP    <R32>, <Win32API&W>
                ELSE
                iCMP    <R32>, <Win32API&A>
                ENDIF
                ENDM
;----------------------------------------------------------------------------
iMOVw           MACRO   Win32API, R32
                EXTERNDEF  C _imp__&Win32API :DWORD
                MOV     _imp__&Win32API, R32
                ENDM

iMOVwi          MACRO   Win32API, R32
                IF      UNICODE
                iMOVw   <Win32API&W>, <R32>
                ELSE
                iMOVw   <Win32API&A>, <R32>
                ENDIF
                ENDM
;----------------------------------------------------------------------------
iPUSHo          MACRO   Win32API
                EXTERNDEF  C _imp__&Win32API :DWORD
                PUSH    OFFSET _imp__&Win32API
                ENDM

iPUSHoi         MACRO   Win32API
                IF      UNICODE
                iPUSHo  <Win32API&W>
                ELSE
                iPUSHo  <Win32API&A>
                ENDIF
                ENDM
;----------------------------------------------------------------------------
iPUSH           MACRO   Win32API
                EXTERNDEF  C _imp__&Win32API :DWORD
                PUSH    _imp__&Win32API
                ENDM

iPUSHi          MACRO   Win32API
                IF      UNICODE
                iPUSH   <Win32API&W>
                ELSE
                iPUSH   <Win32API&A>
                ENDIF
                ENDM
;----------------------------------------------------------------------------
iPOP            MACRO   Win32API
                EXTERNDEF  C _imp__&Win32API :DWORD
                POP     _imp__&Win32API
                ENDM

iPOPi           MACRO   Win32API
                IF      UNICODE
                iPOP    <Win32API&W>
                ELSE
                iPOP    <Win32API&A>
                ENDIF
                ENDM
;===============================================================================================================
iGet0ImpDesc    MACRO   R32
                EXTERNDEF  PASCAL __NULL_IMPORT_DESCRIPTOR :DWORD
                MOV     R32, __NULL_IMPORT_DESCRIPTOR
                ENDM

iSet0ImpDesc    MACRO   R32
                EXTERNDEF  PASCAL __NULL_IMPORT_DESCRIPTOR :DWORD
                MOV     __NULL_IMPORT_DESCRIPTOR, R32
                ENDM


iGetDllImpDesc  MACRO   R32, _exedllsys
                EXTERNDEF  PASCAL __IMPORT_DESCRIPTOR_&_exedllsys :DWORD
                MOV     R32, __IMPORT_DESCRIPTOR_&_exedllsys
                ENDM

iSetDllImpDesc  MACRO   _exedllsys, R32
                EXTERNDEF  PASCAL __IMPORT_DESCRIPTOR_&_exedllsys :DWORD
                MOV     __IMPORT_DESCRIPTOR_&_exedllsys, R32
                ENDM

COMMENT $

iGetDll0ThunkData  MACRO   R32, _exedllsys
                EXTERNDEF  PASCAL _exedllsys&_NULL_THUNK_DATA :DWORD
                MOV     R32, _exedllsys&_NULL_THUNK_DATA
                ENDM

iSetDll0ThunkData  MACRO   _exedllsys, R32
                EXTERNDEF  PASCAL _exedllsys&_NULL_THUNK_DATA :DWORD
                MOV     _exedllsys&_NULL_THUNK_DATA, R32
                ENDM
        $
;===============================================================================================================
xWin32          MACRO   Win32API,p00,p01,p02,p03,p04,p05,p06,p07,p08,p09,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19
                IRP     pxx,<p19,p18,p17,p16,p15,p14,p13,p12,p11,p10,p09,p08,p07,p06,p05,p04,p03,p02,p01,p00>
                 IFNB   <pxx>
                 PUSHD  pxx
                 ENDIF
                ENDM
                EXTERNDEF  C Win32API:PROC
                CALL    Win32API
                ENDM

xWin32i         MACRO   Win32API,p00,p01,p02,p03,p04,p05,p06,p07,p08,p09,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19
                IF      UNICODE
                xWin32  <Win32API&W>,<p00>,<p01>,<p02>,<p03>,<p04>,<p05>,<p06>,<p07>,<p08>,<p09>,<p10>,<p11>,<p12>,<p13>,<p14>,<p15>,<p16>,<p17>,<p18>,<p19>
                ELSE
                xWin32  <Win32API&A>,<p00>,<p01>,<p02>,<p03>,<p04>,<p05>,<p06>,<p07>,<p08>,<p09>,<p10>,<p11>,<p12>,<p13>,<p14>,<p15>,<p16>,<p17>,<p18>,<p19>
                ENDIF
                ENDM

xWin32@         MACRO   Win32API,p00,p01,p02,p03,p04,p05,p06,p07,p08,p09,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19
                _npar__ =  0
                IRP     pxx,<p19,p18,p17,p16,p15,p14,p13,p12,p11,p10,p09,p08,p07,p06,p05,p04,p03,p02,p01,p00>
                 IFNB   <pxx>
                 PUSHD  pxx
                _npar__ =  _npar__ + 4
                 ENDIF
                ENDM
                IF      _npar__ EQ  0
                        EXTERNDEF   C Win32API&@0:PROC 
                        CALL     Win32API&@0
                ELSEIF  _npar__ EQ  4
                        EXTERNDEF   C Win32API&@4:PROC 
                        CALL     Win32API&@4
                ELSEIF  _npar__ EQ  8
                        EXTERNDEF   C Win32API&@8:PROC 
                        CALL     Win32API&@8
                ELSEIF  _npar__ EQ  12
                        EXTERNDEF   C Win32API&@12:PROC 
                        CALL     Win32API&@12
                ELSEIF  _npar__ EQ  16
                        EXTERNDEF   C Win32API&@16:PROC 
                        CALL     Win32API&@16
                ELSEIF  _npar__ EQ  20
                        EXTERNDEF   C Win32API&@20:PROC 
                        CALL     Win32API&@20
                ELSEIF  _npar__ EQ  24
                        EXTERNDEF   C Win32API&@24:PROC 
                        CALL     Win32API&@24
                ELSEIF  _npar__ EQ  28
                        EXTERNDEF   C Win32API&@28:PROC 
                        CALL     Win32API&@28
                ELSEIF  _npar__ EQ  32
                        EXTERNDEF   C Win32API&@32:PROC 
                        CALL     Win32API&@32
                ELSEIF  _npar__ EQ  36
                        EXTERNDEF   C Win32API&@36:PROC 
                        CALL     Win32API&@36
                ELSEIF  _npar__ EQ  40
                        EXTERNDEF   C Win32API&@40:PROC 
                        CALL     Win32API&@40
                ELSEIF  _npar__ EQ  44
                        EXTERNDEF   C Win32API&@44:PROC 
                        CALL     Win32API&@44
                ELSEIF  _npar__ EQ  48
                        EXTERNDEF   C Win32API&@48:PROC 
                        CALL     Win32API&@48
                ELSEIF  _npar__ EQ  52
                        EXTERNDEF   C Win32API&@52:PROC 
                        CALL     Win32API&@52
                ELSEIF  _npar__ EQ  56
                        EXTERNDEF   C Win32API&@56:PROC 
                        CALL     Win32API&@56
                ELSEIF  _npar__ EQ  60
                        EXTERNDEF   C Win32API&@60:PROC 
                        CALL     Win32API&@60
                ELSEIF  _npar__ EQ  64
                        EXTERNDEF   C Win32API&@64:PROC 
                        CALL     Win32API&@64
                ELSEIF  _npar__ EQ  68
                        EXTERNDEF   C Win32API&@68:PROC 
                        CALL     Win32API&@68
                ELSEIF  _npar__ EQ  72
                        EXTERNDEF   C Win32API&@72:PROC 
                        CALL     Win32API&@72
                ELSEIF  _npar__ EQ  76
                        EXTERNDEF   C Win32API&@76:PROC 
                        CALL     Win32API&@76
                ELSEIF  _npar__ EQ  80
                        EXTERNDEF   C Win32API&@80:PROC 
                        CALL     Win32API&@80
                ENDIF
                ENDM

xWin32@i        MACRO   Win32API,p00,p01,p02,p03,p04,p05,p06,p07,p08,p09,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19
                IF      UNICODE
                xWin32@ <Win32API&W>,<p00>,<p01>,<p02>,<p03>,<p04>,<p05>,<p06>,<p07>,<p08>,<p09>,<p10>,<p11>,<p12>,<p13>,<p14>,<p15>,<p16>,<p17>,<p18>,<p19>
                ELSE
                xWin32@ <Win32API&A>,<p00>,<p01>,<p02>,<p03>,<p04>,<p05>,<p06>,<p07>,<p08>,<p09>,<p10>,<p11>,<p12>,<p13>,<p14>,<p15>,<p16>,<p17>,<p18>,<p19>
                ENDIF
                ENDM
;----------------------------------------------------------------------------
xcWin32         MACRO   Win32API,p00,p01,p02,p03,p04,p05,p06,p07,p08,p09,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19
                _npar__ =  0
                IRP     pxx,<p19,p18,p17,p16,p15,p14,p13,p12,p11,p10,p09,p08,p07,p06,p05,p04,p03,p02,p01,p00>
                 IFNB   <pxx>
                 PUSHD  pxx
                _npar__ =  _npar__ + 4
                 ENDIF
                ENDM
                EXTERNDEF  C Win32API:PROC 
                CALL    Win32API
                ADD     ESP, _npar__
                ENDM

xcWin32i        MACRO   Win32API,p00,p01,p02,p03,p04,p05,p06,p07,p08,p09,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19
                IF      UNICODE
                xcWin32 <Win32API&W>,<p00>,<p01>,<p02>,<p03>,<p04>,<p05>,<p06>,<p07>,<p08>,<p09>,<p10>,<p11>,<p12>,<p13>,<p14>,<p15>,<p16>,<p17>,<p18>,<p19>
                ELSE
                xcWin32 <Win32API&A>,<p00>,<p01>,<p02>,<p03>,<p04>,<p05>,<p06>,<p07>,<p08>,<p09>,<p10>,<p11>,<p12>,<p13>,<p14>,<p15>,<p16>,<p17>,<p18>,<p19>
                ENDIF
                ENDM

xcWin32@        EQU     xcWin32
xcWin32@i       EQU     xcWin32i
;----------------------------------------------------------------------------
xWin32j         MACRO   Win32API,p00,p01,p02,p03,p04,p05,p06,p07,p08,p09,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19
                IRP     pxx,<p19,p18,p17,p16,p15,p14,p13,p12,p11,p10,p09,p08,p07,p06,p05,p04,p03,p02,p01,p00>
                 IFNB   <pxx>
                 PUSHD  pxx
                 ENDIF
                ENDM
                EXTERNDEF  C Win32API:PROC 
                JMP     Win32API
                ENDM

xWin32ji        MACRO   Win32API,p00,p01,p02,p03,p04,p05,p06,p07,p08,p09,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19
                IF      UNICODE
                xWin32j <Win32API&W>,<p00>,<p01>,<p02>,<p03>,<p04>,<p05>,<p06>,<p07>,<p08>,<p09>,<p10>,<p11>,<p12>,<p13>,<p14>,<p15>,<p16>,<p17>,<p18>,<p19>
                ELSE
                xWin32j <Win32API&A>,<p00>,<p01>,<p02>,<p03>,<p04>,<p05>,<p06>,<p07>,<p08>,<p09>,<p10>,<p11>,<p12>,<p13>,<p14>,<p15>,<p16>,<p17>,<p18>,<p19>
                ENDIF
                ENDM
;===============================================================================================================
xEXTERN         MACRO   Win32API
                EXTERNDEF  C Win32API :PROC 
                ENDM

xEXTERNi        MACRO   Win32API
                IF      UNICODE
                xEXTERN <Win32API&W>
                ELSE
                xEXTERN <Win32API&A>
                ENDIF
                ENDM
;----------------------------------------------------------------------------
xDWORD          MACRO   Win32API
                EXTERNDEF  C Win32API :PROC 
                DWORD   Win32API
                ENDM

xDWORDi         MACRO   Win32API
                IF      UNICODE
                xDWORD  <Win32API&W>
                ELSE
                xDWORD  <Win32API&A>
                ENDIF
                ENDM
;----------------------------------------------------------------------------
xLEA            MACRO   R32, Win32API
                EXTERNDEF  C Win32API :PROC 
                MOV     R32, OFFSET Win32API
                ENDM

xLEAi           MACRO   R32, Win32API
                IF      UNICODE
                xLEA    <R32>, <Win32API&W>
                ELSE
                xLEA    <R32>, <Win32API&A>
                ENDIF
                ENDM
;----------------------------------------------------------------------------
xMOV            EQU     xLEA

xMOVi           EQU     xLEAi
;----------------------------------------------------------------------------
xCMP            MACRO   R32, Win32API
                EXTERNDEF  C Win32API :PROC 
                CMP     R32, OFFSET Win32API
                ENDM

xCMPi           MACRO   R32, Win32API
                IF      UNICODE
                xCMP    <R32>, <Win32API&W>
                ELSE
                xCMP    <R32>, <Win32API&A>
                ENDIF
                ENDM
;----------------------------------------------------------------------------
xPUSHo          MACRO   Win32API
                EXTERNDEF  C Win32API :PROC 
                PUSH    OFFSET Win32API
                ENDM

xPUSHoi         MACRO   Win32API
                IF      UNICODE
                xPUSHo  <Win32API&W>
                ELSE
                xPUSHo  <Win32API&A>
                ENDIF
                ENDM
;----------------------------------------------------------------------------
xPUSH           EQU     xPUSHo

xPUSHi          EQU     xPUSHoi
;===============================================================================================================
;USEFUL MACROS
;===============================================================================================================
sWin32          macro   label,p00,p01,p02,p03,p04,p05,p06,p07,p08,p09,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19
                irp     pxx,<p19,p18,p17,p16,p15,p14,p13,p12,p11,p10,p09,p08,p07,p06,p05,p04,p03,p02,p01,p00>
                ifnb    <pxx>
                pushD   pxx
                endif
                endm
                CALL    label
                endm

sWin32i         MACRO   Win32API,p00,p01,p02,p03,p04,p05,p06,p07,p08,p09,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19
                IF      UNICODE
                sWin32  <Win32API&W>,<p00>,<p01>,<p02>,<p03>,<p04>,<p05>,<p06>,<p07>,<p08>,<p09>,<p10>,<p11>,<p12>,<p13>,<p14>,<p15>,<p16>,<p17>,<p18>,<p19>
                ELSE
                sWin32  <Win32API&A>,<p00>,<p01>,<p02>,<p03>,<p04>,<p05>,<p06>,<p07>,<p08>,<p09>,<p10>,<p11>,<p12>,<p13>,<p14>,<p15>,<p16>,<p17>,<p18>,<p19>
                ENDIF
                ENDM

sWin32@         MACRO   Win32API,p00,p01,p02,p03,p04,p05,p06,p07,p08,p09,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19
                _npar__ =  0
                IRP     pxx,<p19,p18,p17,p16,p15,p14,p13,p12,p11,p10,p09,p08,p07,p06,p05,p04,p03,p02,p01,p00>
                 IFNB   <pxx>
                 PUSHD  pxx
                _npar__ =  _npar__ + 4
                 ENDIF
                ENDM
                IF      _npar__ EQ  0
                        CALL     Win32API&@0
                ELSEIF  _npar__ EQ  4
                        CALL     Win32API&@4
                ELSEIF  _npar__ EQ  8
                        CALL     Win32API&@8
                ELSEIF  _npar__ EQ  12
                        CALL     Win32API&@12
                ELSEIF  _npar__ EQ  16
                        CALL     Win32API&@16
                ELSEIF  _npar__ EQ  20
                        CALL     Win32API&@20
                ELSEIF  _npar__ EQ  24
                        CALL     Win32API&@24
                ELSEIF  _npar__ EQ  28
                        CALL     Win32API&@28
                ELSEIF  _npar__ EQ  32
                        CALL     Win32API&@32
                ELSEIF  _npar__ EQ  36
                        CALL     Win32API&@36
                ELSEIF  _npar__ EQ  40
                        CALL     Win32API&@40
                ELSEIF  _npar__ EQ  44
                        CALL     Win32API&@44
                ELSEIF  _npar__ EQ  48
                        CALL     Win32API&@48
                ELSEIF  _npar__ EQ  52
                        CALL     Win32API&@52
                ELSEIF  _npar__ EQ  56
                        CALL     Win32API&@56
                ELSEIF  _npar__ EQ  60
                        CALL     Win32API&@60
                ELSEIF  _npar__ EQ  64
                        CALL     Win32API&@64
                ELSEIF  _npar__ EQ  68
                        CALL     Win32API&@68
                ELSEIF  _npar__ EQ  72
                        CALL     Win32API&@72
                ELSEIF  _npar__ EQ  76
                        CALL     Win32API&@76
                ELSEIF  _npar__ EQ  80
                        CALL     Win32API&@80
                ENDIF
                ENDM

sWin32@i        MACRO   Win32API,p00,p01,p02,p03,p04,p05,p06,p07,p08,p09,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19
                IF      UNICODE
                sWin32@ <Win32API&W>,<p00>,<p01>,<p02>,<p03>,<p04>,<p05>,<p06>,<p07>,<p08>,<p09>,<p10>,<p11>,<p12>,<p13>,<p14>,<p15>,<p16>,<p17>,<p18>,<p19>
                ELSE
                sWin32@ <Win32API&A>,<p00>,<p01>,<p02>,<p03>,<p04>,<p05>,<p06>,<p07>,<p08>,<p09>,<p10>,<p11>,<p12>,<p13>,<p14>,<p15>,<p16>,<p17>,<p18>,<p19>
                ENDIF
                ENDM


cWin32          macro   label,p00,p01,p02,p03,p04,p05,p06,p07,p08,p09,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19
                _npar__ =  0
                irp     pxx,<p19,p18,p17,p16,p15,p14,p13,p12,p11,p10,p09,p08,p07,p06,p05,p04,p03,p02,p01,p00>
                ifnb    <pxx>
                pushD   pxx
                _npar__ =  _npar__ + 4
                endif
                endm
                CALL    label
                ADD     ESP, _npar__
                endm

cWin32i         MACRO   Win32API,p00,p01,p02,p03,p04,p05,p06,p07,p08,p09,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19
                IF      UNICODE
                cWin32  <Win32API&W>,<p00>,<p01>,<p02>,<p03>,<p04>,<p05>,<p06>,<p07>,<p08>,<p09>,<p10>,<p11>,<p12>,<p13>,<p14>,<p15>,<p16>,<p17>,<p18>,<p19>
                ELSE
                cWin32  <Win32API&A>,<p00>,<p01>,<p02>,<p03>,<p04>,<p05>,<p06>,<p07>,<p08>,<p09>,<p10>,<p11>,<p12>,<p13>,<p14>,<p15>,<p16>,<p17>,<p18>,<p19>
                ENDIF
                ENDM

cWin32@         EQU     cWin32
cWin32@i        EQU     cWin32i

PUSHp           macro   p00,p01,p02,p03,p04,p05,p06,p07,p08,p09,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19
                irp     pxx,<p00,p01,p02,p03,p04,p05,p06,p07,p08,p09,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19>
                ifnb    <pxx>
                pushD   pxx
                endif
                endm
                endm

POPp            macro   p00,p01,p02,p03,p04,p05,p06,p07,p08,p09,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19
                irp     pxx,<p00,p01,p02,p03,p04,p05,p06,p07,p08,p09,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19>
                ifnb    <pxx>
                pop     pxx
                endif
                endm
                endm

PUSHc           macro   p00,p01,p02,p03,p04,p05,p06,p07,p08,p09,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19
                irp     pxx,<p19,p18,p17,p16,p15,p14,p13,p12,p11,p10,p09,p08,p07,p06,p05,p04,p03,p02,p01,p00>
                ifnb    <pxx>
                pushD   pxx
                endif
                endm
                endm

POPc            macro   p00,p01,p02,p03,p04,p05,p06,p07,p08,p09,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19
                irp     pxx,<p19,p18,p17,p16,p15,p14,p13,p12,p11,p10,p09,p08,p07,p06,p05,p04,p03,p02,p01,p00>
                ifnb    <pxx>
                pop     pxx
                endif
                endm
                endm

oLEA            MACRO   Dest, Symbol
                MOV Dest, OFFSET Symbol
                ENDM

oMOV            MACRO   Dest, Symbol
                 IF  ( (((.TYPE(Dest)) AND (2+8+64)) NE 0) AND (((.TYPE(Symbol)) AND (2+8+64)) NE 0) )
                  PUSH Symbol
                  POP  Dest
                  EXITM
                 ELSEIF (.TYPE(Symbol)) AND 04H
                  IF  ( ((Symbol LT 80H) AND (Symbol GE 0))  OR  ((Symbol GE -80H) AND (Symbol LE 0)) )
                  PUSH Symbol
                  POP  Dest
                  EXITM
                  ENDIF
                 ENDIF
                  MOV Dest, Symbol
                ENDM
;===============================================================================================================

ASTRING         macro   _STRING_
;
                _npar__ =  0
_ESC_           =       0
                irpc    _CHAR_,<_STRING_>
;
                if      _ESC_
_ESC_           =       0
;
                _npar__ = _npar__ + 1
                if      "&_CHAR_" eq "/"
                BYTE    "/"
                elseif  "&_CHAR_" eq "n"
                BYTE    0Dh, 0Ah
                _npar__ = _npar__ + 1
                elseif  "&_CHAR_" eq "r"
                BYTE    0Dh
                elseif  "&_CHAR_" eq "l"
                BYTE    0Ah
                elseif  "&_CHAR_" eq "s"
                BYTE    20h
                elseif  "&_CHAR_" eq "c"
                BYTE    3bh
                elseif  "&_CHAR_" eq "t"
                BYTE    09h
                elseif  "&_CHAR_" eq ":"
                BYTE    "!"
                elseif  "&_CHAR_" eq "-"
                BYTE    "'"
                elseif  "&_CHAR_" eq "="
                BYTE    '"'
                elseif  "&_CHAR_" eq "|"
                BYTE    "\"
                elseif  "&_CHAR_" eq "#"
                BYTE    "%"
                elseif  "&_CHAR_" eq "+"
                BYTE    "&"
                elseif  "&_CHAR_" eq "("
                BYTE    "<"
                elseif  "&_CHAR_" eq ")"
                BYTE    ">"
                elseif  "&_CHAR_" eq "0"
                BYTE    0
                elseif  "&_CHAR_" eq "1"
                BYTE    1
                else
                BYTE    "/", "&_CHAR_"
                _npar__ = _npar__ + 1
                endif
;
                else
;
                if      "&_CHAR_" eq "/"
_ESC_           =       1
                else
_ESC_           =       0
                BYTE    "&_CHAR_"
                _npar__ = _npar__ + 1
                endif
;
                endif
;
                endm
;
                endm
;
;------------------------------------------------------------------------------
;
WSTRING         macro   _STRING_
;
                _npar__ =  0
_ESC_           =       0
                irpc    _CHAR_,<_STRING_>
;
                if      _ESC_
_ESC_           =       0
;
                _npar__ = _npar__ + 1
                if      "&_CHAR_" eq "/"
                WORD    "/"
                elseif  "&_CHAR_" eq "n"
                WORD    0Dh, 0Ah
                _npar__ = _npar__ + 1
                elseif  "&_CHAR_" eq "r"
                WORD    0Dh
                elseif  "&_CHAR_" eq "l"
                WORD    0Ah
                elseif  "&_CHAR_" eq "s"
                WORD    20h
                elseif  "&_CHAR_" eq "c"
                WORD    3bh
                elseif  "&_CHAR_" eq "t"
                WORD    09h
                elseif  "&_CHAR_" eq ":"
                WORD    "!"
                elseif  "&_CHAR_" eq "-"
                WORD    "'"
                elseif  "&_CHAR_" eq "="
                WORD    '"'
                elseif  "&_CHAR_" eq "|"
                WORD    "\"
                elseif  "&_CHAR_" eq "#"
                WORD    "%"
                elseif  "&_CHAR_" eq "+"
                WORD    "&"
                elseif  "&_CHAR_" eq "("
                WORD    "<"
                elseif  "&_CHAR_" eq ")"
                WORD    ">"
                elseif  "&_CHAR_" eq "0"
                WORD    0
                elseif  "&_CHAR_" eq "1"
                WORD    1
                else
                WORD    "/", "&_CHAR_"
                _npar__ = _npar__ + 1
                endif
;
                else
;
                if      "&_CHAR_" eq "/"
_ESC_           =       1
                else
_ESC_           =       0
                WORD    "&_CHAR_"
                _npar__ = _npar__ + 1
                endif
;
                endif
;
                endm
;
                endm
;
;------------------------------------------------------------------------------
ACHAR      typedef BYTE    ;ansi character
WCHAR      typedef WORD    ;wide character
ACHAR_     equ     1       ;ansi char size
WCHAR_     equ     2       ;unicode char size

IF UNICODE
 SIGN      textequ <WCHAR> ;unicode char type
 SIGN_     equ     WCHAR_  ;unicode char size
 USIGN     textequ <WCHAR> ;unicode char type
 USIGN_    equ     WCHAR_  ;unicode char size
 STRING    TEXTEQU <WSTRING>
 TEXT      TEXTEQU <TEXTW>
ELSE
 SIGN      textequ <ACHAR> ;ansi char type
 SIGN_     equ     ACHAR_  ;ansi char size
 USIGN     textequ <ACHAR> ;ansi char type
 USIGN_    equ     ACHAR_  ;ansi char size
 STRING    TEXTEQU <ASTRING>
 TEXT      TEXTEQU <TEXTA>
ENDIF


TEXTA      MACRO __Nomen,  __Text
           ALIGN ACHAR_
           __Nomen LABEL ACHAR
           s&__Nomen EQU OFFSET __Nomen
           ASTRING  <__Text>
           L&__Nomen EQU _npar__
           ENDM

TEXTW      MACRO __Nomen,  __Text
           ALIGN WCHAR_
           __Nomen LABEL WCHAR
           s&__Nomen EQU OFFSET __Nomen
           WSTRING  <__Text>
           L&__Nomen EQU _npar__
           ENDM
;===============================================================================================================
ENDIF
;-----APImacro.mac--------------------------------------------------------------------
