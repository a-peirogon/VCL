/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
					Борьба с антивирусами - новый этап.
							Отладка в вирусах.
/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
	Здрасьте!

	Пару лет назад Зомби писал про отладку в вирусах. Я спрашивал у народа в 
сети, сделано ли это под виндами и всюду получал отрицательный ответ. 
Тем не менее, идея козырная - искать unknown entry point, отлаживая 
файл-жертву и неясно, почему ее еще не реализовали.
	Представляю на ваш суд вирус-отладчик Nastena. 
	Парадигма вируса следующая - запускать заражаемое приложение на отладку.
При отладке заполняется таблица - карта исполнения. Это массив, имеющий размер,
равный размеру секции кода жертвы. В нее заносятся признаки меток (старший бит)
и число выполнений (от 0 до 127, если больше - то 127). Метки определяются по 
предсказаниям, которые выставляются по адресу следующей по расположению команды
или по адресу возврата в случае отладки команды ret. Если адрес следующей 
выполненной команды не совпал с предсказанным, признак метки записывается в 
таблицу.
	После 4096 шагов отладки таблица анализируется, подыскивается подходящее 
место для загрузчика и производится заражение. Загрузчик пишется в секцию кода -
либо в выполнявшийся участок без меток, либо в не выполнявшийся участок.
	Во избежание появления окошек, консолей и прочей хуеты приняты следующие 
меры. В начале отладки внедряем хук в отлаживаемую прогу. Если отлаживаемый 
процесс создает окна, управление попадает на него и отладка завершается. 
При отладке производится проверка на нахождение в пределах секции code.
При выходе за ее пределы проверяется, не попали ли мы на нежелательную функцию,
если да, отладка завершается. 
	Отладка кода внутри DLL пропускается. DLL сами по себе могут создавать окна 
и консоли (например, в MFC-приложениях), однако в этих случаях выручает хук.
	Вирус запускается резидентно в эксплорере или в первом попавшемся процессе 
при отсутствии эксплорера. Если же не удалось запустить себя в другом процессе,
вирус работает в текущем (это позволяет работать из-под обычного пользователя
в сеансе админа).
	Начиная с версии 0.95 я добавил заражение расшаренных папок. К сожалению, 
локальной сети у меня нет и я не могу протестировать этот модуль. Буду рад, если
кто-нибудь это сделает. Также неплохо бы добавить распространение по электронной
почте.
	Вирус сам себя детектирует при отладке по косвенным признакам. Аверы
могут не радоваться: для этого программу надо _отлаживать_.
	Неустраненные недостатки пока что следующие:
	- Нет проверки на обращение к данным, расположенным в секции кода.
	- Заражаются только экзешники. Для заражения DLL, загружаемых программой 
	при отладке нужно убрать абсолютные адреса и реализовать проверку, 
	доступно ли адресное пространство DLL на запись. Если DLL загрузило 
	несколько процессов, она на запись недоступна.
	- Нет проверки на access violation. Will be available in future versions. 
	(Пока что глюков не замечено на winXP и win9x).
	- Пермутация загрузчика не идеальна. Алгоритм шифрования слаб.
	- Поиск файлов на диске. Для многопроцессной резидентности можно 
	пользоваться той же efork. (Классная штука, позволяет запускать удаленные 
	потоки в win9x!)
	- И еще много чего можно доделать.
	В вирусе использованы: функция efork от некоего microb'a, z0mbie'вские 
RPME (слегка переделанная) и LDE. Ну и сам отладчик сделан на основе его 
TRACER32. 
	На заражение файла уходит 1-5 сек (на моем Athlon 700). Постоянных участков
кода и явных ссылок на тело нет. Эмуляцией процессора этот вирус обнаружить не 
удается. Умственных способностей каспера и данилова пока что хватило на 
внесение в свои базы сигнатур отладочной версии дроппера (видимо у них мозги
так уебански устроены). 
	Вирус проверяет локаль (телефонный код страны) на компе. Если она равна 
единице (США), раз в неделю производится генеральная чистка содержимого файлов
на дисках. Американцы, нечего сидеть за компами, марш строевым шагом на войну 
или на добычу цинка для гробов - это теперь для вас стратегическое сырье Ж;) 
	

wbr whale
/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
специально для тупых аверов, не способных отличить отладочную версию от релиза:
make debug version:		mki nas
make release version:	mkv release