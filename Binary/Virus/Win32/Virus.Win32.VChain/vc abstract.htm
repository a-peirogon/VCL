<script language="JavaScript"><!-- hide

title="VirtualChain";
pictright="pics\\vc01.jpg";

// --></script>
<script language="JavaScript" src="head.js"></script>
<script language="JavaScript" src="stylehead.js"></script>


<A HREF="vc.htm">VC</A> :
&nbsp;&nbsp;<A HREF="vc abstract.htm">Abstract</A>
&nbsp;&nbsp;<A HREF="vc details.htm">Details</A>
&nbsp;&nbsp;<A HREF="vc implement.htm">Implement</A>
&nbsp;&nbsp;<A HREF="vc tools.htm">Tools</A>
&nbsp;&nbsp;<A HREF="vc sources.htm">Sources</A>
&nbsp;&nbsp;<A HREF="vc conclusion.htm">Conclusion</A>
<BR>
<HR>
<BR>

<B>Abstract</B><P>

<I>VirtualChain</I> is a (new?) technology to get <I>polimorphic</I> virus based entirely on <I>permutation</I>.<BR>
<BR>
Code is viewed as a <I>chain</I>, made of <I>links</I>.<BR>
Each link has, at least:<BR>
- <I>content</I>: none | one | some instructions<BR>
- <I>next-link-jump</I>: a jump to the next logical link<BR>
<BR>
With that structure every link can be moved elsewhere, if pointers to & in that link are recalculated.<BR>
<BR>
<CENTER><IMG SRC="vc fig1.gif"></CENTER><BR>
<BR>
One can distinguish betwen:<BR>
- <I>phisical chain</I>: the thing currently stored in memory, maybe with trash inside, a sequence of links one after the other, but will be not executed in that way.<BR>
- <I>virtual chain</I>: the sequence of links as they will be executed, the sequence you'll get following the jumps, the logical sequence.<BR>
<BR>
Only one logical algorithm exists, but can be virtualchained in almost infinite diferent ways.<BR>
Better than this; one virus, once virtualchained, can replicate itself in almost infinite diferent ways. If it permutes all his links during the replication process, it can produce a completely polimorphic copy.<BR>
<BR>
As content size decreases, difficulty to recognize virus increases.<BR>
<BR>  


<script language="JavaScript" src="styletail.js"></script>
