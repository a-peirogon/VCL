   ; - —y¢ ª¨ ï â®¦¥ å ª¥p!
   ; - € ¤¥¡y££¥p y â¥¡ï y¦¥ ®âp®á ?

   ; DEBUG
   ; ~~~~~
   ; - dump each event's name to the debugger's console
   ; - EVLIST.INC used to get event names, generated by means of EVLIST.EXE/.PAS

   ; u need Soft-ICE to be installed to use this plugin.

   USE_NODEBUG             equ     YES
     ; use [NODEBUG] option after event's definition (in the .INC files)
     ; to disallow dump of the frequently called events

   include                 INCLUDE\consts.inc
   include                 k32man.inc
   ;include                log.inc

   include                 plugin.inc
                           PLUGIN_START    DEBUG, CODE32, NON_PERMUTABLE

   handleevent:            pushfd
                           pushad

                           mov     edx, eax

                           ; caller's base - shouldn't be own debug's call
                           and     eax, 00FF0000h
                           shr     eax, 8
                           cmp     eax, EV_DEBUG_BASE
                           je      __quit

                           sub     esp, 256
                           mov     edi, esp
                           cld

                           call    buildstring

   ;                       event   EV_LOG_STRING

   IFDEF   USE_NODEBUG
                           cmp     byte ptr [edi-5], '!'
                           je      __done
   ENDIF

                           IS_RING0        ; EAX changed
                           jz      __ring0

   __ring3:                push    esp
                           callX   OutputDebugStringA

                           jmp     __done

   __ring0:                mov     esi, esp
                           VMMcall Out_Debug_String

   __done:                 add     esp, 256

   __quit:                 popad
                           popfd

                           stc
                           retn

   ; input: EAX=caller's base
   ;        EDX=event#

   buildstring:            mov     eax, ' ###'
                           stosd

                           mov     eax, edx                ; caller
                           and     eax, 00FF0000h          ;
                           shr     eax, 8                  ;

                           push    eax

                           call    get_evlist_offs
                           call    __scanlist
                           call    __copyname

                           mov     eax, '?>--'             ; -->
                           stosd
                           dec     edi

                           mov     eax, edx                ; called
                           and     eax, 0000FF00h          ;

                           pop     ecx
                           cmp     eax, ecx
                           jne     __ok

   __notify:               mov     eax, '   *'
                           stosd
                           mov     eax, '    '
                           stosd

                           jmp     __space

   __ok:                   call    get_evlist_offs
                           call    __scanlist
                           call    __copyname

   __space:                mov     al, 32
                           stosb
                           stosb

                           mov     eax, cs         ; CS
                           call    out_word
                           mov     al, ':'         ; :
                           stosb
                           mov     eax, [esp+4+256+32+4+8]  ; EIP
                           sub     eax, 5+2  ; mov eax, nnnnnnnn / call ebp / ...
                           call    out_dword

                           mov     al, 32
                           stosb
                           stosb

                           mov     eax, edx        ; event#
                           call    out_dword

                           mov     al, 32
                           stosb
                           stosb

                           movzx   eax, dx
                           call    get_evlist_offs
                           call    __scanlist

                           movzx   ecx, byte ptr [ebx-1]
                           rep     movsb           ; event name

                           mov     eax, 00000A0Dh  ; cr,lf,0
                           stosd

                           retn

   __copyname:             movzx   ecx, byte ptr [ebx-1]
                           push    ecx
                           rep     movsb
                           pop     ecx

                           sub     ecx, 8
                           neg     ecx
                           jle     __skipspaces
                           mov     al, 32
                           rep     stosb
   __skipspaces:
                           retn

   __scanlist:
   __cycle:                cmp     word ptr [esi], 0
                           je      __notfound
                           cmp     ax, [esi]
                           je      __found
                           add     esi, 3
                           movzx   ecx, byte ptr [esi-1]
                           add     esi, ecx
                           jmp     __cycle
   __notfound:             add     esi, 3
   __found:                add     esi, 3
                           mov     ebx, esi
                           retn

   out_word:               rol     eax, 16
                           push    4
                           jmp     out_xz
   out_dword:              push    8
   out_xz:                 pop     ecx
   __cycle:                rol     eax, 4
                           push    eax
                           and     al, 15
                           daa
                           add     al, -10h
                           adc     al, '0'+10h
                           stosb
                           pop     eax
                           loop    __cycle
                           retn

   ev                      macro   ev_number, ev_name
                           local   __1,__2
                           dw      ev_number
                           db      __2-__1
   __1:                    db      ev_name
   __2:                    endm

   get_evlist_offs:        call    pop_esi

   _evlist_start:
   include                 evlist.inc
                           ev      0,'***UNKNOWN***'

   pop_esi:                pop     esi
                           retn

                           ; used by CHECKPGN.EXE/.CPP
                           db      'DEBUG$$',0                ; ID
                           dd      $-8-_evlist_start          ; offset

                           PLUGIN_END
