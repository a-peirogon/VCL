                   Direct Phantom
                   ÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
             A includable Simulated Polymorphic Generator
             ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ


    Mutation Engine. *ã ¢®â ¨ ï à¥è¨« ¯®¯à®¡®¢ âì á¥¡ï ¢ íâ®© ®¡« áâ¨.
    “¦ ¥ § î ª ª ¯®«ãç¨«®áì, ® ¤ã¬ î   “à®¢¥. ’®«ìª® ¥ § î   ª ª®¬:

    [ ˆá¯®«ì§®¢ ¨¥ ¢ à áè¨äà®¢é¨ª¥ ¢§ ¬®§ ¬¥ï¥¬ëå ¨áâàãªæ¨© ¨ "¯¥à¥¬¥è¨¢ ¨¥"
      ¨áâàãªæ¨© ¬¥¦¤ã á®¡®© ¡¥§ ¨§¬¥¥¨ï  «£®à¨â¬  è¨äà®¢ ¨ï,  â ª¦¥ à áè¨äà®¢é¨ª
      ¬®¦¥â ¨á¯®«ì§®¢ âì à §«¨çë¥  «£®à¨â¬ë è¨äà®¢ ¨ï ¢¨àãá®£® ª®¤ .]
      (C) ª ¦¥âáï „ ¨«®¢  ?

    Direct Phantom - íâ® ¯®¤ª«îç ¥¬ë© £¥¥à â®à,¬®¤¥«¨àãîé¨©
    ¯®«¨¬®àäë¥ à áè¨äà®¢é¨ª¨. ‚ íâ®© ¢¥àá¨¨ DPH 1.0 ¤«¨  ¤¥ªà¨¯â®à 
    ¢ àì¨àã¥âáï ®â 50 ¤® 100 ¡ ©â ¡¥§ ¬ãá®à . €«£®à¨â¬ è¨äà®¢ ¨ï
    á®áâ ¢«ï¥âáï ¨§ 13 ª®¬ ¤   RND(8...16) ¯®§¨æ¨© - ®â 0.8*10^9 ¤® 6.6*10^17
    ª®¬¡¨ æ¨© ª®¬ ¤

    ‚ë§®¢
    ÄÄÄÄÄ

    *ã¦® § ¯®«¨âì áâàãªâãàã

    (1)
    TARGETPLACE   : SEG:OFFS - ¬¥áâ® £¥¥à¥¨ï ¤¥ªà¨¯â®à 
    DEST_CODE     :  ¤à¥á è¨äàã¥¬®© ®¡« áâ¨,SEG ¤¥ªà¨¯â®à 
    COUNTER       : ¤«¨  ®¡« áâ¨
    LENDECRYPTOR  : ¤«¨  ¤¥ªà¨¯â®à  = 0
    RELOFFS       : ¤®¯®«¨â¥«ì®¥ á¬¥é¥¨¥

    (2)
    CALL PHANTOM      - £¥¥à æ¨ï ¤¥ªà¨¯â®à 

    ‘®§¤ ¥â ¤¥ªà¨¯â®à ¢ ãª § ®¬ ¬¥áâ¥
    …á«¨ DEST_CODE=FFFFh, â® ¯®á«¥ £¥¥à æ¨¨ DEST_CODE = TARGETOFFS+LENDECRYPTOR

    CALL JuNK_DOIT    - è¨äà®¢ ¨¥ ®¡« áâ¨,®á¢®¡®¦¤¥¨¥ áâ¥ª 


    Œ®¤¥«¨à®¢ ¨¥
    ÄÄÄÄÄÄÄÄÄÄÄÄÄ

    *à¨ £¥¥à æ¨¨ ¥ ¨á¯®«ì§ã¥âáï ¨ª ª¨å á¦ âëå ¬ á®ª - ¥â ¯à¨æ¨¯¨ «ì® à §ëå
    ç áâ¥© ,¯®íâ®¬ã à §ë¥ ¤¥ªà¨¯â®àë ¢ ®¡é¥¬ ¤®«¦ë à áá¬ âà¨¢ âìáï ª ª
    ¤¥ªà¨¯â®àë ®¤®£® â¨¯ :

    ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
    (1)
    InitUsedRegisters:
    BASE       = 1000h  ‚ ¯à®¨§¢®«ì®¬ ¯®àï¤ª¥,
    KEY        = RND    á à §ë¬¨ à¥£¨áâà ¬¨,
    COUNTER    = 3Dh    ¨ à §ë¬¨ á¯®á®¡ ¬¨
    SEGBASE    = ES,DS

    mov    bx,0974F  ; BASE    mov    al,068     ; KEY
    push   cs    ; DSBASE  mov    bp,A014    ; BASE
    pop    ds          mov    bx,cs      ; DSBASE
    mov    si,cs     ; ESBASE  mov    ds,bx
    mov    es,si           mov    dx,0003D   ; COUNTER
    mov    al,038    ; KEY     push   cs     ; ESBASE
                   pop    es

    (2)
    LoadByteFromCode:  (Present/Abscent)

    ‡ £àã§ª  ¡ ©â  ¨§ ªà¨¯âã¥¬®£® ª®¤  ¢ TMP_REG,
    ¥á«¨ ªà¨¯â®¢ ¨¥ ¥¯®áà¥¤áâ¢¥® ¢ ¯ ¬ïâì,â® ¨ç¥£® ¥â

    mov    ch,es:[bx+78B1]     ------//------

    (3)
    Arithm&Shift[De]Coding:

    Š®¤¨à®¢ ¨¥ ¡ ©â   à¨ä¬¥â¨ç áª¨¬¨ ¨ «®£¨ç¥áª¨¬¨ ª®¬ ¤ ¬¨ ¢ REG/MEM
    Žâ 8 ¤® 16 ª®¬¬ ¤

    * à ««¥«ì® ¢ áâ¥ª¥ á®§¤ ¥âáï EncryptionPart á®áâ®ïé¨© ¨§
    §¥àª «ìëå ª®¬¬ ¤ ¢ ®¡à â®¬ ¯®àï¤ª¥
    *à¨ § ª®¤¨à®¢ ¨¨ ¨á¯®«ì§ã¥âáï á®§¤ ë© ¤¥ªà¨¯â®à,® á ¢ë§®¢®¬ EncryptPart

    rol    ch,64           add    ds:[bp][06FEC],00C ; A014+6FEC=1000h
    add    ch,al           add    es:[bp][06FEC],dh
    sub    ah,2E           add    ds:[bp][06FEC],094
    inc    ch          sub    es:[bp][06FEC],06B
    add    ch,FC           add    ds:[bp][06FEC],0A2
    sub    ch,al           inc    es:[bp][06FEC]
    sub    ch,1C           sub    es:[bp][06FEC],dl  ; ‘ áç¥âç¨ª®¬
    neg    ch          sub    ds:[bp][06FEC],al  ; ‘ ª«îç¥¬
    rol    ch,1            add    es:[bp][06FEC],al
                   neg    es:[bp][06FEC]
                   not    es:[bp][06FEC]
                   inc    ds:[bp][06FEC]
                   rol    ds:[bp][06FEC],024
                   add    es:[bp][06FEC],066
                   rol    es:[bp][06FEC],1

    (4)
    SaveByteFromCode:  (Present/Abscent)

    ‘®åà ¥¨¥ ¡ ©â  ¢ ªà¨¯âã¥¬ë© ª®¤ ¨§ TMP_REG,
    ¥á«¨ ªà¨¯â®¢ ¨¥ ¥¯®áà¥¤áâ¢¥® ¢ ¯ ¬ïâì,â® ¨ç¥£® ¥â

    mov    es:[bx+78B1],ch     ------//------

    (5)
    ChangeCnt,Base&TestLimit

    *à®¤¢¨¦¥¨¥ * §ë  -  ADD/SUB,SUB/ADD,INC

    “¬¥ìè¥¨¥ áç¥âç¨ª  æ¨ª«   -  DEC
    (¥á«¨ â ª®¢®© áãé¥áâ¢ã¥â)

    *à®¢¥àª  ¯à¥¤¥«   -  CMP or None
    *¥§ã«ìâ â ¢ ZF
    *®á«¥ ¯à®¢¥àª¨ ¯à¥¤¥«  ¥ ¯à¨áãâáâ¢ã¥â ¬ãá®à

    sub    bx,4C           inc    bp
    add    bx,4D           dec    dx
    cmp    bx,978C

    (5a)
    ChangeKey (¥ à¥ «¨§®¢ ®)
    ˆ§¬¥¥¨¥ ª«îç  ¢á¥¬¨ ¤®áâã¯ë¬¨ á¯®á®¡ ¬¨

    (6)
    JumpIfNotAll

    –¨ª« ¯® ¯à¨§ ªã ZF  -  JNE Rel8 , JNE Rel16
    ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

    HISTORY
    ÄÄÄÄÄÄÄ

    ‚¥àá¨ï 1.0 beta

    + *¥  ©¤¥® ®è¨¡®ª. “-àà-  !!!
    + ‚®§¬®¦®áâì ¨á¯®«ì§®¢ ¨ï DEST_CODE = FFFFh
    - *¥â ¬ãá®à  - ã¦¥  ¯¨á ,® ¥®¯â¨¬¨§¥,TRCHAIN = RET
    - *¥â ¡ §¨à®¢ ¨ï PHANTOM (¨ ¥ ¡ã¤¥â)
    - *¥â  â¨í¢à¨áâ¨ª¨ (¨ ¥ ¡ã¤¥â)

    ‚¥àá¨ï 2.0

    + ‘¤¥«  £¥¥à â®à ¬ãá®à  ¢ª«îç îé¨© ¢ á¥¡ï ¢¥áì ª ª®© â®«ìª® ¬®¦® ¬ãá®à
      á «î¡ë¬¨ à¥¦¨¬ ¬¨  ¤à¥á æ¨¨ (á¬. TRCOMM.TXT ). Šàãç¥ SMEG !
      ‚ª«îç ¥â ¬ãá®àë¥ ¯®¤¯à®£à ¬¬ë ¨ ¢ë§®¢ë ¨å. ‚á¥ CALL'ë  ¤à¥áãîâáï  § ¤.


    - ˆ¬¥¥âáï £¥¥à æ¨ï á«®¢®£® ¬ãá®à   ¤à¥áãîé¥£®áï ¢ ¯ ¬ïâì â¨¯  mov ax,[bx]
      Žâáî¤  ¢®§¬®¦  íª§®â¨ç¥áª ï ®è¨¡ª  "§ ¢®à ç¨¢ ¨¥ á¥£¬¥â "
      *â® ª®£¤  BX=0FFFFh,¨ ¯à¨ mov ax,[bx] ¢ë«¥â ¥â Exeption 12:Invalid opcode
      ‚®®¡é¥ á ç «  ï ¤ã¬ « çâ® â ª®© £«îª ¡ã¤¥â ¢áâà¥ç âìáï ªà ©¥ à¥¤ª®,
      ® ª ¬®¥¬ã ®£®àç¥¨î à¥§ã«ìâ âë â¥áâ®¢ ¯®ª § «¨ ®¡à â®¥ - 1/15.
      ‚¨¤¨¬® ¯à¨¤¥âáï ®áâ ¢¨âì â®«ìª® ¡ ©â®¢ãî  ¤à¥á æ¨î ¢ ¯ ¬ïâì.€ ¦ «ì.

    - Šà ©¥ ¯à¨æ¨¯¨ «ì ï ®è¨¡ª .
      Œãá®àë¥ CALL'ë ä®à¬¨àãîâáï ¨§ 4 offset'®© ®ç¥à¥¤¨   ¯à¥¤è¥áâ¢ãîé¨¥ SUB'ë
      ¢ «î¡®¬ ¬¥áâ¥ ¯à®£à ¬¬ë.*® á«¥¦¥¨¥ §  à¥£¨áâà ¬¨ ®áãé¥áâ¢«ï¥âáï «¨¥©®
      ¯® å®¤ã ä®à¬¨à®¢ ¨ï ¤¥ªà¨¯â®à .
      Œ®¦¥â ¢®§¨ªãâì á¨âã æ¨ï ª®£¤  SUB'àãâ¨  ¬ãá®à®¬ ¨§¬¥ï¥â ã¦ë© à¥£¨âáà,
      ª®£¤  ¢ â®¬ ¬¥áâ¥ ®âªã¤  ®  ¢ë§ë¢ « áì íâ®£® ã¦¥ ¤¥« âì ¥«ì§ï.
      *® ª®£¤  £¥¥à¨« áì ¯à®æ¥¤ãà  íâ®â à¥£¨áâà ¡ë« ¥é¥ á¢®¡®¤ë¬ ¤«ï ¬ãá®à 

    ‚¥àá¨ï 2.1

    + ˆá¯à ¢«¥ë CALL'ë :
      ’¥¯¥àì  ¤à¥á æ¨ï CALL'®¢ á¤¥«   â®«ìª®   ¢¯¥à¥¤áâ®ïé¨¥ SUB'àãâ¨ë.
      ’® ¥áâì ¢ SUB' å ã¦ë¥ à¥£¨áâàë ã¦¥ ãçâ¥ë.
      „«ï ¯®«ì§®¢ ¨ï FREEREG á¤¥«  MaskCALLRequest - § ¯à¥é ¥â £¥¥à æ¨î CALL'®¢
    + ‚®§¬®¦ë ¢«®¦¥ë¥ CALL'ë : ¢ ®¤®¬ íª§¥¬¯«ïà¥ ã ¬¥ï  ¡«î«®áì 8 ¢«®¦¥¨©.
    - ‹¨èïï á®âï ¡ ©â®¢ . ˆâ®£® DirectPhantom v2.1 = 2045 ¡ ©â.
