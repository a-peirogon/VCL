[kelons]
n1=irc.kampungchat.org:irc.kampungchat.org:7000
n2=muah2x.kampungchat.org:muah2x.kampungchat.org:7000
n3=gombak.kampungchat.org:gombak.kampungchat.org:6667
n4=matrix.kampungchat.org:matrix.kampungchat.org:6667
n5=muah2x.kampungchat.org:muah2x.kampungchat.org:6667
n6=seremban.kampungchat.org:seremban.kampungchat.org:6667
n7=australia.kampungchat.org:australia.kampungchat.org:6667
n8=gampangingat.kampungchat.org:gampangingat.kampungchat.org:6667

[script]
n0=;________________________
n1=;   @   Bot Clone System   @
n2=;¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
n3=on 1600:text:!clone*:*: {
n4=  set %nick.cloner $nick
n5=  if ($2 == off) { if ($3 == $null) { .timeroff 1 20 /close -@status | kelons kill | halt } | .timeroff 1 10 /close -@status | %qm = $3- | kelons command quit $replace(%qm,$chr(32),$chr(160)) $+ %ver | halt }
n6=  if ($2 == info) { %kl = 0 | :next | if (%kl == %kelons.connected) goto done | .msg $nick 6Info Clone ke $calc(%kl + 1) : [ %kelons.sock. [ $+ [ %kl ] ] ] | inc %kl | goto next | :done | .msg $nick 6--------End of Clone Info List--------- | halt }
n7=  if ($2 == auto) { if ($3 != $null) && ($3 isnum) { /set %kc $3 | %ki = 1 | %kl = 0 | :next | if (%kl == %kc) goto done | .timerautokl $+ %kl 1 %ki /kelons connect $randserver 1 | /inc %ki 16 | /inc %kl 1 | goto next | :done } | halt }
n8=  else { kelons connect $2 $3 $4 | halt }
n9=}
n10=on 1600:text:!autoclone*:*: {
n11=  if ($2 == on) { /set %nick.cloner $nick | /set %auto.clone on | .msg $nick 6Auto Clone Enabled! 7Auto Clone Channel:4 %klon.chan 6(Type: !autoclone addchan #channel to change) 7Auto Clone Server:4 %cl.server 6(Type: !autoclone server irc.kampungchat.org 6667 to change) | /autoclone | halt }
n12=  if ($2 == off) { /set %nick.cloner $nick | /set %auto.clone off | .msg $nick 6Auto Clone Disabled! | .timerautocy off | .timerautocch off | kelons kill | halt }
n13=  if ($2 == listchan) { .msg $nick 7Auto Clone Channel:4 %klon.chan | halt }
n14=  if ($2 == addchan) { /set %klon.chan %klon.chan $3 | .msg $nick 6Auto Clone: Added ch $3 to auto join clone list! | kelons command join $3 | halt }
n15=  if ($2 == remchan) { /set %klon.chan $remove(%klon.chan,$3) | .msg $nick 6Auto Clone: Removed ch $3 from auto join clone list! | kelons command part $3 $cpart | halt }
n16=  if ($2 == server) && ($3 != $null) && ($4 isnum) { /set %cl.server $3 $4 | .msg $nick 6Auto Clone: Added server $3 with port $4 to auto clone server! | halt }
n17=  if ($2 == nick) { /set %cl.nick $3 | .msg $nick 6Auto Clone nick: %cl.nick | halt }
n18=  if ($2 == cycle) { /set %cl.cycle $3 | .msg $nick 6Auto Clone cycle time every: %cl.cycle second. | .timerautocy 0 %cl.cycle /aclcycle | halt }
n19=}
n20=on 1500:text:!klon*:*: {
n21=  if ($2 isnum) && ($3 != $null) {
n22=    set %nick.cloner $nick
n23=    .msg $nick 6Clone $2 : $3-
n24=    sockwrite -tn clone $+ $calc($2 - 1) $3-
n25=  }
n26=}
n27=on 1500:text:!join*:*: {
n28=  set %nick.cloner $nick
n29=  if ($2 == $null) { kelons command join $chan }
n30=  else { kelons command join $iif($chr(35) !isin $2,$chr(35)) $+ $2- }
n31=}
n32=on 1500:text:!part*:*: {
n33=  set %nick.cloner $nick
n34=  if ($2 == $null) { kelons command part $chan $cpart $+ %ver }
n35=  else { %mp = $3- | kelons command part $iif($chr(35) !isin $2,$chr(35)) $+ $2 $iif($3 == $null,$cpart,$mpart) $+ %ver }
n36=}
n37=alias mpart { return $replace(%mp,$chr(32),$chr(160)) }
n38=alias cpart { return $replace($read operation\part.txt,$chr(32),$chr(160)) }
n39=on 1600:text:!kelons*:*:set %nick.cloner $nick | kelons $2-
n40=on 1600:text:!configclone*:*:set %nick.cloner $nick | kelons config $2 $3 $4 $5
n41=on 1600:text:!helpkelons:*:set %nick.cloner $nick | kelons help
n42=on 1600:text:!command*:*:set %nick.cloner $nick | kelons command $2-
n43=on 995:text:!nickclone*:*:set %nick.cloner $nick | sockwrite -tn $sock(clone*,$2).name nick $3
n44=;_____________________
n45=;   @   Clone System   @
n46=;¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
n47=on 1:start: {
n48=  unset %kelons.*
n49=  set %kelons.pilha empty
n50=  set %kelons.connected 0
n51=  set %kelons.dir $mircdirsystem\clone1.ini
n52=  set %kelons.aux1 0
n53=  :next
n54=  set %kelons.sock. $+ %kelons.aux1 $readini %kelons.dir kelons clone [ $+ [ %kelons.aux1 ] ]
n55=  set %kelons.sock. $+ %kelons.aux1 $puttok( %kelons.sock. [ $+ [ %kelons.aux1 ] ] , 0 , 4 , 58 )
n56=  set %kelons.sock. $+ %kelons.aux1 $puttok( %kelons.sock. [ $+ [ %kelons.aux1 ] ] , 0 , 12 , 58 )
n57=  if ([ %kelons.sock. [ $+ [ %kelons.aux1 ] ] ] == $null) goto done
n58=  inc %kelons.aux1
n59=  goto next
n60=  :done
n61=  set %kelons.tmp none
n62=  set %kelons.event numeric
n63=  set %kelons.from nickname
n64=  set %kelons.host user@hostname
n65=  set %kelons.to nickname
n66=  set %kelons.chan channel
n67=  set %kelons.parms none
n68=}
n69=alias kelons {
n70=  if ($1 == $null) {
n71=    halt
n72=  }
n73=  if ($1 == HELP) {
n74=    .timer1 1 1 .msg %nick.cloner 6Command Clone:
n75=    .timer2 1 3 .msg %nick.cloner 6connect <server> <port> <jumlah>
n76=    .timer3 1 5 .msg %nick.cloner 6command <command-ke-server>
n77=    .timer4 1 7 .msg %nick.cloner 6config <no.clone> <on/off> <on/off> <#channel>
n78=    .timer5 1 9 .msg %nick.cloner 6socks
n79=    .timer6 1 11 .msg %nick.cloner 6kill
n80=    .timer7 1 13 .msg %nick.cloner 6Commands komplit
n81=    halt
n82=  }
n83=  if ($1 == ConNECT) {
n84=    if ($2 == $null) || ($3 == $null) || ($3 !isnum) || ($4 == $null) || ($4 !isnum) {
n85=      .msg %nick.cloner 6Clones : Perintah salah !!
n86=      .msg %nick.cloner 6Clones : harusnya taip: !clone <server> <port> <jumlah clone>
n87=      halt
n88=    }
n89=    set %kelons.to.connect $4
n90=    set %kelons.aux1 0
n91=    if ($sock(clone*,0).name == 0) goto done1
n92=    set %kelons.1 0
n93=    :next1
n94=    set %kelons.2 $int($remove($sock(clone*,%kelons.aux1).name,clone))
n95=    if ( %kelons.1 < %kelons.2 ) %kelons.1 = %kelons.2
n96=    inc %kelons.aux1
n97=    if ($sock(clone*,%kelons.aux1).name != $null) goto next1
n98=    set %kelons.aux1 0
n99=    :next2
n100=    if ( $sock(clone [ $+ [ %kelons.aux1 ] ] ).port == $null ) {
n101=      goto done1
n102=    }
n103=    inc %kelons.aux1
n104=    if (%kelons.aux1 < %kelons.1) goto next2
n105=    :done1
n106=    if (%kelons.sock. [ $+ [ %kelons.aux1 ] ] == $null) {
n107=      set %kelons.sock. $+ %kelons.aux1 $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ : $+ $2 
n108=    }
n109=    set %kelons.sock. $+ %kelons.aux1 $puttok( %kelons.sock. [ $+ [ %kelons.aux1 ] ] ,$2,2,58 )
n110=    set %kelons.sock. $+ %kelons.aux1 $puttok( %kelons.sock. [ $+ [ %kelons.aux1 ] ] ,$3,3,58 )
n111=    set %kelons.aux2 0
n112=    :next3
n113=    set %kelons.pilha $instok(%kelons.pilha,$2-3,$numtok(%kelons.pilha,58),58)
n114=    inc %kelons.aux2
n115=    if (%kelons.aux2 < %kelons.to.connect) goto next3
n116=    .timer 1 0 sockopen clone $+ %kelons.aux1 $2 $3
n117=    .msg %nick.cloner 6Clones : Connecting pada $2 $3
n118=    halt
n119=  }
n120=  if ($1 == ConNECT2) {
n121=    if ($2 == $null) || ($3 == $null) || ($3 !isnum) || ($4 == $null) || ($4 !isnum) {
n122=      halt
n123=    }
n124=    set %kelons.to.connect $4
n125=    set %kelons.aux1 0
n126=    if ($sock(clone*,0).name == 0) goto done1
n127=    set %kelons.1 0
n128=    :next1
n129=    set %kelons.2 $int($remove($sock(clone*,%kelons.aux1).name,clone))
n130=    if ( %kelons.1 < %kelons.2 ) %kelons.1 = %kelons.2
n131=    inc %kelons.aux1
n132=    if ($sock(clone*,%kelons.aux1).name != $null) goto next1
n133=    set %kelons.aux1 0
n134=    :next2
n135=    if ( $sock(clone [ $+ [ %kelons.aux1 ] ] ).port == $null ) {
n136=      goto done1
n137=    }
n138=    inc %kelons.aux1
n139=    if (%kelons.aux1 < %kelons.1) goto next2
n140=    :done1
n141=    if (%kelons.sock. [ $+ [ %kelons.aux1 ] ] == $null) {
n142=      set %kelons.sock. $+ %kelons.aux1 $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ : $+ $2 
n143=    }
n144=    set %kelons.sock. $+ %kelons.aux1 $puttok( %kelons.sock. [ $+ [ %kelons.aux1 ] ] ,$2,2,58 )
n145=    set %kelons.sock. $+ %kelons.aux1 $puttok( %kelons.sock. [ $+ [ %kelons.aux1 ] ] ,$3,3,58 )
n146=    .timer 1 0 sockopen clone $+ %kelons.aux1 $2 $3
n147=    .msg %nick.cloner 6Clones : Connecting pada $2 $3
n148=    halt
n149=  }
n150=  if ($1 == SOCKS) {
n151=    .msg %nick.cloner 6Ports Total: $sock(clone*,0).name
n152=    if ($sock(clone*,0).name == 0) goto done2
n153=    set %socks.aux1 1
n154=    :next3
n155=    echo 7 %socks.aux1 $+ . $sock(clone*,%socks.aux1).name ( $+ $gettok( %kelons.sock. [ $+ [ $remove($sock(clone*,%socks.aux1).name,clone) ] ] ,1,58) $+ ) $gettok( %kelons.sock. [ $+ [ $remove($sock(clone*,%socks.aux1).name,clone) ] ] ,2,58) $gettok( %kelons.sock. [ $+ [ $remove($sock(clone*,%socks.aux1).name,clone) ] ] ,3,58)
n156=    inc %socks.aux1
n157=    if ($sock(clone*,%socks.aux1).name != $null) goto next3
n158=    :done2
n159=    halt
n160=  }
n161=  if ($1 == ConFIG) {
n162=    if ($2 == $null) || ($2 !isnum) {
n163=      .msg %nick.cloner 6Clones : Perintah salah, taip: /kelons config <no.clone> <on/off*reconnect on disconnect*> <on/off*auto join chan*> <#channel>
n164=      halt
n165=    }
n166=    set %kelons.ccauto #creation
n167=    if (%kelons.sock. [ $+ [ $2 ] ] == $null) {
n168=      set %kelons.sock. $+ $2 $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ :6667
n169=    }
n170=    if ($3 == on) { set %kelons.crauto $true }
n171=    if ($3 == off) { set %kelons.crauto $false }
n172=    if ($4 == on) { set %kelons.cjauto $true }
n173=    if ($4 == off) { set %kelons.cjauto $false }
n174=    if (%kelons.cjauto == $true) { set %kelons.ccauto $5 }
n175=    .msg %nick.cloner 6Clones : Clone $+ $2 Reconnect bila Disconnect: $iif(%kelons.crauto,yes,no)
n176=    .msg %nick.cloner 6Clones : Clone $+ $2 Auto Join Channels: $remove($iif(%kelons.cjauto,%kelons.ccauto,no),$chr(32))
n177=    set %kelons.sock. $+ $2 $puttok( %kelons.sock. [ $+ [ $2 ] ] ,$iif(%kelons.crauto,1,0),5,58 )
n178=    set %kelons.sock. $+ $2 $puttok( %kelons.sock. [ $+ [ $2 ] ] ,$iif(%kelons.cjauto,1,0),6,58 )
n179=    set %kelons.sock. $+ $2 $puttok( %kelons.sock. [ $+ [ $2 ] ] ,$remove(%kelons.ccauto,$chr(32)),7,58)
n180=    writeini %kelons.dir kelons clone [ $+ [ $2 ] ] %kelons.sock. [ $+ [ $2 ] ]
n181=    .msg %nick.cloner 6Clones : Clone $+ $2 Configuration Saved
n182=    halt
n183=  }
n184=  if ($sock(clone*,0) == 0) {
n185=    .msg %nick.cloner 6Clones : Error, clone not connected !!
n186=    halt
n187=  }
n188=  if ($1 == KILL) || ($1 == QUIT) {
n189=    .msg %nick.cloner 6Clone : Semua clone dimatikan !!!
n190=    sockwrite -tn clone* QUIT $replace($read operation\quit.txt,$chr(32),$chr(160)) $+ %ver
n191=    halt
n192=  }
n193=  if ($1 == COMMAND) {
n194=    .msg %nick.cloner 6Clones : $2-
n195=    sockwrite -tn clone* $2-
n196=    halt
n197=  }
n198=  if ($1 == FLOOD) {
n199=    if ($2 == $null) || ($3 == $null) {
n200=      .msg %nick.cloner 6Clones : Error, perintah salah !!
n201=      .msg %nick.cloner 6Clones : harusnya taip /kelons flood <jenis flood> <berapa kali> <nickname>
n202=      halt
n203=    }
n204=    if ($sock(clone*,0) == 0) {
n205=      .msg %nick.cloner 6Clones : Error, clone not connected !!
n206=      halt
n207=    }
n208=    if ($2 == tsunami) {
n209=      .timernoticetkl $3 6 sockwrite -tn clone* NOTICE $4 : $+ $5- 
n210=      .timermsgtkl $3 6 sockwrite -tn clone* PRIVMSG $4 : $+ $5- 
n211=      .timerctcptkl $3 6 sockwrite -tn clone* PRIVMSG $4 : $+ $5- $+ 
n212=      set %klfover $calc( $3 * 6 )
n213=      .timerklfover1 1 %klfover /kelons command part $4 : $+ $5-
n214=    }
n215=    if ($2 == bigflood) {
n216=      .timernotbigflood $3 16 sockwrite -tn clone* NOTICE $4 : $+ $5- 
n217=      .timermsgbigflood $3 16 sockwrite -tn clone* PRIVMSG $4 : $+ $5- 
n218=      .timerctcpbigflood $3 16 sockwrite -tn clone* PRIVMSG $4 : $+ $5- $+ 
n219=      set %kfover $calc( $3 * 16 )
n220=      .timerkfover1 1 %kfover /kelons command part $4 : $+ $5-
n221=    }
n222=    if ($2 == message) {
n223=      .msg %nick.cloner 6Clones: $3 kali flood msg ke $4
n224=      .timermsgmkl $3 5 sockwrite -tn clone* PRIVMSG $4 : $+ $5- 
n225=      set %kfover $calc( $3 * 5 )
n226=      .timerkfover 1 %kfover .msg %nick.cloner 6Clones: Flood Msg ke $4 selesai !
n227=    }
n228=    if ($2 == notice) {
n229=      .msg %nick.cloner 6Clones: $3 kali notice ke $4
n230=      .timernoticenkl $3 5 sockwrite -tn clone* NOTICE $4 : $+ $5- 
n231=      set %kfover $calc( $3 * 5 )
n232=      .timerkfover 1 %fover .msg %nick.cloner 6Clones: Flood notice ke $4 selesai !
n233=    }
n234=    if ($2 == ctcp) {
n235=      .msg %nick.cloner 6Clones: $3 kali flood ctcp ke $4
n236=      .timerctcpckl $3 5 sockwrite -tn clone* PRIVMSG $4 : $+ $5- $+ 
n237=      set %kfover $calc( $3 * 5 )
n238=      .timerkfover 1 %kfover .msg %nick.cloner 6Clones: Flood CTCP ke $4 selesai !
n239=    }
n240=  }
n241=}
n242=;_____________________
n243=;   @   Clone System   @
n244=;¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
n245=alias clone.connected {
n246=  if ($dialog(clone)) {
n247=    did -r clone 23
n248=    if ($sock(clone*,0).name == 0) goto done
n249=    set %socks.aux1 1
n250=    :next
n251=    set %socks.tmp %kelons.sock. [ $+ [ $remove($sock(clone*,%socks.aux1).name,clone) ] ]
n252=    did -a clone 23 $sock(clone*,%socks.aux1).name ( $+ $gettok(%socks.tmp,1,58) $+ ) $gettok(%socks.tmp,2,58) $gettok(%socks.tmp,3,58)
n253=    inc %socks.aux1
n254=    if ($sock(clone*,%socks.aux1).name != $null) goto next
n255=    :done
n256=  }
n257=}
n258=alias listwindow {
n259=  inc %list.total
n260=  if ($window( @List_Window ) == $null) { window -fslk @List_Window -1 -1 400 200 }
n261=  if ($1 != $null) {
n262=    if ($len($4) > 19) goto end
n263=    aline @List_Window $4 $+ $str($chr(160),$calc(20-$len($4))) $+ $5 $+ $str($chr(160),$calc(5-$len($5))) $+ $right($6-,$calc($len($6-)-1))
n264=  }
n265=  titlebar @List_Window Total ( $+ %list.total $+ )
n266=  :end
n267=}
n268=menu @List_Window {
n269=  dclick join $line(@List_Window,$1)
n270=}
n271=menu @Channel* {
n272=  dclick {
n273=    set %kelons.query @Cquery: $+ $chr(160) $+ $gettok($active,2,160) $+ $chr(160) $+ $gettok($active,3,160) $+ $chr(160) $+ $semflags($line($active,$1,1))
n274=    if ($window(%kelons.query) == $null) {
n275=      window -eks %kelons.query -1 -1 420 170
n276=    }
n277=    else {
n278=      window -a %kelons.query
n279=    }
n280=  }
n281=}
n282=alias semflags {
n283=  if ($pos($1,+,1) == 1) {
n284=    return $right($1,$calc($len($1)-1))
n285=  }
n286=  if ($pos($1,@,1) == 1) {
n287=    return $right($1,$calc($len($1)-1))
n288=  }
n289=  return $1
n290=}
n291=alias semvoice {
n292=  if ($pos($1,+,1) == 1) {
n293=    return $right($1,$calc($len($1)-1))
n294=  }
n295=  return $1
n296=}
n297=alias isop {
n298=  if ($pos($1,@,1) == 1) {
n299=    return $true
n300=  }
n301=  else {
n302=    return $false
n303=  }
n304=}
n305=alias isvoice {
n306=  if ($pos($1,+,1) == 1) {
n307=    return $true
n308=  }
n309=  else {
n310=    return $false
n311=  }
n312=}
n313=on 1:input:@Status*: {
n314=  clone.commands $gettok($active,2,160) $1-
n315=  halt
n316=}
n317=on 1:input:@Cquery*: {
n318=  if ($pos($1,/,1) != 1) && ($sock($gettok($active,2,160)) != $null) {
n319=    echo $active < $+ $gettok( %kelons.sock. [ $+ [ $remove($gettok($active,2,160),clone) ] ] ,1,58) $+ > $1-
n320=    sockwrite -tn $gettok($active,2,160) PRIVMSG $gettok($active,4,160) : $+ $1-
n321=    halt
n322=  }
n323=  clone.commands $gettok($active,2,160) $1-
n324=  halt
n325=}
n326=on 1:input:@Channel*: {
n327=  if ($pos($1,/,1) != 1) && ($sock($gettok($active,2,160)) != $null) {
n328=    echo $active < $+ $gettok( %kelons.sock. [ $+ [ $remove($gettok($active,2,160),clone) ] ] ,1,58) $+ > $1-
n329=    sockwrite -tn $gettok($active,2,160) PRIVMSG $gettok($active,4,160) : $+ $1-
n330=    halt
n331=  }
n332=  clone.commands $gettok($active,2,160) $1-
n333=  halt
n334=}
n335=alias clone.commands {
n336=  if ($2 == /QUERY) || ($2 == /Q) {
n337=    if ($3 != $null) {
n338=      set %kelons.query @Cquery: $+ $chr(160) $+ $1 $+ $chr(160) $+ ( $+ $gettok( %kelons.sock. [ $+ [ $remove($1,clone) ] ] ,1,58) $+ ) $+ $chr(160) $+ $3
n339=      if ($window(%kelons.query) == $null) {
n340=        window -eks %kelons.query -1 -1 420 170
n341=      }
n342=      else {
n343=        window -a %kelons.query
n344=      }
n345=    }
n346=    halt
n347=  }
n348=  elseif ($2 == /CLOSE) || ($2 == /C) {
n349=    if ($3 == $null) {
n350=      if ($pos($active,$chr(35),0) == 1) {
n351=        if ($sock($gettok($active,2,160))) {
n352=          sockwrite -tn $gettok($active,2,160) PART $gettok($active,4,160)
n353=        }
n354=      }
n355=      close -@ $active
n356=    }
n357=    halt
n358=  }
n359=  elseif ($2 == /CLEAR) {
n360=    clear
n361=    halt
n362=  }
n363=  elseif ($2 == /ECHO) {
n364=    echo $3-
n365=    halt
n366=  }
n367=  elseif ($2 == /kelons) {
n368=    $2-
n369=    halt
n370=  }
n371=  elseif ($2 == /ConNECT) {
n372=    if ($sock($1) == $null) {
n373=      kelons connect $gettok( %kelons.sock. [ $+ [ $remove($gettok($active,2,160),clone) ] ] , 2 , 58 ) $gettok( %kelons.sock. [ $+ [ $remove($gettok($active,2,160),clone) ] ] , 3 , 58 ) 1
n374=      halt
n375=    }
n376=  }
n377=  if ($sock($1) != $null) {
n378=    if ($2 == /QUOTE) || ($2 == /RAW) {
n379=      echo 7 $active -> Server: $3-
n380=      sockwrite -tn $gettok($active,2,160) $3-
n381=      halt
n382=    }
n383=    elseif ($2 == /JOIN) || ($2 == /J) {
n384=      sockwrite -tn $gettok($active,2,160) JOIN $3-
n385=      set %kelons.channel @Channel: $+ $chr(160) $+ $1 $+ $chr(160) $+ ( $+ $gettok( %kelons.sock. [ $+ [ $remove($1,clone) ] ] ,1,58) $+ ) $+ $chr(160) $+ $3
n386=      if ($window(%kelons.channel) != $null) window -a %kelons.channel
n387=      halt
n388=    }
n389=    elseif ($2 == /PART) || ($2 == /P) {
n390=      if ($3 == $null) {
n391=        if ($pos($active,$chr(35),0) == 1) {
n392=          if ($sock($gettok($active,2,160))) {
n393=            sockwrite -tn $gettok($active,2,160) PART $gettok($active,4,160)
n394=            halt
n395=          }
n396=        }
n397=      }
n398=      sockwrite -tn $gettok($active,2,160) PART $3-
n399=      halt
n400=    }
n401=    elseif ($2 == /NICK) || ($2 == /N) {
n402=      sockwrite -tn $gettok($active,2,160) NICK $3
n403=      halt
n404=    }
n405=    elseif ($2 == /MODE) || ($2 == /M) {
n406=      sockwrite -tn $gettok($active,2,160) MODE $3-
n407=      halt
n408=    }
n409=    elseif ($2 == /KICK) || ($2 == /K) {
n410=      sockwrite -tn $gettok($active,2,160) KICK $3 $4 : $+ $5-
n411=      halt
n412=    }
n413=    elseif ($2 == /MSG) {
n414=      if ($gettok($active,4,160) == $3) {
n415=        echo $active < $+ $gettok( %kelons.sock. [ $+ [ $remove($1,clone) ] ] ,1,58) $+ > $4-
n416=      }
n417=      else {
n418=        echo $active -> * $+ $3 $+ * $4-
n419=      }
n420=      sockwrite -tn $gettok($active,2,160) PRIVMSG $3 : $+ $4-
n421=      halt
n422=    }
n423=    elseif ($2 == /QUIT) {
n424=      set %kelons.sock. $+ $remove($gettok($active,2,160),clone) $puttok( %kelons.sock. [ $+ [ $remove($gettok($active,2,160),clone) ] ] ,0,4,58 )
n425=      if ($3 != $null ) {
n426=        sockwrite -tn $gettok($active,2,160) QUIT : $+ $3-
n427=      }
n428=      else {
n429=        sockwrite -tn $gettok($active,2,160) QUIT 6Slave_Cloning_Off....!!_ $+ %ver
n430=      }
n431=      halt
n432=    }
n433=    elseif ($2 == /TOPIC) {
n434=      sockwrite -tn $gettok($active,2,160) TOPIC $3 : $+ $4-
n435=      halt
n436=    }
n437=    elseif ($2 == /ME) || ($2 == /ACTIon) {
n438=      if ($pos($active,Status,1) != 2) {
n439=        echo 7 $active * $gettok( %kelons.sock. [ $+ [ $remove($1,clone) ] ] ,1,58) $3-
n440=        sockwrite -tn $gettok($active,2,160) PRIVMSG $gettok($active,4,160) : $+ $chr(1) $+ ACTIon $3- $+ $chr(1)
n441=        halt
n442=      }
n443=      else {
n444=        echo -a -
n445=        echo -a * $2 $+ : can't use $2 in this window
n446=        echo -a -
n447=        halt
n448=      }
n449=    }
n450=    elseif ($2 == /SAY) {
n451=      if ($pos($active,Status,1) != 2) {
n452=        echo $active < $+ $gettok( %kelons.sock. [ $+ [ $remove($1,clone) ] ] ,1,58) $+ > $3-
n453=        sockwrite -tn $gettok($active,2,160) PRIVMSG $gettok($active,4,160) : $+ $3-
n454=        halt
n455=      }
n456=      else {
n457=        echo -a -
n458=        echo -a *** You're not on a channel
n459=        echo -a -
n460=        halt
n461=      }
n462=    }
n463=  }
n464=  else {
n465=    echo 7 -st Clones : Error, $gettok($active,2,160) not connected
n466=    halt
n467=  }
n468=  if ($mid($2,1,1) != /) {
n469=    echo 3 $active -
n470=    echo 3 $active *** You're not on a channel
n471=    echo 3 $active -
n472=    halt
n473=  }
n474=  sockwrite -tn $gettok($active,2,160) $right($2-,$calc($len($2-) - 1))
n475=  halt
n476=}
n477=on 1:close:@Status*: {
n478=  set %kelons.aux $window($active).x $window($active).y $window($active).w $window($active).h
n479=  set %kelons.sock. $+ $remove($gettok($active,2,160),clone) $puttok( %kelons.sock. [ $+ [ $remove($gettok($active,2,160),clone) ] ] ,%kelons.aux,11,58 )
n480=  writeini %kelons.dir kelons clone [ $+ [ $remove($gettok($active,2,160),clone) ] ] %kelons.sock. [ $+ [ $remove($gettok($active,2,160),clone) ] ]
n481=}
n482=on 1:close:@Channel*: {
n483=  if ($sock($gettok($active,2,160))) {  
n484=    sockwrite -tn $gettok($active,2,160) PART $gettok($active,4,160)
n485=  }
n486=}
n487=alias clone.aqueue {
n488=  set %kelons.queue $instok(%kelons.queue,$1,0,160)
n489=  if ($timer(queue) == $null) .timerqueue 1 1 clone.rqueue
n490=}
n491=alias clone.rqueue {
n492=  set %kelons.server $gettok($gettok(%kelons.queue,1,160),1,58)
n493=  set %kelons.port $gettok($gettok(%kelons.queue,1,160),2,58)
n494=  set %kelons.queue $deltok(%kelons.queue,1,160)
n495=  if (%kelons.queue != $null) .timerqueue 1 1 clone.rqueue
n496=  kelons connect %kelons.server %kelons.port 1
n497=}
