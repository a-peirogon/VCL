¯¯¯¯¯¯¯¯¯¯¯¯

;::Menus
menu menubar {
  Protection²
  .Setup:pp
  .Reset:pp.reset
}

;##Internal Aliases
Alias -l ´p return protection².conf
Alias -l _xt.ie echo $colour(info) -s *** $$1-
Alias -l `del  { return remini $scriptdir $+ $´p $$1 $$2 }
Alias -l `a { return $readini -n $scriptdir $+ $´p $$1 $$2 }
Alias -l `b { return writeini -n $scriptdir $+ $´p $$1 $$2 $$3 }
Alias -l `c {
  goto $$1 | ;returns settings for floodprot
  :cmax | return $`a(c,max) | :ctime | return $`a(c,time) | :cstate | return $`a(c,state) | :cignore | return $`a(c,ignore) 
  :nmax | return $`a(n,max) | :ntime | return $`a(n,time) | :nstate | return $`a(n,state) | :nignore | return $`a(n,ignore) 
  :mmax | return $`a(m,max) | :mtime | return $`a(m,time) | :mstate | return $`a(m,state) | :mignore | return $`a(m,ignore) 
  :qmax | return $`a(q,max) | :qtime | return $`a(q,time) | :qstate | return $`a(q,state) | :qignore | return $`a(q,ignore) 
  :dmax | return $`a(d,max) | :dtime | return $`a(d,time) | :dstate | return $`a(d,state) | :dignore | return $`a(d,ignore)
}
Alias -l ±_ { _xt.ie Warning: $$1- }
Alias -l ±| { _xt.ie $$1- }


;##Info-Messages
Alias -l `d {
  goto $$1
  :c | goto $$2 | {
    :cn | ±_ Ctcp-Flood From $$3 ( $+ $site $+ ) | ignore -tu [ $+ [ $`c(cignore) ] ] $$3 | goto end
    :cs | ±_ Ctcp-Flood From $$3 (FloodClones) (Triggered by $site $+ ) | ignore -tu [ $+ [ $`c(cignore) ] ] $$3 | goto end
    :ct | ±_ Ctcp-Flood From Multiple Hosts, Most Likely BotNet/FloodNet. Ignoring And Silencing *!*@* | ignore -tu [ $+ [ $`c(cignore) ] ] *!*@* | .timer 1 $`c(cignore) silence -*!*@* | silence +*!*@* | goto end
  }
  :n | goto $$2 | {
    :nn | ±_ Notice-Flood From $$3 ( $+ $site $+ ) | ignore -nu [ $+ [ $`c(nignore) ] ] $$3 | goto end
    :ns | ±_ Notice-Flood From $$3 (FloodClones) (Triggered by $site $+ ) | ignore -nu [ $+ [ $`c(nignore) ] ] $$3 | goto end
    :nt | ±_  Notice-Flood From Multiple Hosts, Most Likely BotNet/FloodNet. Ignoring And Silencing *!*@* | ignore -nu [ $+ [ $`c(nignore) ] ] *!*@* | .timer 1 $`c(nignore) silence -*!*@* | silence +*!*@* | goto end
  }
  :m | goto $$2 | {
    :mn | ±_ Msg-Flood From $$3 ( $+ $site $+ ) | ignore -u [ $+ [ $`c(mignore) ] ] $$3 | closemsg $nick | goto end
    :ms | ±_ Msg-Flood From $$3 (FloodClones) (Triggered by $site $+ ) | ignore -pu [ $+ [ $`c(mignore) ] ] $$3 | goto end
    :mt | ±_ Msg-Flood From Multiple Hosts, Most Likely BotNet/FloodNet. Ignoring And Silencing *!*@* | ignore -u [ $+ [ $`c(mignore) ] ] *!*@* | .timer 1 $`c(mignore) silence -*!*@* | silence +*!*@* | goto end
  }
  :d | goto $$2 | {
    :dn | ±_ DCC-Flood From $$3 ( $+ $site $+ ) | ignore -u [ $+ [ $`c(mignore) ] ] $$3 | closemsg $nick | goto end
    :ds | ±_ DCC-Flood From $$3 (FloodClones) (Triggered by $site $+ ) | ignore -pu [ $+ [ $`c(mignore) ] ] $$3 | goto end
    :dt | ±_ DCC-Flood From Multiple Hosts, Most Likely BotNet/FloodNet. Ignoring And Silencing *!*@* | ignore -u [ $+ [ $`c(mignore) ] ] *!*@* | .timer 1 $`c(mignore) silence -*!*@* | silence +*!*@* | goto end
  }
  :q | goto $$2 | {
    :qs | ±_ Query-Flood From $$3 ( $+ $site $+ ) (FloodClones) | ignore -pu [ $+ [ $`c(mignore) ] ] $$3 | goto end
    :qt | ±_ Query-Flood From Multiple Hosts, Most Likely BotNet/FloodNet. Ignoring And Silencing *!*@* | ignore -u [ $+ [ $`c(mignore) ] ] *!*@* | .timer 1 $`c(mignore) silence -*!*@* | silence +*!*@* | goto end
  }
  :end | halt
}
;## Events
On *:Load: { write -c $scriptdir $+ $´p | pp.reset | ±| Protection² Loaded And Ready | pp } 
On *:Disconnect: { unset %¯* }
Ctcp !*:*:?: {
  if (*dcc send* iswm $1-) {
    if ($`c(dstate) == 1) {
      if (%¯\. [ $+ [ $nick ] ] == $null) { set -u [ $+ [ $`c(dtime) ] ] %¯\. [ $+ [ $nick ] ] 1 } | else { inc %¯\. [ $+ [ $nick ] ] }
      if (%¯\. [ $+ [ $site ] ] == $null) { set -u [ $+ [ $`c(dtime) ] ] %¯\. [ $+ [ $site ] ] 1 } | else { inc %¯\. [ $+ [ $site ] ] }
      if (%¯\.tot == $null) { set -u [ $+ [ $`c(dtime) ] ] %¯\.tot 1 } | else { inc %¯\.tot }
      if (%¯\. [ $+ [ $nick ] ] >= $`c(dmax)) { $`d(d,dn,$nick) }
      if (%¯\. [ $+ [ $site ] ] > $`c(dmax)) && %¯\. [ $+ [ $site ] ] > %¯\. [ $+ [ $nick ] ]) { $`d(d,ds,$site) }
      if (%¯\.tot > $`c(dmax)) { $`d(d,dt) }
    }
  }
  if ($`c(cstate) == 1) {
    if (%¯|. [ $+ [ $nick ] ] == $null) { set -u [ $+ [ $`c(ctime) ] ] %¯|. [ $+ [ $nick ] ] 1 } | else { inc %¯|. [ $+ [ $nick ] ] }
    if (%¯|. [ $+ [ $site ] ] == $null) { set -u [ $+ [ $`c(ctime) ] ] %¯|. [ $+ [ $site ] ] 1 } | else { inc %¯|. [ $+ [ $site ] ] }
    if (%¯|.tot == $null) { set -u [ $+ [ $`c(ctime) ] ] %¯|.tot 1 } | else { inc %¯|.tot }
    if (%¯|. [ $+ [ $nick ] ] >= $`c(cmax)) { $`d(c,cn,$nick) }
    if (%¯|. [ $+ [ $site ] ] > $`c(cmax)) && %¯|. [ $+ [ $site ] ] > %¯|. [ $+ [ $nick ] ]) { $`d(c,cs,$site) }
    if (%¯|.tot > $`c(cmax)) { $`d(c,ct) }
} }
On !*:notice:*:?: {
  if ($`c(nstate) == 1) && (undernet !isin $site) {
    if (%¯_. [ $+ [ $nick ] ] == $null) { set -u [ $+ [ $`c(ntime) ] ] %¯_. [ $+ [ $nick ] ] 1 } | else { inc %¯_. [ $+ [ $nick ] ] }
    if (%¯_. [ $+ [ $site ] ] == $null) { set -u [ $+ [ $`c(ntime) ] ] %¯_. [ $+ [ $site ] ] 1 } | else { inc %¯_. [ $+ [ $site ] ] }
    if (%¯_.tot == $null) { set -u [ $+ [ $`c(ntime) ] ] %¯_.tot 1 } | else { inc %¯_.tot }
    if (%¯_. [ $+ [ $nick ] ] >= $`c(nmax)) { $`d(c,nn,$nick) }
    if (%¯_. [ $+ [ $site ] ] > $`c(nmax)) && %¯_. [ $+ [ $site ] ] > %¯_. [ $+ [ $nick ] ]) { $`d(n,ns,$site) }
    if (%¯_.tot > $`c(nmax)) { $`d(n,nt) }
} }
On !*:text:*:?: { 
  if ($`c(mstate) == 1) {
    if (%¯°. [ $+ [ $nick ] ] == $null) { set -u [ $+ [ $`c(mtime) ] ] %¯°. [ $+ [ $nick ] ] 1 } | else { inc %¯°. [ $+ [ $nick ] ] }
    if (%¯°. [ $+ [ $site ] ] == $null) { set -u [ $+ [ $`c(mtime) ] ] %¯°. [ $+ [ $site ] ] 1 } | else { inc %¯°. [ $+ [ $site ] ] }
    if (%¯°.tot == $null) { set -u [ $+ [ $`c(mtime) ] ] %¯°.tot 1 } | else { inc %¯°.tot }
    if (%¯°. [ $+ [ $nick ] ] >= $`c(mmax)) { $`d(m,mn,$nick) }
    if (%¯°. [ $+ [ $site ] ] > $`c(mmax)) && %¯°. [ $+ [ $site ] ] > %¯°. [ $+ [ $nick ] ]) { $`d(m,ms,$site) }
    if (%¯°.tot > $`c(mmax)) { $`d(m,mt) }
} }
On !*:open:?: { 
  if ($`c(qstate) == 1) {
    if (%¯². [ $+ [ $site ] ] == $null) { set -u [ $+ [ $`c(qtime) ] ] %¯². [ $+ [ $site ] ] 1 } | else { inc %¯². [ $+ [ $site ] ] }
    if (%¯².tot == $null) { set -u [ $+ [ $`c(qtime) ] ] %¯².tot 1 } | else { inc %¯².tot }
    if (%¯². [ $+ [ $site ] ] > $`c(qmax)) && %¯². [ $+ [ $site ] ] > %¯². [ $+ [ $nick ] ]) { $`d(q,qs,$site) }
    if (%¯².tot > $`c(qmax)) { $`d(q,qt) }
} }

;##Public Aliases
Alias pp { prot.dlg.start }
Alias pp.reset { write -c $scriptdir $+ $´p | $`b(c,max,5) | $`b(c,time,10) | $`b(c,ignore,120) | $`b(c,state,1) | $`b(n,max,5) | $`b(n,time,10) | $`b(n,ignore,120) | $`b(n,state,1) | $`b(m,max,5) | $`b(m,time,10) | $`b(m,ignore,120) | $`b(m,state,1) | $`b(q,max,5) | $`b(q,time,10) | $`b(q,ignore,120) | $`b(q,state,1) | $`b(d,max,5) | $`b(d,time,10) | $`b(d,ignore,120) | $`b(d,state,1) | ±| FloodPro-Settings Set To Defaults. Type /pp To Configure. }
Alias pp.unload { if ($$?!="Keep old settings?" == $false) { .remove $scriptdir $+ $´p } | _xt.ie Protection² unloaded. | .timer -m 1 10 .unload -rs $script }

;##Dialogs
Alias -l prot.dlg.start { $dialog(fp²,fp²) }
Dialog fp² {
  Title "WScript Personal Flood Protection"
  Option DBU
  Size -1 -1 204 78
  Button "Ok",1,80 66 20 10 ,Ok
  Button "Cancel",2, 105 66 20 10, Cancel
  Tab "Ctcp-Flood",5, 3 2 197 60
  Tab "Notice-Flood",6
  Tab "Msg-Flood",7 
  Tab "Query-Flood",8
  Tab "Dcc-Flood",9

  Check "Enabled",10, 14 20 50 8,tab 5
  Text "Trigger After",11, 14 34 30 8, tab 5
  Edit "",12,46 33 15 10, tab 5
  Text "Ctcp`s in",13,65 34 30 8, tab 5
  Edit "",14, 90 33 15 10, tab 5
  Text "Seconds", 15, 108 34 30 8, tab 5
  Text "Ignore For", 16, 14 45 30 8, tab 5
  Edit "",17, 46 44 15 10, tab 5
  Text "Seconds",18, 65 45 30 10, tab 5

  Check "Enabled",19, 14 20 50 8,tab 6
  Text "Trigger After",20, 14 34 30 8, tab 6
  Edit "",21,46 33 15 10, tab 6
  Text "Notices in",22,65 34 30 8, tab 6
  Edit "",23, 90 33 15 10, tab 6
  Text "Seconds", 24, 108 34 30 8, tab 6
  Text "Ignore For", 25, 14 45 30 8, tab 6
  Edit "",26, 46 44 15 10, tab 6
  Text "Seconds",27, 65 45 30 10, tab 6

  Check "Enabled",28, 14 20 50 8,tab 7
  Text "Trigger After",29, 14 34 30 8, tab 7
  Edit "",30,46 33 15 10, tab 7
  Text "Msg`s in",31,65 34 30 8, tab 7
  Edit "",32, 90 33 15 10, tab 7
  Text "Seconds", 33, 108 34 30 8, tab 7
  Text "Ignore For", 34, 14 45 30 8, tab 7
  Edit "",35, 46 44 15 10, tab 7
  Text "Seconds",36, 65 45 30 10, tab 7

  Check "Enabled",37, 14 20 50 8,tab 8
  Text "Trigger After",38, 14 34 30 8, tab 8
  Edit "",39,46 33 15 10, tab 8
  Text "Queries in",40,65 34 30 8, tab 8
  Edit "",41, 90 33 15 10, tab 8
  Text "Seconds", 42, 108 34 30 8, tab 8
  Text "Ignore For", 43, 14 45 30 8, tab 8
  Edit "",44, 46 44 15 10, tab 8
  Text "Seconds",45, 65 45 30 10, tab 8

  Check "Enabled",46, 14 20 50 8,tab 9
  Text "Trigger After",47, 14 34 30 8, tab 9
  Edit "",48,46 33 15 10, tab 9
  Text "DCC`s in",49,65 34 30 8, tab 9
  Edit "",50, 90 33 15 10, tab 9
  Text "Seconds", 51, 108 34 30 8, tab 9
  Text "Ignore For", 52, 14 45 30 8, tab 9
  Edit "",53, 46 44 15 10, tab 9
  Text "Seconds",54, 65 45 30 10, tab 9
}
On *:dialog:fp²:init:0: {
  if ($`a(c,state) == 1) { did -c fp² 10 } | did -a fp² 12 $`a(c,max) | did -a fp² 14 $`a(c,time) | did -a fp² 17 $`a(c,ignore)
  if ($`a(n,state) == 1) { did -c fp² 19 } | did -a fp² 21 $`a(n,max) | did -a fp² 23 $`a(n,time) | did -a fp² 26 $`a(n,ignore)
  if ($`a(m,state) == 1) { did -c fp² 28 } | did -a fp² 30 $`a(m,max) | did -a fp² 32 $`a(m,time) | did -a fp² 35 $`a(m,ignore)
  if ($`a(q,state) == 1) { did -c fp² 37 } | did -a fp² 39 $`a(q,max) | did -a fp² 41 $`a(q,time) | did -a fp² 44 $`a(q,ignore)
  if ($`a(d,state) == 1) { did -c fp² 46 } | did -a fp² 48 $`a(d,max) | did -a fp² 50 $`a(d,time) | did -a fp² 53 $`a(d,ignore)
}
On *:dialog:fp²:sclick:1: {
  $`b(c,state,$did(10).state) | $`b(c,max,$did(12).text) | $`b(c,time,$did(14).text) | $`b(c,ignore,$did(17).text)
  $`b(n,state,$did(19).state) | $`b(n,max,$did(21).text) | $`b(n,time,$did(23).text) | $`b(n,ignore,$did(26).text)
  $`b(m,state,$did(28).state) | $`b(m,max,$did(30).text) | $`b(m,time,$did(32).text) | $`b(m,ignore,$did(35).text)
  $`b(q,state,$did(37).state) | $`b(q,max,$did(39).text) | $`b(q,time,$did(41).text) | $`b(q,ignore,$did(44).text)
  $`b(d,state,$did(46).state) | $`b(d,max,$did(48).text) | $`b(d,time,$did(50).text) | $`b(d,ignore,$did(53).text)
}
